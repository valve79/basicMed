{"version":3,"sources":["bower_090_html5shiv.js","bower_091_respond.src.js"],"names":["window","document","addStyleSheet","ownerDocument","cssText","p","createElement","parent","getElementsByTagName","documentElement","innerHTML","insertBefore","lastChild","firstChild","getElements","elements","html5","split","addElements","newElements","join","shivDocument","getExpandoData","data","expandoData","expando","expanID","nodeName","supportsUnknownElements","node","cache","cloneNode","saveClones","test","createElem","canHaveChildren","reSkip","tagUrn","frag","appendChild","createDocumentFragment","clone","i","elems","l","length","shivMethods","createFrag","Function","replace","shivCSS","supportsHtml5Styles","hasCSS","version","options","a","childNodes","e","type","this","w","matchMedia","doc","undefined","bool","docElem","refNode","firstElementChild","fakeBody","div","id","style","background","q","offsetWidth","removeChild","matches","media","callMedia","applyMedia","respond","update","requestQueue","xmlHttp","xmlhttpmethod","XMLHttpRequest","ActiveXObject","ajax","url","callback","req","open","onreadystatechange","readyState","status","responseText","send","queue","regex","keyframes","urls","findStyles","only","minw","maxw","mediaQueriesSupported","lastCall","resizeDefer","eminpx","mediastyles","rules","appendedEls","parsedSheets","resizeThrottle","head","base","links","getEmValue","ret","body","originalHTMLFontSize","fontSize","originalBodyFontSize","fakeUsed","parseFloat","fromResize","name","docElemProp","currWidth","compatMode","styleBlocks","lastLink","now","Date","getTime","clearTimeout","setTimeout","hasOwnProperty","thisstyle","min","max","minnull","maxnull","em","indexOf","hasquery","push","j","parentNode","k","ss","css","nextSibling","styleSheet","createTextNode","translate","styles","href","qs","match","ql","substring","lastIndexOf","repUrls","useMedia","fullq","thisq","eachq","eql","RegExp","$1","$2","makeRequests","thisRequest","shift","ripCSS","sheet","isCSS","rel","toLowerCase","rawCssText","location","host","protocol","addEventListener","attachEvent"],"mappings":"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","file":"iefix.min.js","sourcesContent":["/**\r\n* @preserve HTML5 Shiv 3.7.2 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\r\n*/\r\n;(function(window, document) {\r\n/*jshint evil:true */\r\n  /** version */\r\n  var version = '3.7.2';\r\n\r\n  /** Preset options */\r\n  var options = window.html5 || {};\r\n\r\n  /** Used to skip problem elements */\r\n  var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\r\n\r\n  /** Not all elements can be cloned in IE **/\r\n  var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\r\n\r\n  /** Detect whether the browser supports default html5 styles */\r\n  var supportsHtml5Styles;\r\n\r\n  /** Name of the expando, to work with multiple documents or to re-shiv one document */\r\n  var expando = '_html5shiv';\r\n\r\n  /** The id for the the documents expando */\r\n  var expanID = 0;\r\n\r\n  /** Cached data for each document */\r\n  var expandoData = {};\r\n\r\n  /** Detect whether the browser supports unknown elements */\r\n  var supportsUnknownElements;\r\n\r\n  (function() {\r\n    try {\r\n        var a = document.createElement('a');\r\n        a.innerHTML = '<xyz></xyz>';\r\n        //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\r\n        supportsHtml5Styles = ('hidden' in a);\r\n\r\n        supportsUnknownElements = a.childNodes.length == 1 || (function() {\r\n          // assign a false positive if unable to shiv\r\n          (document.createElement)('a');\r\n          var frag = document.createDocumentFragment();\r\n          return (\r\n            typeof frag.cloneNode == 'undefined' ||\r\n            typeof frag.createDocumentFragment == 'undefined' ||\r\n            typeof frag.createElement == 'undefined'\r\n          );\r\n        }());\r\n    } catch(e) {\r\n      // assign a false positive if detection fails => unable to shiv\r\n      supportsHtml5Styles = true;\r\n      supportsUnknownElements = true;\r\n    }\r\n\r\n  }());\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Creates a style sheet with the given CSS text and adds it to the document.\r\n   * @private\r\n   * @param {Document} ownerDocument The document.\r\n   * @param {String} cssText The CSS text.\r\n   * @returns {StyleSheet} The style element.\r\n   */\r\n  function addStyleSheet(ownerDocument, cssText) {\r\n    var p = ownerDocument.createElement('p'),\r\n        parent = ownerDocument.getElementsByTagName('head')[0] || ownerDocument.documentElement;\r\n\r\n    p.innerHTML = 'x<style>' + cssText + '</style>';\r\n    return parent.insertBefore(p.lastChild, parent.firstChild);\r\n  }\r\n\r\n  /**\r\n   * Returns the value of `html5.elements` as an array.\r\n   * @private\r\n   * @returns {Array} An array of shived element node names.\r\n   */\r\n  function getElements() {\r\n    var elements = html5.elements;\r\n    return typeof elements == 'string' ? elements.split(' ') : elements;\r\n  }\r\n\r\n  /**\r\n   * Extends the built-in list of html5 elements\r\n   * @memberOf html5\r\n   * @param {String|Array} newElements whitespace separated list or array of new element names to shiv\r\n   * @param {Document} ownerDocument The context document.\r\n   */\r\n  function addElements(newElements, ownerDocument) {\r\n    var elements = html5.elements;\r\n    if(typeof elements != 'string'){\r\n      elements = elements.join(' ');\r\n    }\r\n    if(typeof newElements != 'string'){\r\n      newElements = newElements.join(' ');\r\n    }\r\n    html5.elements = elements +' '+ newElements;\r\n    shivDocument(ownerDocument);\r\n  }\r\n\r\n   /**\r\n   * Returns the data associated to the given document\r\n   * @private\r\n   * @param {Document} ownerDocument The document.\r\n   * @returns {Object} An object of data.\r\n   */\r\n  function getExpandoData(ownerDocument) {\r\n    var data = expandoData[ownerDocument[expando]];\r\n    if (!data) {\r\n        data = {};\r\n        expanID++;\r\n        ownerDocument[expando] = expanID;\r\n        expandoData[expanID] = data;\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * returns a shived element for the given nodeName and document\r\n   * @memberOf html5\r\n   * @param {String} nodeName name of the element\r\n   * @param {Document} ownerDocument The context document.\r\n   * @returns {Object} The shived element.\r\n   */\r\n  function createElement(nodeName, ownerDocument, data){\r\n    if (!ownerDocument) {\r\n        ownerDocument = document;\r\n    }\r\n    if(supportsUnknownElements){\r\n        return ownerDocument.createElement(nodeName);\r\n    }\r\n    if (!data) {\r\n        data = getExpandoData(ownerDocument);\r\n    }\r\n    var node;\r\n\r\n    if (data.cache[nodeName]) {\r\n        node = data.cache[nodeName].cloneNode();\r\n    } else if (saveClones.test(nodeName)) {\r\n        node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\r\n    } else {\r\n        node = data.createElem(nodeName);\r\n    }\r\n\r\n    // Avoid adding some elements to fragments in IE < 9 because\r\n    // * Attributes like `name` or `type` cannot be set/changed once an element\r\n    //   is inserted into a document/fragment\r\n    // * Link elements with `src` attributes that are inaccessible, as with\r\n    //   a 403 response, will cause the tab/window to crash\r\n    // * Script elements appended to fragments will execute when their `src`\r\n    //   or `text` property is set\r\n    return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn ? data.frag.appendChild(node) : node;\r\n  }\r\n\r\n  /**\r\n   * returns a shived DocumentFragment for the given document\r\n   * @memberOf html5\r\n   * @param {Document} ownerDocument The context document.\r\n   * @returns {Object} The shived DocumentFragment.\r\n   */\r\n  function createDocumentFragment(ownerDocument, data){\r\n    if (!ownerDocument) {\r\n        ownerDocument = document;\r\n    }\r\n    if(supportsUnknownElements){\r\n        return ownerDocument.createDocumentFragment();\r\n    }\r\n    data = data || getExpandoData(ownerDocument);\r\n    var clone = data.frag.cloneNode(),\r\n        i = 0,\r\n        elems = getElements(),\r\n        l = elems.length;\r\n    for(;i<l;i++){\r\n        clone.createElement(elems[i]);\r\n    }\r\n    return clone;\r\n  }\r\n\r\n  /**\r\n   * Shivs the `createElement` and `createDocumentFragment` methods of the document.\r\n   * @private\r\n   * @param {Document|DocumentFragment} ownerDocument The document.\r\n   * @param {Object} data of the document.\r\n   */\r\n  function shivMethods(ownerDocument, data) {\r\n    if (!data.cache) {\r\n        data.cache = {};\r\n        data.createElem = ownerDocument.createElement;\r\n        data.createFrag = ownerDocument.createDocumentFragment;\r\n        data.frag = data.createFrag();\r\n    }\r\n\r\n\r\n    ownerDocument.createElement = function(nodeName) {\r\n      //abort shiv\r\n      if (!html5.shivMethods) {\r\n          return data.createElem(nodeName);\r\n      }\r\n      return createElement(nodeName, ownerDocument, data);\r\n    };\r\n\r\n    ownerDocument.createDocumentFragment = Function('h,f', 'return function(){' +\r\n      'var n=f.cloneNode(),c=n.createElement;' +\r\n      'h.shivMethods&&(' +\r\n        // unroll the `createElement` calls\r\n        getElements().join().replace(/[\\w\\-:]+/g, function(nodeName) {\r\n          data.createElem(nodeName);\r\n          data.frag.createElement(nodeName);\r\n          return 'c(\"' + nodeName + '\")';\r\n        }) +\r\n      ');return n}'\r\n    )(html5, data.frag);\r\n  }\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * Shivs the given document.\r\n   * @memberOf html5\r\n   * @param {Document} ownerDocument The document to shiv.\r\n   * @returns {Document} The shived document.\r\n   */\r\n  function shivDocument(ownerDocument) {\r\n    if (!ownerDocument) {\r\n        ownerDocument = document;\r\n    }\r\n    var data = getExpandoData(ownerDocument);\r\n\r\n    if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\r\n      data.hasCSS = !!addStyleSheet(ownerDocument,\r\n        // corrects block display not defined in IE6/7/8/9\r\n        'article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}' +\r\n        // adds styling not present in IE6/7/8/9\r\n        'mark{background:#FF0;color:#000}' +\r\n        // hides non-rendered elements\r\n        'template{display:none}'\r\n      );\r\n    }\r\n    if (!supportsUnknownElements) {\r\n      shivMethods(ownerDocument, data);\r\n    }\r\n    return ownerDocument;\r\n  }\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  /**\r\n   * The `html5` object is exposed so that more elements can be shived and\r\n   * existing shiving can be detected on iframes.\r\n   * @type Object\r\n   * @example\r\n   *\r\n   * // options can be changed before the script is included\r\n   * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\r\n   */\r\n  var html5 = {\r\n\r\n    /**\r\n     * An array or space separated string of node names of the elements to shiv.\r\n     * @memberOf html5\r\n     * @type Array|String\r\n     */\r\n    'elements': options.elements || 'abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video',\r\n\r\n    /**\r\n     * current version of html5shiv\r\n     */\r\n    'version': version,\r\n\r\n    /**\r\n     * A flag to indicate that the HTML5 style sheet should be inserted.\r\n     * @memberOf html5\r\n     * @type Boolean\r\n     */\r\n    'shivCSS': (options.shivCSS !== false),\r\n\r\n    /**\r\n     * Is equal to true if a browser supports creating unknown/HTML5 elements\r\n     * @memberOf html5\r\n     * @type boolean\r\n     */\r\n    'supportsUnknownElements': supportsUnknownElements,\r\n\r\n    /**\r\n     * A flag to indicate that the document's `createElement` and `createDocumentFragment`\r\n     * methods should be overwritten.\r\n     * @memberOf html5\r\n     * @type Boolean\r\n     */\r\n    'shivMethods': (options.shivMethods !== false),\r\n\r\n    /**\r\n     * A string to describe the type of `html5` object (\"default\" or \"default print\").\r\n     * @memberOf html5\r\n     * @type String\r\n     */\r\n    'type': 'default',\r\n\r\n    // shivs the document according to the specified `html5` object options\r\n    'shivDocument': shivDocument,\r\n\r\n    //creates a shived element\r\n    createElement: createElement,\r\n\r\n    //creates a shived documentFragment\r\n    createDocumentFragment: createDocumentFragment,\r\n\r\n    //extends list of elements\r\n    addElements: addElements\r\n  };\r\n\r\n  /*--------------------------------------------------------------------------*/\r\n\r\n  // expose html5\r\n  window.html5 = html5;\r\n\r\n  // shiv the document\r\n  shivDocument(document);\r\n\r\n}(this, document));\r\n","/*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas. Dual MIT/BSD license */\r\n/*! NOTE: If you're already including a window.matchMedia polyfill via Modernizr or otherwise, you don't need this part */\r\n(function(w) {\r\n  \"use strict\";\r\n  w.matchMedia = w.matchMedia || function(doc, undefined) {\r\n    var bool, docElem = doc.documentElement, refNode = docElem.firstElementChild || docElem.firstChild, fakeBody = doc.createElement(\"body\"), div = doc.createElement(\"div\");\r\n    div.id = \"mq-test-1\";\r\n    div.style.cssText = \"position:absolute;top:-100em\";\r\n    fakeBody.style.background = \"none\";\r\n    fakeBody.appendChild(div);\r\n    return function(q) {\r\n      div.innerHTML = '&shy;<style media=\"' + q + '\"> #mq-test-1 { width: 42px; }</style>';\r\n      docElem.insertBefore(fakeBody, refNode);\r\n      bool = div.offsetWidth === 42;\r\n      docElem.removeChild(fakeBody);\r\n      return {\r\n        matches: bool,\r\n        media: q\r\n      };\r\n    };\r\n  }(w.document);\r\n})(this);\r\n\r\n/*! Respond.js v1.4.0: min/max-width media query polyfill. (c) Scott Jehl. MIT Lic. j.mp/respondjs  */\r\n(function(w) {\r\n  \"use strict\";\r\n  var respond = {};\r\n  w.respond = respond;\r\n  respond.update = function() {};\r\n  var requestQueue = [], xmlHttp = function() {\r\n    var xmlhttpmethod = false;\r\n    try {\r\n      xmlhttpmethod = new w.XMLHttpRequest();\r\n    } catch (e) {\r\n      xmlhttpmethod = new w.ActiveXObject(\"Microsoft.XMLHTTP\");\r\n    }\r\n    return function() {\r\n      return xmlhttpmethod;\r\n    };\r\n  }(), ajax = function(url, callback) {\r\n    var req = xmlHttp();\r\n    if (!req) {\r\n      return;\r\n    }\r\n    req.open(\"GET\", url, true);\r\n    req.onreadystatechange = function() {\r\n      if (req.readyState !== 4 || req.status !== 200 && req.status !== 304) {\r\n        return;\r\n      }\r\n      callback(req.responseText);\r\n    };\r\n    if (req.readyState === 4) {\r\n      return;\r\n    }\r\n    req.send(null);\r\n  };\r\n  respond.ajax = ajax;\r\n  respond.queue = requestQueue;\r\n  respond.regex = {\r\n    media: /@media[^\\{]+\\{([^\\{\\}]*\\{[^\\}\\{]*\\})+/gi,\r\n    keyframes: /@(?:\\-(?:o|moz|webkit)\\-)?keyframes[^\\{]+\\{(?:[^\\{\\}]*\\{[^\\}\\{]*\\})+[^\\}]*\\}/gi,\r\n    urls: /(url\\()['\"]?([^\\/\\)'\"][^:\\)'\"]+)['\"]?(\\))/g,\r\n    findStyles: /@media *([^\\{]+)\\{([\\S\\s]+?)$/,\r\n    only: /(only\\s+)?([a-zA-Z]+)\\s?/,\r\n    minw: /\\([\\s]*min\\-width\\s*:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/,\r\n    maxw: /\\([\\s]*max\\-width\\s*:[\\s]*([\\s]*[0-9\\.]+)(px|em)[\\s]*\\)/\r\n  };\r\n  respond.mediaQueriesSupported = w.matchMedia && w.matchMedia(\"only all\") !== null && w.matchMedia(\"only all\").matches;\r\n  if (respond.mediaQueriesSupported) {\r\n    return;\r\n  }\r\n  var doc = w.document, docElem = doc.documentElement, mediastyles = [], rules = [], appendedEls = [], parsedSheets = {}, resizeThrottle = 30, head = doc.getElementsByTagName(\"head\")[0] || docElem, base = doc.getElementsByTagName(\"base\")[0], links = head.getElementsByTagName(\"link\"), lastCall, resizeDefer, eminpx, getEmValue = function() {\r\n    var ret, div = doc.createElement(\"div\"), body = doc.body, originalHTMLFontSize = docElem.style.fontSize, originalBodyFontSize = body && body.style.fontSize, fakeUsed = false;\r\n    div.style.cssText = \"position:absolute;font-size:1em;width:1em\";\r\n    if (!body) {\r\n      body = fakeUsed = doc.createElement(\"body\");\r\n      body.style.background = \"none\";\r\n    }\r\n    docElem.style.fontSize = \"100%\";\r\n    body.style.fontSize = \"100%\";\r\n    body.appendChild(div);\r\n    if (fakeUsed) {\r\n      docElem.insertBefore(body, docElem.firstChild);\r\n    }\r\n    ret = div.offsetWidth;\r\n    if (fakeUsed) {\r\n      docElem.removeChild(body);\r\n    } else {\r\n      body.removeChild(div);\r\n    }\r\n    docElem.style.fontSize = originalHTMLFontSize;\r\n    if (originalBodyFontSize) {\r\n      body.style.fontSize = originalBodyFontSize;\r\n    }\r\n    ret = eminpx = parseFloat(ret);\r\n    return ret;\r\n  }, applyMedia = function(fromResize) {\r\n    var name = \"clientWidth\", docElemProp = docElem[name], currWidth = doc.compatMode === \"CSS1Compat\" && docElemProp || doc.body[name] || docElemProp, styleBlocks = {}, lastLink = links[links.length - 1], now = new Date().getTime();\r\n    if (fromResize && lastCall && now - lastCall < resizeThrottle) {\r\n      w.clearTimeout(resizeDefer);\r\n      resizeDefer = w.setTimeout(applyMedia, resizeThrottle);\r\n      return;\r\n    } else {\r\n      lastCall = now;\r\n    }\r\n    for (var i in mediastyles) {\r\n      if (mediastyles.hasOwnProperty(i)) {\r\n        var thisstyle = mediastyles[i], min = thisstyle.minw, max = thisstyle.maxw, minnull = min === null, maxnull = max === null, em = \"em\";\r\n        if (!!min) {\r\n          min = parseFloat(min) * (min.indexOf(em) > -1 ? eminpx || getEmValue() : 1);\r\n        }\r\n        if (!!max) {\r\n          max = parseFloat(max) * (max.indexOf(em) > -1 ? eminpx || getEmValue() : 1);\r\n        }\r\n        if (!thisstyle.hasquery || (!minnull || !maxnull) && (minnull || currWidth >= min) && (maxnull || currWidth <= max)) {\r\n          if (!styleBlocks[thisstyle.media]) {\r\n            styleBlocks[thisstyle.media] = [];\r\n          }\r\n          styleBlocks[thisstyle.media].push(rules[thisstyle.rules]);\r\n        }\r\n      }\r\n    }\r\n    for (var j in appendedEls) {\r\n      if (appendedEls.hasOwnProperty(j)) {\r\n        if (appendedEls[j] && appendedEls[j].parentNode === head) {\r\n          head.removeChild(appendedEls[j]);\r\n        }\r\n      }\r\n    }\r\n    appendedEls.length = 0;\r\n    for (var k in styleBlocks) {\r\n      if (styleBlocks.hasOwnProperty(k)) {\r\n        var ss = doc.createElement(\"style\"), css = styleBlocks[k].join(\"\\n\");\r\n        ss.type = \"text/css\";\r\n        ss.media = k;\r\n        head.insertBefore(ss, lastLink.nextSibling);\r\n        if (ss.styleSheet) {\r\n          ss.styleSheet.cssText = css;\r\n        } else {\r\n          ss.appendChild(doc.createTextNode(css));\r\n        }\r\n        appendedEls.push(ss);\r\n      }\r\n    }\r\n  }, translate = function(styles, href, media) {\r\n    var qs = styles.replace(respond.regex.keyframes, \"\").match(respond.regex.media), ql = qs && qs.length || 0;\r\n    href = href.substring(0, href.lastIndexOf(\"/\"));\r\n    var repUrls = function(css) {\r\n      return css.replace(respond.regex.urls, \"$1\" + href + \"$2$3\");\r\n    }, useMedia = !ql && media;\r\n    if (href.length) {\r\n      href += \"/\";\r\n    }\r\n    if (useMedia) {\r\n      ql = 1;\r\n    }\r\n    for (var i = 0; i < ql; i++) {\r\n      var fullq, thisq, eachq, eql;\r\n      if (useMedia) {\r\n        fullq = media;\r\n        rules.push(repUrls(styles));\r\n      } else {\r\n        fullq = qs[i].match(respond.regex.findStyles) && RegExp.$1;\r\n        rules.push(RegExp.$2 && repUrls(RegExp.$2));\r\n      }\r\n      eachq = fullq.split(\",\");\r\n      eql = eachq.length;\r\n      for (var j = 0; j < eql; j++) {\r\n        thisq = eachq[j];\r\n        mediastyles.push({\r\n          media: thisq.split(\"(\")[0].match(respond.regex.only) && RegExp.$2 || \"all\",\r\n          rules: rules.length - 1,\r\n          hasquery: thisq.indexOf(\"(\") > -1,\r\n          minw: thisq.match(respond.regex.minw) && parseFloat(RegExp.$1) + (RegExp.$2 || \"\"),\r\n          maxw: thisq.match(respond.regex.maxw) && parseFloat(RegExp.$1) + (RegExp.$2 || \"\")\r\n        });\r\n      }\r\n    }\r\n    applyMedia();\r\n  }, makeRequests = function() {\r\n    if (requestQueue.length) {\r\n      var thisRequest = requestQueue.shift();\r\n      ajax(thisRequest.href, function(styles) {\r\n        translate(styles, thisRequest.href, thisRequest.media);\r\n        parsedSheets[thisRequest.href] = true;\r\n        w.setTimeout(function() {\r\n          makeRequests();\r\n        }, 0);\r\n      });\r\n    }\r\n  }, ripCSS = function() {\r\n    for (var i = 0; i < links.length; i++) {\r\n      var sheet = links[i], href = sheet.href, media = sheet.media, isCSS = sheet.rel && sheet.rel.toLowerCase() === \"stylesheet\";\r\n      if (!!href && isCSS && !parsedSheets[href]) {\r\n        if (sheet.styleSheet && sheet.styleSheet.rawCssText) {\r\n          translate(sheet.styleSheet.rawCssText, href, media);\r\n          parsedSheets[href] = true;\r\n        } else {\r\n          if (!/^([a-zA-Z:]*\\/\\/)/.test(href) && !base || href.replace(RegExp.$1, \"\").split(\"/\")[0] === w.location.host) {\r\n            if (href.substring(0, 2) === \"//\") {\r\n              href = w.location.protocol + href;\r\n            }\r\n            requestQueue.push({\r\n              href: href,\r\n              media: media\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n    makeRequests();\r\n  };\r\n  ripCSS();\r\n  respond.update = ripCSS;\r\n  respond.getEmValue = getEmValue;\r\n  function callMedia() {\r\n    applyMedia(true);\r\n  }\r\n  if (w.addEventListener) {\r\n    w.addEventListener(\"resize\", callMedia, false);\r\n  } else if (w.attachEvent) {\r\n    w.attachEvent(\"onresize\", callMedia);\r\n  }\r\n})(this);"],"sourceRoot":"/source/"}