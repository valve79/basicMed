require = (function e(t, r, i) {
  function s(n, a) {
    if (!r[n]) {
      if (!t[n]) {
        var u = "function" == typeof require && require;
        if (!a && u) return u(n, !0);
        if (o) return o(n, !0);
        var l = new Error("Cannot find module '" + n + "'");
        throw ((l.code = "MODULE_NOT_FOUND"), l);
      }
      var c = (r[n] = { exports: {} });
      t[n][0].call(
        c.exports,
        function (e) {
          var r = t[n][1][e];
          return s(r ? r : e);
        },
        c,
        c.exports,
        e,
        t,
        r,
        i
      );
    }
    return r[n].exports;
  }
  for (
    var o = "function" == typeof require && require, n = 0;
    n < i.length;
    n++
  )
    s(i[n]);
  return s;
})(
  {
    AppProperties: [
      function (e, t, r) {
        var i = (function () {
          function e() {}
          return (
            (e.defaultLocale = "en_US"),
            (e.serviceRoot = "https://aopa-basicmed-qa-as.azurewebsites.net/"),
            (e.appVersion = "1.2.0"),
            (e.svnRevision = "bca790cdef_HEAD"),
            (e.buildDate = "202501131837"),
            (e.authProvider = "LOCAL"),
            (e.currentLocale = "en_US"),
            (e.appTitle = "AOPA Learning Management System"),
            (e.buildVersion = "1.2.0.bca790cdef_HEAD.202501131837"),
            e
          );
        })();
        r.AppProperties = i;
      },
      {},
    ],
    1: [
      function (e, t, r) {
        !(function (e, i) {
          "object" == typeof r && "undefined" != typeof t
            ? (t.exports = i())
            : "function" == typeof define && define.amd
            ? define(i)
            : (e.moment = i());
        })(this, function () {
          "use strict";
          function r() {
            return Dr.apply(null, arguments);
          }
          function i(e) {
            Dr = e;
          }
          function s(e) {
            return "[object Array]" === Object.prototype.toString.call(e);
          }
          function o(e) {
            return (
              e instanceof Date ||
              "[object Date]" === Object.prototype.toString.call(e)
            );
          }
          function n(e, t) {
            var r,
              i = [];
            for (r = 0; r < e.length; ++r) i.push(t(e[r], r));
            return i;
          }
          function a(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t);
          }
          function u(e, t) {
            for (var r in t) a(t, r) && (e[r] = t[r]);
            return (
              a(t, "toString") && (e.toString = t.toString),
              a(t, "valueOf") && (e.valueOf = t.valueOf),
              e
            );
          }
          function l(e, t, r, i) {
            return Ne(e, t, r, i, !0).utc();
          }
          function c() {
            return {
              empty: !1,
              unusedTokens: [],
              unusedInput: [],
              overflow: -2,
              charsLeftOver: 0,
              nullInput: !1,
              invalidMonth: null,
              invalidFormat: !1,
              userInvalidated: !1,
              iso: !1,
            };
          }
          function d(e) {
            return null == e._pf && (e._pf = c()), e._pf;
          }
          function h(e) {
            if (null == e._isValid) {
              var t = d(e);
              (e._isValid = !(
                isNaN(e._d.getTime()) ||
                !(t.overflow < 0) ||
                t.empty ||
                t.invalidMonth ||
                t.invalidWeekday ||
                t.nullInput ||
                t.invalidFormat ||
                t.userInvalidated
              )),
                e._strict &&
                  (e._isValid =
                    e._isValid &&
                    0 === t.charsLeftOver &&
                    0 === t.unusedTokens.length &&
                    void 0 === t.bigHour);
            }
            return e._isValid;
          }
          function p(e) {
            var t = l(NaN);
            return null != e ? u(d(t), e) : (d(t).userInvalidated = !0), t;
          }
          function f(e, t) {
            var r, i, s;
            if (
              ("undefined" != typeof t._isAMomentObject &&
                (e._isAMomentObject = t._isAMomentObject),
              "undefined" != typeof t._i && (e._i = t._i),
              "undefined" != typeof t._f && (e._f = t._f),
              "undefined" != typeof t._l && (e._l = t._l),
              "undefined" != typeof t._strict && (e._strict = t._strict),
              "undefined" != typeof t._tzm && (e._tzm = t._tzm),
              "undefined" != typeof t._isUTC && (e._isUTC = t._isUTC),
              "undefined" != typeof t._offset && (e._offset = t._offset),
              "undefined" != typeof t._pf && (e._pf = d(t)),
              "undefined" != typeof t._locale && (e._locale = t._locale),
              Fr.length > 0)
            )
              for (r in Fr)
                (i = Fr[r]), (s = t[i]), "undefined" != typeof s && (e[i] = s);
            return e;
          }
          function m(e) {
            f(this, e),
              (this._d = new Date(null != e._d ? e._d.getTime() : NaN)),
              Hr === !1 && ((Hr = !0), r.updateOffset(this), (Hr = !1));
          }
          function S(e) {
            return e instanceof m || (null != e && null != e._isAMomentObject);
          }
          function v(e) {
            return 0 > e ? Math.ceil(e) : Math.floor(e);
          }
          function y(e) {
            var t = +e,
              r = 0;
            return 0 !== t && isFinite(t) && (r = v(t)), r;
          }
          function g(e, t, r) {
            var i,
              s = Math.min(e.length, t.length),
              o = Math.abs(e.length - t.length),
              n = 0;
            for (i = 0; s > i; i++)
              ((r && e[i] !== t[i]) || (!r && y(e[i]) !== y(t[i]))) && n++;
            return n + o;
          }
          function M() {}
          function E(e) {
            return e ? e.toLowerCase().replace("_", "-") : e;
          }
          function A(e) {
            for (var t, r, i, s, o = 0; o < e.length; ) {
              for (
                s = E(e[o]).split("-"),
                  t = s.length,
                  r = E(e[o + 1]),
                  r = r ? r.split("-") : null;
                t > 0;

              ) {
                if ((i = R(s.slice(0, t).join("-")))) return i;
                if (r && r.length >= t && g(s, r, !0) >= t - 1) break;
                t--;
              }
              o++;
            }
            return null;
          }
          function R(r) {
            var i = null;
            if (!Gr[r] && "undefined" != typeof t && t && t.exports)
              try {
                (i = $r._abbr), e("./locale/" + r), T(i);
              } catch (s) {}
            return Gr[r];
          }
          function T(e, t) {
            var r;
            return (
              e &&
                ((r = "undefined" == typeof t ? P(e) : I(e, t)), r && ($r = r)),
              $r._abbr
            );
          }
          function I(e, t) {
            return null !== t
              ? ((t.abbr = e),
                (Gr[e] = Gr[e] || new M()),
                Gr[e].set(t),
                T(e),
                Gr[e])
              : (delete Gr[e], null);
          }
          function P(e) {
            var t;
            if (
              (e && e._locale && e._locale._abbr && (e = e._locale._abbr), !e)
            )
              return $r;
            if (!s(e)) {
              if ((t = R(e))) return t;
              e = [e];
            }
            return A(e);
          }
          function C(e, t) {
            var r = e.toLowerCase();
            Br[r] = Br[r + "s"] = Br[t] = e;
          }
          function U(e) {
            return "string" == typeof e ? Br[e] || Br[e.toLowerCase()] : void 0;
          }
          function _(e) {
            var t,
              r,
              i = {};
            for (r in e) a(e, r) && ((t = U(r)), t && (i[t] = e[r]));
            return i;
          }
          function N(e, t) {
            return function (i) {
              return null != i
                ? (w(this, e, i), r.updateOffset(this, t), this)
                : b(this, e);
            };
          }
          function b(e, t) {
            return e._d["get" + (e._isUTC ? "UTC" : "") + t]();
          }
          function w(e, t, r) {
            return e._d["set" + (e._isUTC ? "UTC" : "") + t](r);
          }
          function O(e, t) {
            var r;
            if ("object" == typeof e) for (r in e) this.set(r, e[r]);
            else if (((e = U(e)), "function" == typeof this[e]))
              return this[e](t);
            return this;
          }
          function L(e, t, r) {
            var i = "" + Math.abs(e),
              s = t - i.length,
              o = e >= 0;
            return (
              (o ? (r ? "+" : "") : "-") +
              Math.pow(10, Math.max(0, s)).toString().substr(1) +
              i
            );
          }
          function D(e, t, r, i) {
            var s = i;
            "string" == typeof i &&
              (s = function () {
                return this[i]();
              }),
              e && (kr[e] = s),
              t &&
                (kr[t[0]] = function () {
                  return L(s.apply(this, arguments), t[1], t[2]);
                }),
              r &&
                (kr[r] = function () {
                  return this.localeData().ordinal(s.apply(this, arguments), e);
                });
          }
          function $(e) {
            return e.match(/\[[\s\S]/)
              ? e.replace(/^\[|\]$/g, "")
              : e.replace(/\\/g, "");
          }
          function F(e) {
            var t,
              r,
              i = e.match(zr);
            for (t = 0, r = i.length; r > t; t++)
              kr[i[t]] ? (i[t] = kr[i[t]]) : (i[t] = $(i[t]));
            return function (s) {
              var o = "";
              for (t = 0; r > t; t++)
                o += i[t] instanceof Function ? i[t].call(s, e) : i[t];
              return o;
            };
          }
          function H(e, t) {
            return e.isValid()
              ? ((t = G(t, e.localeData())), (jr[t] = jr[t] || F(t)), jr[t](e))
              : e.localeData().invalidDate();
          }
          function G(e, t) {
            function r(e) {
              return t.longDateFormat(e) || e;
            }
            var i = 5;
            for (xr.lastIndex = 0; i >= 0 && xr.test(e); )
              (e = e.replace(xr, r)), (xr.lastIndex = 0), (i -= 1);
            return e;
          }
          function B(e) {
            return (
              "function" == typeof e &&
              "[object Function]" === Object.prototype.toString.call(e)
            );
          }
          function z(e, t, r) {
            oi[e] = B(t)
              ? t
              : function (e) {
                  return e && r ? r : t;
                };
          }
          function x(e, t) {
            return a(oi, e) ? oi[e](t._strict, t._locale) : new RegExp(j(e));
          }
          function j(e) {
            return e
              .replace("\\", "")
              .replace(
                /\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,
                function (e, t, r, i, s) {
                  return t || r || i || s;
                }
              )
              .replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
          }
          function k(e, t) {
            var r,
              i = t;
            for (
              "string" == typeof e && (e = [e]),
                "number" == typeof t &&
                  (i = function (e, r) {
                    r[t] = y(e);
                  }),
                r = 0;
              r < e.length;
              r++
            )
              ni[e[r]] = i;
          }
          function Y(e, t) {
            k(e, function (e, r, i, s) {
              (i._w = i._w || {}), t(e, i._w, i, s);
            });
          }
          function K(e, t, r) {
            null != t && a(ni, e) && ni[e](t, r._a, r, e);
          }
          function V(e, t) {
            return new Date(Date.UTC(e, t + 1, 0)).getUTCDate();
          }
          function Q(e) {
            return this._months[e.month()];
          }
          function q(e) {
            return this._monthsShort[e.month()];
          }
          function W(e, t, r) {
            var i, s, o;
            for (
              this._monthsParse ||
                ((this._monthsParse = []),
                (this._longMonthsParse = []),
                (this._shortMonthsParse = [])),
                i = 0;
              12 > i;
              i++
            ) {
              if (
                ((s = l([2e3, i])),
                r &&
                  !this._longMonthsParse[i] &&
                  ((this._longMonthsParse[i] = new RegExp(
                    "^" + this.months(s, "").replace(".", "") + "$",
                    "i"
                  )),
                  (this._shortMonthsParse[i] = new RegExp(
                    "^" + this.monthsShort(s, "").replace(".", "") + "$",
                    "i"
                  ))),
                r ||
                  this._monthsParse[i] ||
                  ((o =
                    "^" + this.months(s, "") + "|^" + this.monthsShort(s, "")),
                  (this._monthsParse[i] = new RegExp(o.replace(".", ""), "i"))),
                r && "MMMM" === t && this._longMonthsParse[i].test(e))
              )
                return i;
              if (r && "MMM" === t && this._shortMonthsParse[i].test(e))
                return i;
              if (!r && this._monthsParse[i].test(e)) return i;
            }
          }
          function Z(e, t) {
            var r;
            return "string" == typeof t &&
              ((t = e.localeData().monthsParse(t)), "number" != typeof t)
              ? e
              : ((r = Math.min(e.date(), V(e.year(), t))),
                e._d["set" + (e._isUTC ? "UTC" : "") + "Month"](t, r),
                e);
          }
          function X(e) {
            return null != e
              ? (Z(this, e), r.updateOffset(this, !0), this)
              : b(this, "Month");
          }
          function J() {
            return V(this.year(), this.month());
          }
          function ee(e) {
            var t,
              r = e._a;
            return (
              r &&
                -2 === d(e).overflow &&
                ((t =
                  r[ui] < 0 || r[ui] > 11
                    ? ui
                    : r[li] < 1 || r[li] > V(r[ai], r[ui])
                    ? li
                    : r[ci] < 0 ||
                      r[ci] > 24 ||
                      (24 === r[ci] &&
                        (0 !== r[di] || 0 !== r[hi] || 0 !== r[pi]))
                    ? ci
                    : r[di] < 0 || r[di] > 59
                    ? di
                    : r[hi] < 0 || r[hi] > 59
                    ? hi
                    : r[pi] < 0 || r[pi] > 999
                    ? pi
                    : -1),
                d(e)._overflowDayOfYear && (ai > t || t > li) && (t = li),
                (d(e).overflow = t)),
              e
            );
          }
          function te(e) {
            r.suppressDeprecationWarnings === !1 &&
              "undefined" != typeof console &&
              console.warn;
          }
          function re(e, t) {
            var r = !0;
            return u(function () {
              return (
                r && (te(e + "\n" + new Error().stack), (r = !1)),
                t.apply(this, arguments)
              );
            }, t);
          }
          function ie(e, t) {
            Si[e] || (te(t), (Si[e] = !0));
          }
          function se(e) {
            var t,
              r,
              i = e._i,
              s = vi.exec(i);
            if (s) {
              for (d(e).iso = !0, t = 0, r = yi.length; r > t; t++)
                if (yi[t][1].exec(i)) {
                  e._f = yi[t][0];
                  break;
                }
              for (t = 0, r = gi.length; r > t; t++)
                if (gi[t][1].exec(i)) {
                  e._f += (s[6] || " ") + gi[t][0];
                  break;
                }
              i.match(ri) && (e._f += "Z"), Re(e);
            } else e._isValid = !1;
          }
          function oe(e) {
            var t = Mi.exec(e._i);
            return null !== t
              ? void (e._d = new Date(+t[1]))
              : (se(e),
                void (
                  e._isValid === !1 &&
                  (delete e._isValid, r.createFromInputFallback(e))
                ));
          }
          function ne(e, t, r, i, s, o, n) {
            var a = new Date(e, t, r, i, s, o, n);
            return 1970 > e && a.setFullYear(e), a;
          }
          function ae(e) {
            var t = new Date(Date.UTC.apply(null, arguments));
            return 1970 > e && t.setUTCFullYear(e), t;
          }
          function ue(e) {
            return le(e) ? 366 : 365;
          }
          function le(e) {
            return (e % 4 === 0 && e % 100 !== 0) || e % 400 === 0;
          }
          function ce() {
            return le(this.year());
          }
          function de(e, t, r) {
            var i,
              s = r - t,
              o = r - e.day();
            return (
              o > s && (o -= 7),
              s - 7 > o && (o += 7),
              (i = be(e).add(o, "d")),
              { week: Math.ceil(i.dayOfYear() / 7), year: i.year() }
            );
          }
          function he(e) {
            return de(e, this._week.dow, this._week.doy).week;
          }
          function pe() {
            return this._week.dow;
          }
          function fe() {
            return this._week.doy;
          }
          function me(e) {
            var t = this.localeData().week(this);
            return null == e ? t : this.add(7 * (e - t), "d");
          }
          function Se(e) {
            var t = de(this, 1, 4).week;
            return null == e ? t : this.add(7 * (e - t), "d");
          }
          function ve(e, t, r, i, s) {
            var o,
              n = 6 + s - i,
              a = ae(e, 0, 1 + n),
              u = a.getUTCDay();
            return (
              s > u && (u += 7),
              (r = null != r ? 1 * r : s),
              (o = 1 + n + 7 * (t - 1) - u + r),
              { year: o > 0 ? e : e - 1, dayOfYear: o > 0 ? o : ue(e - 1) + o }
            );
          }
          function ye(e) {
            var t =
              Math.round(
                (this.clone().startOf("day") - this.clone().startOf("year")) /
                  864e5
              ) + 1;
            return null == e ? t : this.add(e - t, "d");
          }
          function ge(e, t, r) {
            return null != e ? e : null != t ? t : r;
          }
          function Me(e) {
            var t = new Date();
            return e._useUTC
              ? [t.getUTCFullYear(), t.getUTCMonth(), t.getUTCDate()]
              : [t.getFullYear(), t.getMonth(), t.getDate()];
          }
          function Ee(e) {
            var t,
              r,
              i,
              s,
              o = [];
            if (!e._d) {
              for (
                i = Me(e),
                  e._w && null == e._a[li] && null == e._a[ui] && Ae(e),
                  e._dayOfYear &&
                    ((s = ge(e._a[ai], i[ai])),
                    e._dayOfYear > ue(s) && (d(e)._overflowDayOfYear = !0),
                    (r = ae(s, 0, e._dayOfYear)),
                    (e._a[ui] = r.getUTCMonth()),
                    (e._a[li] = r.getUTCDate())),
                  t = 0;
                3 > t && null == e._a[t];
                ++t
              )
                e._a[t] = o[t] = i[t];
              for (; 7 > t; t++)
                e._a[t] = o[t] = null == e._a[t] ? (2 === t ? 1 : 0) : e._a[t];
              24 === e._a[ci] &&
                0 === e._a[di] &&
                0 === e._a[hi] &&
                0 === e._a[pi] &&
                ((e._nextDay = !0), (e._a[ci] = 0)),
                (e._d = (e._useUTC ? ae : ne).apply(null, o)),
                null != e._tzm &&
                  e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm),
                e._nextDay && (e._a[ci] = 24);
            }
          }
          function Ae(e) {
            var t, r, i, s, o, n, a;
            (t = e._w),
              null != t.GG || null != t.W || null != t.E
                ? ((o = 1),
                  (n = 4),
                  (r = ge(t.GG, e._a[ai], de(be(), 1, 4).year)),
                  (i = ge(t.W, 1)),
                  (s = ge(t.E, 1)))
                : ((o = e._locale._week.dow),
                  (n = e._locale._week.doy),
                  (r = ge(t.gg, e._a[ai], de(be(), o, n).year)),
                  (i = ge(t.w, 1)),
                  null != t.d
                    ? ((s = t.d), o > s && ++i)
                    : (s = null != t.e ? t.e + o : o)),
              (a = ve(r, i, s, n, o)),
              (e._a[ai] = a.year),
              (e._dayOfYear = a.dayOfYear);
          }
          function Re(e) {
            if (e._f === r.ISO_8601) return void se(e);
            (e._a = []), (d(e).empty = !0);
            var t,
              i,
              s,
              o,
              n,
              a = "" + e._i,
              u = a.length,
              l = 0;
            for (
              s = G(e._f, e._locale).match(zr) || [], t = 0;
              t < s.length;
              t++
            )
              (o = s[t]),
                (i = (a.match(x(o, e)) || [])[0]),
                i &&
                  ((n = a.substr(0, a.indexOf(i))),
                  n.length > 0 && d(e).unusedInput.push(n),
                  (a = a.slice(a.indexOf(i) + i.length)),
                  (l += i.length)),
                kr[o]
                  ? (i ? (d(e).empty = !1) : d(e).unusedTokens.push(o),
                    K(o, i, e))
                  : e._strict && !i && d(e).unusedTokens.push(o);
            (d(e).charsLeftOver = u - l),
              a.length > 0 && d(e).unusedInput.push(a),
              d(e).bigHour === !0 &&
                e._a[ci] <= 12 &&
                e._a[ci] > 0 &&
                (d(e).bigHour = void 0),
              (e._a[ci] = Te(e._locale, e._a[ci], e._meridiem)),
              Ee(e),
              ee(e);
          }
          function Te(e, t, r) {
            var i;
            return null == r
              ? t
              : null != e.meridiemHour
              ? e.meridiemHour(t, r)
              : null != e.isPM
              ? ((i = e.isPM(r)),
                i && 12 > t && (t += 12),
                i || 12 !== t || (t = 0),
                t)
              : t;
          }
          function Ie(e) {
            var t, r, i, s, o;
            if (0 === e._f.length)
              return (d(e).invalidFormat = !0), void (e._d = new Date(NaN));
            for (s = 0; s < e._f.length; s++)
              (o = 0),
                (t = f({}, e)),
                null != e._useUTC && (t._useUTC = e._useUTC),
                (t._f = e._f[s]),
                Re(t),
                h(t) &&
                  ((o += d(t).charsLeftOver),
                  (o += 10 * d(t).unusedTokens.length),
                  (d(t).score = o),
                  (null == i || i > o) && ((i = o), (r = t)));
            u(e, r || t);
          }
          function Pe(e) {
            if (!e._d) {
              var t = _(e._i);
              (e._a = [
                t.year,
                t.month,
                t.day || t.date,
                t.hour,
                t.minute,
                t.second,
                t.millisecond,
              ]),
                Ee(e);
            }
          }
          function Ce(e) {
            var t = new m(ee(Ue(e)));
            return t._nextDay && (t.add(1, "d"), (t._nextDay = void 0)), t;
          }
          function Ue(e) {
            var t = e._i,
              r = e._f;
            return (
              (e._locale = e._locale || P(e._l)),
              null === t || (void 0 === r && "" === t)
                ? p({ nullInput: !0 })
                : ("string" == typeof t && (e._i = t = e._locale.preparse(t)),
                  S(t)
                    ? new m(ee(t))
                    : (s(r) ? Ie(e) : r ? Re(e) : o(t) ? (e._d = t) : _e(e), e))
            );
          }
          function _e(e) {
            var t = e._i;
            void 0 === t
              ? (e._d = new Date())
              : o(t)
              ? (e._d = new Date(+t))
              : "string" == typeof t
              ? oe(e)
              : s(t)
              ? ((e._a = n(t.slice(0), function (e) {
                  return parseInt(e, 10);
                })),
                Ee(e))
              : "object" == typeof t
              ? Pe(e)
              : "number" == typeof t
              ? (e._d = new Date(t))
              : r.createFromInputFallback(e);
          }
          function Ne(e, t, r, i, s) {
            var o = {};
            return (
              "boolean" == typeof r && ((i = r), (r = void 0)),
              (o._isAMomentObject = !0),
              (o._useUTC = o._isUTC = s),
              (o._l = r),
              (o._i = e),
              (o._f = t),
              (o._strict = i),
              Ce(o)
            );
          }
          function be(e, t, r, i) {
            return Ne(e, t, r, i, !1);
          }
          function we(e, t) {
            var r, i;
            if ((1 === t.length && s(t[0]) && (t = t[0]), !t.length))
              return be();
            for (r = t[0], i = 1; i < t.length; ++i)
              (!t[i].isValid() || t[i][e](r)) && (r = t[i]);
            return r;
          }
          function Oe() {
            var e = [].slice.call(arguments, 0);
            return we("isBefore", e);
          }
          function Le() {
            var e = [].slice.call(arguments, 0);
            return we("isAfter", e);
          }
          function De(e) {
            var t = _(e),
              r = t.year || 0,
              i = t.quarter || 0,
              s = t.month || 0,
              o = t.week || 0,
              n = t.day || 0,
              a = t.hour || 0,
              u = t.minute || 0,
              l = t.second || 0,
              c = t.millisecond || 0;
            (this._milliseconds = +c + 1e3 * l + 6e4 * u + 36e5 * a),
              (this._days = +n + 7 * o),
              (this._months = +s + 3 * i + 12 * r),
              (this._data = {}),
              (this._locale = P()),
              this._bubble();
          }
          function $e(e) {
            return e instanceof De;
          }
          function Fe(e, t) {
            D(e, 0, 0, function () {
              var e = this.utcOffset(),
                r = "+";
              return (
                0 > e && ((e = -e), (r = "-")),
                r + L(~~(e / 60), 2) + t + L(~~e % 60, 2)
              );
            });
          }
          function He(e) {
            var t = (e || "").match(ri) || [],
              r = t[t.length - 1] || [],
              i = (r + "").match(Ii) || ["-", 0, 0],
              s = +(60 * i[1]) + y(i[2]);
            return "+" === i[0] ? s : -s;
          }
          function Ge(e, t) {
            var i, s;
            return t._isUTC
              ? ((i = t.clone()),
                (s = (S(e) || o(e) ? +e : +be(e)) - +i),
                i._d.setTime(+i._d + s),
                r.updateOffset(i, !1),
                i)
              : be(e).local();
          }
          function Be(e) {
            return 15 * -Math.round(e._d.getTimezoneOffset() / 15);
          }
          function ze(e, t) {
            var i,
              s = this._offset || 0;
            return null != e
              ? ("string" == typeof e && (e = He(e)),
                Math.abs(e) < 16 && (e = 60 * e),
                !this._isUTC && t && (i = Be(this)),
                (this._offset = e),
                (this._isUTC = !0),
                null != i && this.add(i, "m"),
                s !== e &&
                  (!t || this._changeInProgress
                    ? it(this, Xe(e - s, "m"), 1, !1)
                    : this._changeInProgress ||
                      ((this._changeInProgress = !0),
                      r.updateOffset(this, !0),
                      (this._changeInProgress = null))),
                this)
              : this._isUTC
              ? s
              : Be(this);
          }
          function xe(e, t) {
            return null != e
              ? ("string" != typeof e && (e = -e), this.utcOffset(e, t), this)
              : -this.utcOffset();
          }
          function je(e) {
            return this.utcOffset(0, e);
          }
          function ke(e) {
            return (
              this._isUTC &&
                (this.utcOffset(0, e),
                (this._isUTC = !1),
                e && this.subtract(Be(this), "m")),
              this
            );
          }
          function Ye() {
            return (
              this._tzm
                ? this.utcOffset(this._tzm)
                : "string" == typeof this._i && this.utcOffset(He(this._i)),
              this
            );
          }
          function Ke(e) {
            return (
              (e = e ? be(e).utcOffset() : 0), (this.utcOffset() - e) % 60 === 0
            );
          }
          function Ve() {
            return (
              this.utcOffset() > this.clone().month(0).utcOffset() ||
              this.utcOffset() > this.clone().month(5).utcOffset()
            );
          }
          function Qe() {
            if ("undefined" != typeof this._isDSTShifted)
              return this._isDSTShifted;
            var e = {};
            if ((f(e, this), (e = Ue(e)), e._a)) {
              var t = e._isUTC ? l(e._a) : be(e._a);
              this._isDSTShifted = this.isValid() && g(e._a, t.toArray()) > 0;
            } else this._isDSTShifted = !1;
            return this._isDSTShifted;
          }
          function qe() {
            return !this._isUTC;
          }
          function We() {
            return this._isUTC;
          }
          function Ze() {
            return this._isUTC && 0 === this._offset;
          }
          function Xe(e, t) {
            var r,
              i,
              s,
              o = e,
              n = null;
            return (
              $e(e)
                ? (o = { ms: e._milliseconds, d: e._days, M: e._months })
                : "number" == typeof e
                ? ((o = {}), t ? (o[t] = e) : (o.milliseconds = e))
                : (n = Pi.exec(e))
                ? ((r = "-" === n[1] ? -1 : 1),
                  (o = {
                    y: 0,
                    d: y(n[li]) * r,
                    h: y(n[ci]) * r,
                    m: y(n[di]) * r,
                    s: y(n[hi]) * r,
                    ms: y(n[pi]) * r,
                  }))
                : (n = Ci.exec(e))
                ? ((r = "-" === n[1] ? -1 : 1),
                  (o = {
                    y: Je(n[2], r),
                    M: Je(n[3], r),
                    d: Je(n[4], r),
                    h: Je(n[5], r),
                    m: Je(n[6], r),
                    s: Je(n[7], r),
                    w: Je(n[8], r),
                  }))
                : null == o
                ? (o = {})
                : "object" == typeof o &&
                  ("from" in o || "to" in o) &&
                  ((s = tt(be(o.from), be(o.to))),
                  (o = {}),
                  (o.ms = s.milliseconds),
                  (o.M = s.months)),
              (i = new De(o)),
              $e(e) && a(e, "_locale") && (i._locale = e._locale),
              i
            );
          }
          function Je(e, t) {
            var r = e && parseFloat(e.replace(",", "."));
            return (isNaN(r) ? 0 : r) * t;
          }
          function et(e, t) {
            var r = { milliseconds: 0, months: 0 };
            return (
              (r.months = t.month() - e.month() + 12 * (t.year() - e.year())),
              e.clone().add(r.months, "M").isAfter(t) && --r.months,
              (r.milliseconds = +t - +e.clone().add(r.months, "M")),
              r
            );
          }
          function tt(e, t) {
            var r;
            return (
              (t = Ge(t, e)),
              e.isBefore(t)
                ? (r = et(e, t))
                : ((r = et(t, e)),
                  (r.milliseconds = -r.milliseconds),
                  (r.months = -r.months)),
              r
            );
          }
          function rt(e, t) {
            return function (r, i) {
              var s, o;
              return (
                null === i ||
                  isNaN(+i) ||
                  (ie(
                    t,
                    "moment()." +
                      t +
                      "(period, number) is deprecated. Please use moment()." +
                      t +
                      "(number, period)."
                  ),
                  (o = r),
                  (r = i),
                  (i = o)),
                (r = "string" == typeof r ? +r : r),
                (s = Xe(r, i)),
                it(this, s, e),
                this
              );
            };
          }
          function it(e, t, i, s) {
            var o = t._milliseconds,
              n = t._days,
              a = t._months;
            (s = null == s ? !0 : s),
              o && e._d.setTime(+e._d + o * i),
              n && w(e, "Date", b(e, "Date") + n * i),
              a && Z(e, b(e, "Month") + a * i),
              s && r.updateOffset(e, n || a);
          }
          function st(e, t) {
            var r = e || be(),
              i = Ge(r, this).startOf("day"),
              s = this.diff(i, "days", !0),
              o =
                -6 > s
                  ? "sameElse"
                  : -1 > s
                  ? "lastWeek"
                  : 0 > s
                  ? "lastDay"
                  : 1 > s
                  ? "sameDay"
                  : 2 > s
                  ? "nextDay"
                  : 7 > s
                  ? "nextWeek"
                  : "sameElse";
            return this.format(
              (t && t[o]) || this.localeData().calendar(o, this, be(r))
            );
          }
          function ot() {
            return new m(this);
          }
          function nt(e, t) {
            var r;
            return (
              (t = U("undefined" != typeof t ? t : "millisecond")),
              "millisecond" === t
                ? ((e = S(e) ? e : be(e)), +this > +e)
                : ((r = S(e) ? +e : +be(e)), r < +this.clone().startOf(t))
            );
          }
          function at(e, t) {
            var r;
            return (
              (t = U("undefined" != typeof t ? t : "millisecond")),
              "millisecond" === t
                ? ((e = S(e) ? e : be(e)), +e > +this)
                : ((r = S(e) ? +e : +be(e)), +this.clone().endOf(t) < r)
            );
          }
          function ut(e, t, r) {
            return this.isAfter(e, r) && this.isBefore(t, r);
          }
          function lt(e, t) {
            var r;
            return (
              (t = U(t || "millisecond")),
              "millisecond" === t
                ? ((e = S(e) ? e : be(e)), +this === +e)
                : ((r = +be(e)),
                  +this.clone().startOf(t) <= r && r <= +this.clone().endOf(t))
            );
          }
          function ct(e, t, r) {
            var i,
              s,
              o = Ge(e, this),
              n = 6e4 * (o.utcOffset() - this.utcOffset());
            return (
              (t = U(t)),
              "year" === t || "month" === t || "quarter" === t
                ? ((s = dt(this, o)),
                  "quarter" === t ? (s /= 3) : "year" === t && (s /= 12))
                : ((i = this - o),
                  (s =
                    "second" === t
                      ? i / 1e3
                      : "minute" === t
                      ? i / 6e4
                      : "hour" === t
                      ? i / 36e5
                      : "day" === t
                      ? (i - n) / 864e5
                      : "week" === t
                      ? (i - n) / 6048e5
                      : i)),
              r ? s : v(s)
            );
          }
          function dt(e, t) {
            var r,
              i,
              s = 12 * (t.year() - e.year()) + (t.month() - e.month()),
              o = e.clone().add(s, "months");
            return (
              0 > t - o
                ? ((r = e.clone().add(s - 1, "months")),
                  (i = (t - o) / (o - r)))
                : ((r = e.clone().add(s + 1, "months")),
                  (i = (t - o) / (r - o))),
              -(s + i)
            );
          }
          function ht() {
            return this.clone()
              .locale("en")
              .format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
          }
          function pt() {
            var e = this.clone().utc();
            return 0 < e.year() && e.year() <= 9999
              ? "function" == typeof Date.prototype.toISOString
                ? this.toDate().toISOString()
                : H(e, "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]")
              : H(e, "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]");
          }
          function ft(e) {
            var t = H(this, e || r.defaultFormat);
            return this.localeData().postformat(t);
          }
          function mt(e, t) {
            return this.isValid()
              ? Xe({ to: this, from: e }).locale(this.locale()).humanize(!t)
              : this.localeData().invalidDate();
          }
          function St(e) {
            return this.from(be(), e);
          }
          function vt(e, t) {
            return this.isValid()
              ? Xe({ from: this, to: e }).locale(this.locale()).humanize(!t)
              : this.localeData().invalidDate();
          }
          function yt(e) {
            return this.to(be(), e);
          }
          function gt(e) {
            var t;
            return void 0 === e
              ? this._locale._abbr
              : ((t = P(e)), null != t && (this._locale = t), this);
          }
          function Mt() {
            return this._locale;
          }
          function Et(e) {
            switch ((e = U(e))) {
              case "year":
                this.month(0);
              case "quarter":
              case "month":
                this.date(1);
              case "week":
              case "isoWeek":
              case "day":
                this.hours(0);
              case "hour":
                this.minutes(0);
              case "minute":
                this.seconds(0);
              case "second":
                this.milliseconds(0);
            }
            return (
              "week" === e && this.weekday(0),
              "isoWeek" === e && this.isoWeekday(1),
              "quarter" === e && this.month(3 * Math.floor(this.month() / 3)),
              this
            );
          }
          function At(e) {
            return (
              (e = U(e)),
              void 0 === e || "millisecond" === e
                ? this
                : this.startOf(e)
                    .add(1, "isoWeek" === e ? "week" : e)
                    .subtract(1, "ms")
            );
          }
          function Rt() {
            return +this._d - 6e4 * (this._offset || 0);
          }
          function Tt() {
            return Math.floor(+this / 1e3);
          }
          function It() {
            return this._offset ? new Date(+this) : this._d;
          }
          function Pt() {
            var e = this;
            return [
              e.year(),
              e.month(),
              e.date(),
              e.hour(),
              e.minute(),
              e.second(),
              e.millisecond(),
            ];
          }
          function Ct() {
            var e = this;
            return {
              years: e.year(),
              months: e.month(),
              date: e.date(),
              hours: e.hours(),
              minutes: e.minutes(),
              seconds: e.seconds(),
              milliseconds: e.milliseconds(),
            };
          }
          function Ut() {
            return h(this);
          }
          function _t() {
            return u({}, d(this));
          }
          function Nt() {
            return d(this).overflow;
          }
          function bt(e, t) {
            D(0, [e, e.length], 0, t);
          }
          function wt(e, t, r) {
            return de(be([e, 11, 31 + t - r]), t, r).week;
          }
          function Ot(e) {
            var t = de(
              this,
              this.localeData()._week.dow,
              this.localeData()._week.doy
            ).year;
            return null == e ? t : this.add(e - t, "y");
          }
          function Lt(e) {
            var t = de(this, 1, 4).year;
            return null == e ? t : this.add(e - t, "y");
          }
          function Dt() {
            return wt(this.year(), 1, 4);
          }
          function $t() {
            var e = this.localeData()._week;
            return wt(this.year(), e.dow, e.doy);
          }
          function Ft(e) {
            return null == e
              ? Math.ceil((this.month() + 1) / 3)
              : this.month(3 * (e - 1) + (this.month() % 3));
          }
          function Ht(e, t) {
            return "string" != typeof e
              ? e
              : isNaN(e)
              ? ((e = t.weekdaysParse(e)), "number" == typeof e ? e : null)
              : parseInt(e, 10);
          }
          function Gt(e) {
            return this._weekdays[e.day()];
          }
          function Bt(e) {
            return this._weekdaysShort[e.day()];
          }
          function zt(e) {
            return this._weekdaysMin[e.day()];
          }
          function xt(e) {
            var t, r, i;
            for (
              this._weekdaysParse = this._weekdaysParse || [], t = 0;
              7 > t;
              t++
            )
              if (
                (this._weekdaysParse[t] ||
                  ((r = be([2e3, 1]).day(t)),
                  (i =
                    "^" +
                    this.weekdays(r, "") +
                    "|^" +
                    this.weekdaysShort(r, "") +
                    "|^" +
                    this.weekdaysMin(r, "")),
                  (this._weekdaysParse[t] = new RegExp(
                    i.replace(".", ""),
                    "i"
                  ))),
                this._weekdaysParse[t].test(e))
              )
                return t;
          }
          function jt(e) {
            var t = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
            return null != e
              ? ((e = Ht(e, this.localeData())), this.add(e - t, "d"))
              : t;
          }
          function kt(e) {
            var t = (this.day() + 7 - this.localeData()._week.dow) % 7;
            return null == e ? t : this.add(e - t, "d");
          }
          function Yt(e) {
            return null == e
              ? this.day() || 7
              : this.day(this.day() % 7 ? e : e - 7);
          }
          function Kt(e, t) {
            D(e, 0, 0, function () {
              return this.localeData().meridiem(
                this.hours(),
                this.minutes(),
                t
              );
            });
          }
          function Vt(e, t) {
            return t._meridiemParse;
          }
          function Qt(e) {
            return "p" === (e + "").toLowerCase().charAt(0);
          }
          function qt(e, t, r) {
            return e > 11 ? (r ? "pm" : "PM") : r ? "am" : "AM";
          }
          function Wt(e, t) {
            t[pi] = y(1e3 * ("0." + e));
          }
          function Zt() {
            return this._isUTC ? "UTC" : "";
          }
          function Xt() {
            return this._isUTC ? "Coordinated Universal Time" : "";
          }
          function Jt(e) {
            return be(1e3 * e);
          }
          function er() {
            return be.apply(null, arguments).parseZone();
          }
          function tr(e, t, r) {
            var i = this._calendar[e];
            return "function" == typeof i ? i.call(t, r) : i;
          }
          function rr(e) {
            var t = this._longDateFormat[e],
              r = this._longDateFormat[e.toUpperCase()];
            return t || !r
              ? t
              : ((this._longDateFormat[e] = r.replace(
                  /MMMM|MM|DD|dddd/g,
                  function (e) {
                    return e.slice(1);
                  }
                )),
                this._longDateFormat[e]);
          }
          function ir() {
            return this._invalidDate;
          }
          function sr(e) {
            return this._ordinal.replace("%d", e);
          }
          function or(e) {
            return e;
          }
          function nr(e, t, r, i) {
            var s = this._relativeTime[r];
            return "function" == typeof s ? s(e, t, r, i) : s.replace(/%d/i, e);
          }
          function ar(e, t) {
            var r = this._relativeTime[e > 0 ? "future" : "past"];
            return "function" == typeof r ? r(t) : r.replace(/%s/i, t);
          }
          function ur(e) {
            var t, r;
            for (r in e)
              (t = e[r]),
                "function" == typeof t ? (this[r] = t) : (this["_" + r] = t);
            this._ordinalParseLenient = new RegExp(
              this._ordinalParse.source + "|" + /\d{1,2}/.source
            );
          }
          function lr(e, t, r, i) {
            var s = P(),
              o = l().set(i, t);
            return s[r](o, e);
          }
          function cr(e, t, r, i, s) {
            if (
              ("number" == typeof e && ((t = e), (e = void 0)),
              (e = e || ""),
              null != t)
            )
              return lr(e, t, r, s);
            var o,
              n = [];
            for (o = 0; i > o; o++) n[o] = lr(e, o, r, s);
            return n;
          }
          function dr(e, t) {
            return cr(e, t, "months", 12, "month");
          }
          function hr(e, t) {
            return cr(e, t, "monthsShort", 12, "month");
          }
          function pr(e, t) {
            return cr(e, t, "weekdays", 7, "day");
          }
          function fr(e, t) {
            return cr(e, t, "weekdaysShort", 7, "day");
          }
          function mr(e, t) {
            return cr(e, t, "weekdaysMin", 7, "day");
          }
          function Sr() {
            var e = this._data;
            return (
              (this._milliseconds = Wi(this._milliseconds)),
              (this._days = Wi(this._days)),
              (this._months = Wi(this._months)),
              (e.milliseconds = Wi(e.milliseconds)),
              (e.seconds = Wi(e.seconds)),
              (e.minutes = Wi(e.minutes)),
              (e.hours = Wi(e.hours)),
              (e.months = Wi(e.months)),
              (e.years = Wi(e.years)),
              this
            );
          }
          function vr(e, t, r, i) {
            var s = Xe(t, r);
            return (
              (e._milliseconds += i * s._milliseconds),
              (e._days += i * s._days),
              (e._months += i * s._months),
              e._bubble()
            );
          }
          function yr(e, t) {
            return vr(this, e, t, 1);
          }
          function gr(e, t) {
            return vr(this, e, t, -1);
          }
          function Mr(e) {
            return 0 > e ? Math.floor(e) : Math.ceil(e);
          }
          function Er() {
            var e,
              t,
              r,
              i,
              s,
              o = this._milliseconds,
              n = this._days,
              a = this._months,
              u = this._data;
            return (
              (o >= 0 && n >= 0 && a >= 0) ||
                (0 >= o && 0 >= n && 0 >= a) ||
                ((o += 864e5 * Mr(Rr(a) + n)), (n = 0), (a = 0)),
              (u.milliseconds = o % 1e3),
              (e = v(o / 1e3)),
              (u.seconds = e % 60),
              (t = v(e / 60)),
              (u.minutes = t % 60),
              (r = v(t / 60)),
              (u.hours = r % 24),
              (n += v(r / 24)),
              (s = v(Ar(n))),
              (a += s),
              (n -= Mr(Rr(s))),
              (i = v(a / 12)),
              (a %= 12),
              (u.days = n),
              (u.months = a),
              (u.years = i),
              this
            );
          }
          function Ar(e) {
            return (4800 * e) / 146097;
          }
          function Rr(e) {
            return (146097 * e) / 4800;
          }
          function Tr(e) {
            var t,
              r,
              i = this._milliseconds;
            if (((e = U(e)), "month" === e || "year" === e))
              return (
                (t = this._days + i / 864e5),
                (r = this._months + Ar(t)),
                "month" === e ? r : r / 12
              );
            switch (((t = this._days + Math.round(Rr(this._months))), e)) {
              case "week":
                return t / 7 + i / 6048e5;
              case "day":
                return t + i / 864e5;
              case "hour":
                return 24 * t + i / 36e5;
              case "minute":
                return 1440 * t + i / 6e4;
              case "second":
                return 86400 * t + i / 1e3;
              case "millisecond":
                return Math.floor(864e5 * t) + i;
              default:
                throw new Error("Unknown unit " + e);
            }
          }
          function Ir() {
            return (
              this._milliseconds +
              864e5 * this._days +
              (this._months % 12) * 2592e6 +
              31536e6 * y(this._months / 12)
            );
          }
          function Pr(e) {
            return function () {
              return this.as(e);
            };
          }
          function Cr(e) {
            return (e = U(e)), this[e + "s"]();
          }
          function Ur(e) {
            return function () {
              return this._data[e];
            };
          }
          function _r() {
            return v(this.days() / 7);
          }
          function Nr(e, t, r, i, s) {
            return s.relativeTime(t || 1, !!r, e, i);
          }
          function br(e, t, r) {
            var i = Xe(e).abs(),
              s = hs(i.as("s")),
              o = hs(i.as("m")),
              n = hs(i.as("h")),
              a = hs(i.as("d")),
              u = hs(i.as("M")),
              l = hs(i.as("y")),
              c = (s < ps.s && ["s", s]) ||
                (1 === o && ["m"]) ||
                (o < ps.m && ["mm", o]) ||
                (1 === n && ["h"]) ||
                (n < ps.h && ["hh", n]) ||
                (1 === a && ["d"]) ||
                (a < ps.d && ["dd", a]) ||
                (1 === u && ["M"]) ||
                (u < ps.M && ["MM", u]) ||
                (1 === l && ["y"]) || ["yy", l];
            return (c[2] = t), (c[3] = +e > 0), (c[4] = r), Nr.apply(null, c);
          }
          function wr(e, t) {
            return void 0 === ps[e]
              ? !1
              : void 0 === t
              ? ps[e]
              : ((ps[e] = t), !0);
          }
          function Or(e) {
            var t = this.localeData(),
              r = br(this, !e, t);
            return e && (r = t.pastFuture(+this, r)), t.postformat(r);
          }
          function Lr() {
            var e,
              t,
              r,
              i = fs(this._milliseconds) / 1e3,
              s = fs(this._days),
              o = fs(this._months);
            (e = v(i / 60)),
              (t = v(e / 60)),
              (i %= 60),
              (e %= 60),
              (r = v(o / 12)),
              (o %= 12);
            var n = r,
              a = o,
              u = s,
              l = t,
              c = e,
              d = i,
              h = this.asSeconds();
            return h
              ? (0 > h ? "-" : "") +
                  "P" +
                  (n ? n + "Y" : "") +
                  (a ? a + "M" : "") +
                  (u ? u + "D" : "") +
                  (l || c || d ? "T" : "") +
                  (l ? l + "H" : "") +
                  (c ? c + "M" : "") +
                  (d ? d + "S" : "")
              : "P0D";
          }
          var Dr,
            $r,
            Fr = (r.momentProperties = []),
            Hr = !1,
            Gr = {},
            Br = {},
            zr =
              /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
            xr = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
            jr = {},
            kr = {},
            Yr = /\d/,
            Kr = /\d\d/,
            Vr = /\d{3}/,
            Qr = /\d{4}/,
            qr = /[+-]?\d{6}/,
            Wr = /\d\d?/,
            Zr = /\d{1,3}/,
            Xr = /\d{1,4}/,
            Jr = /[+-]?\d{1,6}/,
            ei = /\d+/,
            ti = /[+-]?\d+/,
            ri = /Z|[+-]\d\d:?\d\d/gi,
            ii = /[+-]?\d+(\.\d{1,3})?/,
            si =
              /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,
            oi = {},
            ni = {},
            ai = 0,
            ui = 1,
            li = 2,
            ci = 3,
            di = 4,
            hi = 5,
            pi = 6;
          D("M", ["MM", 2], "Mo", function () {
            return this.month() + 1;
          }),
            D("MMM", 0, 0, function (e) {
              return this.localeData().monthsShort(this, e);
            }),
            D("MMMM", 0, 0, function (e) {
              return this.localeData().months(this, e);
            }),
            C("month", "M"),
            z("M", Wr),
            z("MM", Wr, Kr),
            z("MMM", si),
            z("MMMM", si),
            k(["M", "MM"], function (e, t) {
              t[ui] = y(e) - 1;
            }),
            k(["MMM", "MMMM"], function (e, t, r, i) {
              var s = r._locale.monthsParse(e, i, r._strict);
              null != s ? (t[ui] = s) : (d(r).invalidMonth = e);
            });
          var fi =
              "January_February_March_April_May_June_July_August_September_October_November_December".split(
                "_"
              ),
            mi = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
            Si = {};
          r.suppressDeprecationWarnings = !1;
          var vi =
              /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
            yi = [
              ["YYYYYY-MM-DD", /[+-]\d{6}-\d{2}-\d{2}/],
              ["YYYY-MM-DD", /\d{4}-\d{2}-\d{2}/],
              ["GGGG-[W]WW-E", /\d{4}-W\d{2}-\d/],
              ["GGGG-[W]WW", /\d{4}-W\d{2}/],
              ["YYYY-DDD", /\d{4}-\d{3}/],
            ],
            gi = [
              ["HH:mm:ss.SSSS", /(T| )\d\d:\d\d:\d\d\.\d+/],
              ["HH:mm:ss", /(T| )\d\d:\d\d:\d\d/],
              ["HH:mm", /(T| )\d\d:\d\d/],
              ["HH", /(T| )\d\d/],
            ],
            Mi = /^\/?Date\((\-?\d+)/i;
          (r.createFromInputFallback = re(
            "moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.",
            function (e) {
              e._d = new Date(e._i + (e._useUTC ? " UTC" : ""));
            }
          )),
            D(0, ["YY", 2], 0, function () {
              return this.year() % 100;
            }),
            D(0, ["YYYY", 4], 0, "year"),
            D(0, ["YYYYY", 5], 0, "year"),
            D(0, ["YYYYYY", 6, !0], 0, "year"),
            C("year", "y"),
            z("Y", ti),
            z("YY", Wr, Kr),
            z("YYYY", Xr, Qr),
            z("YYYYY", Jr, qr),
            z("YYYYYY", Jr, qr),
            k(["YYYYY", "YYYYYY"], ai),
            k("YYYY", function (e, t) {
              t[ai] = 2 === e.length ? r.parseTwoDigitYear(e) : y(e);
            }),
            k("YY", function (e, t) {
              t[ai] = r.parseTwoDigitYear(e);
            }),
            (r.parseTwoDigitYear = function (e) {
              return y(e) + (y(e) > 68 ? 1900 : 2e3);
            });
          var Ei = N("FullYear", !1);
          D("w", ["ww", 2], "wo", "week"),
            D("W", ["WW", 2], "Wo", "isoWeek"),
            C("week", "w"),
            C("isoWeek", "W"),
            z("w", Wr),
            z("ww", Wr, Kr),
            z("W", Wr),
            z("WW", Wr, Kr),
            Y(["w", "ww", "W", "WW"], function (e, t, r, i) {
              t[i.substr(0, 1)] = y(e);
            });
          var Ai = { dow: 0, doy: 6 };
          D("DDD", ["DDDD", 3], "DDDo", "dayOfYear"),
            C("dayOfYear", "DDD"),
            z("DDD", Zr),
            z("DDDD", Vr),
            k(["DDD", "DDDD"], function (e, t, r) {
              r._dayOfYear = y(e);
            }),
            (r.ISO_8601 = function () {});
          var Ri = re(
              "moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548",
              function () {
                var e = be.apply(null, arguments);
                return this > e ? this : e;
              }
            ),
            Ti = re(
              "moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548",
              function () {
                var e = be.apply(null, arguments);
                return e > this ? this : e;
              }
            );
          Fe("Z", ":"),
            Fe("ZZ", ""),
            z("Z", ri),
            z("ZZ", ri),
            k(["Z", "ZZ"], function (e, t, r) {
              (r._useUTC = !0), (r._tzm = He(e));
            });
          var Ii = /([\+\-]|\d\d)/gi;
          r.updateOffset = function () {};
          var Pi = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,
            Ci =
              /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;
          Xe.fn = De.prototype;
          var Ui = rt(1, "add"),
            _i = rt(-1, "subtract");
          r.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
          var Ni = re(
            "moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",
            function (e) {
              return void 0 === e ? this.localeData() : this.locale(e);
            }
          );
          D(0, ["gg", 2], 0, function () {
            return this.weekYear() % 100;
          }),
            D(0, ["GG", 2], 0, function () {
              return this.isoWeekYear() % 100;
            }),
            bt("gggg", "weekYear"),
            bt("ggggg", "weekYear"),
            bt("GGGG", "isoWeekYear"),
            bt("GGGGG", "isoWeekYear"),
            C("weekYear", "gg"),
            C("isoWeekYear", "GG"),
            z("G", ti),
            z("g", ti),
            z("GG", Wr, Kr),
            z("gg", Wr, Kr),
            z("GGGG", Xr, Qr),
            z("gggg", Xr, Qr),
            z("GGGGG", Jr, qr),
            z("ggggg", Jr, qr),
            Y(["gggg", "ggggg", "GGGG", "GGGGG"], function (e, t, r, i) {
              t[i.substr(0, 2)] = y(e);
            }),
            Y(["gg", "GG"], function (e, t, i, s) {
              t[s] = r.parseTwoDigitYear(e);
            }),
            D("Q", 0, 0, "quarter"),
            C("quarter", "Q"),
            z("Q", Yr),
            k("Q", function (e, t) {
              t[ui] = 3 * (y(e) - 1);
            }),
            D("D", ["DD", 2], "Do", "date"),
            C("date", "D"),
            z("D", Wr),
            z("DD", Wr, Kr),
            z("Do", function (e, t) {
              return e ? t._ordinalParse : t._ordinalParseLenient;
            }),
            k(["D", "DD"], li),
            k("Do", function (e, t) {
              t[li] = y(e.match(Wr)[0], 10);
            });
          var bi = N("Date", !0);
          D("d", 0, "do", "day"),
            D("dd", 0, 0, function (e) {
              return this.localeData().weekdaysMin(this, e);
            }),
            D("ddd", 0, 0, function (e) {
              return this.localeData().weekdaysShort(this, e);
            }),
            D("dddd", 0, 0, function (e) {
              return this.localeData().weekdays(this, e);
            }),
            D("e", 0, 0, "weekday"),
            D("E", 0, 0, "isoWeekday"),
            C("day", "d"),
            C("weekday", "e"),
            C("isoWeekday", "E"),
            z("d", Wr),
            z("e", Wr),
            z("E", Wr),
            z("dd", si),
            z("ddd", si),
            z("dddd", si),
            Y(["dd", "ddd", "dddd"], function (e, t, r) {
              var i = r._locale.weekdaysParse(e);
              null != i ? (t.d = i) : (d(r).invalidWeekday = e);
            }),
            Y(["d", "e", "E"], function (e, t, r, i) {
              t[i] = y(e);
            });
          var wi =
              "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split(
                "_"
              ),
            Oi = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
            Li = "Su_Mo_Tu_We_Th_Fr_Sa".split("_");
          D("H", ["HH", 2], 0, "hour"),
            D("h", ["hh", 2], 0, function () {
              return this.hours() % 12 || 12;
            }),
            Kt("a", !0),
            Kt("A", !1),
            C("hour", "h"),
            z("a", Vt),
            z("A", Vt),
            z("H", Wr),
            z("h", Wr),
            z("HH", Wr, Kr),
            z("hh", Wr, Kr),
            k(["H", "HH"], ci),
            k(["a", "A"], function (e, t, r) {
              (r._isPm = r._locale.isPM(e)), (r._meridiem = e);
            }),
            k(["h", "hh"], function (e, t, r) {
              (t[ci] = y(e)), (d(r).bigHour = !0);
            });
          var Di = /[ap]\.?m?\.?/i,
            $i = N("Hours", !0);
          D("m", ["mm", 2], 0, "minute"),
            C("minute", "m"),
            z("m", Wr),
            z("mm", Wr, Kr),
            k(["m", "mm"], di);
          var Fi = N("Minutes", !1);
          D("s", ["ss", 2], 0, "second"),
            C("second", "s"),
            z("s", Wr),
            z("ss", Wr, Kr),
            k(["s", "ss"], hi);
          var Hi = N("Seconds", !1);
          D("S", 0, 0, function () {
            return ~~(this.millisecond() / 100);
          }),
            D(0, ["SS", 2], 0, function () {
              return ~~(this.millisecond() / 10);
            }),
            D(0, ["SSS", 3], 0, "millisecond"),
            D(0, ["SSSS", 4], 0, function () {
              return 10 * this.millisecond();
            }),
            D(0, ["SSSSS", 5], 0, function () {
              return 100 * this.millisecond();
            }),
            D(0, ["SSSSSS", 6], 0, function () {
              return 1e3 * this.millisecond();
            }),
            D(0, ["SSSSSSS", 7], 0, function () {
              return 1e4 * this.millisecond();
            }),
            D(0, ["SSSSSSSS", 8], 0, function () {
              return 1e5 * this.millisecond();
            }),
            D(0, ["SSSSSSSSS", 9], 0, function () {
              return 1e6 * this.millisecond();
            }),
            C("millisecond", "ms"),
            z("S", Zr, Yr),
            z("SS", Zr, Kr),
            z("SSS", Zr, Vr);
          var Gi;
          for (Gi = "SSSS"; Gi.length <= 9; Gi += "S") z(Gi, ei);
          for (Gi = "S"; Gi.length <= 9; Gi += "S") k(Gi, Wt);
          var Bi = N("Milliseconds", !1);
          D("z", 0, 0, "zoneAbbr"), D("zz", 0, 0, "zoneName");
          var zi = m.prototype;
          (zi.add = Ui),
            (zi.calendar = st),
            (zi.clone = ot),
            (zi.diff = ct),
            (zi.endOf = At),
            (zi.format = ft),
            (zi.from = mt),
            (zi.fromNow = St),
            (zi.to = vt),
            (zi.toNow = yt),
            (zi.get = O),
            (zi.invalidAt = Nt),
            (zi.isAfter = nt),
            (zi.isBefore = at),
            (zi.isBetween = ut),
            (zi.isSame = lt),
            (zi.isValid = Ut),
            (zi.lang = Ni),
            (zi.locale = gt),
            (zi.localeData = Mt),
            (zi.max = Ti),
            (zi.min = Ri),
            (zi.parsingFlags = _t),
            (zi.set = O),
            (zi.startOf = Et),
            (zi.subtract = _i),
            (zi.toArray = Pt),
            (zi.toObject = Ct),
            (zi.toDate = It),
            (zi.toISOString = pt),
            (zi.toJSON = pt),
            (zi.toString = ht),
            (zi.unix = Tt),
            (zi.valueOf = Rt),
            (zi.year = Ei),
            (zi.isLeapYear = ce),
            (zi.weekYear = Ot),
            (zi.isoWeekYear = Lt),
            (zi.quarter = zi.quarters = Ft),
            (zi.month = X),
            (zi.daysInMonth = J),
            (zi.week = zi.weeks = me),
            (zi.isoWeek = zi.isoWeeks = Se),
            (zi.weeksInYear = $t),
            (zi.isoWeeksInYear = Dt),
            (zi.date = bi),
            (zi.day = zi.days = jt),
            (zi.weekday = kt),
            (zi.isoWeekday = Yt),
            (zi.dayOfYear = ye),
            (zi.hour = zi.hours = $i),
            (zi.minute = zi.minutes = Fi),
            (zi.second = zi.seconds = Hi),
            (zi.millisecond = zi.milliseconds = Bi),
            (zi.utcOffset = ze),
            (zi.utc = je),
            (zi.local = ke),
            (zi.parseZone = Ye),
            (zi.hasAlignedHourOffset = Ke),
            (zi.isDST = Ve),
            (zi.isDSTShifted = Qe),
            (zi.isLocal = qe),
            (zi.isUtcOffset = We),
            (zi.isUtc = Ze),
            (zi.isUTC = Ze),
            (zi.zoneAbbr = Zt),
            (zi.zoneName = Xt),
            (zi.dates = re(
              "dates accessor is deprecated. Use date instead.",
              bi
            )),
            (zi.months = re(
              "months accessor is deprecated. Use month instead",
              X
            )),
            (zi.years = re(
              "years accessor is deprecated. Use year instead",
              Ei
            )),
            (zi.zone = re(
              "moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779",
              xe
            ));
          var xi = zi,
            ji = {
              sameDay: "[Today at] LT",
              nextDay: "[Tomorrow at] LT",
              nextWeek: "dddd [at] LT",
              lastDay: "[Yesterday at] LT",
              lastWeek: "[Last] dddd [at] LT",
              sameElse: "L",
            },
            ki = {
              LTS: "h:mm:ss A",
              LT: "h:mm A",
              L: "MM/DD/YYYY",
              LL: "MMMM D, YYYY",
              LLL: "MMMM D, YYYY h:mm A",
              LLLL: "dddd, MMMM D, YYYY h:mm A",
            },
            Yi = "Invalid date",
            Ki = "%d",
            Vi = /\d{1,2}/,
            Qi = {
              future: "in %s",
              past: "%s ago",
              s: "a few seconds",
              m: "a minute",
              mm: "%d minutes",
              h: "an hour",
              hh: "%d hours",
              d: "a day",
              dd: "%d days",
              M: "a month",
              MM: "%d months",
              y: "a year",
              yy: "%d years",
            },
            qi = M.prototype;
          (qi._calendar = ji),
            (qi.calendar = tr),
            (qi._longDateFormat = ki),
            (qi.longDateFormat = rr),
            (qi._invalidDate = Yi),
            (qi.invalidDate = ir),
            (qi._ordinal = Ki),
            (qi.ordinal = sr),
            (qi._ordinalParse = Vi),
            (qi.preparse = or),
            (qi.postformat = or),
            (qi._relativeTime = Qi),
            (qi.relativeTime = nr),
            (qi.pastFuture = ar),
            (qi.set = ur),
            (qi.months = Q),
            (qi._months = fi),
            (qi.monthsShort = q),
            (qi._monthsShort = mi),
            (qi.monthsParse = W),
            (qi.week = he),
            (qi._week = Ai),
            (qi.firstDayOfYear = fe),
            (qi.firstDayOfWeek = pe),
            (qi.weekdays = Gt),
            (qi._weekdays = wi),
            (qi.weekdaysMin = zt),
            (qi._weekdaysMin = Li),
            (qi.weekdaysShort = Bt),
            (qi._weekdaysShort = Oi),
            (qi.weekdaysParse = xt),
            (qi.isPM = Qt),
            (qi._meridiemParse = Di),
            (qi.meridiem = qt),
            T("en", {
              ordinalParse: /\d{1,2}(th|st|nd|rd)/,
              ordinal: function (e) {
                var t = e % 10,
                  r =
                    1 === y((e % 100) / 10)
                      ? "th"
                      : 1 === t
                      ? "st"
                      : 2 === t
                      ? "nd"
                      : 3 === t
                      ? "rd"
                      : "th";
                return e + r;
              },
            }),
            (r.lang = re(
              "moment.lang is deprecated. Use moment.locale instead.",
              T
            )),
            (r.langData = re(
              "moment.langData is deprecated. Use moment.localeData instead.",
              P
            ));
          var Wi = Math.abs,
            Zi = Pr("ms"),
            Xi = Pr("s"),
            Ji = Pr("m"),
            es = Pr("h"),
            ts = Pr("d"),
            rs = Pr("w"),
            is = Pr("M"),
            ss = Pr("y"),
            os = Ur("milliseconds"),
            ns = Ur("seconds"),
            as = Ur("minutes"),
            us = Ur("hours"),
            ls = Ur("days"),
            cs = Ur("months"),
            ds = Ur("years"),
            hs = Math.round,
            ps = { s: 45, m: 45, h: 22, d: 26, M: 11 },
            fs = Math.abs,
            ms = De.prototype;
          (ms.abs = Sr),
            (ms.add = yr),
            (ms.subtract = gr),
            (ms.as = Tr),
            (ms.asMilliseconds = Zi),
            (ms.asSeconds = Xi),
            (ms.asMinutes = Ji),
            (ms.asHours = es),
            (ms.asDays = ts),
            (ms.asWeeks = rs),
            (ms.asMonths = is),
            (ms.asYears = ss),
            (ms.valueOf = Ir),
            (ms._bubble = Er),
            (ms.get = Cr),
            (ms.milliseconds = os),
            (ms.seconds = ns),
            (ms.minutes = as),
            (ms.hours = us),
            (ms.days = ls),
            (ms.weeks = _r),
            (ms.months = cs),
            (ms.years = ds),
            (ms.humanize = Or),
            (ms.toISOString = Lr),
            (ms.toString = Lr),
            (ms.toJSON = Lr),
            (ms.locale = gt),
            (ms.localeData = Mt),
            (ms.toIsoString = re(
              "toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",
              Lr
            )),
            (ms.lang = Ni),
            D("X", 0, 0, "unix"),
            D("x", 0, 0, "valueOf"),
            z("x", ti),
            z("X", ii),
            k("X", function (e, t, r) {
              r._d = new Date(1e3 * parseFloat(e, 10));
            }),
            k("x", function (e, t, r) {
              r._d = new Date(y(e));
            }),
            (r.version = "2.10.6"),
            i(be),
            (r.fn = xi),
            (r.min = Oe),
            (r.max = Le),
            (r.utc = l),
            (r.unix = Jt),
            (r.months = dr),
            (r.isDate = o),
            (r.locale = T),
            (r.invalid = p),
            (r.duration = Xe),
            (r.isMoment = S),
            (r.weekdays = pr),
            (r.parseZone = er),
            (r.localeData = P),
            (r.isDuration = $e),
            (r.monthsShort = hr),
            (r.weekdaysMin = mr),
            (r.defineLocale = I),
            (r.weekdaysShort = fr),
            (r.normalizeUnits = U),
            (r.relativeTimeThreshold = wr);
          var Ss = r;
          return Ss;
        });
      },
      {},
    ],
    2: [
      function (e, t, r) {
        var i = e("./PageMode"),
          s = (function () {
            function e() {}
            return (
              (e.fromGridModel = function (t) {
                var r = new e();
                if (
                  ((r.pageSize = t.pageSize),
                  (r.gridColumns = t.gridColumns),
                  (r.sortEntries = t.sorting),
                  (r.filter = {}),
                  t.filter)
                )
                  for (var i in t.filter)
                    t.filter.hasOwnProperty(i) &&
                      t.nonPersistedFilterFields.indexOf(i) < 0 &&
                      (r.filter[i] = angular.copy(t.filter[i]));
                return r;
              }),
              e
            );
          })();
        r.PersistedGridModelConfiguration = s;
        var o = (function () {
          function e() {
            (this.visible = !0),
              (this.alwaysVisible = !1),
              (this.fixedColumn = !1);
          }
          return (
            (e.prototype.reverseVisibility = function () {
              this.visible = !this.visible;
            }),
            e
          );
        })();
        r.GridColumn = o;
        var n = (function () {
          function e(t) {
            (this.entries = []),
              (this.sorting = []),
              (this.gridColumns = []),
              (this.totalCount = 0),
              (this.totalCountRevised = 0),
              (this.requestsPageMode =
                i.PageMode[i.PageMode.ENTRIES_AND_TOTAL_ESTIMATES]),
              (this.totalPageCount = 1),
              (this.currentPage = 0),
              (this.selectedPage = 1),
              (this.pageSize = e.DEFAULT_PAGE_SIZE),
              (this.filter = {}),
              (this.nonPersistedFilterFields = ["searchString"]),
              (this.isLoading = !1),
              (this.isTotalLoading = !1),
              (this.loadListeners = []),
              (this.columnsListeners = []),
              (this.pageSizeListeners = []),
              (this.loadEntitiesFunction = t);
          }
          return (
            (e.prototype.setDefaultPageSize = function () {
              return (this.pageSize = e.DEFAULT_PAGE_SIZE), this;
            }),
            (e.prototype.setMaxPageSize = function () {
              return (this.pageSize = e.MAX_PAGE_SIZE), this;
            }),
            (e.prototype.addSortEntry = function (e) {
              return this.sorting.push(e), this;
            }),
            (e.prototype.addLoadingListener = function (e) {
              this.loadListeners.push(e);
            }),
            (e.prototype.clearLoadListeners = function () {
              this.loadListeners.splice(0, this.loadListeners.length);
            }),
            (e.prototype.addColumnVisibilityListener = function (e) {
              this.columnsListeners.push(e);
            }),
            (e.prototype.addPageSizeListener = function (e) {
              this.pageSizeListeners.push(e);
            }),
            (e.prototype.loadPage = function (e) {
              this.loadPageForFilter(e, this.filter);
            }),
            (e.prototype.loadWithDelay = function (e, t) {
              var r = this;
              e.processWithDelay(
                t,
                function (e) {
                  return r.loadPage(0);
                },
                500
              );
            }),
            (e.prototype.loadCurrentPage = function () {
              this.loadPageForFilter(this.currentPage, this.filter);
            }),
            (e.prototype.loadPageForFilter = function (e, t, r) {
              var i = this;
              this.isLoading = !0;
              for (var s = 0; s < this.loadListeners.length; s++) {
                var o = this.loadListeners[s];
                o.startLoading();
              }
              this.currentPage = e;
              var n = this.requestsPageMode;
              r && (this.requestsPageMode = r),
                this.selectedPage !== e + 1 && (this.selectedPage = e + 1),
                (this.filter = t),
                this.loadEntitiesFunction(this).then(function (e) {
                  (i.totalCount = e.totalCount),
                    "TOTAL" !== e.pageMode &&
                      ((i.entries = e.entries), (i.pageMode = e.pageMode)),
                    "ENTRIES_AND_TOTAL" === e.pageMode || "TOTAL" === e.pageMode
                      ? ((i.totalCountRevised = e.totalCount),
                        (i.latestRevisedTotalFilter = angular.copy(i.filter)),
                        (i.isTotalLoading = !1))
                      : "ENTRIES_AND_TOTAL_ESTIMATES" !== e.pageMode ||
                        angular.equals(t, i.latestRevisedTotalFilter) ||
                        ((i.totalCountRevised = null),
                        (i.latestRevisedTotalFilter = null)),
                    i.calculateTotalPages();
                  for (var r = 0, s = i.loadListeners; r < s.length; r++) {
                    var o = s[r];
                    o.endLoading();
                  }
                  i.isLoading = !1;
                }),
                r && (this.requestsPageMode = n);
            }),
            (e.prototype.loadRecordsCount = function () {
              var e = this;
              (this.latestRevisedTotalFilter = angular.copy(this.filter)),
                (this.isTotalLoading = !0);
              var t = this.requestsPageMode;
              (this.requestsPageMode = "TOTAL"),
                this.loadEntitiesFunction(this).then(function (t) {
                  (e.totalCount = t.totalCount),
                    "TOTAL" === t.pageMode &&
                      (e.totalCountRevised = t.totalCount),
                    (e.isTotalLoading = !1),
                    e.calculateTotalPages();
                }),
                (this.requestsPageMode = t);
            }),
            (e.prototype.getPageSize = function () {
              return this.pageSize && !isNaN(this.pageSize)
                ? this.pageSize
                : e.DEFAULT_PAGE_SIZE;
            }),
            (e.prototype.recalculateVisibleColumnsCount = function () {
              for (var e = 0, t = 0; t < this.gridColumns.length; t++) {
                var r = this.gridColumns[t];
                (r.alwaysVisible || r.visible) && e++;
              }
              this.visibleColumnsCount = e;
            }),
            (e.prototype.changeColumnVisibility = function (e) {
              for (
                var t = null, r = 0;
                r < this.gridColumns.length &&
                ((t = this.gridColumns[r]), t.index != e);
                r++
              )
                t = null;
              if (null != t) {
                t.reverseVisibility(), this.recalculateVisibleColumnsCount();
                for (var r = 0; r < this.columnsListeners.length; r++)
                  this.columnsListeners[r].onColumnVisibilityChange(t);
              }
            }),
            (e.prototype.onChangePageSize = function () {
              for (var e = 0; e < this.pageSizeListeners.length; e++)
                this.pageSizeListeners[e].onChangePageSize();
            }),
            (e.prototype.calculateTotalPages = function () {
              var e = this.totalCountRevised
                  ? this.totalCountRevised
                  : this.totalCount,
                t = this.pageSize < 1 ? 1 : Math.ceil(e / this.pageSize);
              this.totalPageCount = Math.max(t || 0, 1);
            }),
            (e.DEFAULT_PAGE_SIZE = 10),
            (e.MAX_USER_PAGE_SIZE = 5e3),
            (e.MAX_PAGE_SIZE = 2147483647),
            e
          );
        })();
        r.GridModel = n;
      },
      { "./PageMode": 5 },
    ],
    3: [
      function (e, t, r) {
        var i = (function () {
          function e(e, t) {
            (this.params = {}),
              (this.enableCache = !1),
              (this.$http = e),
              (this.apiUrl = t);
          }
          return (
            (e.prototype.getItems = function (e, t, r, i, s) {
              if ("undefined" != typeof i)
                for (var o in i)
                  i.hasOwnProperty(o) && (this.params[o + "Filter"] = i[o]);
              return (
                "undefined" != typeof s && (this.params.sorting = s),
                this.enableCache || this.addNoCache(),
                this.page(e, t, r),
                this.$http
                  .get(this.apiUrl, { params: this.params })
                  .then(function (e) {
                    return e.data;
                  })
              );
            }),
            (e.prototype.page = function (e, t, r) {
              return (
                (this.params.page = e),
                (this.params.pageSize = t),
                (this.params.pageMode = r),
                this
              );
            }),
            (e.prototype.sorting = function (e, t) {
              return (this.params.sortBy = e), (this.params.sortDir = t), this;
            }),
            (e.prototype.cache = function () {
              return (this.enableCache = !0), this;
            }),
            (e.prototype.addNoCache = function () {
              return (this.params["no-cache"] = new Date().getTime()), this;
            }),
            (e.grid = function (t, r) {
              return new e(t, r);
            }),
            e
          );
        })();
        r.HttpGridService = i;
        var s = (function () {
          function e() {}
          return (
            (e.createLoader = function (e, t) {
              var r = i.grid(e, t);
              return function (e) {
                return r.getItems(
                  e.currentPage,
                  e.getPageSize(),
                  e.requestsPageMode,
                  e.filter,
                  e.sorting
                );
              };
            }),
            (e.createLoaderWithCallback = function (e, t, r) {
              var s = i.grid(e, t);
              return function (e) {
                return s
                  .getItems(e.currentPage, e.pageSize, e.filter, e.sorting)
                  .then(function (e) {
                    return r(e);
                  });
              };
            }),
            e
          );
        })();
        r.HttpGridHelper = s;
      },
      {},
    ],
    4: [
      function (e, t, r) {
        var i = (function () {
          function e() {
            (this.success = this.getNotifierDisplayMethod(toastr.success)),
              (this.error = this.getNotifierDisplayMethod(toastr.error)),
              (this.warning = this.getNotifierDisplayMethod(toastr.warning));
          }
          return (
            (e.prototype.getNotifierDisplayMethod = function (e) {
              return function (t, r, i) {
                return void 0 != t && void 0 == r && void 0 == i
                  ? e(s.escapeHTML(t))
                  : void 0 != t && void 0 != r && void 0 == i
                  ? e(s.escapeHTML(t), s.escapeHTML(r))
                  : void 0 != t && void 0 != r && void 0 != i
                  ? e(s.escapeHTML(t), s.escapeHTML(r), i)
                  : void 0;
              };
            }),
            e
          );
        })();
        (r.Notifier = i), (r.notifier = new i());
      },
      {},
    ],
    5: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.ENTRIES_AND_TOTAL = 0)] = "ENTRIES_AND_TOTAL"),
            (e[(e.ENTRIES_AND_TOTAL_ESTIMATES = 1)] =
              "ENTRIES_AND_TOTAL_ESTIMATES"),
            (e[(e.ENTRIES = 2)] = "ENTRIES"),
            (e[(e.TOTAL = 3)] = "TOTAL");
        })(r.PageMode || (r.PageMode = {}));
        r.PageMode;
      },
      {},
    ],
    6: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.MATERIAL = 0)] = "MATERIAL"),
            (e[(e.COURSE = 1)] = "COURSE"),
            (e[(e.PLAYLIST = 2)] = "PLAYLIST"),
            (e[(e.NEWS = 3)] = "NEWS");
        })(r.ReferencedObjectType || (r.ReferencedObjectType = {}));
        r.ReferencedObjectType;
      },
      {},
    ],
    7: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.ASC = 0)] = "ASC"), (e[(e.DESC = 1)] = "DESC");
        })(r.SortOrder || (r.SortOrder = {}));
        var i = r.SortOrder,
          s = (function () {
            function e(e, t) {
              (this.fieldName = e), (this.sortOrder = t);
            }
            return (
              (e.prototype.reverseOrder = function () {
                this.sortOrder = this.sortOrder == i.ASC ? i.DESC : i.ASC;
              }),
              (e.asc = function (t) {
                return new e(t, i.ASC);
              }),
              (e.desc = function (t) {
                return new e(t, i.DESC);
              }),
              e
            );
          })();
        r.SortEntry = s;
      },
      {},
    ],
    8: [
      function (e, t, r) {
        function i(e, t, r, i) {
          t.debugEnabled(!0),
            i
              .setServiceRoot(a.AppProperties.serviceRoot)
              .setBuildVersion(a.AppProperties.buildVersion);
          var s = i.$get();
          e
            .when(ne.CommonRouter.notFoundRoute, {
              templateUrl: s.template("common/not-found.html"),
            })
            .when(V.MainRouter.mainRoute, {
              redirectTo: function (e, t, r) {
                var i = ce.LocationUtils.isFullScreenBySearch(r);
                return (
                  de.StringBuilder.interpolate(J.CoursesRouter.detailsRoute)
                    ["with"](":" + J.CoursesRouter.COURSE_ID_PARAM, 61001)
                    .build() + (i ? "" : "?fullScreen=false")
                );
              },
            })
            .when(W.AuthRouter.logonRoute, {
              templateUrl: s.template("auth/logon.html"),
            })
            .when(W.AuthRouter.logoutRoute, {
              templateUrl: s.template("auth/logout.html"),
            })
            .when(W.AuthRouter.accessDeniedRoute, {
              templateUrl: s.template("auth/access-denied.html"),
            })
            .when(W.AuthRouter.restorePasswordRoute, {
              templateUrl: s.template("auth/restore-password.html"),
            })
            .when(W.AuthRouter.checkValidCodeRoute, {
              templateUrl: s.template("auth/check-valid-code.html"),
            })
            .when(W.AuthRouter.createNewPasswordRoute, {
              templateUrl: s.template("auth/create-new-password.html"),
            })
            .when(W.AuthRouter.createNewPasswordByCodeRoute, {
              templateUrl: s.template("auth/create-new-password.html"),
            })
            .when(ie.MaterialsRouter.searchRoute, {
              templateUrl: s.template("materials/search.html"),
            })
            .when(ie.MaterialsRouter.myDownloadsRoute, {
              templateUrl: s.template("materials/myDownloads.html"),
            })
            .when(ie.MaterialsRouter.createRoute, {
              templateUrl: s.template("materials/edit.html"),
            })
            .when(ie.MaterialsRouter.playlistsRoute, {
              templateUrl: s.template("materials/playlists.html"),
            })
            .when(ie.MaterialsRouter.playlistCreateRoute, {
              templateUrl: s.template("materials/playlistEdit.html"),
            })
            .when(ie.MaterialsRouter.playlistDetailsRoute, {
              templateUrl: s.template("materials/playlistDetails.html"),
            })
            .when(ie.MaterialsRouter.playlistEditRoute, {
              templateUrl: s.template("materials/playlistEdit.html"),
            })
            .when(ie.MaterialsRouter.materialRoute, {
              templateUrl: s.template("materials/material.html"),
            })
            .when(ie.MaterialsRouter.updateRoute, {
              templateUrl: s.template("materials/edit.html"),
            })
            .when(ee.BroadcastsRouter.studentRoute, {
              templateUrl: s.template("broadcasts/student.html"),
            })
            .when(ee.BroadcastsRouter.teacherRoute, {
              templateUrl: s.template("broadcasts/teacher.html"),
            })
            .when(te.StatisticsRouter.materialViewReportRoute, {
              templateUrl: s.template("statistics/materialViewReport.html"),
            })
            .when(te.StatisticsRouter.materialDownloadReportRoute, {
              templateUrl: s.template("statistics/materialDownloadReport.html"),
            })
            .when(te.StatisticsRouter.materialUploadReportRoute, {
              templateUrl: s.template("statistics/materialUploadReport.html"),
            })
            .when(oe.PersonalRouter.profileRoute, {
              templateUrl: s.template("personal/profile.html"),
            })
            .when(oe.PersonalRouter.favoritesRoute, {
              templateUrl: s.template("personal/favorites.html"),
            })
            .when(oe.PersonalRouter.uploadsRoute, {
              templateUrl: s.template("personal/uploads.html"),
            })
            .when(oe.PersonalRouter.coursesRoute, {
              templateUrl: s.template("personal/courses.html"),
            })
            .when(oe.PersonalRouter.quizzesRoute, {
              templateUrl: s.template("personal/quizzes.html"),
            })
            .when(oe.PersonalRouter.playlistsRoute, {
              templateUrl: s.template("personal/playlists.html"),
            })
            .when(oe.PersonalRouter.subscriptionsRoute, {
              templateUrl: s.template("personal/subscriptions.html"),
            })
            .when(oe.PersonalRouter.newCommentsRoute, {
              templateUrl: s.template("personal/newComments.html"),
            })
            .when(oe.PersonalRouter.supportRoute, {
              templateUrl: s.template("personal/support.html"),
            })
            .when(oe.PersonalRouter.couponsRoute, {
              templateUrl: s.template("personal/coupons.html"),
            })
            .when(oe.PersonalRouter.purchasesHistoryRoute, {
              templateUrl: s.template("personal/purchasesHistory.html"),
            })
            .when(oe.PersonalRouter.balanceRoute, {
              templateUrl: s.template("personal/balance.html"),
            })
            .when(oe.PersonalRouter.settingsRoute, {
              templateUrl: s.template("personal/settings.html"),
            })
            .when(oe.PersonalRouter.settingsAopaRoute, {
              templateUrl: s.template("personal/settings_aopa.html"),
            })
            .when(se.FinancesRouter.balanceRoute, {
              templateUrl: s.template("finances/balance.html"),
            })
            .when(se.FinancesRouter.purchaseHistoryRoute, {
              templateUrl: s.template("finances/purchaseHistory.html"),
            })
            .when(se.FinancesRouter.accountManagementRoute, {
              templateUrl: s.template("finances/accountManagement.html"),
            })
            .when(se.FinancesRouter.purchaseRoute, {
              templateUrl: s.template("finances/purchase.html"),
            })
            .when(Q.NewsRouter.newsSearchRoute, {
              templateUrl: s.template("news/allNews.html"),
            })
            .when(Q.NewsRouter.oneNewsCreateRoute, {
              templateUrl: s.template("news/edit.html"),
            })
            .when(Q.NewsRouter.oneNewsRoute, {
              templateUrl: s.template("news/oneNews.html"),
            })
            .when(Q.NewsRouter.oneNewsEditRoute, {
              templateUrl: s.template("news/edit.html"),
            })
            .when(q.InfoRouter.aboutProjectRoute, {
              templateUrl: s.template("info/aboutProject.html"),
            })
            .when(q.InfoRouter.aboutCompanyRoute, {
              templateUrl: s.template("info/aboutCompany.html"),
            })
            .when(q.InfoRouter.contactsRoute, {
              templateUrl: s.template("info/contacts.html"),
            })
            .when(q.InfoRouter.faqRoute, {
              templateUrl: s.template("info/faq.html"),
            })
            .when(q.InfoRouter.welcomeRoute, {
              templateUrl: s.template("info/welcome.html"),
            })
            .when(q.InfoRouter.renewalRoute, {
              templateUrl: s.template("info/renewal.html"),
            })
            .when(q.InfoRouter.eligibilityRoute, {
              templateUrl: s.template("info/eligibility.html"),
            })
            .when(q.InfoRouter.guideRoute, {
              templateUrl: s.template("info/guide.html"),
            })
            .when(Z.ReferenceRouter.indexRoute, {
              templateUrl: s.template("reference/index.html"),
            })
            .when(Z.ReferenceRouter.editRoute, {
              templateUrl: s.template("reference/edit.html"),
            })
            .when(re.UsersRouter.indexRoute, {
              templateUrl: s.template("users/index.html"),
            })
            .when(re.UsersRouter.addRoute, {
              templateUrl: s.template("users/edit.html"),
            })
            .when(re.UsersRouter.signupRoute, {
              templateUrl: s.template("users/signup.html"),
            })
            .when(re.UsersRouter.editRoute, {
              templateUrl: s.template("users/edit.html"),
            })
            .when(re.UsersRouter.currentProfileRoute, {
              templateUrl: s.template("users/profile.html"),
            })
            .when(re.UsersRouter.groupIndexRoute, {
              templateUrl: s.template("users/groups.html"),
            })
            .when(re.UsersRouter.groupAddRoute, {
              templateUrl: s.template("users/groupEdit.html"),
            })
            .when(re.UsersRouter.groupEditRoute, {
              templateUrl: s.template("users/groupEdit.html"),
            })
            .when(X.SystemSettingsRouter.commonSettingsRoute, {
              templateUrl: s.template("settings/commonSettings.html"),
            })
            .when(X.SystemSettingsRouter.storagePlacesIndexRoute, {
              templateUrl: s.template("settings/storagePlacesIndex.html"),
            })
            .when(X.SystemSettingsRouter.storagePlaceCreateRoute, {
              templateUrl: s.template("settings/storagePlaceEdit.html"),
            })
            .when(X.SystemSettingsRouter.storagePlaceEditRoute, {
              templateUrl: s.template("settings/storagePlaceEdit.html"),
            })
            .when(ue.LogsRouter.systemLogsRoute, {
              templateUrl: s.template("logs/system.html"),
            })
            .when(ue.LogsRouter.securityLogsRoute, {
              templateUrl: s.template("logs/security.html"),
            })
            .when(J.CoursesRouter.createRoute, {
              templateUrl: s.template("courses/courseEdit.html"),
            })
            .when(J.CoursesRouter.progressRoute, {
              templateUrl: s.template("courses/progress.html"),
            })
            .when(J.CoursesRouter.infoRoute, {
              templateUrl: s.template("courses/info.html"),
            })
            .when(J.CoursesRouter.detailsRoute, {
              templateUrl: s.template("courses/details.html"),
              reloadOnSearch: !1,
            })
            .when(J.CoursesRouter.quizDetailsRoute, {
              templateUrl: s.template("courses/quizDetails.html"),
            })
            .when(J.CoursesRouter.updateRoute, {
              templateUrl: s.template("courses/courseEdit.html"),
            })
            .when(J.CoursesRouter.indexRoute, {
              templateUrl: s.template("courses/courses.html"),
            })
            .when(ae.QuizzesRouter.createRoute, {
              templateUrl: s.template("quizzes/edit.html"),
            })
            .when(ae.QuizzesRouter.detailsRoute, {
              templateUrl: s.template("quizzes/details.html"),
            })
            .when(ae.QuizzesRouter.updateRoute, {
              templateUrl: s.template("quizzes/edit.html"),
            })
            .when(ae.QuizzesRouter.passingRoute, {
              templateUrl: s.template("quizzes/quizPassing.html"),
            })
            .when(ae.QuizzesRouter.indexRoute, {
              templateUrl: s.template("quizzes/quizzes.html"),
            })
            .otherwise({ redirectTo: V.MainRouter.mainRoute }),
            r.interceptors.push(le.HttpInterceptor.NAME);
        }
        function s(e) {
          e.decorator("taOptions", [
            "taRegisterTool",
            "$rootScope",
            "$delegate",
            function (e, t, r) {
              var i = function (e, r, i, s) {
                var o = {
                  eventSourceButton: $(e.$element),
                  callbackFunction: function (t) {
                    $(e.$editor().displayElements.text[0]).trigger("focus"),
                      s && s(),
                      t &&
                        (e.$editor().wrapSelection("insertHTML", "" + t, !0),
                        r.resolve());
                  },
                };
                return t.$broadcast(i, o), !1;
              };
              return (
                e(p.RichTextEditorController.TA_EMBEDDED_MATERIAL_BUTTON, {
                  iconclass: "fa fa-file-video-o",
                  tooltiptext: "Insert material",
                  action: function (e, t) {
                    return i(this, e, u.Event.TA_SELECT_EMBEDDED_MATERIAL, t);
                  },
                }),
                e(p.RichTextEditorController.TA_EMBEDDED_BUNDLE_BUTTON, {
                  iconclass: "fa fa-file-zip-o",
                  tooltiptext: "Insert attached file",
                  action: function (e, t) {
                    return i(this, e, u.Event.TA_SELECT_EMBEDDED_BUNDLE, t);
                  },
                }),
                e(p.RichTextEditorController.TA_SANDBOX_BUTTON, {
                  iconclass: "fa fa-file-code-o",
                  tooltiptext: "Insert sandbox window",
                  action: function (e, t) {
                    return i(this, e, u.Event.TA_SELECT_SANDBOX, t);
                  },
                }),
                (r.toolbar = [
                  ["h1", "h2", "h3", "h4", "h5", "h6", "p", "pre", "quote"],
                  [
                    "bold",
                    "italics",
                    "underline",
                    "strikeThrough",
                    "ul",
                    "ol",
                    "redo",
                    "undo",
                    "clear",
                  ],
                  [
                    "justifyLeft",
                    "justifyCenter",
                    "justifyRight",
                    "justifyFull",
                    "indent",
                    "outdent",
                  ],
                  [
                    "html",
                    "insertImage",
                    "insertLink",
                    "insertVideo",
                    p.RichTextEditorController.TA_EMBEDDED_MATERIAL_BUTTON,
                    p.RichTextEditorController.TA_EMBEDDED_BUNDLE_BUTTON,
                    p.RichTextEditorController.TA_SANDBOX_BUTTON,
                  ],
                ]),
                r
              );
            },
          ]),
            e.decorator("taCustomRenderers", [
              "$delegate",
              "$compile",
              "$rootScope",
              "$timeout",
              function (e, t, r, i) {
                return (
                  e.push({
                    selector:
                      l.VhsEmbeddedMaterialController.TA_ELEMENT_SELECTOR,
                    customAttribute: "",
                    renderLogic: function (e) {
                      l.VhsEmbeddedMaterialController.TA_RENDER_FUNCTION(
                        e,
                        t,
                        r,
                        i
                      );
                    },
                  }),
                  e.push({
                    selector: c.VhsEmbeddedBundleController.TA_ELEMENT_SELECTOR,
                    customAttribute: "",
                    renderLogic: function (e) {
                      c.VhsEmbeddedBundleController.TA_RENDER_FUNCTION(
                        e,
                        t,
                        r,
                        i
                      );
                    },
                  }),
                  e.push({
                    selector: d.VhsSandboxController.TA_ELEMENT_SELECTOR,
                    customAttribute: "",
                    renderLogic: function (e) {
                      d.VhsSandboxController.TA_RENDER_FUNCTION(e, t, r, i);
                    },
                  }),
                  e.push({
                    selector: h.VhsDownloadBundleController.TA_ELEMENT_SELECTOR,
                    customAttribute: "",
                    renderLogic: function (e) {
                      h.VhsDownloadBundleController.TA_RENDER_FUNCTION(
                        e,
                        t,
                        r,
                        i
                      );
                    },
                  }),
                  e
                );
              },
            ]);
        }
        function o(e, t, r, i, s, o, u) {
          (t.appVersionNumber = n(
            a.AppProperties.appVersion,
            a.AppProperties.svnRevision,
            a.AppProperties.buildDate
          )),
            (t.url = u);
          var l = i.completePersonifySsoExchange();
          if (i.isAuthenticated()) {
            var c = i.getToken().locale
              ? i.getToken().locale
              : a.AppProperties.currentLocale;
            S.LogOnController.reloadApplicationForLocaleIfNeeded(c) ||
              r.restartAutoRefresh();
          } else
            i.restoreAvailable()
              ? r.restartAutoRefresh()
              : l || i.tryPersonifySsoIfAllowed();
          var d = "vhs.application.version.number";
          o.contains(d) &&
            o.get(d) != a.AppProperties.buildVersion &&
            H.notifier.warning(
              "Application version has been updated since your last visit"
            ),
            o.put(d, a.AppProperties.buildVersion);
        }
        function n(e, t, r) {
          var i = moment(r, "YYYYMMDDHHmm");
          return e + "." + t + "; " + i.format("YYYY-MM-DD HH:mm");
        }
        var a = e("./utils/AppProperties"),
          u = e("./components/models/Event"),
          l = e("./components/VhsEmbeddedMaterialDirective"),
          c = e("./components/richtext/VhsEmbeddedBundleDirective"),
          d = e("./components/richtext/VhsSandboxDirective"),
          h = e("./components/richtext/VhsDownloadBundleDirective"),
          p = e("./components/richtext/RichTextEditorDirective"),
          f = e("./auth/AuthModule"),
          m = e("./auth/AuthService"),
          S = e("./auth/LogOnController"),
          v = e("./authcore/AuthCoreModule"),
          y = e("./authcore/AuthManager"),
          g = e("./authcore/AuthRedirect"),
          M = e("./broadcasts/BroadcastsModule"),
          E = e("./components/ComponentsModule"),
          A = e("./http/HttpModule"),
          R = e("./infrastructure/InfrastructureModule"),
          T = e("./infrastructure/Storage"),
          I = e("./main/MainModule"),
          P = e("./news/NewsModule"),
          C = e("./info/InfoModule"),
          U = e("./personal/PersonalModule"),
          _ = e("./statistics/StatisticsModule"),
          N = e("./materials/MaterialsModule"),
          b = e("./reference/ReferenceModule"),
          w = e("./security/SecurityModule"),
          O = e("./settings/SettingsModule"),
          L = e("./urls/UrlsModule"),
          D = e("./urls/UrlServiceProvider"),
          F = e("./users/UsersModule"),
          H = e("./INotifier"),
          G = e("./bundles/BundlesModule"),
          B = e("./courses/CoursesModule"),
          z = e("./finances/FinancesModule"),
          x = e("./common/CommonModule"),
          j = e("./storage/StorageModule"),
          k = e("./quizzes/QuizzesModule"),
          Y = e("./logs/LogsModule"),
          K = e("./utils/UtilsModule"),
          V = e("./urls/MainRouter"),
          Q = e("./urls/NewsRouter"),
          q = e("./urls/InfoRouter"),
          W = e("./urls/AuthRouter"),
          Z = e("./urls/ReferenceRouter"),
          X = e("./urls/SystemSettingsRouter"),
          J = e("./urls/CoursesRouter"),
          ee = e("./urls/BroadcastsRouter"),
          te = e("./urls/StatisticsRouter"),
          re = e("./urls/UsersRouter"),
          ie = e("./urls/MaterialsRouter"),
          se = e("./urls/FinancesRouter"),
          oe = e("./urls/PersonalRouter"),
          ne = e("./urls/CommonRouter"),
          ae = e("./urls/QuizzesRouter"),
          ue = e("./urls/LogsRouter"),
          le = e("./http/HttpInterceptor"),
          ce = e("./utils/LocationUtils"),
          de = e("./utils/StringBuilder"),
          he = e("./utils/UrlService");
        angular
          .module("vhs", [
            "ngRoute",
            "ngAnimate",
            "ngSanitize",
            "ngFileUpload",
            "ngNumeraljs",
            "ui.chart",
            "ui.select",
            "duScroll",
            "textAngular",
            "timer",
            "dndLists",
            "ui.mask",
            x.CommonModule.name,
            f.AuthModule.name,
            v.AuthCoreModule.name,
            L.UrlsModule.name,
            w.SecurityModule.name,
            R.InfrastructureModule.name,
            A.HttpModule.name,
            E.ComponentsModule.name,
            _.StatisticsModule.name,
            b.ReferenceModule.name,
            F.UsersModule.name,
            O.SettingsModule.name,
            Y.LogsModule.name,
            I.MainModule.name,
            N.MaterialsModule.name,
            P.NewsModule.name,
            C.InfoModule.name,
            M.BroadcastsModule.name,
            U.PersonalModule.name,
            G.BundlesModule.name,
            B.CoursesModule.name,
            z.FinancesModule.name,
            j.StorageModule.name,
            k.QuizzesModule.name,
            K.UtilsModule.name,
          ])
          .config([
            "$routeProvider",
            "$logProvider",
            "$httpProvider",
            D.UrlServiceProvider.NAME,
            i,
          ])
          .config(["$provide", s])
          .run([
            "$log",
            "$rootScope",
            m.AuthService.NAME,
            y.AuthManager.NAME,
            g.AuthRedirect.NAME,
            T.Storages.LOCAL_NAME,
            he.UrlService.NAME,
            o,
          ]),
          (window.onbeforeunload = function (e) {
            if (0 != $("#uploads-status").length) {
              var t =
                "Uploading of files will be canceled if you leave this page";
              return (
                "undefined" == typeof e && (e = window.event),
                e && (e.returnValue = t),
                t
              );
            }
          });
      },
      {
        "./INotifier": 4,
        "./auth/AuthModule": 9,
        "./auth/AuthService": 10,
        "./auth/LogOnController": 13,
        "./authcore/AuthCoreModule": 17,
        "./authcore/AuthManager": 18,
        "./authcore/AuthRedirect": 19,
        "./broadcasts/BroadcastsModule": 23,
        "./bundles/BundlesModule": 27,
        "./common/CommonModule": 29,
        "./components/ComponentsModule": 32,
        "./components/VhsEmbeddedMaterialDirective": 58,
        "./components/models/Event": 64,
        "./components/richtext/RichTextEditorDirective": 68,
        "./components/richtext/VhsDownloadBundleDirective": 69,
        "./components/richtext/VhsEmbeddedBundleDirective": 70,
        "./components/richtext/VhsSandboxDirective": 71,
        "./courses/CoursesModule": 83,
        "./finances/FinancesModule": 92,
        "./http/HttpInterceptor": 96,
        "./http/HttpModule": 97,
        "./info/InfoModule": 102,
        "./infrastructure/InfrastructureModule": 104,
        "./infrastructure/Storage": 105,
        "./logs/LogsModule": 108,
        "./main/MainModule": 112,
        "./materials/MaterialsModule": 117,
        "./news/NewsModule": 126,
        "./personal/PersonalModule": 135,
        "./quizzes/QuizzesModule": 151,
        "./reference/ReferenceModule": 154,
        "./security/SecurityModule": 165,
        "./settings/SettingsModule": 170,
        "./statistics/StatisticsModule": 183,
        "./storage/StorageModule": 190,
        "./urls/AuthRouter": 194,
        "./urls/BroadcastsRouter": 196,
        "./urls/CommonRouter": 197,
        "./urls/CoursesRouter": 199,
        "./urls/FinancesRouter": 200,
        "./urls/InfoRouter": 201,
        "./urls/LogsRouter": 202,
        "./urls/MainRouter": 203,
        "./urls/MaterialsRouter": 204,
        "./urls/NewsRouter": 205,
        "./urls/PersonalRouter": 206,
        "./urls/QuizzesRouter": 207,
        "./urls/ReferenceRouter": 208,
        "./urls/StatisticsRouter": 209,
        "./urls/SystemSettingsRouter": 210,
        "./urls/UrlServiceProvider": 211,
        "./urls/UrlsModule": 212,
        "./urls/UsersRouter": 213,
        "./users/UsersModule": 221,
        "./utils/AppProperties": "AppProperties",
        "./utils/LocationUtils": 226,
        "./utils/StringBuilder": 233,
        "./utils/UrlService": 236,
        "./utils/UtilsModule": 237,
      },
    ],
    9: [
      function (e, t, r) {
        var i = e("./AuthService"),
          s = e("./LogOnController"),
          o = e("./LogOutController"),
          n = e("./RestorePasswordController"),
          a = e("./CreateNewPasswordController"),
          u = e("./CheckValidCodeController"),
          l = e("./../authcore/AuthCoreModule"),
          c = e("./../urls/UrlsModule"),
          d = e("./../infrastructure/InfrastructureModule");
        r.AuthModule = angular
          .module("auth", [
            l.AuthCoreModule.name,
            c.UrlsModule.name,
            d.InfrastructureModule.name,
          ])
          .service(i.AuthService.NAME, i.AuthService)
          .controller(o.LogOutController.NAME, o.LogOutController)
          .controller(s.LogOnController.NAME, s.LogOnController)
          .controller(
            n.RestorePasswordController.NAME,
            n.RestorePasswordController
          )
          .controller(
            a.CreateNewPasswordController.NAME,
            a.CreateNewPasswordController
          )
          .controller(
            u.CheckValidCodeController.NAME,
            u.CheckValidCodeController
          );
      },
      {
        "./../authcore/AuthCoreModule": 17,
        "./../infrastructure/InfrastructureModule": 104,
        "./../urls/UrlsModule": 212,
        "./AuthService": 10,
        "./CheckValidCodeController": 11,
        "./CreateNewPasswordController": 12,
        "./LogOnController": 13,
        "./LogOutController": 14,
        "./RestorePasswordController": 16,
      },
    ],
    10: [
      function (e, t, r) {
        var i = e("./../authcore/AuthManager"),
          s = e("./../utils/UrlService"),
          o = (function () {
            function e(e, t, r, i, s) {
              (this.$timeout = e),
                (this.$http = t),
                (this.$q = r),
                (this.authManager = i),
                (this.url = s),
                (this.restoreSessionPromisesMap = new Map()),
                (this.providers = [
                  { key: "LOCAL", name: "Internal accounts", type: "INTERNAL" },
                ]);
            }
            return (
              (e.prototype.getProviders = function () {
                var e = this;
                if (this.providers) {
                  var t = this.$q.defer();
                  return t.resolve(this.providers), t.promise;
                }
                return this.$http
                  .get(this.url.service("/api/settings/common/logonproviders"))
                  .then(function (t) {
                    var r = t.data;
                    return (e.providers = r), r;
                  });
              }),
              (e.prototype.getProvidersForLogon = function () {
                return this.$q.when([
                  { key: "LOCAL", name: "Internal accounts", type: "INTERNAL" },
                ]);
              }),
              (e.prototype.getCurrentUser = function () {
                var e = this;
                if (this.authManager.getCurrentUser()) {
                  var t = this.$q.defer();
                  return (
                    t.resolve(this.authManager.getCurrentUser()), t.promise
                  );
                }
                return this.$http
                  .get(this.url.service("/api/security/user"))
                  .then(function (t) {
                    return e.authManager.logOn(t.data), t.data;
                  });
              }),
              (e.prototype.logOn = function (e, t) {
                return this.authenticate({
                  grant_type: "password",
                  username: e,
                  password: t,
                });
              }),
              (e.prototype.restoreSession = function (e) {
                var t = this;
                return this.restoreSessionPromisesMap.has(e)
                  ? this.restoreSessionPromisesMap.get(e)
                  : (this.restoreSessionPromisesMap.set(
                      e,
                      this.authenticate({
                        grant_type: "refresh_token",
                        refresh_token: e,
                      })["finally"](function () {
                        t.restoreSessionPromisesMap["delete"](e);
                      })
                    ),
                    this.restoreSessionPromisesMap.get(e));
              }),
              (e.prototype.authenticate = function (e) {
                var t = this;
                return this.$http({
                  method: "post",
                  url: this.url.service("/api/token"),
                  headers: {
                    "Content-Type": "application/x-www-form-urlencoded",
                  },
                  data: e,
                  transformRequest: function (e) {
                    return $.param(e);
                  },
                }).then(function (e) {
                  return (
                    t.authManager.logOff(),
                    t.authManager.saveToken({
                      accessToken: e.data.access_token,
                      refreshToken: e.data.refresh_token,
                      tokenType: e.data.token_type,
                      expiresIn: e.data.expires_in,
                      issuedAt: e.data.issued_at,
                      locale: e.data.locale,
                    }),
                    t.startAutoRefresh(),
                    t.getCurrentUser()
                  );
                });
              }),
              (e.prototype.logOff = function () {
                var e = this,
                  t = this.authManager.getToken()
                    ? this.authManager.getToken().refreshToken
                    : null;
                return (
                  this.authManager.disableSpnego(),
                  this.$http
                    .post(this.url.service("/api/security/logOff"), {
                      refreshToken: t,
                    })
                    ["finally"](function () {
                      e.authManager.logOff();
                    })
                );
              }),
              (e.prototype.restartAutoRefresh = function () {
                var e = this,
                  t = this.authManager.getToken(),
                  r = moment.utc(t.issuedAt).add(t.expiresIn, "s"),
                  i = moment.utc(),
                  s = r.diff(i, "s") - 120;
                0 > s && (s = 2),
                  this.$timeout(function () {
                    var r = e.authManager.getToken();
                    r &&
                      r.refreshToken === t.refreshToken &&
                      e.restoreSession(t.refreshToken)["catch"](function (t) {
                        "invalid_request" == t.data.error &&
                          e.authManager.eraseRefreshToken();
                      });
                  }, 1e3 * s);
              }),
              (e.prototype.restorePassword = function (e) {
                return this.$http
                  .post(
                    this.url.base("/api/security/restore/password").service(),
                    { logonName: e }
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.createNewPassword = function (e, t, r) {
                return this.$http.post(
                  this.url.service("/api/security/create/new/password"),
                  { token: e, code: t, password: r }
                );
              }),
              (e.prototype.startAutoRefresh = function () {
                var e = this,
                  t = this.authManager.getToken();
                if (!(t.expiresIn < 240)) {
                  var r = t.expiresIn - 120;
                  this.$timeout(function () {
                    return e.restoreSession(t.refreshToken);
                  }, 1e3 * r);
                }
              }),
              (e.prototype.checkValidCodeFromEmail = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/security/check/code/:code")
                      .param(":code", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.NAME = "auth.AuthService"),
              (e.$inject = [
                "$timeout",
                "$http",
                "$q",
                i.AuthManager.NAME,
                s.UrlService.NAME,
              ]),
              e
            );
          })();
        r.AuthService = o;
      },
      { "./../authcore/AuthManager": 18, "./../utils/UrlService": 236 },
    ],
    11: [
      function (e, t, r) {
        var i = e("./AuthService"),
          s = e("../urls/AuthRouter"),
          o = e("../utils/MenuHelper"),
          n = e("../INotifier"),
          a = e("../utils/UrlService"),
          u = (function () {
            function e(e, t, r, i, s, n) {
              (this.$routeParams = e),
                (this.$location = t),
                (this.$scope = r),
                (this.authService = i),
                (this.authRouter = s),
                (this.url = n),
                (this.code = null),
                (this.disableButton = !1),
                (this.shortEmail = null),
                o.MenuHelper.setCurrentMenuItem(""),
                (this.logonName = this.$location.$logonName),
                this.logonName
                  ? this.getShortEmail()
                  : this.$location.url(this.authRouter.restorePassword());
            }
            return (
              (e.prototype.checkValidCodeFromEmail = function () {
                var e = this;
                this.authService
                  .checkValidCodeFromEmail(this.code)
                  .then(function () {
                    e.$location.url(
                      e.authRouter.createNewPasswordByCode(e.code)
                    );
                  })
                  ["catch"](function (t) {
                    switch (t.data.error) {
                      case "error.password.restore.impossible":
                        return (
                          n.notifier.error(
                            "Incorrect code or code expired. Try to restore the password again"
                          ),
                          void (e.code = null)
                        );
                    }
                  });
              }),
              (e.prototype.restorePassword = function () {
                this.$location.url(this.authRouter.restorePassword());
              }),
              (e.prototype.cancel = function () {
                this.$location.url(this.authRouter.logonUrl());
              }),
              (e.prototype.getShortEmail = function () {
                if (this.logonName.indexOf("@") > 0) {
                  var e = this.logonName.split("@");
                  e[0].length > 3
                    ? (this.shortEmail =
                        e[0].charAt(0) +
                        "..." +
                        e[0].charAt(e[0].length - 1) +
                        "@" +
                        e[1])
                    : (this.shortEmail = e[0] + "@" + e[1]);
                } else this.shortEmail = this.logonName;
              }),
              (e.prototype.codeValid = function () {
                var e = /^[0-9]{6}$/g;
                return e.test(this.code);
              }),
              (e.NAME = "auth.CheckValidCodeController"),
              (e.$inject = [
                "$routeParams",
                "$location",
                "$scope",
                i.AuthService.NAME,
                s.AuthRouter.NAME,
                a.UrlService.NAME,
              ]),
              e
            );
          })();
        r.CheckValidCodeController = u;
      },
      {
        "../INotifier": 4,
        "../urls/AuthRouter": 194,
        "../utils/MenuHelper": 227,
        "../utils/UrlService": 236,
        "./AuthService": 10,
      },
    ],
    12: [
      function (e, t, r) {
        var i = e("./AuthService"),
          s = e("../urls/AuthRouter"),
          o = e("../utils/MenuHelper"),
          n = e("../utils/PageHeaderHelper"),
          a = e("../INotifier"),
          u = e("../utils/UrlService"),
          l = (function () {
            function e(e, t, r, i, a) {
              (this.$routeParams = e),
                (this.$location = t),
                (this.authService = r),
                (this.authRouter = i),
                (this.url = a),
                (this.password = null),
                (this.confirmPassword = null),
                (this.token = null),
                (this.code = null),
                (this.token =
                  this.$routeParams[s.AuthRouter.PASSWORD_TOKEN_PARAM_NAME]),
                (this.code =
                  this.$routeParams[s.AuthRouter.PASSWORD_CODE_PARAM_NAME]),
                o.MenuHelper.setCurrentMenuItem(""),
                n.PageHeader.set().header("Create New Password").update();
            }
            return (
              (e.prototype.createNewPassword = function () {
                var e = this;
                this.authService
                  .createNewPassword(this.token, this.code, this.password)
                  .then(function () {
                    a.notifier.success("Password successfully changed"),
                      e.$location.url(e.authRouter.logonUrl());
                  })
                  ["catch"](function (t) {
                    switch (t.data.error) {
                      case "error.password.restore.impossible":
                        return (
                          a.notifier.error(
                            "Incorrect code or code expired. Try to restore the password again"
                          ),
                          void e.$location.url(e.authRouter.restorePassword())
                        );
                    }
                  });
              }),
              (e.prototype.showPassword = function () {
                return (
                  "password" == $("#passwordField").attr("type")
                    ? ($(this).addClass("view"),
                      $("#passwordField").attr("type", "text"),
                      $("#confirmPasswordField").attr("type", "text"))
                    : ($(this).removeClass("view"),
                      $("#passwordField").attr("type", "password"),
                      $("#confirmPasswordField").attr("type", "password")),
                  !1
                );
              }),
              (e.prototype.checkHidePassword = function () {
                return "password" == $("#passwordField").attr("type");
              }),
              (e.NAME = "auth.CreateNewPasswordController"),
              (e.$inject = [
                "$routeParams",
                "$location",
                i.AuthService.NAME,
                s.AuthRouter.NAME,
                u.UrlService.NAME,
              ]),
              e
            );
          })();
        r.CreateNewPasswordController = l;
      },
      {
        "../INotifier": 4,
        "../urls/AuthRouter": 194,
        "../utils/MenuHelper": 227,
        "../utils/PageHeaderHelper": 231,
        "../utils/UrlService": 236,
        "./AuthService": 10,
      },
    ],
    13: [
      function (e, t, r) {
        var i = e("./AuthService"),
          s = e("./../authcore/AuthManager"),
          o = e("./../authcore/AuthRedirect"),
          n = e("./../urls/AuthRouter"),
          a = e("./../utils/AppProperties"),
          u = e("./../utils/PageHeaderHelper"),
          l = e("./../utils/MenuHelper"),
          c = e("./../infrastructure/Storage"),
          d = e("./../security/LogonProviderEnum"),
          h = e("./../urls/UsersRouter"),
          p = e("../utils/UrlService"),
          f = e("./../urls/InfoRouter"),
          m = e("./RenewalType"),
          S = (function () {
            function e(e, t, r, i, s, o, a, c, d, h, p, f, S) {
              (this.$timeout = e),
                (this.$log = t),
                (this.$route = r),
                (this.$sce = i),
                (this.url = s),
                (this.authRedirect = o),
                (this.authApi = a),
                (this.authManager = c),
                (this.$location = d),
                (this.localStorage = h),
                (this.usersRouter = p),
                (this.authRouter = f),
                (this.infoRouter = S),
                (this.LAST_USED_PROVIDER_STORAGE_KEY =
                  "vhs.application.logon.last.used.provider"),
                (this.inProgress = !1),
                (this.restore = !1),
                (this.error = null),
                (this.renewalType =
                  d.search()[n.AuthRouter.RENEWAL_TYPE_PARAM_NAME]),
                m.RenewalType[this.renewalType] ||
                  ((this.renewalType = m.RenewalType[m.RenewalType.NEW]),
                  this.$location.search(
                    n.AuthRouter.RENEWAL_TYPE_PARAM_NAME,
                    this.renewalType
                  )),
                (this.accessDenied =
                  d.search()[n.AuthRouter.ACCESS_DENIED_PARAM_NAME]),
                (this.tokenExpired =
                  d.search()[n.AuthRouter.TOKEN_EXPIRED_PARAM_NAME]),
                (this.logonRequired =
                  d.search()[n.AuthRouter.LOGON_REQUIRED_PARAM_NAME]),
                (this.noSpnego = this.localStorage.contains(
                  "vhs.application.no.spnego"
                ));
              var v = this.localStorage.contains(
                  "vhs.application.spnego.login.failed"
                ),
                y = this.localStorage.contains(
                  "vhs.application.spnego.login.not.supported"
                );
              y
                ? ((this.error = "Automatic Windows login is not supported"),
                  this.localStorage.remove(
                    "vhs.application.spnego.login.not.supported"
                  ))
                : v &&
                  ((this.error = "Automatic Windows login failed"),
                  this.localStorage.remove(
                    "vhs.application.spnego.login.failed"
                  )),
                l.MenuHelper.setCurrentMenuItem(""),
                u.PageHeader.set()
                  .header("BasicMed Online Course Login")
                  .update(),
                this.authManager.restoreAvailable()
                  ? this.restoreSession()
                  : this.loadProviders();
            }
            return (
              (e.prototype.loadProviders = function () {
                var e = this;
                this.authApi.getProvidersForLogon().then(function (t) {
                  return e.initProviders(t);
                });
              }),
              (e.prototype.initProviders = function (e) {
                var t = this;
                if (
                  ((this.providers = e),
                  (this.internalProviders = []),
                  (this.localProviderAvailable = !1),
                  (this.activeDirectoryLocalProviderAvailable = !1),
                  (this.activeDirectorySsoProviderAvailable = !1),
                  angular.forEach(this.providers, function (e) {
                    e.key === d.LogonProviderEnum[d.LogonProviderEnum.LOCAL]
                      ? ((t.localProviderAvailable = !0),
                        t.internalProviders.push({
                          key: e.key,
                          name: "Internal users",
                        }))
                      : e.key ===
                        d.LogonProviderEnum[d.LogonProviderEnum.AD_LOCAL]
                      ? ((t.activeDirectoryLocalProviderAvailable = !0),
                        t.internalProviders.push({
                          key: e.key,
                          name: "ActiveDirectory users",
                        }))
                      : e.key ===
                        d.LogonProviderEnum[d.LogonProviderEnum.AD_SSO]
                      ? (t.activeDirectorySsoProviderAvailable = !0)
                      : (e.key ===
                          d.LogonProviderEnum[
                            d.LogonProviderEnum.PERSONIFY_USERPASSWORD
                          ] ||
                          e.key ===
                            d.LogonProviderEnum[
                              d.LogonProviderEnum.LOCAL_OR_PERSONIFY
                            ]) &&
                        ((t.localProviderAvailable = !0),
                        t.internalProviders.push({ key: e.key, name: e.name }));
                  }),
                  0 === this.internalProviders.length &&
                    (this.providerKey = null),
                  this.internalProviders.length > 0)
                ) {
                  var r = this.localStorage.get(
                      this.LAST_USED_PROVIDER_STORAGE_KEY
                    ),
                    i = !1;
                  r &&
                    angular.forEach(this.internalProviders, function (e) {
                      e.key == r && (i = !0);
                    }),
                    r && i
                      ? (this.providerKey = r)
                      : (this.providerKey = this.internalProviders[0].key);
                }
                this.tryToNegotiate();
              }),
              (e.prototype.tryToNegotiate = function () {
                this.activeDirectorySsoProviderAvailable &&
                  !this.noSpnego &&
                  ((this.restore = !0), this.authRedirect.forwardToSpnego());
              }),
              (e.prototype.forceNegotiation = function () {
                this.activeDirectorySsoProviderAvailable &&
                  (this.authManager.enableSpnego(),
                  (this.restore = !0),
                  this.authRedirect.forwardToSpnego());
              }),
              (e.prototype.logOn = function () {
                var t = this;
                this.authManager.isPersonifyOrLocalEnabled()
                  ? (this.providerKey =
                      d.LogonProviderEnum[
                        d.LogonProviderEnum.LOCAL_OR_PERSONIFY
                      ])
                  : (this.providerKey =
                      d.LogonProviderEnum[d.LogonProviderEnum.LOCAL]),
                  (this.error = ""),
                  (this.inProgress = !0),
                  this.localStorage.put(
                    this.LAST_USED_PROVIDER_STORAGE_KEY,
                    this.providerKey
                  ),
                  this.authApi
                    .logOn(
                      this.providerKey + ":" + this.username,
                      this.password
                    )
                    .then(function (r) {
                      var i = r.locale
                        ? r.locale
                        : a.AppProperties.currentLocale;
                      e.reloadApplicationForLocaleIfNeeded(i) ||
                        (t.authManager.enableSpnego(),
                        t.authRedirect.returnAfterLogOn(!1)),
                        (t.inProgress = !1);
                    })
                    ["catch"](function (e) {
                      (t.inProgress = !1),
                        (t.error =
                          "invalid_user" === e.data.error
                            ? t.$sce.getTrustedHtml(
                                "Invalid Email or Password.<br/> Click <a href='{0}'>HERE</a> to reset your password.<br/><i>Reminder: The BasicMed Course is not linked to your AOPA account. You will need to create a separate account for the BasicMed Course.</i>".replace(
                                  "{0}",
                                  t.buildRestorePasswordLinkWithUserNameParam()
                                )
                              )
                            : "Query has failed: please contact your system administrator or help desk");
                    });
              }),
              (e.prototype.restorePassword = function () {
                (this.$location.$logonName = this.username),
                  this.$location.url(this.authRouter.restorePassword());
              }),
              (e.prototype.buildRestorePasswordLinkWithUserNameParam =
                function () {
                  var e = this.authRouter.restorePassword();
                  return (
                    -1 === e.indexOf("?") && (e += "?"),
                    "#" +
                      e +
                      "&" +
                      n.AuthRouter.LOGON_PARAM_NAME +
                      "=" +
                      this.username
                  );
                }),
              (e.prototype.restoreSession = function () {
                var e = this,
                  t = this.authManager.getToken().refreshToken;
                (this.restore = !0),
                  this.authApi
                    .restoreSession(t)
                    .then(function (t) {
                      e.authRedirect.returnAfterLogOn(!1),
                        (e.restore = !1),
                        e.loadProviders();
                    })
                    ["catch"](function (t) {
                      (e.restore = !1),
                        e.authManager.logOff(),
                        e.loadProviders();
                    });
              }),
              (e.prototype.changeRenewalType = function (e) {
                void 0 != m.RenewalType[e] &&
                  ((this.renewalType = e.toString()),
                  this.$location.search(
                    n.AuthRouter.RENEWAL_TYPE_PARAM_NAME,
                    this.renewalType
                  ));
              }),
              (e.reloadApplicationForLocaleIfNeeded = function (e) {
                return !1;
              }),
              (e.NAME = "auth.LogOnController"),
              (e.$inject = [
                "$timeout",
                "$log",
                "$route",
                "$sce",
                p.UrlService.NAME,
                o.AuthRedirect.NAME,
                i.AuthService.NAME,
                s.AuthManager.NAME,
                "$location",
                c.Storages.LOCAL_NAME,
                h.UsersRouter.NAME,
                n.AuthRouter.NAME,
                f.InfoRouter.NAME,
              ]),
              e
            );
          })();
        r.LogOnController = S;
      },
      {
        "../utils/UrlService": 236,
        "./../authcore/AuthManager": 18,
        "./../authcore/AuthRedirect": 19,
        "./../infrastructure/Storage": 105,
        "./../security/LogonProviderEnum": 162,
        "./../urls/AuthRouter": 194,
        "./../urls/InfoRouter": 201,
        "./../urls/UsersRouter": 213,
        "./../utils/AppProperties": "AppProperties",
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./AuthService": 10,
        "./RenewalType": 15,
      },
    ],
    14: [
      function (e, t, r) {
        var i = e("./AuthService"),
          s = e("./../urls/AuthRouter"),
          o = e("../INotifier"),
          n = e("./../urls/MainRouter"),
          a = (function () {
            function e(e, t, r, i) {
              var s = this;
              (this.authApi = e),
                (this.mainRouter = t),
                (this.authRouter = r),
                (this.$location = i),
                this.authApi.logOff().then(function () {
                  o.notifier.success("Logged Out"),
                    s.$location.url(s.authRouter.logonUrl());
                });
            }
            return (
              (e.NAME = "auth.LogOutController"),
              (e.$inject = [
                i.AuthService.NAME,
                n.MainRouter.NAME,
                s.AuthRouter.NAME,
                "$location",
              ]),
              e
            );
          })();
        r.LogOutController = a;
      },
      {
        "../INotifier": 4,
        "./../urls/AuthRouter": 194,
        "./../urls/MainRouter": 203,
        "./AuthService": 10,
      },
    ],
    15: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.NEW = 0)] = "NEW"),
            (e[(e.MONTH24 = 1)] = "MONTH24"),
            (e[(e.MONTH48 = 2)] = "MONTH48");
        })(r.RenewalType || (r.RenewalType = {}));
        r.RenewalType;
      },
      {},
    ],
    16: [
      function (e, t, r) {
        var i = e("./AuthService"),
          s = e("../urls/AuthRouter"),
          o = e("../utils/MenuHelper"),
          n = e("../utils/PageHeaderHelper"),
          a = e("../INotifier"),
          u = e("../utils/UrlService"),
          l = (function () {
            function e(e, t, r, i, s) {
              (this.$location = e),
                (this.$scope = t),
                (this.authService = r),
                (this.authRouter = i),
                (this.url = s),
                (this.hasError = !1),
                (this.logonName = this.$location.$logonName),
                o.MenuHelper.setCurrentMenuItem(""),
                n.PageHeader.set().header("Restore Password").update();
            }
            return (
              (e.prototype.restorePassword = function () {
                var e = this;
                (this.hasError = !1),
                  this.authService
                    .restorePassword(this.logonName)
                    .then(function (t) {
                      if ("error.password.restore.impossible" === t.error) {
                        e.hasError = !0;
                        var r = $("#restore_link_result_popup");
                        r.showPopup();
                      } else (e.$location.$logonName = e.logonName), e.$location.url(e.authRouter.checkValidCode());
                    })
                    ["catch"](function (e) {
                      switch (e.data.error) {
                        case "error.password.restore.impossible":
                          return void a.notifier.error(
                            "Incorrect code or code expired. Try to restore the password again"
                          );
                      }
                    });
              }),
              (e.prototype.cancel = function () {
                this.$location.url(this.authRouter.logonUrl());
              }),
              (e.prototype.onClosePopup = function () {
                var e = $("#restore_link_result_popup");
                e.hidePopup(), this.hasError || this.cancel();
              }),
              (e.NAME = "auth.RestorePasswordController"),
              (e.$inject = [
                "$location",
                "$scope",
                i.AuthService.NAME,
                s.AuthRouter.NAME,
                u.UrlService.NAME,
              ]),
              e
            );
          })();
        r.RestorePasswordController = l;
      },
      {
        "../INotifier": 4,
        "../urls/AuthRouter": 194,
        "../utils/MenuHelper": 227,
        "../utils/PageHeaderHelper": 231,
        "../utils/UrlService": 236,
        "./AuthService": 10,
      },
    ],
    17: [
      function (e, t, r) {
        var i = e("./TokenStorage"),
          s = e("./AuthRedirect"),
          o = e("./AuthManager"),
          n = e("./../urls/UrlsModule"),
          a = e("./../infrastructure/InfrastructureModule");
        r.AuthCoreModule = angular
          .module("authcore", [n.UrlsModule.name, a.InfrastructureModule.name])
          .service(i.TokenStorage.NAME, i.TokenStorage)
          .service(s.AuthRedirect.NAME, s.AuthRedirect)
          .service(o.AuthManager.NAME, o.AuthManager);
      },
      {
        "./../infrastructure/InfrastructureModule": 104,
        "./../urls/UrlsModule": 212,
        "./AuthManager": 18,
        "./AuthRedirect": 19,
        "./TokenStorage": 22,
      },
    ],
    18: [
      function (e, t, r) {
        var i = e("./TokenStorage"),
          s = e("./AuthRedirect"),
          o = e("./../infrastructure/Storage"),
          n = e("./Event"),
          a = e("./../security/LogonProviderEnum"),
          u = e("../utils/AppProperties"),
          l = (function () {
            function e(e, t, r, i, s) {
              (this.$rootScope = e),
                (this.$location = t),
                (this.authRedirect = r),
                (this.localStorage = i),
                (this.tokenStorage = s),
                (this.userInfo = null);
            }
            return (
              (e.prototype.isAuthenticated = function () {
                var e = this.tokenStorage.get();
                return (
                  null != e &&
                  e.accessToken &&
                  e.issuedAt &&
                  moment
                    .utc(e.issuedAt)
                    .add(e.expiresIn, "s")
                    .isAfter(moment.utc())
                );
              }),
              (e.prototype.hasToken = function () {
                var e = this.tokenStorage.get();
                return (
                  null != e && null != e.accessToken && "" != e.accessToken
                );
              }),
              (e.prototype.restoreAvailable = function () {
                var e = this.tokenStorage.get();
                return (
                  null != e && null != e.refreshToken && "" != e.refreshToken
                );
              }),
              (e.prototype.getCurrentUser = function () {
                return this.userInfo;
              }),
              (e.prototype.getToken = function () {
                return this.tokenStorage.get();
              }),
              (e.prototype.saveToken = function (e) {
                e &&
                  e.issuedAt &&
                  moment.utc(e.issuedAt).add(1, "hours") < moment.utc() &&
                  (e.issuedAt = moment.utc().subtract(2, "minutes").format()),
                  this.tokenStorage.put(e);
              }),
              (e.prototype.eraseToken = function () {
                this.userInfo = null;
                var e = this.tokenStorage.get();
                null != e && ((e.accessToken = null), this.tokenStorage.put(e));
              }),
              (e.prototype.eraseRefreshToken = function () {
                var e = this.tokenStorage.get();
                null != e &&
                  ((e.refreshToken = null), this.tokenStorage.put(e));
              }),
              (e.prototype.logOn = function (t) {
                (this.userInfo = t),
                  this.userInfo.id != e.GUEST_ID &&
                    this.$rootScope.$broadcast(n.Event.LOGGED_ON);
              }),
              (e.prototype.logOff = function () {
                this.tokenStorage.remove();
                var t = this.userInfo ? this.userInfo.id : null;
                (this.userInfo = null),
                  null != t &&
                    t != e.GUEST_ID &&
                    this.$rootScope.$broadcast(n.Event.LOGGED_OFF);
              }),
              (e.prototype.completeSpnegoExchange = function () {
                var t = e.getUrlVars();
                return a.LogonProviderEnum[a.LogonProviderEnum.AD_SSO] !==
                  t.ssoProvider
                  ? !1
                  : t.accessDenied
                  ? (this.disableSpnego(),
                    this.localStorage.put(
                      "vhs.application.spnego.login.failed",
                      !0
                    ),
                    this.authRedirect.forwardToLogOn(!0),
                    !0)
                  : t.token
                  ? (this.saveToken({
                      accessToken: t.token,
                      tokenType: t.tokenType,
                      refreshToken: t.refreshToken,
                      expiresIn: t.lifetimeSeconds,
                      issuedAt: t.issuedAt,
                      locale: t.locale,
                    }),
                    this.authRedirect.returnAfterLogOn(!0),
                    !0)
                  : !1;
              }),
              (e.prototype.tryPersonifySsoIfAllowed = function () {
                return this.isPersonifySsoEnabled()
                  ? (this.authRedirect.forwardToStartPersonifySSO(), !0)
                  : !1;
              }),
              (e.prototype.completePersonifySsoExchange = function () {
                if (!this.isPersonifySsoEnabled()) return !1;
                var t = e.getUrlVars();
                return a.LogonProviderEnum[
                  a.LogonProviderEnum.PERSONIFY_SSO
                ] !== t.ssoProvider
                  ? !1
                  : t.accessDenied
                  ? (this.localStorage.put(
                      "vhs.application.sso.login.failed",
                      !0
                    ),
                    this.clearTokenInfoFromUrl(),
                    this.authRedirect.forwardToLogOn(!1),
                    !0)
                  : t.ssoDisabled
                  ? (this.clearTokenInfoFromUrl(),
                    this.authRedirect.returnAfterLogOn(!1),
                    !0)
                  : t.token
                  ? (this.saveToken({
                      accessToken: t.token,
                      tokenType: t.tokenType,
                      refreshToken: t.refreshToken,
                      expiresIn: t.lifetimeSeconds,
                      issuedAt: t.issuedAt,
                      locale: t.locale,
                    }),
                    this.clearTokenInfoFromUrl(),
                    this.authRedirect.returnAfterLogOn(!1),
                    !0)
                  : !1;
              }),
              (e.prototype.enableSpnego = function () {
                this.localStorage.remove("vhs.application.no.spnego");
              }),
              (e.prototype.disableSpnego = function () {
                this.localStorage.put("vhs.application.no.spnego", !0);
              }),
              (e.prototype.isPersonifySsoEnabled = function () {
                return (
                  -1 !=
                  u.AppProperties.authProvider.indexOf(
                    a.LogonProviderEnum[a.LogonProviderEnum.PERSONIFY_SSO]
                  )
                );
              }),
              (e.prototype.isPersonifyOrLocalEnabled = function () {
                return (
                  -1 !=
                  u.AppProperties.authProvider.indexOf(
                    a.LogonProviderEnum[a.LogonProviderEnum.LOCAL_OR_PERSONIFY]
                  )
                );
              }),
              (e.getUrlVars = function () {
                for (
                  var e,
                    t = {},
                    r = window.location.href
                      .slice(window.location.href.indexOf("?") + 1)
                      .split("&"),
                    i = 0;
                  i < r.length;
                  i++
                )
                  (e = r[i].split("=")), (t[e[0]] = e[1]);
                return t;
              }),
              (e.prototype.clearTokenInfoFromUrl = function () {
                this.$location.search("accessDenied", null),
                  this.$location.search("ssoDisabled", null),
                  this.$location.search("token", null),
                  this.$location.search("tokenType", null),
                  this.$location.search("refreshToken", null),
                  this.$location.search("lifetimeSeconds", null),
                  this.$location.search("issuedAt", null),
                  this.$location.search("locale", null),
                  this.$location.url(this.$location.path());
              }),
              (e.NAME = "authcore.AuthManager"),
              (e.GUEST_ID = 2),
              (e.$inject = [
                "$rootScope",
                "$location",
                s.AuthRedirect.NAME,
                o.Storages.LOCAL_NAME,
                i.TokenStorage.NAME,
              ]),
              e
            );
          })();
        r.AuthManager = l;
      },
      {
        "../utils/AppProperties": "AppProperties",
        "./../infrastructure/Storage": 105,
        "./../security/LogonProviderEnum": 162,
        "./AuthRedirect": 19,
        "./Event": 20,
        "./TokenStorage": 22,
      },
    ],
    19: [
      function (e, t, r) {
        var i = e("./RedirectReason"),
          s = e("./../infrastructure/Storage"),
          o = e("./../urls/AuthRouter"),
          n = e("./../urls/MainRouter"),
          a = e("./../utils/UrlService"),
          u = e("./../utils/LocationUtils"),
          l = (function () {
            function e(e, t, r, i, s, o) {
              (this.$location = e),
                (this.$window = t),
                (this.sessionStorage = r),
                (this.authRouter = i),
                (this.mainRouter = s),
                (this.url = o);
            }
            return (
              (e.prototype.redirectToLogOn = function (e) {
                this.storeUrlBeforeAuthRedirect(), this.forwardToLogOn(!1, e);
              }),
              (e.prototype.storeUrlBeforeAuthRedirect = function () {
                var t = this.$location.url();
                this.sessionStorage.contains(e.KEY) ||
                  t === this.authRouter.logonUrl() ||
                  this.sessionStorage.put(e.KEY, t);
              }),
              (e.prototype.forwardToLogOn = function (e, t) {
                if (e) {
                  var r = this.$window.location.href.split("?")[0],
                    s = r + "#" + this.authRouter.logonUrl();
                  this.$window.location.replace(s);
                } else {
                  u.LocationUtils.isFullScreen(this.$location);
                  switch (t) {
                    case i.RedirectReason.ACCESS_DENIED:
                      this.$location
                        .url(this.authRouter.logonUrl())
                        .search(o.AuthRouter.ACCESS_DENIED_PARAM_NAME, !0);
                      break;
                    case i.RedirectReason.TOKEN_EXPIRED:
                      this.$location
                        .url(this.authRouter.logonUrl())
                        .search(o.AuthRouter.TOKEN_EXPIRED_PARAM_NAME, !0);
                      break;
                    case i.RedirectReason.LOGON_REQUIRED:
                      this.$location
                        .url(this.authRouter.logonUrl())
                        .search(o.AuthRouter.LOGON_REQUIRED_PARAM_NAME, !0);
                      break;
                    default:
                      this.$location.url(this.authRouter.logonUrl());
                  }
                }
              }),
              (e.prototype.forwardToSpnego = function () {
                this.$window.location.href = this.url.service(
                  "/api/spnego/exchange"
                );
              }),
              (e.prototype.forwardToStartPersonifySSO = function () {
                this.storeUrlBeforeAuthRedirect(),
                  (this.$window.location.href = this.url.service(
                    "/api/sso/start?ssoProvider=PERSONIFY_SSO"
                  ));
              }),
              (e.prototype.forwardToAccessDenied = function () {
                this.$location.url(this.authRouter.accessDeniedUrl());
              }),
              (e.prototype.returnAfterLogOn = function (t) {
                var r = this.sessionStorage.get(e.KEY);
                if ((this.clearRedirection(), (r = r ? r : "/"), t)) {
                  var i = this.$window.location.href.split("?")[0],
                    s = i + "#" + r;
                  this.$window.location.replace(s);
                } else this.$location.url(r ? r : this.mainRouter.mainUrl());
              }),
              (e.prototype.clearRedirection = function () {
                this.sessionStorage.remove(e.KEY);
              }),
              (e.NAME = "authcore.AuthRedirect"),
              (e.KEY = "auth-redirect"),
              (e.$inject = [
                "$location",
                "$window",
                s.Storages.SESSION_NAME,
                o.AuthRouter.NAME,
                n.MainRouter.NAME,
                a.UrlService.NAME,
              ]),
              e
            );
          })();
        r.AuthRedirect = l;
      },
      {
        "./../infrastructure/Storage": 105,
        "./../urls/AuthRouter": 194,
        "./../urls/MainRouter": 203,
        "./../utils/LocationUtils": 226,
        "./../utils/UrlService": 236,
        "./RedirectReason": 21,
      },
    ],
    20: [
      function (e, t, r) {
        var i = (function () {
          function e() {}
          return (
            (e.LOGGED_ON = "auth:loggedOn"),
            (e.LOGGED_OFF = "auth:loggedOff"),
            e
          );
        })();
        r.Event = i;
      },
      {},
    ],
    21: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.ACCESS_DENIED = 0)] = "ACCESS_DENIED"),
            (e[(e.TOKEN_EXPIRED = 1)] = "TOKEN_EXPIRED"),
            (e[(e.LOGON_REQUIRED = 2)] = "LOGON_REQUIRED");
        })(r.RedirectReason || (r.RedirectReason = {}));
        r.RedirectReason;
      },
      {},
    ],
    22: [
      function (e, t, r) {
        var i = e("./../infrastructure/Storage"),
          s = (function () {
            function e(t) {
              (this.storage = t), (this.tokenInfo = t.get(e.TOKEN_KEY));
            }
            return (
              (e.prototype.get = function () {
                return this.tokenInfo;
              }),
              (e.prototype.put = function (t) {
                (this.tokenInfo = t), this.storage.put(e.TOKEN_KEY, t);
              }),
              (e.prototype.remove = function () {
                (this.tokenInfo = null), this.storage.remove(e.TOKEN_KEY);
              }),
              (e.NAME = "authcore.TokenStorage"),
              (e.TOKEN_KEY = "access-token"),
              (e.$inject = [i.Storages.LOCAL_NAME]),
              e
            );
          })();
        r.TokenStorage = s;
      },
      { "./../infrastructure/Storage": 105 },
    ],
    23: [
      function (e, t, r) {
        var i = e("./StudentController"),
          s = e("./TeacherController"),
          o = e("./../security/SecurityModule");
        r.BroadcastsModule = angular
          .module("broadcasts", [o.SecurityModule.name])
          .controller(i.StudentController.NAME, i.StudentController)
          .controller(s.TeacherController.NAME, s.TeacherController);
      },
      {
        "./../security/SecurityModule": 165,
        "./StudentController": 24,
        "./TeacherController": 25,
      },
    ],
    24: [
      function (e, t, r) {
        var i = e("./../security/SecurityService"),
          s = e("./../utils/MenuHelper"),
          o = e("./../utils/PageHeaderHelper"),
          n = (function () {
            function e(e, t) {
              (this.$location = e),
                (this.securityService = t),
                this.securityService
                  .demandAuthentication()
                  .demandSystemPermissions(function (e) {
                    return e.participateBroadcasts;
                  }),
                s.MenuHelper.setCurrentMenuItem(
                  s.MenuHelper.EDUCATION_STUDENT_BROADCASTS_MENU_KEY
                ),
                o.PageHeader.set().header("Webcasts").update(),
                (this.broadcastMode = "video");
            }
            return (
              (e.prototype.handUp = function () {
                this.isHandUp = !this.isHandUp;
              }),
              (e.prototype.setBroadcastMode = function (e) {
                this.broadcastMode = e;
              }),
              (e.NAME = "broadcasts.StudentController"),
              (e.$inject = ["$location", i.SecurityService.NAME]),
              e
            );
          })();
        r.StudentController = n;
      },
      {
        "./../security/SecurityService": 166,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
      },
    ],
    25: [
      function (e, t, r) {
        var i = e("./../security/SecurityService"),
          s = e("./../utils/MenuHelper"),
          o = e("./../utils/PageHeaderHelper"),
          n = (function () {
            function e(e, t) {
              (this.$location = e),
                (this.securityService = t),
                this.securityService
                  .demandAuthentication()
                  .demandSystemPermissions(function (e) {
                    return e.organizationBroadcasts;
                  }),
                s.MenuHelper.setCurrentMenuItem(
                  s.MenuHelper.EDUCATION_TEACHER_BROADCASTS_MENU_KEY
                ),
                o.PageHeader.set().header("Webcasts").update(),
                (this.broadcastMode = "video");
            }
            return (
              (e.prototype.setBroadcastMode = function (e) {
                this.broadcastMode = e;
              }),
              (e.NAME = "broadcasts.TeacherController"),
              (e.$inject = ["$location", i.SecurityService.NAME]),
              e
            );
          })();
        r.TeacherController = n;
      },
      {
        "./../security/SecurityService": 166,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
      },
    ],
    26: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = (function () {
            function e(e, t, r) {
              (this.$http = e), (this.$q = t), (this.url = r);
            }
            return (
              (e.prototype.getBundle = function (e) {
                var t = this;
                return this.$http
                  .get(
                    this.url
                      .base("/api/bundles/:bundleId")
                      .param(":bundleId", e)
                      .service()
                  )
                  .then(function (e) {
                    var r = e.data;
                    return t.createFilesMap(r), e.data;
                  });
              }),
              (e.prototype.updateBundleFromFiles = function (e) {
                var t = this;
                return this.$http
                  .put(this.url.base("/api/bundles/files").service(), e)
                  .then(function (e) {
                    var r = e.data.bundle;
                    return t.createFilesMap(r), e.data;
                  });
              }),
              (e.prototype.createFilesMap = function (e) {
                (e.filesMap = new Map()),
                  e.files.forEach(function (t) {
                    e.filesMap.set(t.key, t);
                  });
              }),
              (e.NAME = "bundle.BundleService"),
              (e.$inject = ["$http", "$q", i.UrlService.NAME]),
              e
            );
          })();
        r.BundleService = s;
      },
      { "./../utils/UrlService": 236 },
    ],
    27: [
      function (e, t, r) {
        var i = e("./BundleService"),
          s = e("./../urls/UrlsModule");
        r.BundlesModule = angular
          .module("bundles", [s.UrlsModule.name])
          .service(i.BundleService.NAME, i.BundleService);
      },
      { "./../urls/UrlsModule": 212, "./BundleService": 26 },
    ],
    28: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.JS = 1)] = "JS"),
            (e[(e.CSS = 2)] = "CSS"),
            (e[(e.IMAGE = 3)] = "IMAGE"),
            (e[(e.HTML = 4)] = "HTML");
        })(r.BundleFileTypeEnum || (r.BundleFileTypeEnum = {}));
        var i = r.BundleFileTypeEnum;
        r.BUNDLE_FILE_TYPE_ENUM_VALUES = [i.JS, i.CSS, i.IMAGE, i.HTML];
      },
      {},
    ],
    29: [
      function (e, t, r) {
        var i = e("../common/CommonNavigation");
        r.CommonModule = angular
          .module("common", [])
          .service(i.CommonNavigation.NAME, i.CommonNavigation);
      },
      { "../common/CommonNavigation": 30 },
    ],
    30: [
      function (e, t, r) {
        var i = e("./../urls/CommonRouter"),
          s = e("./../INotifier"),
          o = (function () {
            function e(e, t, r, i) {
              var o = this;
              (this.$location = e),
                (this.$rootScope = t),
                (this.$timeout = r),
                (this.commonRouter = i),
                t.$on("$locationChangeStart", function (e, t, r) {
                  e.defaultPrevented ||
                    (o.preventNavigationFromUrl &&
                    o.preventNavigationFromUrl === r &&
                    o.preventNavigationFromUrl
                      ? (e.preventDefault(),
                        o.$timeout(function () {
                          s.notifier.warning(
                            "Unsaved data will be lost if you leave this page"
                          );
                        }))
                      : o.allowNavigation());
                }),
                $(window).bind("beforeunload", function (e) {
                  return o.preventNavigationFromUrl &&
                    o.preventNavigationFromUrl === window.location.href
                    ? "Unsaved data will be lost if you leave this page"
                    : void 0;
                });
            }
            return (
              (e.prototype.allowNavigation = function () {
                this.preventNavigationFromUrl = null;
              }),
              (e.prototype.preventNavigation = function () {
                var e = window.location.href;
                this.preventNavigationFromUrl = e;
              }),
              (e.prototype.redirectToNotFound = function () {
                this.allowNavigation(),
                  this.$location.url(this.commonRouter.notFoundUrl());
              }),
              (e.NAME = "common.CommonNavigation"),
              (e.$inject = [
                "$location",
                "$rootScope",
                "$timeout",
                i.CommonRouter.NAME,
              ]),
              e
            );
          })();
        r.CommonNavigation = o;
      },
      { "./../INotifier": 4, "./../urls/CommonRouter": 197 },
    ],
    31: [
      function (e, t, r) {
        function i(e) {
          function t(t, r) {
            e(function () {
              r[0].focus();
            });
          }
          return { restrict: "A", link: t };
        }
        (r.AutoFocusDirectiveFactory = i), (i.$inject = ["$timeout"]);
      },
      {},
    ],
    32: [
      function (e, t, r) {
        var i = e("./AutofocusDirective"),
          s = e("./DateTimePickerDirective"),
          o = e("./GridConfigurationDirective"),
          n = e("./GridDirective"),
          a = e("./GridEmptyDirective"),
          u = e("./GridExternalConfiguration"),
          l = e("./GridPaginationDirective"),
          c = e("./LoginDirective"),
          d = e("./MultipleCheckboxSelectorDirective"),
          h = e("./PageFooterDirective"),
          p = e("./PageHeaderDirective"),
          f = e("./VhsSelectAllDirective"),
          m = e("./ReferenceCheckboxSelectorDirective"),
          S = e("./ReferenceDropdownSelectorDirective"),
          v = e("./ReferenceMultipleSelectorDirective"),
          y = e("./TooltipDirective"),
          g = e("./VhsSearchDirective"),
          M = e("./PersonalMenuDirective"),
          E = e("./VhsVideoAudioDirective"),
          A = e("./UsersAndGroupsSelectorDirective"),
          R = e("./SelectOptionsDisabledDirective"),
          T = e("./SelectPlaceholderDirective"),
          I = e("./UploadsStatusDirective"),
          P = e("./VhsThumbnailDirective"),
          C = e("./VhsMaterialEditingDirective"),
          U = e("./richtext/VhsEmbeddedBundleDirective"),
          _ = e("./VhsEmbeddedMaterialDirective"),
          N = e("./richtext/VhsSelectMaterialDirective"),
          b = e("./richtext/VhsSelectEmbeddedBundleDirective"),
          w = e("./richtext/VhsSelectSandboxDirective"),
          O = e("./richtext/VhsSandboxDirective"),
          L = e("./richtext/RichTextEditorDirective"),
          D = e("./richtext/RichTextBindDirective"),
          $ = e("./richtext/VhsDownloadBundleDirective"),
          F = e("./LoadBundleFileDirective"),
          H = e("./FullScreenDirective"),
          G = e("./PageTitleDirective"),
          B = e("./EntitiesSelect2SelectorDirective"),
          z = e("./richtext/RichTextContentLoadingSynchronizer"),
          x = e("./../authcore/AuthCoreModule"),
          j = e("./../auth/AuthModule"),
          k = e("./../security/SecurityModule"),
          Y = e("./../urls/UrlsModule"),
          K = e("./../infrastructure/InfrastructureModule"),
          V = e("./../main/MainModule"),
          Q = e("./../materials/MaterialsModule"),
          q = e("./../broadcasts/BroadcastsModule"),
          W = e("./../news/NewsModule"),
          Z = e("./../info/InfoModule"),
          X = e("./../reference/ReferenceModule"),
          J = e("./../storage/StorageModule"),
          ee = e("./../logs/LogsModule"),
          te = e("../settings/SettingsModule"),
          re = e("./CurrentYearDirective"),
          ie = e("./SuffixValidatorDirective");
        r.ComponentsModule = angular
          .module("components", [
            x.AuthCoreModule.name,
            j.AuthModule.name,
            k.SecurityModule.name,
            V.MainModule.name,
            Y.UrlsModule.name,
            K.InfrastructureModule.name,
            Q.MaterialsModule.name,
            q.BroadcastsModule.name,
            W.NewsModule.name,
            Z.InfoModule.name,
            X.ReferenceModule.name,
            J.StorageModule.name,
            ee.LogsModule.name,
            te.SettingsModule.name,
          ])
          .service(
            z.RichTextContentLoadingSynchronizer.NAME,
            z.RichTextContentLoadingSynchronizer
          )
          .directive("autofocus", i.AutoFocusDirectiveFactory)
          .directive("datePicker", s.DateTimePickerDirectiveFactory)
          .directive(
            "vhsGridConfiguration",
            o.GridConfigurationDirectiveFactory
          )
          .directive("vhsGrid", n.GridDirectiveFactory)
          .directive("vhsGridEmpty", a.GridEmptyDirectiveFactory)
          .directive(
            "vhsGridExternalConfiguration",
            u.GridExternalConfigurationFactory
          )
          .directive("vhsGridPagination", l.GridPaginationDirectiveFactory)
          .directive("login", c.LoginDirectiveFactory)
          .directive(
            "multipleCheckboxSelector",
            d.MultipleCheckboxSelectorDirectiveFactory
          )
          .directive("vhsPageFooter", h.PageFooterDirectiveFactory)
          .directive("vhsPageHeader", p.PageHeaderDirectiveFactory)
          .directive("vhsSelectAll", f.VhsSelectAllDirectiveFactory)
          .directive(
            "referenceCheckboxSelector",
            m.ReferenceCheckboxSelectorDirectiveFactory
          )
          .directive(
            "referenceDropdownSelector",
            S.ReferenceDropdownSelectorDirectiveFactory
          )
          .directive(
            "referenceMultipleSelector",
            v.ReferenceMultipleSelectorDirectiveFactory
          )
          .directive("tooltip", y.TooltipDirectiveFactory)
          .directive("vhsSearch", g.VhsSearchDirectiveFactory)
          .directive("personalMenu", M.PersonalMenuDirectiveFactory)
          .directive(
            "navigationPersonalMenu",
            M.NavigationPersonalMenuDirectiveFactory
          )
          .directive("leftPersonalMenu", M.LeftPersonalMenuDirectiveFactory)
          .directive("vhsBreadcrumbs", M.VhsBreadcrumbsDirectiveFactory)
          .directive("vhsVideo", E.VhsVideoDirectiveFactory)
          .directive("vhsYoutubeVideo", E.VhsYoutubeVideoDirectiveFactory)
          .directive("vhsAudio", E.VhsAudioDirectiveFactory)
          .directive(
            "usersAndGroupsSelector",
            A.UsersAndGroupsSelectorDirectiveFactory
          )
          .directive(
            "selectOptionsDisabled",
            R.SelectOptionsDisabledDirectiveFactory
          )
          .directive("selectPlaceholder", T.SelectPlaceholderDirectiveFactory)
          .directive("uploadsStatus", I.UploadsStatusDirectiveFactory)
          .directive("vhsThumbnail", P.VhsThumbnailDirectiveFactory)
          .directive("vhsMaterialEditing", C.VhsMaterialEditingDirectiveFactory)
          .directive(
            "vhsEmbeddedMaterial",
            _.VhsEmbeddedMaterialDirectiveFactory
          )
          .directive("vhsSelectMaterial", N.VhsSelectMaterialDirectiveFactory)
          .directive("vhsRichTextEditor", L.RichTextEditorDirectiveFactory)
          .directive("vhsRichTextBind", D.RichTextBindDirectiveFactory)
          .directive("vhsEmbeddedBundle", U.VhsEmbeddedBundleDirectiveFactory)
          .directive(
            "vhsSelectEmbeddedBundle",
            b.VhsSelectEmbeddedBundleDirectiveFactory
          )
          .directive("vhsSelectSandbox", w.VhsSelectSandboxDirectiveFactory)
          .directive("vhsSandbox", O.VhsSandboxDirectiveFactory)
          .directive("vhsDownloadBundle", $.VhsDownloadBundleDirectiveFactory)
          .directive("vhsLoadBundleFile", F.LoadBundleFileDirectiveFactory)
          .directive("vhsFullScreen", H.FullScreenDirectiveFactory)
          .directive("vhsPageTitle", G.PageTitleDirectiveFactory)
          .directive("vhsCurrentYear", re.CurrentYearDirectiveFactory)
          .directive(
            "entitiesSelect2Selector",
            B.EntitiesSelect2SelectorDirectiveFactory
          )
          .directive("suffixValidator", ie.SuffixValidatorDirectiveFactory);
      },
      {
        "../settings/SettingsModule": 170,
        "./../auth/AuthModule": 9,
        "./../authcore/AuthCoreModule": 17,
        "./../broadcasts/BroadcastsModule": 23,
        "./../info/InfoModule": 102,
        "./../infrastructure/InfrastructureModule": 104,
        "./../logs/LogsModule": 108,
        "./../main/MainModule": 112,
        "./../materials/MaterialsModule": 117,
        "./../news/NewsModule": 126,
        "./../reference/ReferenceModule": 154,
        "./../security/SecurityModule": 165,
        "./../storage/StorageModule": 190,
        "./../urls/UrlsModule": 212,
        "./AutofocusDirective": 31,
        "./CurrentYearDirective": 33,
        "./DateTimePickerDirective": 34,
        "./EntitiesSelect2SelectorDirective": 35,
        "./FullScreenDirective": 36,
        "./GridConfigurationDirective": 37,
        "./GridDirective": 38,
        "./GridEmptyDirective": 39,
        "./GridExternalConfiguration": 40,
        "./GridPaginationDirective": 41,
        "./LoadBundleFileDirective": 42,
        "./LoginDirective": 43,
        "./MultipleCheckboxSelectorDirective": 44,
        "./PageFooterDirective": 45,
        "./PageHeaderDirective": 46,
        "./PageTitleDirective": 47,
        "./PersonalMenuDirective": 48,
        "./ReferenceCheckboxSelectorDirective": 49,
        "./ReferenceDropdownSelectorDirective": 50,
        "./ReferenceMultipleSelectorDirective": 51,
        "./SelectOptionsDisabledDirective": 52,
        "./SelectPlaceholderDirective": 53,
        "./SuffixValidatorDirective": 54,
        "./TooltipDirective": 55,
        "./UploadsStatusDirective": 56,
        "./UsersAndGroupsSelectorDirective": 57,
        "./VhsEmbeddedMaterialDirective": 58,
        "./VhsMaterialEditingDirective": 59,
        "./VhsSearchDirective": 60,
        "./VhsSelectAllDirective": 61,
        "./VhsThumbnailDirective": 62,
        "./VhsVideoAudioDirective": 63,
        "./richtext/RichTextBindDirective": 66,
        "./richtext/RichTextContentLoadingSynchronizer": 67,
        "./richtext/RichTextEditorDirective": 68,
        "./richtext/VhsDownloadBundleDirective": 69,
        "./richtext/VhsEmbeddedBundleDirective": 70,
        "./richtext/VhsSandboxDirective": 71,
        "./richtext/VhsSelectEmbeddedBundleDirective": 72,
        "./richtext/VhsSelectMaterialDirective": 73,
        "./richtext/VhsSelectSandboxDirective": 74,
      },
    ],
    33: [
      function (e, t, r) {
        function i(e) {
          function t(t, r, i, s, o) {
            e.getCurrentDate().then(function (e) {
              return (t.currentDate = e);
            });
          }
          var r = {};
          return (
            (r.restrict = "A"),
            (r.template = "{{::currentDate | date:'yyyy'}}"),
            (r.link = t),
            (r.scope = !0),
            r
          );
        }
        var s = e("../settings/SettingsService");
        (r.CurrentYearDirectiveFactory = i),
          (i.$inject = [s.SettingsService.NAME]);
      },
      { "../settings/SettingsService": 171 },
    ],
    34: [
      function (e, t, r) {
        function i() {
          function e(e, t, r, i, o) {
            t.datetimepicker({
              pickTime: !1,
              language: "en",
              format: "M/D/YYYY",
              collapse: !0,
              keyboardNavigation: r.navigation || !0,
              maxDate: e.maxDateValidation ? moment(e.maxDate).toDate() : null,
            }),
              t.bind("dp.change", function () {
                t.trigger("input");
              }),
              e.$watch(r.ngModel, function (e) {
                e && t.trigger("change");
              }),
              e.$on("$destroy", function () {
                return t.datetimepicker().data("DateTimePicker").destroy();
              }),
              e.maxDateValidation &&
                ((i.$validators.maxDate = function (t, r) {
                  if (!e.maxDate || !r) return !0;
                  var i = moment(e.maxDate),
                    o = s.Moment.parse(r);
                  return !i.isValid() || !o.isValid() || !o.isAfter(i);
                }),
                e.$watch("maxDate", function () {
                  i.$validate();
                })),
              e.minDateValidation &&
                ((i.$validators.minDate = function (t, r) {
                  if (!e.minDate || !r) return !0;
                  var i = moment(e.minDate),
                    o = s.Moment.parse(r);
                  return !i.isValid() || !o.isValid() || !o.isBefore(i);
                }),
                e.$watch("minDate", function () {
                  i.$validate();
                }));
          }
          return {
            restrict: "A",
            require: "?ngModel",
            scope: {
              minDate: "=?vhsMin",
              maxDate: "=?vhsMax",
              minDateValidation: "=?vhsMinDateValidation",
              maxDateValidation: "=?vhsMaxDateValidation",
            },
            link: e,
          };
        }
        var s = e("../utils/Moment");
        r.DateTimePickerDirectiveFactory = i;
      },
      { "../utils/Moment": 228 },
    ],
    35: [
      function (e, t, r) {
        function i(e) {
          var t = {};
          return (
            (t.restrict = "A"),
            (t.controller = a),
            (t.scope = {
              urlString: "=?vhsEntitiesUrl",
              referenceKey: "=?vhsReferenceKey",
              filter: "=?vhsFilter",
              model: "=vhsModel",
              modelProperty: "=vhsModelProperty",
              multiple: "=vhsMultiple",
              disabled: "=?vhsDisabled",
              nullable: "=vhsNullable",
              activeEntities: "=?vhsActiveEntities",
              placeholder: "=?vhsPlaceholder",
              onSelectorChange: "&vhsOnChange",
            }),
            (t.templateUrl = e.template(
              "components/entities-select2-selector.html"
            )),
            (t.transclude = !0),
            t
          );
        }
        var s = e("./../utils/UrlService"),
          o = e("./../reference/ReferenceService"),
          n = e("./../reference/models/IReferenceEntitiesParams"),
          a = (function () {
            function e(t, r, i, s) {
              var o = this;
              (this.$scope = t),
                (this.$http = r),
                (this.url = i),
                (this.referenceApi = s),
                (this.modelId = null),
                (this.selectedItems = null),
                (t.vm = this),
                (this.placeholder = t.placeholder
                  ? t.placeholder
                  : e.DEFAULT_PLACEHOLDER),
                t.multiple
                  ? (this.modelIds = t.model[t.modelProperty])
                  : (this.modelId = t.model[t.modelProperty]),
                this.loadEntitiesForSelector(),
                this.$scope.$watch("filter", function (e, t) {
                  angular.equals(e, t) || o.loadEntitiesForSelector();
                }),
                this.$scope.$watch("activeEntities", function (e, t) {
                  e != t && o.loadEntitiesForSelector();
                }),
                this.$scope.$watch("model[modelProperty]", function (e, t) {
                  angular.equals(e, t) ||
                    angular.equals(
                      e,
                      o.$scope.multiple ? o.modelIds : o.modelId
                    ) ||
                    o.setValues();
                });
            }
            return (
              (e.prototype.loadEntitiesForSelector = function () {
                var e = this;
                (this.selectedItems = this.$scope.multiple ? [] : null),
                  null != this.$scope.referenceKey
                    ? this.referenceApi
                        .getActiveReferenceEntitiesForSelector(
                          this.$scope.referenceKey,
                          new n.ReferenceEntitiesParams(
                            null,
                            null,
                            void 0,
                            void 0
                          ),
                          null
                        )
                        .then(function (t) {
                          (e.items = t),
                            e.items.forEach(function (t) {
                              e.$scope.multiple && e.modelIds.indexOf(t.id) > -1
                                ? 0 ==
                                    e.selectedItems.filter(function (e) {
                                      return e.id == t.id;
                                    }).length && e.selectedItems.push(t)
                                : e.$scope.multiple ||
                                  e.modelId != t.id ||
                                  (e.selectedItems = t);
                            });
                        })
                    : this.$http
                        .get(this.url.service(this.$scope.urlString), {
                          params: this.$scope.filter,
                        })
                        .then(function (t) {
                          (e.items = t.data),
                            e.items.forEach(function (t) {
                              e.$scope.multiple && e.modelIds.indexOf(t.id) > -1
                                ? 0 ==
                                    e.selectedItems.filter(function (e) {
                                      return e.id == t.id;
                                    }).length && e.selectedItems.push(t)
                                : e.$scope.multiple ||
                                  e.modelId != t.id ||
                                  (e.selectedItems = t);
                            });
                        });
              }),
              (e.prototype.setValues = function () {
                var e = this;
                this.$scope.multiple
                  ? (this.modelIds =
                      this.$scope.model[this.$scope.modelProperty])
                  : (this.modelId =
                      this.$scope.model[this.$scope.modelProperty]),
                  (this.selectedItems = this.$scope.multiple ? [] : null),
                  this.items.forEach(function (t) {
                    e.$scope.multiple && e.modelIds.indexOf(t.id) > -1
                      ? 0 ==
                          e.selectedItems.filter(function (e) {
                            return e.id == t.id;
                          }).length && e.selectedItems.push(t)
                      : e.$scope.multiple ||
                        e.modelId != t.id ||
                        (e.selectedItems = t);
                  });
              }),
              (e.prototype.onSelectCallback = function (e, t) {
                this.$scope.multiple
                  ? this.modelIds.push(e.id)
                  : ((this.selectedItems = e),
                    (this.$scope.model[this.$scope.modelProperty] = e.id),
                    (this.modelId = e.id));
                var r = angular.copy(e);
                (r.selected = !0), this.$scope.onSelectorChange(r);
              }),
              (e.prototype.onRemoveCallback = function (e, t) {
                if (this.$scope.multiple) {
                  var r = this.modelIds.indexOf(e.id, 0);
                  r > -1 && this.modelIds.splice(r, 1);
                } else
                  (this.selectedItems = null),
                    (this.$scope.model[this.$scope.modelProperty] = null),
                    (this.modelId = null);
                var i = angular.copy(e);
                (i.selected = !1), this.$scope.onSelectorChange(i);
              }),
              (e.DEFAULT_PLACEHOLDER = ""),
              (e.$inject = [
                "$scope",
                "$http",
                s.UrlService.NAME,
                o.ReferenceService.NAME,
              ]),
              e
            );
          })();
        (r.EntitiesSelect2SelectorController = a),
          (r.EntitiesSelect2SelectorDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      {
        "./../reference/ReferenceService": 156,
        "./../reference/models/IReferenceEntitiesParams": 158,
        "./../utils/UrlService": 236,
      },
    ],
    36: [
      function (e, t, r) {
        function i(e, t) {
          function r(r, o, n, a) {
            var u = function () {
              s.LocationUtils.isFullScreen(e)
                ? o.addClass(i)
                : o.removeClass(i);
            };
            t.$on("$locationChangeSuccess", function (e) {
              u();
            }),
              u(),
              o.removeClass("invisible-on-load");
          }
          var i = "full-screen-view",
            o = { restrict: "A", link: r };
          return o;
        }
        var s = e("./../utils/LocationUtils");
        (r.FullScreenDirectiveFactory = i),
          (i.$inject = ["$location", "$rootScope"]);
      },
      { "./../utils/LocationUtils": 226 },
    ],
    37: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i, s) {
            i.setIsConfigurable(!0), (e._showPageSizeSelector = !0);
          }
          var r = {};
          return (
            (r.restrict = "A"),
            (r.templateUrl = e.template("components/grid-configuration.html")),
            (r.link = t),
            (r.require = "^vhsGrid"),
            r
          );
        }
        var s = e("./../utils/UrlService");
        (r.GridConfigurationDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      { "./../utils/UrlService": 236 },
    ],
    38: [
      function (e, t, r) {
        function i() {
          function e(e, r, i, s, o) {
            r.addClass("grid-container"),
              s.init(r, i.gridModelPath, i.vhsGridUuid, t),
              i.vhsHasConfiguration && s.setIsConfigurable(!0);
          }
          var t,
            r = {};
          return (
            (r.restrict = "A"),
            (r.compile = function (r, i, s) {
              return (
                (t = $(r).find(c.TABLE_SELECTOR).html()), { pre: null, post: e }
              );
            }),
            (r.controller = c),
            (r.scope = !0),
            (r.trunsclude = !1),
            r
          );
        }
        var s = e("./../SortEntry"),
          o = e("./../infrastructure/Storage"),
          n = e("./../utils/TimeoutUtils"),
          a = e("./../utils/ObjectFieldResolver"),
          u = e("./../IGridModel"),
          l = (function () {
            function e() {
              (this.index = null), (this.order = null), (this.mandatory = !1);
            }
            return (
              (e.fromString = function (t) {
                var r = null;
                if (t) {
                  var i = t.split(/[ ()]/g);
                  if (
                    ((r = new e()),
                    i.length > 0 && (r.sortPath = i[0]),
                    i.length > 1 &&
                      (r.order =
                        "asc" == i[1] ? s.SortOrder.ASC : s.SortOrder.DESC),
                    i.length > 2)
                  ) {
                    var o = i[2];
                    "=" == o.charAt(0) &&
                      ((r.mandatory = !0), (o = o.substr(1))),
                      (r.index = +o);
                  }
                }
                return r;
              }),
              e
            );
          })(),
          c = (function () {
            function e(e, t, r, i) {
              (this.$timeout = t),
                (this.$compile = r),
                (this.localStorage = i),
                (this.gridUuid = null),
                (this.hasConfiguration = !1),
                (this.hasChangesForTemplateReload = !1),
                (this.SORTABLE_HEADERS_CLASSES = [
                  "sortable",
                  "sortable-desc",
                  "sortable-asc",
                  "sortable-0",
                  "sortable-1",
                  "sortable-2",
                  "sortable-3",
                ]),
                (this.SEARCH_ELEMENTS_SELECTOR =
                  "[data-vhs-auto-search] select,[data-vhs-auto-search] input"),
                (this.MAX_SORT_INDEX = 3),
                (e.gridVm = this),
                (this.parentScope = e.$parent),
                (this.directiveScope = e),
                (this.timeoutUtils = new n.TimeoutUtils());
            }
            return (
              (e.prototype.init = function (t, r, i, s) {
                (this.gridContainer = t),
                  (this.tableContainer = this.gridContainer.find(
                    e.TABLE_SELECTOR
                  )),
                  (this.tableTemplate = s),
                  (this.gridUuid = i ? i : "grid_" + new Date().getTime()),
                  "undefined" != typeof r &&
                    ((this.gridModel = a.ObjectFieldResolver.findForPath(
                      this.parentScope,
                      r
                    )),
                    this.gridModel.addLoadingListener(this),
                    this.gridModel.addColumnVisibilityListener(this),
                    this.gridModel.addPageSizeListener(this)),
                  this.collectGridColumns(),
                  this.loadColumnsConfigurationFromStorage(),
                  this.loadFilterFromStorage(),
                  this.addPredefinedSorting(),
                  this.addAutoSearchListeners(),
                  this.initDomElementsHandlers(),
                  this.processTemplate(),
                  this.gridModel.loadCurrentPage();
              }),
              (e.prototype.initDomElementsHandlers = function () {
                this.addHeadersSortingHandlers(), this.updateHeaderClasses();
              }),
              (e.prototype.setIsConfigurable = function (e) {
                (this.hasConfiguration = e), e && this.processTemplate();
              }),
              (e.prototype.applyFilter = function () {
                this.gridModel.loadWithDelay(this.timeoutUtils, this);
              }),
              (e.prototype.addSorting = function (e) {
                var t = this.findSortEntryInfo(e),
                  r = null;
                return (
                  null != t && (r = t.sortEntry),
                  null == r
                    ? ((r = s.SortEntry.asc(e)), this.gridModel.sorting.push(r))
                    : r.reverseOrder(),
                  this.gridModel.loadCurrentPage(),
                  r
                );
              }),
              (e.prototype.resetSorting = function (e) {
                var t = this.findSortEntryInfo(e),
                  r = -1;
                null != t && (r = t.index),
                  r > -1 && this.gridModel.sorting.splice(r, 1),
                  this.gridModel.loadCurrentPage();
              }),
              (e.prototype.goToPage = function (e) {
                this.gridModel.currentPage != e &&
                  e >= 0 &&
                  e < this.gridModel.totalPageCount &&
                  this.gridModel.loadPage(e);
              }),
              (e.prototype.getPagesForPagination = function () {
                for (
                  var e = this.gridModel.currentPage,
                    t = this.gridModel.totalPageCount,
                    r = [],
                    i = e;
                  i >= 0 && 5 > e - i;
                  i--
                )
                  r.push(i);
                r = r.reverse();
                for (var i = e + 1; t > i && 5 > i - e; i++) r.push(i);
                return r;
              }),
              (e.prototype.startLoading = function () {
                this.gridContainer.addClass("loading");
              }),
              (e.prototype.endLoading = function () {
                this.gridContainer.removeClass("loading");
              }),
              (e.prototype.onColumnVisibilityChange = function (e) {
                this.hasConfiguration &&
                  null != e &&
                  ((this.hasChangesForTemplateReload = !0),
                  this.processTemplate());
              }),
              (e.prototype.upColumnPosition = function (e) {
                e &&
                  this.hasConfiguration &&
                  e.position > 0 &&
                  this.doUpdateColumnPosition(e, e.position - 1);
              }),
              (e.prototype.downColumnPosition = function (e) {
                e &&
                  this.hasConfiguration &&
                  e.position < this.gridModel.gridColumns.length - 1 &&
                  this.doUpdateColumnPosition(e, e.position + 1);
              }),
              (e.prototype.doUpdateColumnPosition = function (e, t) {
                var r = this.findColumnByPosition(t);
                r && (r.position = e.position),
                  (e.position = t),
                  (this.hasChangesForTemplateReload = !0),
                  this.processTemplate();
              }),
              (e.prototype.findColumnByPosition = function (e) {
                for (var t = 0; t < this.gridModel.gridColumns.length; t++) {
                  var r = this.gridModel.gridColumns[t];
                  if (r.position == e) return r;
                }
              }),
              (e.prototype.findColumnByIndex = function (e) {
                return this.gridModel.gridColumns[e];
              }),
              (e.prototype.fixColumnPositions = function () {
                for (
                  var e = [], t = 0;
                  t < this.gridModel.gridColumns.length;
                  t++
                )
                  e.push(this.gridModel.gridColumns[t]);
                e.sort(function (e, t) {
                  return e.fixedColumn && t.fixedColumn
                    ? 0
                    : e.fixedColumn && !t.fixedColumn
                    ? 1
                    : !e.fixedColumn && t.fixedColumn
                    ? -1
                    : e.position || t.position
                    ? e.position && !t.position
                      ? 1
                      : !e.position && t.position
                      ? -1
                      : e.position == t.position
                      ? e.index > t.index
                        ? 1
                        : -1
                      : e.position > t.position
                      ? 1
                      : -1
                    : e.index > t.index
                    ? 1
                    : -1;
                });
                for (var t = 0; t < e.length; t++)
                  e[t].position != t && (this.hasChangesForTemplateReload = !0),
                    (e[t].position = t);
              }),
              (e.prototype.onChangePageSize = function () {
                this.gridModel.pageSize &&
                  (isNaN(this.gridModel.pageSize) &&
                    (this.gridModel.pageSize = u.GridModel.DEFAULT_PAGE_SIZE),
                  this.gridModel.pageSize > u.GridModel.MAX_USER_PAGE_SIZE &&
                    (this.gridModel.pageSize = u.GridModel.MAX_USER_PAGE_SIZE),
                  (this.gridModel.pageSize = Math.round(
                    this.gridModel.pageSize
                  )),
                  this.applyFilter());
              }),
              (e.prototype.loadColumnsConfigurationFromStorage = function () {
                if (this.gridModel) {
                  var e = this.localStorage.get(this.gridUuid);
                  if (e) {
                    (this.gridModel.pageSize = e.pageSize),
                      !this.gridModel.pageSize || isNaN(this.gridModel.pageSize)
                        ? (this.gridModel.pageSize =
                            u.GridModel.DEFAULT_PAGE_SIZE)
                        : (this.gridModel.pageSize = Math.round(
                            this.gridModel.pageSize
                          ));
                    for (var t = 0; t < this.gridModel.gridColumns.length; t++)
                      for (
                        var r = this.gridModel.gridColumns[t], i = 0;
                        i < e.gridColumns.length;
                        i++
                      ) {
                        var s = e.gridColumns[i];
                        if (s.index == r.index) {
                          r.visible != s.visible &&
                            ((this.hasChangesForTemplateReload = !0),
                            (r.visible = s.visible)),
                            void 0 != s.position &&
                              null != s.position &&
                              r.position != s.position &&
                              ((this.hasChangesForTemplateReload = !0),
                              (r.position = s.position));
                          break;
                        }
                      }
                    this.fixColumnPositions(),
                      this.gridModel.recalculateVisibleColumnsCount();
                  }
                }
              }),
              (e.prototype.loadFilterFromStorage = function () {
                if (this.gridModel) {
                  var e = this.localStorage.get(this.gridUuid);
                  if (e)
                    for (var t in e.filter)
                      e.filter.hasOwnProperty(t) &&
                        this.gridModel.nonPersistedFilterFields.indexOf(t) <
                          0 &&
                        (this.gridModel.filter[t] = angular.copy(e.filter[t]));
                }
              }),
              (e.prototype.saveGridConfiguration = function () {
                this.localStorage.put(
                  this.gridUuid,
                  u.PersistedGridModelConfiguration.fromGridModel(
                    this.gridModel
                  )
                );
              }),
              (e.prototype.findSortEntryInfo = function (e) {
                for (var t = 0; t < this.gridModel.sorting.length; t++) {
                  var r = this.gridModel.sorting[t];
                  if (r.fieldName === e) return { sortEntry: r, index: t };
                }
                return null;
              }),
              (e.prototype.setHeaderClass = function (e, t) {
                for (var r = 0; r < this.SORTABLE_HEADERS_CLASSES.length; r++) {
                  var i = this.SORTABLE_HEADERS_CLASSES[r];
                  -1 != e.indexOf(i) ? t.addClass(i) : t.removeClass(i);
                }
              }),
              (e.prototype.updateHeaderClasses = function () {
                var t = this;
                this.tableContainer
                  .find(e.SORTABLE_HEADERS_SELECTOR)
                  .each(function (e, r) {
                    var i = $(r),
                      o = l.fromString(i.attr("data-sortable")).sortPath,
                      n = t.findSortEntryInfo(o),
                      a = [];
                    null != n
                      ? (n.index < t.MAX_SORT_INDEX &&
                          a.push("sortable-" + n.index),
                        a.push(
                          n.sortEntry.sortOrder == s.SortOrder.ASC
                            ? "sortable-asc"
                            : "sortable-desc"
                        ))
                      : a.push("sortable"),
                      t.setHeaderClass(a, i);
                  });
              }),
              (e.prototype.collectGridColumns = function () {
                var t = this;
                this.tableContainer
                  .find(e.TABLE_HEADERS_SELECTOR)
                  .each(function (e, r) {
                    var i = $(r),
                      s = new u.GridColumn();
                    (s.index = e), (s.position = e), (s.visible = !0);
                    var o = i.attr("data-column-always-visible"),
                      n = i.attr("data-column-fixed");
                    void 0 != o && (s.alwaysVisible = !0),
                      void 0 != n && (s.fixedColumn = !0);
                    var a = i.attr("data-column-name");
                    a ? (s.title = a) : (s.title = i.text()),
                      t.gridModel.gridColumns.push(s);
                  }),
                  this.gridModel.recalculateVisibleColumnsCount();
              }),
              (e.prototype.addHeadersSortingHandlers = function () {
                var t = this;
                this.tableContainer
                  .find(e.SORTABLE_HEADERS_SELECTOR)
                  .each(function (e, r) {
                    var i = $(r),
                      o = l.fromString(i.attr("data-sortable")),
                      n = o.sortPath;
                    i.click(function (e) {
                      var r = t.addSorting(n),
                        o = t.gridModel.sorting.indexOf(r),
                        a = [];
                      o < t.MAX_SORT_INDEX && a.push("sortable-" + o),
                        a.push(
                          r.sortOrder == s.SortOrder.ASC
                            ? "sortable-asc"
                            : "sortable-desc"
                        ),
                        t.setHeaderClass(a, i);
                    }),
                      o.mandatory ||
                        i.dblclick(function (e) {
                          t.resetSorting(n), t.updateHeaderClasses();
                        });
                  });
              }),
              (e.prototype.addPredefinedSorting = function () {
                var t = [],
                  r = [];
                this.tableContainer
                  .find(e.SORTABLE_HEADERS_SELECTOR)
                  .each(function (e, i) {
                    var s = $(i),
                      o = l.fromString(s.attr("data-sortable"));
                    r.push(o.sortPath), null != o.order && t.push(o);
                  }),
                  t.sort(function (e, t) {
                    return null == e.index && null == t.index
                      ? 0
                      : null != e.index && null == t.index
                      ? -1
                      : null == e.index && null != t.index
                      ? 1
                      : e.index > t.index
                      ? 1
                      : e.index < t.index
                      ? -1
                      : 0;
                  });
                var i = [],
                  s = this.localStorage.get(this.gridUuid);
                if (s && s.sortEntries) {
                  for (var o = 0; o < s.sortEntries.length; o++)
                    r.indexOf(s.sortEntries[o].fieldName) >= 0 &&
                      i.push(s.sortEntries[o]);
                  for (var o = t.length - 1; o >= 0; o--) {
                    var n = t[o];
                    if (n.mandatory) {
                      for (var a = -1, u = 0; u < i.length; u++)
                        if (i[u].fieldName == n.sortPath) {
                          a = u;
                          break;
                        }
                      a >= 0 && ((t[o].order = i[a].sortOrder), i.splice(a, 1));
                    } else t.splice(o, 1);
                  }
                  for (var o = 0; o < i.length; o++) {
                    var c = new l();
                    (c.order = i[o].sortOrder),
                      (c.sortPath = i[o].fieldName),
                      t.push(c);
                  }
                }
                for (var o = 0; o < t.length; o++) {
                  var d = t[o];
                  this.addPredefinedSortingToModel(d.sortPath, d.order);
                }
              }),
              (e.prototype.addPredefinedSortingToModel = function (e, t) {
                var r = new s.SortEntry(e, t);
                null == this.findSortEntryInfo(e) &&
                  this.gridModel.sorting.push(r);
              }),
              (e.prototype.addAutoSearchListeners = function () {
                var e = this;
                this.gridContainer
                  .find(this.SEARCH_ELEMENTS_SELECTOR)
                  .each(function (t, r) {
                    var i = $(r),
                      s = function (t) {
                        e.applyFilter();
                      };
                    switch (i.prop("type").toLowerCase()) {
                      case "checkbox":
                      case "radio":
                        i.click(s);
                        break;
                      case "text":
                        i.keyup(s);
                        break;
                      default:
                        i.change(s);
                    }
                  });
              }),
              (e.prototype.processTemplate = function () {
                if (this.hasChangesForTemplateReload) {
                  this.tableContainer.html(this.tableTemplate);
                  for (
                    var t = new Map(), r = 0;
                    r < this.gridModel.gridColumns.length;
                    r++
                  ) {
                    var i = this.gridModel.gridColumns[r];
                    t.set(i.position, i.index);
                  }
                  this.processTableCellsInTemplate(
                    this.tableContainer.find(e.TABLE_HEADERS_SELECTOR),
                    t
                  ),
                    this.processTableCellsInTemplate(
                      this.tableContainer.find(
                        e.TABLE_CELLS_IN_TEMPLATE_SELECTOR
                      ),
                      t
                    ),
                    this.processTableCellsInTemplate(
                      this.tableContainer.find(
                        e.TABLE_CELLS_IN_TEMPLATE_SELECTOR_FOR_REPEAT_START
                      ),
                      t
                    ),
                    this.processTableCellsInTemplate(
                      this.tableContainer.find(
                        e.TABLE_CELLS_IN_TEMPLATE_SELECTOR_FOR_REPEAT_END
                      ),
                      t
                    ),
                    this.$compile(this.tableContainer.contents())(
                      this.directiveScope
                    ),
                    (this.hasChangesForTemplateReload = !1),
                    this.initDomElementsHandlers();
                }
              }),
              (e.prototype.processTableCellsInTemplate = function (e, t) {
                for (
                  var r = this,
                    i = function (e, t) {
                      var i = r.findColumnByIndex(e);
                      i.fixedColumn || i.visible || $(t).remove();
                    },
                    s = new Map(),
                    o = 0;
                  o < this.gridModel.gridColumns.length;
                  o++
                ) {
                  var n = t.get(o);
                  if (null != n) {
                    var a = e.eq(n);
                    s.set(o, a);
                  }
                }
                for (var o = 0; o < this.gridModel.gridColumns.length; o++) {
                  var a = s.get(o),
                    u = o > 0 ? s.get(o - 1) : null;
                  u && $(a).insertAfter($(u));
                }
                e.each(i);
              }),
              (e.TABLE_SELECTOR = "table[data-vhs-table] "),
              (e.SORTABLE_HEADERS_SELECTOR = "tr th[data-sortable]"),
              (e.TABLE_HEADERS_SELECTOR = "thead tr th"),
              (e.TABLE_CELLS_IN_TEMPLATE_SELECTOR = "tbody tr[ng-repeat] td"),
              (e.TABLE_CELLS_IN_TEMPLATE_SELECTOR_FOR_REPEAT_START =
                "tbody tr[ng-repeat-start]:not([data-columns-always-visible]) td"),
              (e.TABLE_CELLS_IN_TEMPLATE_SELECTOR_FOR_REPEAT_END =
                "tbody tr[ng-repeat-end]:not([data-columns-always-visible]) td"),
              (e.$inject = [
                "$scope",
                "$timeout",
                "$compile",
                o.Storages.LOCAL_NAME,
              ]),
              e
            );
          })();
        (r.GridController = c), (r.GridDirectiveFactory = i);
      },
      {
        "./../IGridModel": 2,
        "./../SortEntry": 7,
        "./../infrastructure/Storage": 105,
        "./../utils/ObjectFieldResolver": 229,
        "./../utils/TimeoutUtils": 234,
      },
    ],
    39: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i, s) {
            e._emptyMessage =
              r && r.vhsEmptyMessage ? r.vhsEmptyMessage : "No records found";
          }
          var r = {};
          return (
            (r.link = t),
            (r.restrict = "A"),
            (r.replace = !0),
            (r.templateUrl = e.template("components/grid-empty.html")),
            (r.require = "^?vhsGrid"),
            r
          );
        }
        var s = e("./../utils/UrlService");
        (r.GridEmptyDirectiveFactory = i), (i.$inject = [s.UrlService.NAME]);
      },
      { "./../utils/UrlService": 236 },
    ],
    40: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i, o) {
            if ("undefined" != typeof r.gridModelPath) {
              var n = s.ObjectFieldResolver.findForPath(e, r.gridModelPath);
              (e.gridVm = { gridModel: n }),
                (e._showPageSizeSelector = !r.hidePageSizeSelector);
            }
          }
          var r = {};
          return (
            (r.restrict = "A"),
            (r.templateUrl = e.template("components/grid-configuration.html")),
            (r.link = t),
            r
          );
        }
        var s = e("./../utils/ObjectFieldResolver"),
          o = e("./../utils/UrlService");
        (r.GridExternalConfigurationFactory = i),
          (i.$inject = [o.UrlService.NAME]);
      },
      { "./../utils/ObjectFieldResolver": 229, "./../utils/UrlService": 236 },
    ],
    41: [
      function (e, t, r) {
        function i(e) {
          var t = {};
          return (
            (t.restrict = "A"),
            (t.templateUrl = e.template("components/grid-pagination.html")),
            (t.require = "^vhsGrid"),
            t
          );
        }
        var s = e("./../utils/UrlService");
        (r.GridPaginationDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      { "./../utils/UrlService": 236 },
    ],
    42: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i) {
            i.init(e, t);
          }
          var r = {
            restrict: "AE",
            link: t,
            controller: n,
            scope: { bundleFile: "=vhsBundleFile" },
          };
          return r;
        }
        var s = e("../utils/UrlService"),
          o = e("../bundles/models/BundleFileType"),
          n = (function () {
            function e(e, t) {
              (this.$scope = e), (this.$http = t);
            }
            return (
              (e.prototype.init = function (e, t) {
                (this.element = t),
                  (this.bundleFile = e.bundleFile),
                  this.processBundleFile();
              }),
              (e.prototype.processBundleFile = function () {
                var e = this;
                if (this.bundleFile && this.bundleFile.url)
                  return this.bundleFile.type ==
                    o.BundleFileTypeEnum[o.BundleFileTypeEnum.JS]
                    ? this.$http
                        .get(this.bundleFile.url, this.getHttpConfig())
                        .then(function (e) {
                          return e.data;
                        })
                        .then(function (t) {
                          return e.processFileContent(t, e.bundleFile);
                        })
                    : void (this.bundleFile.type ==
                      o.BundleFileTypeEnum[o.BundleFileTypeEnum.CSS]
                        ? this.element.replaceWith(
                            "<link rel='stylesheet' href=" +
                              this.bundleFile.url +
                              ">"
                          )
                        : this.bundleFile.type ==
                            o.BundleFileTypeEnum[o.BundleFileTypeEnum.IMAGE] &&
                          this.element.is("img") &&
                          this.element.attr("src", this.bundleFile.url));
              }),
              (e.prototype.processFileContent = function (e, t) {
                if (e && t)
                  switch (t.type) {
                    case o.BundleFileTypeEnum[o.BundleFileTypeEnum.JS]:
                      $.globalEval('"use strict";' + e);
                  }
              }),
              (e.prototype.getHttpConfig = function () {
                return { cache: !0, withoutAuthorization: !0, ignore404: !0 };
              }),
              (e.$inject = ["$scope", "$http"]),
              e
            );
          })();
        (r.VhsLoadBundleFileController = n),
          (r.LoadBundleFileDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      { "../bundles/models/BundleFileType": 28, "../utils/UrlService": 236 },
    ],
    43: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i, s) {}
          var r = {};
          return (
            (r.restrict = "A"),
            (r.templateUrl = e.template("components/login.html")),
            (r.link = t),
            (r.scope = !0),
            (r.controller = p),
            r
          );
        }
        var s = e("./../urls/AuthRouter"),
          o = e("./../authcore/AuthManager"),
          n = e("./../authcore/Event"),
          a = e("./../auth/AuthService"),
          u = e("./../utils/UrlService"),
          l = e("./../urls/MainRouter"),
          c = e("./../urls/PersonalRouter"),
          d = e("./../urls/UsersRouter"),
          h = e("./../urls/InfoRouter"),
          p = (function () {
            function e(e, t, r, i, s, o, a, u) {
              var l = this;
              (this.$scope = e),
                (this.authApi = t),
                (this.mainRouter = r),
                (this.authRouter = i),
                (this.usersRouter = s),
                (this.infoRouter = o),
                (this.personalRouter = a),
                (e.vm = this),
                (this.authenticated = u.isAuthenticated()),
                this.authenticated &&
                  (this.getCurrentUser(), this.updatePermissions()),
                e.$on(n.Event.LOGGED_ON, function () {
                  (l.authenticated = !0),
                    l.getCurrentUser(),
                    l.updatePermissions();
                }),
                e.$on(n.Event.LOGGED_OFF, function () {
                  (l.authenticated = !1), (l.systemPermissions = {});
                });
            }
            return (
              (e.prototype.getCurrentUser = function () {
                var e = this;
                this.authApi.getCurrentUser().then(function (t) {
                  e.user = t;
                });
              }),
              (e.prototype.updatePermissions = function () {
                var e = this;
                this.systemPermissions = this.authApi
                  .getCurrentUser()
                  .then(function (t) {
                    e.systemPermissions = t.permissions;
                  });
              }),
              (e.$inject = [
                "$scope",
                a.AuthService.NAME,
                l.MainRouter.NAME,
                s.AuthRouter.NAME,
                d.UsersRouter.NAME,
                h.InfoRouter.NAME,
                c.PersonalRouter.NAME,
                o.AuthManager.NAME,
              ]),
              e
            );
          })();
        (r.LoginController = p),
          (r.LoginDirectiveFactory = i),
          (i.$inject = [u.UrlService.NAME]);
      },
      {
        "./../auth/AuthService": 10,
        "./../authcore/AuthManager": 18,
        "./../authcore/Event": 20,
        "./../urls/AuthRouter": 194,
        "./../urls/InfoRouter": 201,
        "./../urls/MainRouter": 203,
        "./../urls/PersonalRouter": 206,
        "./../urls/UsersRouter": 213,
        "./../utils/UrlService": 236,
      },
    ],
    44: [
      function (e, t, r) {
        function i(e) {
          var t = {};
          return (
            (t.restrict = "A"),
            (t.controller = o),
            (t.scope = { entities: "=vhsEntities", model: "=vhsModel" }),
            (t.templateUrl = e.template(
              "components/multiple-checkbox-selector.html"
            )),
            (t.transclude = !0),
            t
          );
        }
        var s = e("./../utils/UrlService"),
          o = (function () {
            function e(e) {
              (this.$scope = e), (e.vm = this), this.pushDataModel();
            }
            return (
              (e.prototype.pushDataModel = function () {
                for (var e = 0; e < this.$scope.entities.length; ++e) {
                  var t = this.$scope.entities[e];
                  t.selected = !1;
                  for (var r = 0; r < this.$scope.model.length; ++r) {
                    var i = this.$scope.model[r];
                    if (t.id == i) {
                      t.selected = !0;
                      break;
                    }
                  }
                }
              }),
              (e.prototype.itemSelection = function (e) {
                for (var t = 0; t < this.$scope.model.length; ++t) {
                  var r = this.$scope.model[t];
                  if (r == e.id) return void this.$scope.model.splice(t, 1);
                }
                this.$scope.model.push(e.id);
              }),
              (e.$inject = ["$scope"]),
              e
            );
          })();
        (r.MultipleCheckboxSelectorController = o),
          (r.MultipleCheckboxSelectorDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      { "./../utils/UrlService": 236 },
    ],
    45: [
      function (e, t, r) {
        function i(e) {
          var t = {
            restrict: "A",
            templateUrl: e.template("components/page-footer.html"),
          };
          return t;
        }
        var s = e("./../utils/UrlService");
        (r.PageFooterDirectiveFactory = i), (i.$inject = [s.UrlService.NAME]);
      },
      { "./../utils/UrlService": 236 },
    ],
    46: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i, s) {}
          var r = {};
          return (
            (r.restrict = "A"),
            (r.link = t),
            (r.scope = {}),
            (r.controller = l),
            (r.templateUrl = e.template("components/page-header.html")),
            r
          );
        }
        var s = e("./../infrastructure/Storage"),
          o = e("./../authcore/Event"),
          n = e("./../utils/UrlService"),
          a = e("./../utils/MenuHelper"),
          u = e("./../utils/PageHeaderHelper"),
          l = (function () {
            function e(t, r, i, s) {
              var n = this;
              if (
                ((this.$sce = r),
                (this.$location = i),
                (this.sessionStorage = s),
                (this.currentPageName = "&nbsp;"),
                (this.multipleActionsOnPanel = !1),
                (this.hasHistory = !1),
                (this.history = []),
                (t.vm = this),
                a.MenuHelper.addMenuUpdateListener(this),
                u.PageHeaderHelper.addPageHeaderUpdateListener(this),
                t.$on(o.Event.LOGGED_ON, function () {
                  n.history.splice(0, n.history.length),
                    (n.hasHistory = !1),
                    n.saveHistory();
                }),
                t.$on(o.Event.LOGGED_OFF, function () {
                  n.history.splice(0, n.history.length),
                    (n.hasHistory = !1),
                    n.saveHistory();
                }),
                this.sessionStorage.contains(e.VHS_SESSION_HISTORY_KEY))
              ) {
                for (
                  var l = this.sessionStorage.get(e.VHS_SESSION_HISTORY_KEY),
                    c = 0;
                  c < l.length;
                  c++
                )
                  this.history.push(l[c]);
                this.hasHistory = this.history.length > 1;
              }
            }
            return (
              (e.prototype.goBack = function () {
                if (this.hasHistory) {
                  this.history.pop();
                  var e = this.history.pop();
                  this.saveHistory(), this.$location.url(e);
                }
                this.hasHistory = this.history.length > 1;
              }),
              (e.prototype.onMenuItemUpdate = function (t, r) {
                (this.currentPageName = "&nbsp;"),
                  (this.actionsPanelHtml = ""),
                  (this.statusPanelHtml = ""),
                  (this.multipleActionsOnPanel = !1);
                var i = this.history.length - 1;
                (0 > i || this.history[i] != this.$location.path()) &&
                  (this.history.length > e.MAX_HISTORY_DEPTH &&
                    this.history.splice(0, 1),
                  this.history.push(this.$location.path()),
                  (this.hasHistory = this.history.length > 1),
                  this.saveHistory());
              }),
              (e.prototype.onHeaderUpdate = function (t) {
                if (
                  (t.preservePageName || (this.currentPageName = t.pageName),
                  !t.preserveActionsPanel)
                ) {
                  var r = "";
                  if (
                    ((this.multipleActionsOnPanel = !1), 1 == t.actions.length)
                  )
                    r = t.actions[0];
                  else if (t.actions.length > 0) {
                    for (var i = 0; i < t.actions.length; i++)
                      r +=
                        e.MULTIPLE_ACTIONS_LINK_TEMPLATE_START +
                        t.actions[i] +
                        e.MULTIPLE_ACTIONS_LINK_TEMPLATE_END;
                    this.multipleActionsOnPanel = !0;
                  }
                  this.actionsPanelHtml = this.$sce.getTrustedHtml(r);
                }
                t.preserveStatusPanel ||
                  (this.statusPanelHtml = this.$sce.getTrustedHtml(
                    t.statusPanel
                  ));
              }),
              (e.prototype.saveHistory = function () {
                this.sessionStorage.put(
                  e.VHS_SESSION_HISTORY_KEY,
                  this.history
                );
              }),
              (e.MULTIPLE_ACTIONS_LINK_TEMPLATE_START =
                '<li role="presentation">'),
              (e.MULTIPLE_ACTIONS_LINK_TEMPLATE_END = "</li>"),
              (e.VHS_SESSION_HISTORY_KEY = "vhs_session_navigation_history"),
              (e.MAX_HISTORY_DEPTH = 3),
              (e.$inject = [
                "$scope",
                "$sce",
                "$location",
                s.Storages.SESSION_NAME,
              ]),
              e
            );
          })();
        (r.PageHeaderController = l),
          (r.PageHeaderDirectiveFactory = i),
          (i.$inject = [n.UrlService.NAME]);
      },
      {
        "./../authcore/Event": 20,
        "./../infrastructure/Storage": 105,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
      },
    ],
    47: [
      function (e, t, r) {
        function i() {
          function e(e, t, r, i, s) {}
          var t = {};
          return (t.restrict = "A"), (t.link = e), (t.controller = a), t;
        }
        var s = e("./../infrastructure/Storage"),
          o = e("./../utils/AppProperties"),
          n = e("./../utils/PageHeaderHelper"),
          a = (function () {
            function e(e, t, r, i) {
              (this.$sce = t),
                (this.$location = r),
                (this.sessionStorage = i),
                (this.currentPageName = o.AppProperties.appTitle),
                (e.vm = this),
                n.PageHeaderHelper.addPageHeaderUpdateListener(this);
            }
            return (
              (e.prototype.onHeaderUpdate = function (e) {
                e.preservePageName ||
                  ((this.currentPageName = e.pageName),
                  (document.title = this.currentPageName
                    ? this.currentPageName
                    : o.AppProperties.appTitle));
              }),
              (e.$inject = [
                "$scope",
                "$sce",
                "$location",
                s.Storages.SESSION_NAME,
              ]),
              e
            );
          })();
        (r.PageTitleController = a), (r.PageTitleDirectiveFactory = i);
      },
      {
        "./../infrastructure/Storage": 105,
        "./../utils/AppProperties": "AppProperties",
        "./../utils/PageHeaderHelper": 231,
      },
    ],
    48: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i, s) {}
          var r = {};
          return (
            (r.restrict = "A"),
            (r.link = t),
            (r.scope = !0),
            (r.controller = C),
            r
          );
        }
        function s(e) {
          function t(e, t, r, i, s) {}
          var r = {};
          return (
            (r.restrict = "A"),
            (r.templateUrl = e.template(
              "components/menu/navigation-personal-menu.html"
            )),
            (r.link = t),
            (r.require = "^personalMenu"),
            r
          );
        }
        function o(e) {
          function t(e, t, r, i, s) {}
          var r = {};
          return (
            (r.restrict = "A"),
            (r.templateUrl = e.template(
              "components/menu/left-personal-menu.html"
            )),
            (r.link = t),
            (r.require = "^personalMenu"),
            r
          );
        }
        function n(e) {
          function t(e, t, r, i, s) {}
          var r = {};
          return (
            (r.restrict = "A"),
            (r.templateUrl = e.template("components/vhs-breadcrumbs.html")),
            (r.link = t),
            (r.require = "^personalMenu"),
            r
          );
        }
        var a = e("./../auth/AuthService"),
          u = e("./../authcore/AuthManager"),
          l = e("./../authcore/Event"),
          c = e("./../security/PermissionsService"),
          d = e("./../utils/MenuHelper"),
          h = e("./../urls/MaterialsRouter"),
          p = e("./../urls/BroadcastsRouter"),
          f = e("./../urls/StatisticsRouter"),
          m = e("./../urls/FinancesRouter"),
          S = e("./../urls/NewsRouter"),
          v = e("./../urls/InfoRouter"),
          y = e("./../urls/UsersRouter"),
          g = e("./../urls/CoursesRouter"),
          M = e("./../urls/QuizzesRouter"),
          E = e("./../urls/PersonalRouter"),
          A = e("./../urls/ReferenceRouter"),
          R = e("./../urls/LogsRouter"),
          T = e("./../utils/UrlService"),
          I = e("./../utils/PageHeaderHelper"),
          P = e("./../urls/SystemSettingsRouter"),
          C = (function () {
            function e(
              e,
              t,
              r,
              i,
              s,
              o,
              n,
              a,
              u,
              c,
              h,
              p,
              f,
              m,
              S,
              v,
              y,
              g,
              M
            ) {
              var E = this;
              (this.$location = t),
                (this.$routeParams = r),
                (this.authApi = i),
                (this.permissionsApi = s),
                (this.materialsRouter = n),
                (this.broadcastsRouter = a),
                (this.statisticsRouter = u),
                (this.financesRouter = c),
                (this.newsRouter = h),
                (this.infoRouter = p),
                (this.usersRouter = f),
                (this.coursesRouter = m),
                (this.quizzesRouter = S),
                (this.personalRouter = v),
                (this.systemSettingsRouter = y),
                (this.logsRouter = g),
                (this.referenceRouter = M),
                (this.menu = []),
                (this.currentTopMenu = []),
                (this.currentMenuItemKey = ""),
                (this.currentMenuGroupKey = ""),
                (this.menuMap = new Map()),
                (this.menuItemMap = new Map()),
                (this.parentMap = new Map()),
                (this.breadcrumbs = []),
                (e.menuVM = this),
                (this.authenticated = o.isAuthenticated()),
                this.loadMenu(),
                this.authenticated && this.updatePermissions(),
                this.changeBodyCss(),
                e.$on(l.Event.LOGGED_ON, function () {
                  (E.authenticated = !0),
                    E.updatePermissions(),
                    E.changeBodyCss();
                }),
                e.$on(l.Event.LOGGED_OFF, function () {
                  (E.authenticated = !1),
                    (E.systemPermissions = {}),
                    E.menu.splice(0),
                    E.currentTopMenu.splice(0),
                    E.loadMenu(),
                    E.changeBodyCss();
                }),
                d.MenuHelper.addMenuUpdateListener(this),
                I.PageHeaderHelper.addPageHeaderUpdateListener(this);
            }
            return (
              (e.prototype.updatePermissions = function () {
                var e = this;
                this.systemPermissions = this.authApi
                  .getCurrentUser()
                  .then(function (t) {
                    (e.systemPermissions = t.permissions), e.loadMenu();
                  });
              }),
              (e.prototype.loadMenu = function () {
                var e = [
                    {
                      key: d.MenuHelper.SEARCH_MENU_KEY,
                      name: "Search",
                      allowed: !0,
                      url: "#" + this.materialsRouter.searchUrl(),
                      items: [],
                    },
                    {
                      key: d.MenuHelper.EDUCATION_MENU_KEY,
                      name: "Education",
                      allowed: !0,
                      dynamicUrl: !0,
                      items: [
                        {
                          key: d.MenuHelper.EDUCATION_COURSES_MENU_KEY,
                          name: "Courses",
                          allowed: !0,
                          url: "#" + this.coursesRouter.indexUrl(),
                          items: [],
                        },
                        {
                          key: d.MenuHelper.EDUCATION_QUIZZES_MENU_KEY,
                          name: "Quizzes",
                          allowed: !0,
                          url: "#" + this.quizzesRouter.indexUrl(),
                          items: [],
                        },
                      ],
                    },
                    {
                      key: d.MenuHelper.OPERATIONS_MENU_KEY,
                      name: "Operations",
                      allowed:
                        this.authenticated &&
                        this.systemPermissions &&
                        (this.systemPermissions.addMaterial ||
                          this.systemPermissions.viewAnalytics ||
                          this.systemPermissions.viewMyAnalytics),
                      dynamicUrl: !0,
                      items: [
                        {
                          key: d.MenuHelper.OPERATIONS_UPLOADS_MENU_KEY,
                          name: "Uploads",
                          url: "#" + this.materialsRouter.createUrl(),
                          allowed:
                            this.authenticated &&
                            this.systemPermissions &&
                            this.systemPermissions.addMaterial,
                          items: [],
                        },
                      ],
                    },
                    {
                      key: d.MenuHelper.ADMINISTRATION_MENU_KEY,
                      name: "Administration",
                      allowed:
                        this.authenticated &&
                        this.systemPermissions &&
                        (this.systemPermissions.viewUsers ||
                          this.systemPermissions.viewGroups ||
                          this.systemPermissions.editStoragePlaces ||
                          this.systemPermissions.viewReferenceData ||
                          this.systemPermissions.viewSystemLog ||
                          this.systemPermissions.viewSecurityLog),
                      dynamicUrl: !0,
                      items: [
                        {
                          key: d.MenuHelper.ADMINISTRATION_USERS_MENU_KEY,
                          name: "Users",
                          url: "#" + this.usersRouter.indexUrl(),
                          allowed:
                            this.authenticated &&
                            this.systemPermissions &&
                            this.systemPermissions.viewUsers,
                          items: [],
                        },
                        {
                          key: d.MenuHelper.ADMINISTRATION_GROUPS_MENU_KEY,
                          name: "User Groups",
                          url: "#" + this.usersRouter.groupsIndexUrl(),
                          allowed:
                            this.authenticated &&
                            this.systemPermissions &&
                            this.systemPermissions.viewGroups,
                          items: [],
                        },
                        {
                          key: d.MenuHelper
                            .ADMINISTRATION_STORAGE_PLACES_MENU_KEY,
                          name: "Storages",
                          url:
                            "#" +
                            this.systemSettingsRouter.storagePlacesIndexUrl(),
                          allowed:
                            this.authenticated &&
                            this.systemPermissions &&
                            this.systemPermissions.editStoragePlaces,
                          items: [],
                        },
                        {
                          key: d.MenuHelper.ADMINISTRATION_SUBJECTS_MENU_KEY,
                          name: "Subjects",
                          url: "#" + this.referenceRouter.indexUrl("subjects"),
                          allowed:
                            this.authenticated &&
                            this.systemPermissions &&
                            this.systemPermissions.viewReferenceData,
                          items: [],
                        },
                        {
                          key: d.MenuHelper.ADMINISTRATION_LANGUAGES_MENU_KEY,
                          name: "Languages",
                          url: "#" + this.referenceRouter.indexUrl("languages"),
                          allowed:
                            this.authenticated &&
                            this.systemPermissions &&
                            this.systemPermissions.viewReferenceData,
                          items: [],
                        },
                        {
                          key: d.MenuHelper
                            .ADMINISTRATION_COURSE_TYPES_MENU_KEY,
                          name: "Course Types",
                          url:
                            "#" + this.referenceRouter.indexUrl("courseTypes"),
                          allowed:
                            this.authenticated &&
                            this.systemPermissions &&
                            this.systemPermissions.viewReferenceData,
                          items: [],
                        },
                        {
                          key: d.MenuHelper.ADMINISTRATION_SOURCES_MENU_KEY,
                          name: "Sources",
                          url: "#" + this.referenceRouter.indexUrl("sources"),
                          allowed:
                            this.authenticated &&
                            this.systemPermissions &&
                            this.systemPermissions.viewReferenceData,
                          items: [],
                        },
                        {
                          key: d.MenuHelper
                            .ADMINISTRATION_SOURCE_TYPES_MENU_KEY,
                          name: "Source Types",
                          url:
                            "#" + this.referenceRouter.indexUrl("sourceTypes"),
                          allowed:
                            this.authenticated &&
                            this.systemPermissions &&
                            this.systemPermissions.viewReferenceData,
                          items: [],
                        },
                        {
                          key: d.MenuHelper
                            .ADMINISTRATION_COMPLEXITY_LEVELS_MENU_KEY,
                          name: "Complexity Levels",
                          url:
                            "#" +
                            this.referenceRouter.indexUrl("complexityLevels"),
                          allowed:
                            this.authenticated &&
                            this.systemPermissions &&
                            this.systemPermissions.viewReferenceData,
                          items: [],
                        },
                        {
                          key: d.MenuHelper.ADMINISTRATION_SECURITY_LOGS_KEY,
                          name: "Security Logs",
                          url: "#" + this.logsRouter.securityLogsUrl(),
                          allowed:
                            this.authenticated &&
                            this.systemPermissions &&
                            this.systemPermissions.viewSecurityLog,
                          items: [],
                        },
                        {
                          key: d.MenuHelper.ADMINISTRATION_SYSTEM_LOGS_KEY,
                          name: "System Logs",
                          url: "#" + this.logsRouter.systemLogsUrl(),
                          allowed:
                            this.authenticated &&
                            this.systemPermissions &&
                            this.systemPermissions.viewSystemLog,
                          items: [],
                        },
                      ],
                    },
                  ],
                  t = {
                    key: d.MenuHelper.PERSONAL_ACCOUNT_MENU_KEY,
                    name: "My profile",
                    url:
                      "#" +
                      (this.systemPermissions &&
                      this.systemPermissions.addMaterial
                        ? this.personalRouter.uploadsUrl()
                        : this.personalRouter.coursesUrl()),
                    allowed: this.authenticated,
                    items: [
                      {
                        key: d.MenuHelper.PERSONAL_ACCOUNT_UPLOADS_MENU_KEY,
                        name: "My uploads",
                        url: "#" + this.personalRouter.uploadsUrl(),
                        allowed:
                          this.authenticated &&
                          this.systemPermissions &&
                          this.systemPermissions.addMaterial,
                        items: [],
                      },
                      {
                        key: d.MenuHelper.PERSONAL_ACCOUNT_COURSES_MENU_KEY,
                        name: "My courses",
                        url: "#" + this.personalRouter.coursesUrl(),
                        allowed: this.authenticated,
                        items: [],
                      },
                      {
                        key: d.MenuHelper.PERSONAL_ACCOUNT_QUIZZES_MENU_KEY,
                        name: "My quizzes",
                        url: "#" + this.personalRouter.quizzesUrl(),
                        allowed: this.authenticated,
                        items: [],
                      },
                      {
                        key: d.MenuHelper.PERSONAL_ACCOUNT_PLAYLISTS_MENU_KEY,
                        name: "My playlists",
                        url: "#" + this.personalRouter.playlistsUrl(),
                        allowed: this.authenticated,
                        items: [],
                      },
                      {
                        key: d.MenuHelper
                          .PERSONAL_ACCOUNT_SUBSCRIPTIONS_MENU_KEY,
                        name: "My subscriptions",
                        url: "#" + this.personalRouter.subscriptionsUrl(),
                        allowed: this.authenticated,
                        items: [],
                      },
                      {
                        key: d.MenuHelper
                          .PERSONAL_ACCOUNT_NEW_COMMENTS_MENU_KEY,
                        name: "New comments",
                        url: "#" + this.personalRouter.newCommentsUrl(),
                        allowed: this.authenticated,
                        items: [],
                      },
                      {
                        key: d.MenuHelper.PERSONAL_ACCOUNT_SUPPORT_MENU_KEY,
                        name: "Support",
                        url: "#" + this.personalRouter.supportUrl(),
                        allowed: this.authenticated,
                        items: [],
                      },
                      {
                        key: d.MenuHelper.PERSONAL_ACCOUNT_COUPONS_MENU_KEY,
                        name: "Coupons",
                        url: "#" + this.personalRouter.couponsUrl(),
                        allowed: this.authenticated,
                        items: [],
                      },
                      {
                        key: d.MenuHelper
                          .PERSONAL_ACCOUNT_PURCHASES_HISTORY_MENU_KEY,
                        name: "History of purchases",
                        url: "#" + this.personalRouter.purchasesHistoryUrl(),
                        allowed:
                          this.authenticated &&
                          this.systemPermissions &&
                          this.systemPermissions.viewPurchaseHistory,
                        items: [],
                      },
                      {
                        key: d.MenuHelper.PERSONAL_ACCOUNT_BALANCE_MENU_KEY,
                        name: "Top-up",
                        url: "#" + this.personalRouter.balanceUrl(),
                        allowed:
                          this.authenticated &&
                          this.systemPermissions &&
                          this.systemPermissions.rechargeAccount,
                        items: [],
                      },
                      {
                        key: d.MenuHelper.PERSONAL_ACCOUNT_SETTINGS_MENU_KEY,
                        name: "Settings",
                        url: "#" + this.personalRouter.settingsUrl(),
                        allowed: this.authenticated,
                        items: [],
                      },
                    ],
                  };
                this.menu.splice(0);
                for (var r = 0; r < e.length; r++) this.menu.push(e[r]);
                this.menuMap.clear(),
                  this.parentMap.clear(),
                  this.menuItemMap.clear(),
                  (this.menuMap = new Map());
                for (var r = 0; r < this.menu.length; ++r) {
                  var i = this.menu[r];
                  this.menuMap.set(i.key, i), this.menuItemMap.set(i.key, i);
                  for (var s = 0; s < i.items.length; ++s) {
                    var o = i.items[s];
                    this.menuMap.set(o.key, i),
                      this.parentMap.set(o.key, i),
                      this.menuItemMap.set(o.key, o);
                    for (var n = 0; n < o.items.length; ++n) {
                      var a = o.items[n];
                      this.parentMap.set(a.key, o),
                        this.menuItemMap.set(a.key, a);
                    }
                  }
                }
                for (var r = 0; r < t.items.length; ++r) {
                  var o = t.items[r];
                  this.parentMap.set(o.key, t), this.menuItemMap.set(o.key, o);
                }
                (this.currentMenuItemKey =
                  d.MenuHelper.getCurrentMenuItemKey()),
                  (this.currentMenuGroupKey = this.getCurrentMenuGroupKey());
              }),
              (e.prototype.getCurrentMenuGroupKey = function () {
                return this.menuMap.has(d.MenuHelper.getCurrentMenuItemKey())
                  ? this.menuMap.get(d.MenuHelper.getCurrentMenuItemKey()).key
                  : "";
              }),
              (e.prototype.onMenuItemUpdate = function (e, t) {
                (this.currentMenuItemKey = e),
                  (this.currentMenuGroupKey = this.getCurrentMenuGroupKey()),
                  (this.breadcrumbsPageName = ""),
                  this.recalculateBreadcrumbs();
              }),
              (e.prototype.changeBodyCss = function () {
                this.authenticated
                  ? $("body").removeClass("login")
                  : $("body").addClass("login");
              }),
              (e.prototype.onHeaderUpdate = function (e) {
                (this.breadcrumbsPageName = e.pageName),
                  this.recalculateBreadcrumbs();
              }),
              (e.prototype.recalculateBreadcrumbs = function () {
                var e = this.menuItemMap.get(this.currentMenuItemKey);
                if (!e) return void (this.breadcrumbs = null);
                var t = [];
                for (
                  this.breadcrumbsPageName &&
                    "" != this.breadcrumbsPageName &&
                    this.breadcrumbsPageName != e.name &&
                    t.push({ text: this.breadcrumbsPageName, url: null }),
                    t.push({ text: e.name, url: t.length > 0 ? e.url : null });
                  this.parentMap.has(e.key);

                ) {
                  var r = e.url;
                  (e = this.parentMap.get(e.key)),
                    t.push({ text: e.name, url: e.dynamicUrl ? r : e.url });
                }
                t.push({ text: "Home", url: "#/" }),
                  (this.breadcrumbs = t.reverse());
              }),
              (e.$inject = [
                "$scope",
                "$location",
                "$routeParams",
                a.AuthService.NAME,
                c.PermissionsService.NAME,
                u.AuthManager.NAME,
                h.MaterialsRouter.NAME,
                p.BroadcastsRouter.NAME,
                f.StatisticsRouter.NAME,
                m.FinancesRouter.NAME,
                S.NewsRouter.NAME,
                v.InfoRouter.NAME,
                y.UsersRouter.NAME,
                g.CoursesRouter.NAME,
                M.QuizzesRouter.NAME,
                E.PersonalRouter.NAME,
                P.SystemSettingsRouter.NAME,
                R.LogsRouter.NAME,
                A.ReferenceRouter.NAME,
              ]),
              e
            );
          })();
        (r.PersonalMenuDirectiveFactory = i),
          (i.$inject = [T.UrlService.NAME]),
          (r.NavigationPersonalMenuDirectiveFactory = s),
          (s.$inject = [T.UrlService.NAME]),
          (r.LeftPersonalMenuDirectiveFactory = o),
          (o.$inject = [T.UrlService.NAME]),
          (r.VhsBreadcrumbsDirectiveFactory = n),
          (n.$inject = [T.UrlService.NAME]);
      },
      {
        "./../auth/AuthService": 10,
        "./../authcore/AuthManager": 18,
        "./../authcore/Event": 20,
        "./../security/PermissionsService": 164,
        "./../urls/BroadcastsRouter": 196,
        "./../urls/CoursesRouter": 199,
        "./../urls/FinancesRouter": 200,
        "./../urls/InfoRouter": 201,
        "./../urls/LogsRouter": 202,
        "./../urls/MaterialsRouter": 204,
        "./../urls/NewsRouter": 205,
        "./../urls/PersonalRouter": 206,
        "./../urls/QuizzesRouter": 207,
        "./../urls/ReferenceRouter": 208,
        "./../urls/StatisticsRouter": 209,
        "./../urls/SystemSettingsRouter": 210,
        "./../urls/UsersRouter": 213,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
      },
    ],
    49: [
      function (e, t, r) {
        function i(e) {
          var t = {};
          return (
            (t.restrict = "A"),
            (t.controller = u),
            (t.scope = {
              referenceName: "=vhsReferenceName",
              referenceFilter: "=?vhsReferenceFilter",
              referenceSorting: "=?vhsReferenceSorting",
              model: "=vhsModel",
              modelProperty: "=vhsModelProperty",
              disabled: "=?vhsDisabled",
            }),
            (t.templateUrl = e.template(
              "components/reference-checkbox-selector.html"
            )),
            (t.transclude = !0),
            t
          );
        }
        var s = e("./../utils/UrlService"),
          o = e("./../reference/ReferenceService"),
          n = e("./../reference/ReferenceUtils"),
          a = e("./../reference/models/IReferenceEntitiesParams"),
          u = (function () {
            function e(e, t, r) {
              var i = this;
              (this.$scope = e),
                (this.referenceApi = t),
                (this.referenceUtils = r),
                (e.vm = this),
                this.referenceApi
                  .getActiveReferenceEntitiesForSelector(
                    this.$scope.referenceName,
                    new a.ReferenceEntitiesParams(
                      this.$scope.referenceFilter,
                      this.$scope.referenceSorting,
                      void 0,
                      void 0
                    ),
                    null
                  )
                  .then(function (t) {
                    (i.referenceEntities = t),
                      i.$scope.$watch(
                        function () {
                          return e.model[e.modelProperty];
                        },
                        function (t) {
                          (i.modelIds = e.model[e.modelProperty]),
                            i.pushDataModel();
                        }
                      );
                  });
            }
            return (
              (e.prototype.pushDataModel = function () {
                for (var e = 0; e < this.referenceEntities.length; ++e) {
                  var t = this.referenceEntities[e];
                  t.selected = !1;
                  for (var r = 0; r < this.modelIds.length; ++r) {
                    var i = this.modelIds[r];
                    if (t.id == i) {
                      t.selected = !0;
                      break;
                    }
                  }
                }
                this.initSelectAll();
              }),
              (e.prototype.itemSelection = function (e) {
                for (var t = 0; t < this.modelIds.length; ++t) {
                  var r = this.modelIds[t];
                  if (r == e.id) return void this.modelIds.splice(t, 1);
                }
                this.modelIds.push(e.id);
              }),
              (e.prototype.initSelectAll = function () {
                for (var e = 0, t = 0; t < this.referenceEntities.length; t++)
                  this.referenceEntities[t].selected && e++;
                return (this.selectAll =
                  this.referenceEntities && e == this.referenceEntities.length);
              }),
              (e.prototype.clickSelectAll = function () {
                if (this.initSelectAll())
                  for (var e = 0; e < this.referenceEntities.length; ++e) {
                    var t = this.referenceEntities[e];
                    this.modelIds.indexOf(t.id) >= 0 && this.itemSelection(t);
                  }
                else
                  for (var e = 0; e < this.referenceEntities.length; ++e) {
                    var t = this.referenceEntities[e];
                    this.modelIds.indexOf(t.id) < 0 && this.itemSelection(t);
                  }
                this.pushDataModel(), this.initSelectAll();
              }),
              (e.$inject = [
                "$scope",
                o.ReferenceService.NAME,
                n.ReferenceUtils.NAME,
              ]),
              e
            );
          })();
        (r.ReferenceCheckboxSelectorController = u),
          (r.ReferenceCheckboxSelectorDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      {
        "./../reference/ReferenceService": 156,
        "./../reference/ReferenceUtils": 157,
        "./../reference/models/IReferenceEntitiesParams": 158,
        "./../utils/UrlService": 236,
      },
    ],
    50: [
      function (e, t, r) {
        function i(e) {
          var t = {};
          return (
            (t.restrict = "A"),
            (t.controller = l),
            (t.scope = {
              referenceName: "=vhsReferenceName",
              referenceFilter: "=?vhsReferenceFilter",
              referenceSorting: "=?vhsReferenceSorting",
              model: "=vhsModel",
              modelProperty: "=vhsModelProperty",
              disabled: "=?vhsDisabled",
              required: "=?vhsRequired",
              elementName: "@?vhsElementName",
              nullable: "=?vhsNullable",
              placeholder: "=?vhsPlaceholder",
              editable: "=?vhsEditable",
              style: "=?vhsStyle",
              onSelectorChange: "&vhsOnChange",
            }),
            (t.templateUrl = e.template(
              "components/reference-dropdown-selector.html"
            )),
            t
          );
        }
        var s = e("./../utils/UrlService"),
          o = e("./../reference/ReferenceService"),
          n = e("./../reference/ReferenceRedirect"),
          a = e("./../reference/models/IReferenceEntitiesParams"),
          u = e("./../security/PermissionsService"),
          l = (function () {
            function e(e, t, r, i) {
              var s = this;
              (this.$scope = e),
                (this.referenceApi = t),
                (this.referenceRedirect = r),
                (this.permissionsApi = i),
                (this.changeCallback = function (e) {
                  s.$scope.onSelectorChange(s.referenceEntitiesMap.get(e));
                }),
                (e.vm = this),
                this.permissionsApi.getSystemPermissions().then(function (e) {
                  s.systemPermissions = e;
                }),
                this.referenceApi
                  .getActiveReferenceEntitiesForSelector(
                    this.$scope.referenceName,
                    new a.ReferenceEntitiesParams(
                      this.$scope.referenceFilter,
                      this.$scope.referenceSorting,
                      void 0,
                      void 0
                    ),
                    null
                  )
                  .then(function (e) {
                    (s.referenceEntities = e),
                      (s.referenceEntitiesMap = new Map()),
                      s.referenceEntities.forEach(function (e) {
                        s.referenceEntitiesMap.set(e.id, e);
                      });
                  });
            }
            return (
              (e.prototype.redirectToNewReferenceItem = function () {
                this.referenceRedirect.redirectToEditReferenceItem(
                  this.$scope.referenceName
                );
              }),
              (e.prototype.redirectToEditReferenceItem = function (e) {
                this.referenceRedirect.redirectToEditReferenceItem(
                  this.$scope.referenceName,
                  e
                );
              }),
              (e.$inject = [
                "$scope",
                o.ReferenceService.NAME,
                n.ReferenceRedirect.NAME,
                u.PermissionsService.NAME,
              ]),
              e
            );
          })();
        (r.ReferenceDropdownSelectorController = l),
          (r.ReferenceDropdownSelectorDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      {
        "./../reference/ReferenceRedirect": 155,
        "./../reference/ReferenceService": 156,
        "./../reference/models/IReferenceEntitiesParams": 158,
        "./../security/PermissionsService": 164,
        "./../utils/UrlService": 236,
      },
    ],
    51: [
      function (e, t, r) {
        function i(e) {
          var t = {};
          return (
            (t.restrict = "A"),
            (t.controller = u),
            (t.scope = {
              referenceName: "=vhsReferenceName",
              referenceFilter: "=?vhsReferenceFilter",
              referenceSorting: "=?vhsReferenceSorting",
              model: "=vhsModel",
              modelProperty: "=vhsModelProperty",
              disabled: "=?vhsDisabled",
            }),
            (t.templateUrl = e.template(
              "components/reference-multiple-selector.html"
            )),
            (t.transclude = !0),
            t
          );
        }
        var s = e("./../utils/UrlService"),
          o = e("./../reference/models/IReferenceEntitiesParams"),
          n = e("./../reference/ReferenceUtils"),
          a = e("./../reference/ReferenceService"),
          u = (function () {
            function e(e, t, r) {
              var i = this;
              (this.$scope = e),
                (this.referenceApi = t),
                (this.referenceUtils = r),
                (e.vm = this),
                (this.selectedIds = angular.copy(
                  this.$scope.model[this.$scope.modelProperty]
                )),
                this.$scope.$watch(
                  function () {
                    return i.$scope.model[i.$scope.modelProperty];
                  },
                  function () {
                    (i.selectedIds = angular.copy(
                      i.$scope.model[i.$scope.modelProperty]
                    )),
                      i.setModelIds(i.selectedIds);
                  }
                ),
                this.referenceApi
                  .getActiveReferenceEntitiesForSelector(
                    this.$scope.referenceName,
                    new o.ReferenceEntitiesParams(
                      this.$scope.referenceFilter,
                      this.$scope.referenceSorting,
                      void 0,
                      void 0
                    ),
                    null
                  )
                  .then(function (e) {
                    i.referenceEntities = e;
                  });
            }
            return (
              (e.prototype.setModelIds = function (e) {
                this.$scope.model[this.$scope.modelProperty].splice(
                  0,
                  this.$scope.model[this.$scope.modelProperty].length
                );
                for (var t = 0; t < e.length; ++t)
                  this.$scope.model[this.$scope.modelProperty].push(e[t]);
              }),
              (e.$inject = [
                "$scope",
                a.ReferenceService.NAME,
                n.ReferenceUtils.NAME,
              ]),
              e
            );
          })();
        (r.ReferenceMultipleSelectorController = u),
          (r.ReferenceMultipleSelectorDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      {
        "./../reference/ReferenceService": 156,
        "./../reference/ReferenceUtils": 157,
        "./../reference/models/IReferenceEntitiesParams": 158,
        "./../utils/UrlService": 236,
      },
    ],
    52: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i, s) {
            for (var o = r.find("option"), n = 0, a = 0; n < o.length; n++) {
              var u = angular.element(o[n]);
              if ("" != u.val()) {
                var l = {};
                (l[t] = i[a]), u.attr("disabled", s(e, l)), a++;
              }
            }
          }
          function r(r, i, s) {
            var o = s.selectOptionsDisabled.match(
                /^\s*(.+)\s+for\s+(.+)\s+in\s+(.+)?\s*/
              ),
              n = o[3],
              a = e(o[1]);
            r.$watch(
              n,
              function (e) {
                e && t(r, o[2], i, e, a);
              },
              !0
            ),
              r.$watch(s.ngModel, function (s) {
                var u = e(n)(r);
                s && t(r, o[2], i, u, a);
              });
          }
          var i = {};
          return (i.priority = 0), (i.require = "ngModel"), (i.link = r), i;
        }
        (i.$inject = ["$parse"]), (r.SelectOptionsDisabledDirectiveFactory = i);
      },
      {},
    ],
    53: [
      function (e, t, r) {
        function i() {
          function e(e) {
            var t = e.find("option:selected"),
              r = angular.element(t[0]);
            "" == r.val()
              ? (e.removeClass("simple-text-color"),
                e.addClass("placeholder-color"))
              : (e.removeClass("placeholder-color"),
                e.addClass("simple-text-color")),
              (t = e.find("option"));
            for (var i = 0; i < t.length; i++) {
              var s = angular.element(t[i]);
              "" != s.val()
                ? s.addClass("simple-text-color")
                : s.addClass("placeholder-color");
            }
          }
          function t(t, r, i) {
            t.$watch(i.ngModel, function () {
              e(r);
            });
          }
          var r = {};
          return (r.priority = 0), (r.require = ["ngModel"]), (r.link = t), r;
        }
        (i.$inject = []), (r.SelectPlaceholderDirectiveFactory = i);
      },
      {},
    ],
    54: [
      function (e, t, r) {
        function i() {
          function e(e, t, r, i, s) {
            i.$validators.suffix = function (e, t) {
              var r = t;
              if (!r) return !0;
              (r = r.trim()),
                "." === r.charAt(r.length - 1) &&
                  (r = r.substr(0, r.length - 1)),
                (r = r.toLowerCase());
              var i = [
                "ms",
                "miss",
                "mr",
                "mrs",
                "fr",
                "rev",
                "dr",
                "atty",
                "hon",
                "prof",
                "pres",
                "vp",
                "gov",
                "ofc",
                "sir",
              ];
              return i.indexOf(r) < 0;
            };
          }
          return { restrict: "A", require: "?ngModel", link: e };
        }
        r.SuffixValidatorDirectiveFactory = i;
      },
      {},
    ],
    55: [
      function (e, t, r) {
        function i() {
          function e(e, t, r, i, s) {
            i.makeTooltip(t);
          }
          var t = {};
          return (
            (t.restrict = "A"),
            (t.link = e),
            (t.controller = s),
            (t.scope = !0),
            (t.trunsclude = !1),
            t
          );
        }
        var s = (function () {
          function e(e) {
            this.$timeout = e;
          }
          return (
            (e.prototype.makeTooltip = function (e) {
              this.$timeout(
                function (t) {
                  return e.tooltip();
                },
                0,
                !1
              );
            }),
            (e.$inject = ["$timeout"]),
            e
          );
        })();
        r.TooltipDirectiveFactory = i;
      },
      {},
    ],
    56: [
      function (e, t, r) {
        function i(e) {
          var t = {};
          return (
            (t.restrict = "A"),
            (t.scope = !0),
            (t.controller = n),
            (t.templateUrl = e.template("components/uploads-status.html")),
            t
          );
        }
        var s = e("./../storage/UploadsService"),
          o = e("./../utils/UrlService"),
          n = (function () {
            function e(t, r, i) {
              var s = this;
              (this.$scope = t),
                (this.$interval = r),
                (this.uploadsService = i),
                (this.currentlyUploadableFiles = []),
                (this.showFiles = !0),
                (this.currentlyUploadableFilesFunc = function () {
                  s.currentlyUploadableFiles =
                    s.uploadsService.getCurrentlyUploadableFiles();
                }),
                (this.$scope.vm = this),
                this.$interval(
                  this.currentlyUploadableFilesFunc,
                  e.CURRENTLY_UPLOADABLE_FILES_DELAY
                );
            }
            return (
              (e.prototype.cancel = function (e) {
                this.uploadsService.cancel(e);
              }),
              (e.prototype.toggleFiles = function () {
                this.showFiles = !this.showFiles;
              }),
              (e.CURRENTLY_UPLOADABLE_FILES_DELAY = 1e3),
              (e.$inject = ["$scope", "$interval", s.UploadsService.NAME]),
              e
            );
          })();
        (i.$inject = [o.UrlService.NAME]),
          (r.UploadsStatusDirectiveFactory = i);
      },
      { "./../storage/UploadsService": 191, "./../utils/UrlService": 236 },
    ],
    57: [
      function (e, t, r) {
        function i(e) {
          var t = {};
          return (
            (t.restrict = "A"),
            (t.controller = u),
            (t.scope = {
              objectModel: "=vhsObjectModel",
              objectModelProperty: "=vhsObjectModelProperty",
              currentUserIdModel: "=?vhsCurrentUserIdModel",
              currentUserIdModelProperty: "=?vhsCurrentUserIdModelProperty",
              currentUserNameModel: "=?vhsCurrentUserNameModel",
              currentUserNameModelProperty: "=?vhsCurrentUserNameModelProperty",
              permissionsWithUsersAndGroupsModel:
                "=vhsPermissionsWithUsersAndGroupsModel",
              businessUnitFilter: "=?vhsBusinessUnitFilter",
              disabled: "=?vhsDisabled",
              isPermissionsDelegation: "@?vhsIsPermissionsDelegation",
            }),
            (t.templateUrl = e.template(
              "components/users-and-groups-selector.html"
            )),
            (t.transclude = !0),
            t
          );
        }
        var s = e("./../users/UserService"),
          o = e("./../utils/UrlService"),
          n = e("./../security/permissions/SecuredObjectType"),
          a = e("./../security/permissions/IPermission"),
          u = (function () {
            function e(t, r, i) {
              var s = this;
              (this.$scope = t),
                (this.$q = r),
                (this.userService = i),
                (this.permissionsWithUsersAndGroups = []),
                (this.isLoaded = !1),
                (this.usersCompareFn = function (e, t) {
                  return e.name > t.name ? 1 : e.name < t.name ? -1 : 0;
                }),
                (this.groupsCompareFn = function (e, t) {
                  return e.name > t.name ? 1 : e.name < t.name ? -1 : 0;
                }),
                (t.vm = this),
                (this.$scope.disabled =
                  null != this.$scope.disabled ? this.$scope.disabled : !1),
                (this.$scope.isPermissionsDelegation =
                  null != this.$scope.isPermissionsDelegation
                    ? this.$scope.isPermissionsDelegation
                    : !1),
                (this.permissionsWithUsersAndGroups =
                  this.$scope.permissionsWithUsersAndGroupsModel),
                this.permissionsWithUsersAndGroups.forEach(function (e) {
                  (e.isEditing = !1),
                    (e.isUsersShowed = !0),
                    (e.isGroupsShowed = !0),
                    (e.currentAvailableUserIds = []),
                    (e.currentAvailableGroupIds = []),
                    (e.currentAvailableUsers = []),
                    (e.currentAvailableGroups = []),
                    (e.currentSelectedUsers = []),
                    (e.currentSelectedGroups = []);
                  var t = s.getCurrentUser();
                  if (
                    !s.$scope.objectModel[s.$scope.objectModelProperty].id &&
                    t.id &&
                    t.name
                  ) {
                    var r = !1;
                    if (
                      (e.users.forEach(function (e) {
                        r || e.id !== t.id || (r = !0);
                      }),
                      !r)
                    ) {
                      var i = t;
                      (i.disabled = !0),
                        e.users.push(i),
                        e.users.sort(s.usersCompareFn);
                    }
                  }
                  (e.userIds = []),
                    e.users.forEach(function (t) {
                      return e.userIds.push(t.id);
                    }),
                    (e.groupIds = []),
                    e.groups.forEach(function (t) {
                      return e.groupIds.push(t.id);
                    }),
                    (e.currentAvailableUsersChangeCallback = function (
                      t,
                      r,
                      i
                    ) {
                      if (t) e.currentAvailableUsers.push({ id: r, name: i });
                      else
                        for (
                          var s = 0;
                          s < e.currentAvailableUsers.length;
                          ++s
                        ) {
                          var o = e.currentAvailableUsers[s];
                          if (o.id === r) {
                            e.currentAvailableUsers.splice(s, 1);
                            break;
                          }
                        }
                    }),
                    (e.currentAvailableGroupsChangeCallback = function (
                      t,
                      r,
                      i
                    ) {
                      if (t) e.currentAvailableGroups.push({ id: r, name: i });
                      else
                        for (
                          var s = 0;
                          s < e.currentAvailableGroups.length;
                          ++s
                        ) {
                          var o = e.currentAvailableGroups[s];
                          if (o.id === r) {
                            e.currentAvailableGroups.splice(s, 1);
                            break;
                          }
                        }
                    });
                }),
                this.$scope.$watch(
                  function (e) {
                    return s.$scope.vm.getCurrentUserId();
                  },
                  function (t, r) {
                    t != r &&
                      s.permissionsWithUsersAndGroups.forEach(function (t) {
                        t.isUsersShowed = !1;
                        var i = s.getCurrentUser();
                        e.moveItems([i], t.users),
                          e.moveItemIds([i], t.userIds);
                        for (var o = 0; o < t.users.length; ++o) {
                          var n = t.users[o];
                          if (n.id === r) {
                            t.users.splice(o, 1);
                            break;
                          }
                        }
                        t.userIds.splice(t.userIds.indexOf(r), 1),
                          (t.currentAvailableUserIds = []),
                          (t.currentAvailableUsers = []),
                          (t.currentSelectedUsers = []),
                          t.users.sort(s.usersCompareFn),
                          setTimeout(function () {
                            return (t.isUsersShowed = !0);
                          }, 0);
                      });
                  }
                ),
                (this.isLoaded = !0);
            }
            return (
              (e.prototype.editing = function (e) {
                e.isEditing = !0;
              }),
              (e.prototype.edited = function (e) {
                e.isEditing = !1;
              }),
              (e.prototype.selectUsers = function (t) {
                (t.isUsersShowed = !1),
                  e.moveItems(t.currentAvailableUsers, t.users),
                  e.moveItemIds(t.currentAvailableUsers, t.userIds),
                  (t.currentAvailableUserIds = []),
                  (t.currentAvailableUsers = []),
                  t.users.sort(this.usersCompareFn),
                  setTimeout(function () {
                    return (t.isUsersShowed = !0);
                  }, 0);
              }),
              (e.prototype.unselectUsers = function (e) {
                (e.isUsersShowed = !1),
                  e.currentSelectedUsers.forEach(function (t) {
                    e.users.splice(e.users.indexOf(t), 1),
                      e.userIds.splice(e.userIds.indexOf(t.id), 1);
                  }),
                  (e.currentSelectedUsers = []),
                  setTimeout(function () {
                    return (e.isUsersShowed = !0);
                  }, 0);
              }),
              (e.prototype.selectGroups = function (t) {
                (t.isGroupsShowed = !1),
                  e.moveItems(t.currentAvailableGroups, t.groups),
                  e.moveItemIds(t.currentAvailableGroups, t.groupIds),
                  (t.currentAvailableGroupIds = []),
                  (t.currentAvailableGroups = []),
                  t.groups.sort(this.groupsCompareFn),
                  setTimeout(function () {
                    return (t.isGroupsShowed = !0);
                  }, 0);
              }),
              (e.prototype.unselectGroups = function (e) {
                (e.isGroupsShowed = !1),
                  e.currentSelectedGroups.forEach(function (t) {
                    e.groups.splice(e.groups.indexOf(t), 1),
                      e.groupIds.splice(e.groupIds.indexOf(t.id), 1);
                  }),
                  (e.currentSelectedGroups = []),
                  setTimeout(function () {
                    return (e.isGroupsShowed = !0);
                  }, 0);
              }),
              (e.prototype.disableUser = function (e, t) {
                switch (t.permission.type) {
                  case n.SecuredObjectType.MATERIAL.name.toUpperCase():
                    var r =
                      this.$scope.objectModel[this.$scope.objectModelProperty];
                    return r.ownerId == e.id;
                  case n.SecuredObjectType.PLAYLIST.name.toUpperCase():
                    var i =
                      this.$scope.objectModel[this.$scope.objectModelProperty];
                    return i.ownerId == e.id;
                  case n.SecuredObjectType.COURSE.name.toUpperCase():
                    var s =
                      this.$scope.objectModel[this.$scope.objectModelProperty];
                    return -1 != s.ownerIds.indexOf(e.id);
                  case n.SecuredObjectType.QUIZ.name.toUpperCase():
                    var o =
                      this.$scope.objectModel[this.$scope.objectModelProperty];
                    return o.ownerId == e.id;
                }
                return !1;
              }),
              (e.prototype.getAvailableUsersUrl = function (e, t) {
                var r = this.$scope.isPermissionsDelegation
                  ? "/api/userSelector/managedUsers?businessUnitId=" + e
                  : "/api/userSelector/users?businessUnitId=" + e;
                return (
                  t &&
                    t.length > 0 &&
                    t.forEach(function (e) {
                      return (r += "&excludedUserIds=" + e);
                    }),
                  r
                );
              }),
              (e.prototype.getAvailableGroupsUrl = function (t, r, i) {
                var s = this.$scope.isPermissionsDelegation
                    ? "/api/userSelector/managedGroups?businessUnitId=" + t
                    : "/api/userSelector/groups?businessUnitId=" + t,
                  o = !1;
                return (
                  r &&
                    r.length > 0 &&
                    r.forEach(function (t) {
                      (s += "&excludedGroupIds=" + t),
                        o || (o = t === e.ALL_USERS_GROUP_ID);
                    }),
                  o ||
                    -1 !== a.AllUsersPermissions.PERMISSIONS_IDS.indexOf(i) ||
                    (s += "&excludedGroupIds=" + e.ALL_USERS_GROUP_ID),
                  s
                );
              }),
              (e.prototype.getCurrentUserId = function () {
                return this.$scope.currentUserIdModel &&
                  this.$scope.currentUserIdModelProperty
                  ? this.$scope.currentUserIdModel[
                      this.$scope.currentUserIdModelProperty
                    ]
                  : null;
              }),
              (e.prototype.getCurrentUserName = function () {
                return this.$scope.currentUserNameModel &&
                  this.$scope.currentUserNameModelProperty
                  ? this.$scope.currentUserNameModel[
                      this.$scope.currentUserNameModelProperty
                    ]
                  : null;
              }),
              (e.prototype.getCurrentUser = function () {
                return {
                  id: this.getCurrentUserId(),
                  name: this.getCurrentUserName(),
                };
              }),
              (e.moveItems = function (e, t) {
                e.forEach(function (e) {
                  var r = t.map(function (e) {
                      return e.id;
                    }),
                    i = r.indexOf(e.id);
                  -1 === i && t.push(e);
                });
              }),
              (e.moveItemIds = function (e, t) {
                e.forEach(function (e) {
                  var r = t.indexOf(e.id);
                  -1 === r && t.push(e.id);
                });
              }),
              (e.ALL_USERS_GROUP_ID = 1),
              (e.$inject = ["$scope", "$q", s.UserService.NAME]),
              e
            );
          })();
        (r.UsersAndGroupsSelectorController = u),
          (i.$inject = [o.UrlService.NAME]),
          (r.UsersAndGroupsSelectorDirectiveFactory = i);
      },
      {
        "./../security/permissions/IPermission": 167,
        "./../security/permissions/SecuredObjectType": 168,
        "./../users/UserService": 218,
        "./../utils/UrlService": 236,
      },
    ],
    58: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i) {
            i.init(e, t);
          }
          var r = {
            restrict: "AE",
            link: t,
            controller: c,
            scope: { id: "@?" },
            templateUrl: e.template("components/vhs-embedded-material.html"),
          };
          return r;
        }
        var s = e("./../utils/UrlService"),
          o = e("./../courses/CourseService"),
          n = e("../utils/RandomUtils"),
          a = e("../utils/StringBuilder"),
          u = e("./../materials/models/MaterialType"),
          l = e("./../utils/ObjectTypeUtils"),
          c = (function () {
            function e(e, t, r) {
              (this.$scope = e),
                (this.$timeout = t),
                (this.courseApi = r),
                (e.vm = this);
            }
            return (
              (e.prototype.init = function (e, t) {
                (this.materialId = parseInt(e.id)),
                  this.loadMaterial(this.materialId);
              }),
              (e.prototype.multimediaErrorCallback = function (e, t) {
                return this.loadMaterial(this.materialId);
              }),
              (e.prototype.loadMaterial = function (e) {
                var t = this;
                return this.courseApi
                  .getEmbeddedMaterial(this.materialId)
                  .then(function (e) {
                    return (
                      (t.material = angular.copy(e)),
                      (t.multimediaSources = [
                        {
                          src: t.isMaterialYoutubeLink()
                            ? t.material.link
                            : t.material.downloadUrl || "",
                          type: t.isMaterialYoutubeLink()
                            ? "video/youtube"
                            : t.material.contentType,
                          dataRes: "",
                        },
                      ]),
                      (t.isInlineView = !0),
                      t.isMaterialYoutubeLink()
                        ? ((t.materialType = "YOUTUBE"), (t.isInlineView = !1))
                        : ((t.materialType = t.material.typeKey),
                          (t.materialType ==
                            u.MaterialTypeKeyEnum[
                              u.MaterialTypeKeyEnum.VIDEO
                            ] ||
                            t.materialType ==
                              u.MaterialTypeKeyEnum[
                                u.MaterialTypeKeyEnum.AUDIO
                              ]) &&
                            (t.isInlineView = !1)),
                      (t.isMaterialEmpty =
                        t.material.id &&
                        t.material.typeKey !==
                          u.MaterialTypeKeyEnum[u.MaterialTypeKeyEnum.LINK] &&
                        (!t.material.fileStatus ||
                          "EMPTY" === t.material.fileStatus)),
                      (t.isMaterialNotReady =
                        !t.isMaterialEmpty &&
                        t.material.id &&
                        t.material.typeKey !==
                          u.MaterialTypeKeyEnum[u.MaterialTypeKeyEnum.LINK] &&
                        t.material.fileStatus &&
                        "EMPTY" !== t.material.fileStatus &&
                        "READY" !== t.material.fileStatus),
                      (t.isViewAllowed =
                        t.material.permissions.view &&
                        !t.isMaterialEmpty &&
                        !t.isMaterialNotReady),
                      t.material
                    );
                  })
                  ["catch"](function (e) {
                    return (t.material = null), t.material;
                  });
              }),
              (e.prototype.isMaterialYoutubeLink = function () {
                return this.material
                  ? this.material &&
                      this.material.typeKey ==
                        u.MaterialTypeKeyEnum[u.MaterialTypeKeyEnum.LINK] &&
                      l.ObjectTypeUtils.isYoutubeUrl(this.material.link)
                  : void 0;
              }),
              (e.TA_ELEMENT_SELECTOR = "p.ta-vhs-embedded-material"),
              (e.TA_DIRECTIVE_HTML =
                "<div vhs-embedded-material id=':materialId'></div>"),
              (e.TA_RENDER_FUNCTION = function (t, r, i, s) {
                var o = n.RandomUtils.generateRandomId("vhsEmbeddedMaterial_"),
                  a = t.attr("id"),
                  u = a.indexOf("__");
                u >= 0 && (a = a.substring(0, u)),
                  t.replaceWith("<div id='" + o + "'></div>"),
                  s(function () {
                    e.TA_COMPILE_AND_REPLACE_ELEMENT_FUNCTION("#" + o, a, r, i);
                  }, 0);
              }),
              (e.TA_COMPILE_AND_REPLACE_ELEMENT_FUNCTION = function (
                t,
                r,
                i,
                s
              ) {
                $(t).replaceWith(
                  i(
                    a.StringBuilder.interpolate(e.TA_DIRECTIVE_HTML)
                      ["with"](":materialId", r)
                      .build()
                  )(s)
                );
              }),
              (e.$inject = ["$scope", "$timeout", o.CourseService.NAME]),
              e
            );
          })();
        (r.VhsEmbeddedMaterialController = c),
          (r.VhsEmbeddedMaterialDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      {
        "../utils/RandomUtils": 232,
        "../utils/StringBuilder": 233,
        "./../courses/CourseService": 81,
        "./../materials/models/MaterialType": 124,
        "./../utils/ObjectTypeUtils": 230,
        "./../utils/UrlService": 236,
      },
    ],
    59: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i) {}
          return {
            restrict: "A",
            link: t,
            controller: M,
            scope: { course: "=", callbackWhenFinished: "&?" },
            templateUrl: e.template("components/vhs-material-editing.html"),
          };
        }
        var s = e("./../utils/UrlService"),
          o = e("./../utils/UploadUtils"),
          n = e("./../storage/UploadsService"),
          a = e("./../INotifier"),
          u = e("./../utils/Moment"),
          l = e("./../utils/ContentUtils"),
          c = e("./../statistics/ActionLogService"),
          d = e("./../statistics/models/ActionType"),
          h = e("./../security/permissions/SecuredObjectType"),
          p = e("./../ReferencedObjectType"),
          f = e("./../auth/AuthService"),
          m = e("./../users/UserService"),
          S = e("./../security/SecurityService"),
          v = e("./../security/PermissionsService"),
          y = e("./../materials/models/MaterialType"),
          g = e("./../materials/MaterialService"),
          M = (function () {
            function e(e, t, r, i, s, o, n, a, u, l, c) {
              var d = this;
              (this.$scope = e),
                (this.$http = t),
                (this.$uploader = r),
                (this.permissionsService = i),
                (this.userService = s),
                (this.securityService = o),
                (this.authService = n),
                (this.url = a),
                (this.actionLogService = u),
                (this.uploadUtils = l),
                (this.materialService = c),
                (this.material = {}),
                (this.owners = []),
                (this.permissionsWithUsersAndGroups = []),
                (e.vm = this),
                (this.attachFormat = ""),
                (this.disabledSaveButton = !0),
                (this.disabledUploadButton = !1),
                this.initializeMaterial(),
                this.userService
                  .getUsersWithoutExcludedUsersForSelector()
                  .then(function (e) {
                    (d.owners = angular.copy(e)),
                      (d.ownersMap = new Map()),
                      d.owners.forEach(function (e) {
                        d.ownersMap.set(e.id, e);
                      });
                  });
            }
            return (
              (e.prototype.saveOrUpdateMaterial = function (e, t) {
                var r = this;
                (this.disabledSaveButton = !0),
                  (this.disabledUploadButton = !0);
                var i = this.file,
                  s = this.preview;
                if (
                  ((this.material.validity = u.Moment.textToJavaDate(
                    e.validityText
                  )),
                  (this.material.typeKey =
                    y.MaterialTypeEnum[this.material.typeId]),
                  this.material.typeId !== y.MaterialTypeEnum.LINK && this.file)
                ) {
                  var o = l.ContentUtils.getFileExt(i.name);
                  if (l.ContentUtils.checkFileExt(e.typeId, o)) {
                    var c = this.material.id
                      ? this.materialService.update(e, t, !1, i, s)
                      : this.materialService.create(e, t, i, s);
                    c.then(function (e) {
                      if (
                        ((r.material = angular.copy(
                          e[n.UploadsService.MATERIAL_KEY]
                        )),
                        null != r.preview)
                      ) {
                        var t = e[n.UploadsService.PREVIEW_UPLOAD_URL_KEY],
                          o = e[n.UploadsService.PREVIEW_UPLOAD_METHOD_KEY];
                        r.uploadUtils.uploadMaterialByChunks(
                          s,
                          r.material.previewId,
                          r.material.id,
                          t,
                          o
                        );
                      }
                      var a = e[n.UploadsService.FILE_UPLOAD_URL_KEY],
                        u = e[n.UploadsService.FILE_UPLOAD_METHOD_KEY];
                      r.uploadUtils.uploadMaterialByChunks(
                        i,
                        r.material.fileId,
                        r.material.id,
                        a,
                        u
                      ),
                        r.processSuccessCallback(r.material.id);
                    })["catch"](function (e) {
                      "error.storage.not.available" == e.data.error &&
                        a.notifier.error("No available storage");
                    });
                  } else
                    a.notifier.error(
                      "Failed to upload this file: please check whether the file format is valid"
                    ),
                      this.enableButton();
                } else {
                  var c = this.material.id
                    ? this.materialService.update(e, t, !1)
                    : this.materialService.create(e, t);
                  c.then(function (e) {
                    if (
                      ((r.material = angular.copy(
                        e[n.UploadsService.MATERIAL_KEY]
                      )),
                      r.preview)
                    ) {
                      var t = e[n.UploadsService.PREVIEW_UPLOAD_URL_KEY],
                        i = e[n.UploadsService.PREVIEW_UPLOAD_METHOD_KEY];
                      r.uploadUtils.uploadMaterialByChunks(
                        s,
                        r.material.previewId,
                        r.material.id,
                        t,
                        i
                      );
                    }
                    r.processSuccessCallback(r.material.id);
                  })["catch"](function (e) {
                    "error.storage.not.available" == e.data.error &&
                      a.notifier.error("No available storage");
                  });
                }
              }),
              (e.prototype.setFileOrLinkType = function () {
                1 === this.uploadContentType
                  ? ((this.material.typeId = y.MaterialTypeEnum.AUDIO),
                    (this.showUploadButton = !0))
                  : ((this.material.typeId = y.MaterialTypeEnum.LINK),
                    (this.showUploadButton = !1));
              }),
              (e.prototype.setMaterialType = function () {
                if (this.file) {
                  var e = l.ContentUtils.getFileExt(this.file.name);
                  this.material.typeId =
                    l.ContentUtils.findMaterialTypeByFileExtension(e);
                }
              }),
              (e.prototype.enableButton = function () {
                (this.disabledSaveButton = !1),
                  (this.disabledUploadButton = !1);
              }),
              (e.prototype.enableButtonForLinkUpload = function () {
                this.disabledSaveButton = !1;
              }),
              (e.prototype.upload = function (e, t, r) {
                var i = this.url
                  .base(
                    "/api/materials/upload?materialId=:materialId&fileType=:fileType"
                  )
                  .param(":materialId", t)
                  .param(":fileType", r);
                return this.$uploader.upload({
                  method: "POST",
                  url: angular.copy(i).service(),
                  file: e,
                });
              }),
              (e.prototype.reupload = function () {
                (this.fileName = this.showUploadButton
                  ? this.material.fileName
                  : ""),
                  (this.showUploadButton = !this.showUploadButton),
                  (this.file = void 0);
              }),
              (e.prototype.processSuccessCallback = function (e) {
                this.actionLogService.create(
                  e,
                  p.ReferencedObjectType.MATERIAL,
                  d.ActionType.MATERIAL_CREATION
                ),
                  a.notifier.success("The material has been saved"),
                  this.$scope.callbackWhenFinished &&
                    this.$scope.callbackWhenFinished({
                      material: this.material,
                    });
              }),
              (e.prototype.loadPermissionsWithUsersAndGroups = function (e, t) {
                var r = this;
                this.permissionsService
                  .getAllObjectPermissionsWithUsersAndGroups(e, t)
                  .then(function (e) {
                    r.permissionsWithUsersAndGroups = e;
                  });
              }),
              (e.prototype.loadMaterial = function () {
                var e = this,
                  t = this.materialService.get(this.material.id);
                return (
                  t.then(function (t) {
                    (e.material = angular.copy(t)),
                      (e.material.validityText = u.Moment.isValidDate(
                        t.validity
                      )),
                      (e.fileName = t.fileName),
                      t.link
                        ? (e.uploadContentType = 2)
                        : (e.uploadContentType = 1),
                      e.material.typeId != y.MaterialTypeEnum.LINK &&
                        (e.showUploadButton = !e.material.fileId),
                      (e.multimediaSources = [
                        {
                          src: e.material.downloadUrl || "",
                          type: e.material.contentType,
                          dataRes: "",
                        },
                      ]);
                  }),
                  t
                );
              }),
              (e.prototype.initializeMaterial = function () {
                var e = this;
                this.material = {};
                var t = String(this.material.id),
                  r = !!this.material.id;
                this.securityService
                  .demandAuthentication()
                  .demandSystemPermissionsIf(!r, function (e) {
                    return e.addMaterial;
                  })
                  .demandMaterialPermissionsIf(r, t, function (e) {
                    return e.edit;
                  }),
                  (this.file = void 0),
                  (this.preview = void 0),
                  (this.disabledUploadButton = !1),
                  (this.showUploadButton = !0),
                  (this.uploadContentType = 1),
                  r
                    ? ((this.showUploadButton = !1),
                      this.loadMaterial(),
                      this.enableButtonForLinkUpload(),
                      (this.disabledSaveButton = !1),
                      this.loadPermissionsWithUsersAndGroups(
                        h.SecuredObjectType.MATERIAL,
                        t
                      ))
                    : (this.$scope.course &&
                        ((this.material.subjectId =
                          this.$scope.course.subjectId),
                        (this.material.subjectName =
                          this.$scope.course.subjectName),
                        (this.material.author = this.$scope.course.author),
                        (this.material.topic = this.$scope.course.topic),
                        (this.material.languageId =
                          this.$scope.course.languageId),
                        (this.material.languageName =
                          this.$scope.course.languageName),
                        (this.material.summary = this.$scope.course.summary),
                        (this.material.ownerId =
                          this.$scope.course.ownerIds[0]),
                        (this.material.ownerName = this.material.ownerId
                          ? "..."
                          : ""),
                        (this.material.typeId = y.MaterialTypeEnum.VIDEO),
                        (this.material.typeName = "Video"),
                        (this.material.typeKey = "VIDEO")),
                      this.authService.getCurrentUser().then(function (t) {
                        e.material.uploaderId = t.id;
                      }),
                      this.loadPermissionsWithUsersAndGroups(
                        h.SecuredObjectType.MATERIAL
                      ));
              }),
              (e.$inject = [
                "$scope",
                "$http",
                "Upload",
                v.PermissionsService.NAME,
                m.UserService.NAME,
                S.SecurityService.NAME,
                f.AuthService.NAME,
                s.UrlService.NAME,
                c.ActionLogService.NAME,
                o.UploadUtils.NAME,
                g.MaterialService.NAME,
              ]),
              e
            );
          })();
        (r.VhsMaterialEditingController = M),
          (r.VhsMaterialEditingDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      {
        "./../INotifier": 4,
        "./../ReferencedObjectType": 6,
        "./../auth/AuthService": 10,
        "./../materials/MaterialService": 116,
        "./../materials/models/MaterialType": 124,
        "./../security/PermissionsService": 164,
        "./../security/SecurityService": 166,
        "./../security/permissions/SecuredObjectType": 168,
        "./../statistics/ActionLogService": 177,
        "./../statistics/models/ActionType": 184,
        "./../storage/UploadsService": 191,
        "./../users/UserService": 218,
        "./../utils/ContentUtils": 224,
        "./../utils/Moment": 228,
        "./../utils/UploadUtils": 235,
        "./../utils/UrlService": 236,
      },
    ],
    60: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i, s) {
            e.$on("$destroy", function () {
              return n.MenuHelper.removeMenuUpdateListener(i);
            });
          }
          var r = {};
          return (
            (r.restrict = "A"),
            (r.link = t),
            (r.scope = {
              controllable: "=?vhsControllable",
              showFileFormat: "=?vhsShowFileFormat",
            }),
            (r.controller = a),
            (r.templateUrl = e.template("components/vhs-search.html")),
            r
          );
        }
        var s = e("./../utils/UrlService"),
          o = e("./../urls/MaterialsRouter"),
          n = e("./../utils/MenuHelper"),
          a = (function () {
            function e(e, t, r, i) {
              (this.$scope = e),
                (this.$rootScope = t),
                (this.$location = r),
                (this.materialsRouter = i),
                (this.searchVisible = !0),
                n.MenuHelper.addMenuUpdateListener(this),
                (e.vm = this),
                this.$rootScope.__vhsSearchInfo ||
                  (this.$rootScope.__vhsSearchInfo = {
                    fileFormat: "",
                    searchString: "",
                  });
            }
            return (
              (e.prototype.doSubmit = function () {
                this.$location
                  .url(this.materialsRouter.searchUrl())
                  .search(
                    e.FILE_FORMAT_PARAMETER,
                    this.$rootScope.__vhsSearchInfo.fileFormat
                  )
                  .search(
                    e.SEARCH_STRING_PARAMETER,
                    this.$rootScope.__vhsSearchInfo.searchString
                  ),
                  (this.$rootScope.__vhsSearchInfo = {
                    fileFormat: "",
                    searchString: "",
                  });
              }),
              (e.prototype.onMenuItemUpdate = function (e, t) {
                (e != n.MenuHelper.MAIN_MENU_KEY &&
                  e != n.MenuHelper.SEARCH_MENU_KEY &&
                  "" != e) ||
                !this.$scope.controllable
                  ? (this.searchVisible = !0)
                  : (this.searchVisible = !1);
              }),
              (e.FILE_FORMAT_PARAMETER = "fileFormat"),
              (e.SEARCH_STRING_PARAMETER = "searchString"),
              (e.$inject = [
                "$scope",
                "$rootScope",
                "$location",
                o.MaterialsRouter.NAME,
              ]),
              e
            );
          })();
        (r.VhsSearchController = a),
          (r.VhsSearchDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      {
        "./../urls/MaterialsRouter": 204,
        "./../utils/MenuHelper": 227,
        "./../utils/UrlService": 236,
      },
    ],
    61: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i, s) {
            i.makeSelectAll(t, e);
          }
          var r = {};
          return (
            (r.restrict = "A"),
            (r.link = t),
            (r.controller = ["$timeout", o]),
            (r.scope = {}),
            (r.templateUrl = e.template("components/vhs-select-all.html")),
            (r.transclude = !0),
            r
          );
        }
        var s = e("./../utils/UrlService"),
          o = (function () {
            function e(e) {
              this.$timeout = e;
            }
            return (
              (e.prototype.isDisabled = function () {
                var e =
                  !this.targetElement || $(this.targetElement).prop("disabled");
                return $(this.thisElement).prop("disabled", e), e;
              }),
              (e.prototype.getCurrentState = function () {
                var e = this.targetElement.find("option").length,
                  t = this.targetElement.find("option:selected").length;
                return t == e && e > 0;
              }),
              (e.prototype.refreshState = function () {
                try {
                  $(this.thisElement).prop("checked", this.getCurrentState()),
                    this.isDisabled();
                } catch (e) {}
              }),
              (e.prototype.makeSelectAll = function (t, r) {
                var i = this;
                (this.$scope = r),
                  (r.refreshState = function () {
                    i.refreshState;
                  }),
                  (this.thisElement = $(t).find("input")),
                  (this.targetElement = $(t).find("select")),
                  this.isDisabled(),
                  $(document).ready(function () {
                    r.$watch("option", function () {
                      i.refreshState(),
                        i.$timeout(function () {
                          i.refreshState();
                        }, e.TIMER_MILLISECONDS);
                    }),
                      $(document).ready(function () {
                        i.refreshState();
                      }),
                      $(document).on("click", "button", null, function () {
                        setTimeout(function () {
                          i.refreshState();
                        }, e.TIMER_MILLISECONDS);
                      }),
                      $(i.targetElement).change(function () {
                        i.refreshState();
                      }),
                      $(i.targetElement).on(
                        "change",
                        "option",
                        [],
                        function () {
                          i.refreshState();
                        }
                      ),
                      $(i.thisElement).change(function (e) {
                        if (i.isDisabled() || e.isDefaultPrevented())
                          return e.preventDefault(), void i.refreshState();
                        for (
                          var t = i.targetElement.find("option"),
                            r = i.getCurrentState(),
                            s = 0;
                          s < t.length;
                          s++
                        )
                          $(t[s]).prop("selected") != !r &&
                            ($(t[s]).prop("selected", !r),
                            $(t[s]).trigger("change"));
                        i.isDisabled() ||
                          (i.thisElement.blur(), i.targetElement.focus());
                      });
                  });
              }),
              (e.TIMER_MILLISECONDS = 1e3),
              (e.$inject = ["$timeout"]),
              e
            );
          })();
        (r.VhsSelectAllDirectiveFactory = i), (i.$inject = [s.UrlService.NAME]);
      },
      { "./../utils/UrlService": 236 },
    ],
    62: [
      function (e, t, r) {
        function i() {
          function e(e) {
            e.vhsThumbnailModel.previewUrl =
              e.vhsThumbnailModel.previewUrl ||
              (
                "themes/default/img/thumbnail-" +
                (s.MaterialTypeEnum[
                  e.vhsThumbnailModel.materialTypeId ||
                    e.vhsThumbnailModel.typeId
                ] ||
                  e.vhsThumbnailModel.contentTypeKey ||
                  e.vhsThumbnailModel.typeKey) +
                ".png"
              ).toLowerCase();
          }
          return {
            priority: 1,
            restrict: "A",
            scope: { vhsThumbnailModel: "=" },
            link: e,
          };
        }
        var s = e("./../materials/models/MaterialType");
        r.VhsThumbnailDirectiveFactory = i;
      },
      { "./../materials/models/MaterialType": 124 },
    ],
    63: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i) {
            i.init(e, t, "video", !1);
          }
          var r = {};
          return (
            (r.restrict = "A"),
            (r.link = t),
            (r.controller = u),
            (r.scope = {
              vhsId: "=?",
              vhsSources: "=",
              vhsWidth: "=?",
              vhsHeight: "=?",
              vhsPoster: "=?",
              vhsErrorCallback: "&?",
            }),
            (r.templateUrl = e.template("components/vhs-video.html")),
            r
          );
        }
        function s(e) {
          function t(e, t, r, i) {
            i.init(e, t, "video", !0);
          }
          var r = {};
          return (
            (r.restrict = "A"),
            (r.link = t),
            (r.controller = u),
            (r.scope = {
              vhsId: "=?",
              vhsSources: "=",
              vhsWidth: "=?",
              vhsHeight: "=?",
              vhsPoster: "=?",
              vhsErrorCallback: "&?",
            }),
            (r.templateUrl = e.template("components/vhs-video.html")),
            r
          );
        }
        function o(e) {
          function t(e, t, r, i) {
            i.init(e, t, "audio", !1);
          }
          var r = {};
          return (
            (r.restrict = "A"),
            (r.link = t),
            (r.controller = u),
            (r.scope = {
              vhsId: "=?",
              vhsSources: "=",
              vhsWidth: "=?",
              vhsHeight: "=?",
              vhsPoster: "=?",
              vhsErrorCallback: "&?",
            }),
            (r.templateUrl = e.template("components/vhs-audio.html")),
            r
          );
        }
        var n = e("./../utils/UrlService"),
          a = e("../utils/RandomUtils"),
          u = (function () {
            function e(e, t) {
              (this.$scope = e), (this.$timeout = t), (this.errorCount = 0);
            }
            return (
              Object.defineProperty(e.prototype, "playerIsPlaying", {
                get: function () {
                  return this._playerIsPlaying;
                },
                set: function (e) {
                  this._playerIsPlaying = e;
                },
                enumerable: !0,
                configurable: !0,
              }),
              Object.defineProperty(e.prototype, "playerCurrentTime", {
                get: function () {
                  return this._playerCurrentTime;
                },
                set: function (e) {
                  e > 0 && (this._playerCurrentTime = e);
                },
                enumerable: !0,
                configurable: !0,
              }),
              (e.prototype.init = function (t, r, i, s) {
                (i = i.toUpperCase()),
                  "AUDIO" !== i && "VIDEO" !== i && (i = "VIDEO");
                var o = this;
                o.$scope = t;
                var n = r.find(i).get(0);
                $(n).on("contextmenu", function (e) {
                  e.preventDefault();
                }),
                  o.$scope.vhsId && (n.id = o.$scope.vhsId),
                  o.$scope.vhsPoster || (o.$scope.vhsPoster = "");
                var u = null;
                r.attr("id") ||
                  r.attr("id", a.RandomUtils.generateRandomId("vhs_videoj_")),
                  (u = r.attr("id"));
                var l = {
                    autoplay: !1,
                    controls: !0,
                    flash: { swf: "vendor/swf/video-js.swf" },
                    loop: !1,
                    poster: o.$scope.vhsPoster || "",
                    preload: "none",
                    techOrder: ["html5", "flash"],
                  },
                  c = {
                    autoplay: !1,
                    controls: !0,
                    loop: !1,
                    poster: "",
                    preload: "none",
                    techOrder: ["youtube"],
                    sources: o.$scope.vhsSources,
                    youtube: { ytControls: 2, enablejsapi: 1 },
                  };
                s &&
                  $(r)
                    .addClass("vhs-youtube-video")
                    .width(o.$scope.vhsWidth)
                    .height(o.$scope.vhsHeight),
                  (s && 0 == $("#" + u).length) ||
                    (!s && 0 == $("#" + n.id).length) ||
                    videojs(s ? u : n, s ? c : l, function () {
                      if (
                        !(
                          (s && 0 == $("#" + u).length) ||
                          (!s && 0 == $("#" + n.id).length)
                        )
                      ) {
                        var t = this;
                        try {
                          var a = r.find(".vjs-poster").get(0);
                          $(r)
                            .find(".video-js")
                            .width(o.$scope.vhsWidth)
                            .height(o.$scope.vhsHeight)
                            .on("contextmenu", function (e) {
                              e.preventDefault();
                            }),
                            t.isAudio("AUDIO" === i),
                            (o._playerIsPlaying = !1),
                            (o._playerCurrentTime = 0),
                            t.on("play", function () {
                              o._playerIsPlaying = !0;
                            }),
                            t.on("ended", function () {
                              (o._playerIsPlaying = !1),
                                t.exitFullscreen(),
                                t.currentTime(0),
                                t.hasStarted(!1);
                            }),
                            t.on("pause", function () {
                              o._playerIsPlaying = !1;
                            }),
                            t.on("changeRes", function () {}),
                            t.on("timeupdate", function () {
                              (o._playerIsPlaying = !t.paused()),
                                t.currentTime() > 0 &&
                                  (o.playerCurrentTime = t.currentTime());
                            }),
                            t.on("loadstart", function () {}),
                            t.on("firstplay", function () {}),
                            t.on("waiting", function () {}),
                            t.on("canplay", function () {}),
                            t.on("canplaythrough", function () {}),
                            t.on("loadedmetadata", function () {}),
                            t.on("loadeddata", function () {}),
                            t.on("stalled", function () {}),
                            t.on("suspend", function () {}),
                            t.on("error", function (r) {
                              if (
                                (o.errorCount++,
                                o.errorCount > e.GIVE_UP_AFTER_SO_MANY_ERRORS)
                              )
                                t.off("error"), o.errorCount--;
                              else if (
                                1 === o.errorCount ||
                                o.errorCount ===
                                  e.GIVE_UP_AFTER_SO_MANY_ERRORS - 1
                              )
                                n.canPlayType &&
                                  o.$scope.vhsSources &&
                                  o.$scope.vhsSources.length > 0,
                                  t.error().code ===
                                    MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED &&
                                    (t
                                      .error()
                                      .message.toUpperCase()
                                      .indexOf("FLASH") >= 0
                                      ? t.options({
                                          techOrder: ["html5", "flash"],
                                        })
                                      : "HTML5" === t.techName.toUpperCase() &&
                                        t.options({
                                          techOrder: ["flash", "html5"],
                                        })),
                                  o.setPlayerSources(t, n, s),
                                  o.reloadPlayer(t, n);
                              else if (o.$scope.vhsErrorCallback) {
                                var i = o.$scope.vhsErrorCallback(t.error());
                                i &&
                                  i.then(function () {
                                    o.$timeout(function () {
                                      o.setPlayerPoster(t, n, a),
                                        n.getAttribute("src") !=
                                        o.$scope.vhsSources[0].src
                                          ? (o.setPlayerSources(t, n, s),
                                            o.reloadPlayer(t, n))
                                          : (t.off("error"),
                                            o.$scope.vhsSources &&
                                              o.$scope.vhsSources.length > 0);
                                    }, e.RETRY_TIME_INTERVAL);
                                  });
                              }
                            });
                        } finally {
                          o.setPlayerSources(t, n, s);
                        }
                      }
                    });
              }),
              (e.prototype.setPlayerSources = function (e, t, r) {
                if (!r) {
                  var i = this;
                  e.src(i.$scope.vhsSources);
                }
              }),
              (e.prototype.setPlayerPoster = function (e, t, r) {
                var i = this;
                i.$scope.vhsPoster &&
                  i.$scope.vhsPoster.length > 0 &&
                  (t.setAttribute("poster", i.$scope.vhsPoster || ""),
                  e.posterImage.setSrc(i.$scope.vhsPoster || ""));
              }),
              (e.prototype.reloadPlayer = function (e, t) {
                var r = this;
                e.one("loadedmetadata", function () {
                  e.currentTime() < r.playerCurrentTime &&
                    (e.currentTime(r.playerCurrentTime),
                    (t.currentTime = r.playerCurrentTime)),
                    r.playerIsPlaying &&
                      e.one("canplay", function () {
                        e.play();
                      });
                }),
                  e.preload("auto"),
                  e.load();
              }),
              (e.GIVE_UP_AFTER_SO_MANY_ERRORS = 5),
              (e.RETRY_TIME_INTERVAL = 1e4),
              (e.$inject = ["$scope", "$timeout"]),
              e
            );
          })();
        (r.VhsVideoAudioController = u),
          (r.VhsVideoDirectiveFactory = i),
          (i.$inject = [n.UrlService.NAME]),
          (r.VhsYoutubeVideoDirectiveFactory = s),
          (s.$inject = [n.UrlService.NAME]),
          (r.VhsAudioDirectiveFactory = o),
          (o.$inject = [n.UrlService.NAME]);
      },
      { "../utils/RandomUtils": 232, "./../utils/UrlService": 236 },
    ],
    64: [
      function (e, t, r) {
        var i = (function () {
          function e() {}
          return (
            (e.TA_SELECT_EMBEDDED_MATERIAL =
              "components.ta:selectEmbeddedMaterial"),
            (e.TA_SELECT_EMBEDDED_BUNDLE =
              "components.ta:selectEmbeddedBundle"),
            (e.TA_SELECT_SANDBOX = "components.ta:selectSandbox"),
            (e.TA_FIND_RICH_TEXT_BIND_CONTROLLER =
              "components.ta:findRichTextBindController"),
            e
          );
        })();
        r.Event = i;
      },
      {},
    ],
    65: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i) {
            i.init(e, t);
          }
          var r = {
            restrict: "A",
            link: t,
            controller: h,
            scope: { bundleId: "@vhsBundleId" },
            templateUrl: e.template(
              "components/vhs-select-embedded-bundle.html"
            ),
          };
          return r;
        }
        var s = e("../../utils/UrlService"),
          o = e("../../IGridModel"),
          n = e("../../IHttpGridService"),
          a = e("../../bundles/models/BundleFileType"),
          u = e("../models/Event"),
          l = e("../../utils/StringBuilder"),
          c = e("../../utils/DomUtils"),
          d = e("../../bundles/BundleService"),
          h = (function () {
            function e(e, t, r, i, s) {
              var a = this;
              (this.$scope = e),
                (this.$timeout = t),
                (this.$http = r),
                (this.bundleApi = i),
                (this.url = s),
                (this.loadPopupContent = void 0),
                (e.vm = this),
                e.$on(u.Event.TA_SELECT_EMBEDDED_BUNDLE, function (e, t) {
                  a.isEventProcessable(t) &&
                    ((a.loadPopupContent = !0),
                    (a.lastEventData = t),
                    a.element
                      .find("div.modal")
                      .modal({ backdrop: "static", keyboard: !1, show: !0 }));
                }),
                (this.bundleFilesGridModel = new o.GridModel(
                  n.HttpGridHelper.createLoader(
                    r,
                    this.url.service("/api/bundles/" + e.bundleId + "/files")
                  )
                )),
                (this.bundleFilesGridModel.pageSize = 6);
            }
            return (
              (e.prototype.init = function (e, t) {
                (this.element = t),
                  (this.richEditorParent = c.DomUtils.findParentWithClass(
                    this.element,
                    "vhs-rich-editor-content"
                  ));
              }),
              (e.prototype.onBundleFileSelect = function (t) {
                var r = "";
                (r =
                  t.type == a.BundleFileTypeEnum[a.BundleFileTypeEnum.IMAGE]
                    ? l.StringBuilder.interpolate(e.EMBEDDED_IMG_TA_HTML)
                        ["with"](":bundleKey", t.key)
                        ["with"](":imageSrc", t.url)
                        .build()
                    : l.StringBuilder.interpolate(e.EMBEDDED_BUNDLE_TA_HTML)
                        ["with"](":bundleKey", t.key)
                        .build()),
                  this.lastEventData.callbackFunction(r);
              }),
              (e.prototype.isEventProcessable = function (e) {
                if (null != e.eventSourceButton) {
                  var t = c.DomUtils.findParentWithClass(
                    e.eventSourceButton,
                    "vhs-rich-editor-content"
                  );
                  if (null != t && t.is(this.richEditorParent)) return !0;
                }
                return !1;
              }),
              (e.EMBEDDED_BUNDLE_TA_HTML =
                '<p class="ta-vhs-embedded-bundle">:bundleKey</p>'),
              (e.EMBEDDED_IMG_TA_HTML =
                '<img class="ta-vhs-embedded-bundle" src=":imageSrc" width="" height="" alt=":bundleKey"/>'),
              (e.$inject = [
                "$scope",
                "$timeout",
                "$http",
                d.BundleService.NAME,
                s.UrlService.NAME,
              ]),
              e
            );
          })();
        (r.VhsSelectEmbeddedBundleMaterialController = h),
          (r.VhsSelectEmbeddedBundleDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      {
        "../../IGridModel": 2,
        "../../IHttpGridService": 3,
        "../../bundles/BundleService": 26,
        "../../bundles/models/BundleFileType": 28,
        "../../utils/DomUtils": 225,
        "../../utils/StringBuilder": 233,
        "../../utils/UrlService": 236,
        "../models/Event": 64,
      },
    ],
    66: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i) {
            i.init(e, t, r.bundleId);
          }
          var r = {
            restrict: "A",
            link: t,
            controller: l,
            scope: { ngModel: "=?", bundle: "=?vhsBundle" },
          };
          return r;
        }
        var s = e("../../utils/UrlService"),
          o = e("../../utils/RandomUtils"),
          n = e("../models/Event"),
          a = e("./../../bundles/BundleService"),
          u = e("./RichTextContentLoadingSynchronizer"),
          l = (function () {
            function e(e, t, r, i, s) {
              (this.$http = e),
                (this.$q = t),
                (this.$timeout = r),
                (this.bundleApi = i),
                (this.loadingSynchronizer = s),
                (this.loadingContent = !1);
            }
            return (
              (e.prototype.init = function (e, t, r) {
                var i = this;
                (this.element = t),
                  (this.elementId = t.attr("id")),
                  this.elementId ||
                    ((this.elementId =
                      o.RandomUtils.generateRandomId("rich_text_element_")),
                    this.element.attr("id", this.elementId)),
                  e.bundle && (this.bundle = e.bundle),
                  e.$watch("ngModel", function (e) {
                    i.onRichTextChange(e);
                  }),
                  !this.bundle &&
                    r &&
                    ((this.loadBundlePromise = this.bundleApi.getBundle(r)),
                    this.loadBundlePromise
                      .then(function (e) {
                        (i.bundle = e), (i.loadBundlePromise = null);
                      })
                      ["catch"](function () {
                        i.loadBundlePromise = null;
                      })),
                  e.$on(
                    n.Event.TA_FIND_RICH_TEXT_BIND_CONTROLLER,
                    function (e, t) {
                      !t.richTextBindController &&
                        t.richTextElementId &&
                        t.richTextElementId == i.elementId &&
                        ((t.richTextBindController = i),
                        e.stopPropagation && e.stopPropagation());
                    }
                  );
              }),
              (e.prototype.onRichTextChange = function (e) {
                var t = this;
                e &&
                  ((this.loadingContent = !0),
                  this.$timeout(function () {
                    t.$timeout(function () {
                      t.loadingSynchronizer
                        .loadContent(
                          t.elementId,
                          t.$timeout(function () {
                            return "";
                          }, 300)
                        )
                        ["finally"](function () {
                          t.$timeout(function () {
                            t.waitContentLoadingDeferred &&
                              (t.waitContentLoadingDeferred.resolve(),
                              (t.waitContentLoadingDeferred = null)),
                              (t.loadingContent = !1);
                          }, 0);
                        });
                    }, 0);
                  }, 0));
              }),
              (e.prototype.getBundleFile = function (e) {
                return this.bundle
                  ? this.$q.when(this.bundle.filesMap.get(e))
                  : this.loadBundlePromise
                  ? this.loadBundlePromise.then(function (t) {
                      return t ? t.filesMap.get(e) : null;
                    })
                  : this.$q.when(null);
              }),
              (e.prototype.loadContentSynchronized = function (e) {
                return this.loadingSynchronizer.loadContent(this.elementId, e);
              }),
              (e.prototype.waitForContentLoaded = function () {
                var e = this;
                return (
                  this.waitContentLoadingDeferred &&
                    this.waitContentLoadingDeferred.reject(),
                  this.$timeout(function () {
                    !e.loadingContent &&
                      e.waitContentLoadingDeferred &&
                      (e.waitContentLoadingDeferred.reject(),
                      (e.waitContentLoadingDeferred = null));
                  }, 0),
                  (this.waitContentLoadingDeferred = this.$q.defer()),
                  this.waitContentLoadingDeferred.promise
                );
              }),
              (e.$inject = [
                "$http",
                "$q",
                "$timeout",
                a.BundleService.NAME,
                u.RichTextContentLoadingSynchronizer.NAME,
              ]),
              e
            );
          })();
        (r.RichTextBindController = l),
          (r.RichTextBindDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      {
        "../../utils/RandomUtils": 232,
        "../../utils/UrlService": 236,
        "../models/Event": 64,
        "./../../bundles/BundleService": 26,
        "./RichTextContentLoadingSynchronizer": 67,
      },
    ],
    67: [
      function (e, t, r) {
        var i = (function () {
          function e(e, t, r) {
            (this.$http = e),
              (this.$q = t),
              (this.$timeout = r),
              (this.richTextLoadersMap = new Map()),
              (this.forcedLoading = !1);
          }
          return (
            (e.prototype.loadContent = function (e, t) {
              var r = this;
              this.richTextLoadersMap.has(e) ||
                this.richTextLoadersMap.set(e, []);
              var i = this.$q.defer(),
                s = { loaderFunction: t, deferred: i };
              return (
                this.richTextLoadersMap.get(e).push(s),
                this.forcedLoading ||
                  ((this.forcedLoading = !0),
                  this.$timeout(function () {
                    r.performLoadContent();
                  }, 0)),
                i.promise
              );
            }),
            (e.prototype.performLoadContent = function () {
              var e = this;
              this.richTextLoadersMap.forEach(function (t, r) {
                var i = [],
                  s = [];
                t.forEach(function (e) {
                  i.push(
                    e.loaderFunction["catch"](function () {
                      return null;
                    })
                  ),
                    s.push(e.deferred);
                }),
                  e.$q.all(i).then(function (e) {
                    for (var t = 0; t < s.length; t++) s[t].resolve(e[t]);
                  });
              }),
                (this.forcedLoading = !1),
                this.richTextLoadersMap.clear();
            }),
            (e.NAME = "components.RichTextContentLoadingSynchronizer"),
            (e.$inject = ["$http", "$q", "$timeout"]),
            e
          );
        })();
        r.RichTextContentLoadingSynchronizer = i;
      },
      {},
    ],
    68: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i) {
            i.init(e, t);
          }
          var r = {
            restrict: "A",
            link: t,
            controller: o,
            scope: {
              allowEmbedMaterials: "@?vhsEmbedMaterials",
              allowBundles: "@?vhsEmbedBundles",
              allowSandbox: "@?vhsEmbedSandbox",
              bundleId: "@?vhsBundleId",
            },
            transclude: !0,
            templateUrl: e.template("components/rich-text-editor.html"),
          };
          return r;
        }
        var s = e("../../utils/UrlService"),
          o = (function () {
            function e(e, t) {
              (this.$scope = e), (this.$timeout = t), (e.vm = this);
            }
            return (
              (e.prototype.init = function (e, t) {
                var r = this;
                (this.element = t),
                  (this.$scope.allowBundles &&
                    this.$scope.allowEmbedMaterials &&
                    this.$scope.allowSandbox &&
                    this.$scope.bundleId) ||
                    this.$timeout(function () {
                      r.hideEditorButtons();
                    }, 0);
              }),
              (e.prototype.hideEditorButtons = function () {
                (this.$scope.allowBundles && this.$scope.bundleId) ||
                  this.element
                    .find("button[name='" + e.TA_EMBEDDED_BUNDLE_BUTTON + "']")
                    .hide(),
                  this.$scope.allowEmbedMaterials ||
                    this.element
                      .find(
                        "button[name='" + e.TA_EMBEDDED_MATERIAL_BUTTON + "']"
                      )
                      .hide(),
                  (this.$scope.allowSandbox && this.$scope.bundleId) ||
                    this.element
                      .find("button[name='" + e.TA_SANDBOX_BUTTON + "']")
                      .hide();
              }),
              (e.TA_EMBEDDED_MATERIAL_BUTTON = "embeddedMaterial"),
              (e.TA_EMBEDDED_BUNDLE_BUTTON = "embeddedBundle"),
              (e.TA_SANDBOX_BUTTON = "sandbox"),
              (e.$inject = ["$scope", "$timeout"]),
              e
            );
          })();
        (r.RichTextEditorController = o),
          (r.RichTextEditorDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      { "../../utils/UrlService": 236 },
    ],
    69: [
      function (e, t, r) {
        function i() {
          function e(e, t, r, i) {
            i.init(e, t);
          }
          var t = { restrict: "C", link: e, controller: a, scope: !1 };
          return t;
        }
        var s = e("../../utils/RandomUtils"),
          o = e("../../utils/DomUtils"),
          n = e("../models/Event"),
          a = (function () {
            function e(e, t, r, i) {
              (this.$scope = e),
                (this.$rootScope = t),
                (this.$timeout = r),
                (this.$http = i);
            }
            return (
              (e.prototype.init = function (e, t) {
                var r = this;
                (this.element = t),
                  this.element.attr("id", "my_href_id"),
                  (this.fileKey = t.attr("href")),
                  this.$timeout(function () {
                    var e = {
                      richTextElementId: r.findRichTextElementId(),
                      richTextBindController: null,
                    };
                    r.$rootScope.$broadcast(
                      n.Event.TA_FIND_RICH_TEXT_BIND_CONTROLLER,
                      e
                    ),
                      (r.richTextBindController = e.richTextBindController),
                      r.loadBundle();
                  }, 0);
              }),
              (e.prototype.loadBundle = function () {
                var e = this;
                this.richTextBindController &&
                  this.fileKey &&
                  this.richTextBindController
                    .getBundleFile(this.fileKey)
                    .then(function (t) {
                      t && t.url && e.element.attr("href", t.url);
                    });
              }),
              (e.prototype.findRichTextElementId = function () {
                var e = o.DomUtils.findParentWithAttr(
                  this.element,
                  "vhs-rich-text-bind"
                );
                return (
                  e ||
                    (e = o.DomUtils.findParentWithAttr(
                      this.element,
                      "ta-bind"
                    )),
                  e ? e.attr("id") : null
                );
              }),
              (e.TA_ELEMENT_SELECTOR = "a.vhs-download-bundle"),
              (e.TA_RENDER_FUNCTION = function (e, t, r, i) {
                var o = e.attr("id");
                o ||
                  ((o = s.RandomUtils.generateRandomId("vhs-download-bundle_")),
                  e.attr("id", o)),
                  i(function () {
                    var i = $("<p></p>").append(e.clone()).html();
                    $("#" + o).replaceWith(t(i)(r));
                  }, 0);
              }),
              (e.$inject = ["$scope", "$rootScope", "$timeout", "$http"]),
              e
            );
          })();
        (r.VhsDownloadBundleController = a),
          (r.VhsDownloadBundleDirectiveFactory = i);
      },
      {
        "../../utils/DomUtils": 225,
        "../../utils/RandomUtils": 232,
        "../models/Event": 64,
      },
    ],
    70: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i) {
            i.init(e, t);
          }
          var r = {
            restrict: "AE",
            link: t,
            controller: d,
            scope: { fileKey: "@?vhsFileKey" },
          };
          return r;
        }
        var s = e("../../utils/UrlService"),
          o = e("../../utils/RandomUtils"),
          n = e("../../utils/DomUtils"),
          a = e("../../utils/StringBuilder"),
          u = e("../../bundles/models/BundleFileType"),
          l = e("./../VhsEmbeddedMaterialDirective"),
          c = e("../models/Event"),
          d = (function () {
            function e(e, t, r, i, s) {
              (this.$scope = e),
                (this.$rootScope = t),
                (this.$timeout = r),
                (this.$http = i),
                (this.$compile = s),
                (e.vm = this);
            }
            return (
              (e.prototype.init = function (e, t) {
                var r = this;
                (this.element = t),
                  (this.fileKey = e.fileKey),
                  this.$timeout(function () {
                    var e = {
                      richTextElementId: r.findRichTextElementId(),
                      richTextBindController: null,
                    };
                    r.$rootScope.$broadcast(
                      c.Event.TA_FIND_RICH_TEXT_BIND_CONTROLLER,
                      e
                    ),
                      (r.richTextBindController = e.richTextBindController),
                      r.loadBundle();
                  }, 0);
              }),
              (e.prototype.loadBundle = function () {
                var e = this;
                if (this.richTextBindController) {
                  var t = this.richTextBindController
                    .getBundleFile(this.fileKey)
                    .then(function (t) {
                      if (
                        ((e.bundleFile = t), e.bundleFile && e.bundleFile.url)
                      ) {
                        if (
                          e.bundleFile.type ==
                            u.BundleFileTypeEnum[u.BundleFileTypeEnum.JS] ||
                          e.bundleFile.type ==
                            u.BundleFileTypeEnum[u.BundleFileTypeEnum.HTML]
                        )
                          return e.$http
                            .get(e.bundleFile.url, e.getHttpConfig())
                            .then(function (e) {
                              return e.data;
                            });
                        if (
                          e.bundleFile.type ==
                          u.BundleFileTypeEnum[u.BundleFileTypeEnum.CSS]
                        ) {
                          var r = "";
                          -1 != e.bundleFile.url.lastIndexOf("_mobile.css") &&
                            (r = "media='handheld'"),
                            e.element.replaceWith(
                              "<link rel='stylesheet' href='" +
                                e.bundleFile.url +
                                "' " +
                                r +
                                " >"
                            );
                        } else
                          e.bundleFile.type ==
                            u.BundleFileTypeEnum[u.BundleFileTypeEnum.IMAGE] &&
                            e.element.append(
                              "<img src='" +
                                e.bundleFile.url +
                                "' alt='' width='" +
                                e.element.attr("width") +
                                "' height='" +
                                e.element.attr("height") +
                                "' style='" +
                                e.element.attr("style") +
                                "' />"
                            );
                      }
                      return null;
                    });
                  this.richTextBindController
                    .loadContentSynchronized(t)
                    .then(function (t) {
                      t && e.processFileContent(t, e.bundleFile);
                    });
                }
              }),
              (e.prototype.processFileContent = function (t, r) {
                var i = this;
                if (t && r)
                  switch (r.type) {
                    case u.BundleFileTypeEnum[u.BundleFileTypeEnum.JS]:
                      try {
                        $.globalEval('"use strict";' + t);
                      } catch (s) {}
                      break;
                    case u.BundleFileTypeEnum[u.BundleFileTypeEnum.HTML]:
                      var o = "";
                      try {
                        r.url &&
                          r.url.indexOf("/") >= 0 &&
                          (o = r.url.substr(0, r.url.lastIndexOf("/") + 1)),
                          (t = this.replaceImagePaths(t, o));
                      } catch (s) {}
                      var n = angular.element(t);
                      this.element.replaceWith(n),
                        n
                          .find(e.EMBEDDED_MATERIALS_IN_CONTENT_SELECTOR)
                          .each(function (e, t) {
                            $(t).attr("id") &&
                              l.VhsEmbeddedMaterialController.TA_COMPILE_AND_REPLACE_ELEMENT_FUNCTION(
                                t,
                                $(t).attr("id"),
                                i.$compile,
                                i.$scope
                              );
                          }),
                        o &&
                          n
                            .find(e.DOWNLOAD_BUNDLES_LINKS_SELECTOR)
                            .each(function (e, t) {
                              var r = $(t),
                                i = r.attr("href");
                              i &&
                                0 != i.indexOf("http") &&
                                0 != i.indexOf("#") &&
                                r.attr("href", o + i);
                            });
                  }
              }),
              (e.prototype.replaceImagePaths = function (e, t) {
                var r = new RegExp('<img(.*?)src="((?!http).*)"', "mg");
                return (
                  (e = e.replace(r, '<img$1src="' + t + '$2"')),
                  (r = new RegExp("<img(.*?)src='((?!http).*)'", "mg")),
                  e.replace(r, '<img$1src="' + t + '$2"')
                );
              }),
              (e.prototype.findRichTextElementId = function () {
                var e = n.DomUtils.findParentWithAttr(
                  this.element,
                  "vhs-rich-text-bind"
                );
                return (
                  e ||
                    (e = n.DomUtils.findParentWithAttr(
                      this.element,
                      "ta-bind"
                    )),
                  e ? e.attr("id") : null
                );
              }),
              (e.prototype.getHttpConfig = function () {
                return { cache: !0, withoutAuthorization: !0, ignore404: !0 };
              }),
              (e.TA_ELEMENT_SELECTOR =
                "p.ta-vhs-embedded-bundle,img.ta-vhs-embedded-bundle"),
              (e.EMBEDDED_MATERIALS_IN_CONTENT_SELECTOR =
                "div.vhs-embedded-material"),
              (e.DOWNLOAD_BUNDLES_LINKS_SELECTOR = "a.vhs-download-bundle"),
              (e.TA_DIRECTIVE_HTML =
                "<div vhs-embedded-bundle vhs-file-key=':fileKey' :imageAttributes></div>"),
              (e.TA_RENDER_FUNCTION = function (t, r, i, s) {
                var n = o.RandomUtils.generateRandomId("vhsEmbeddedBundle_"),
                  u = t.is("img") ? t.attr("alt") : t.text();
                u && (u = u.trim());
                var l = "";
                t.is("img") &&
                  (l =
                    "width='" +
                    t.attr("width") +
                    "' height='" +
                    t.attr("height") +
                    "' style='" +
                    t.attr("style") +
                    "'"),
                  t.replaceWith("<div id='" + n + "'></div>"),
                  s(function () {
                    $("#" + n).replaceWith(
                      r(
                        a.StringBuilder.interpolate(e.TA_DIRECTIVE_HTML)
                          ["with"](":fileKey", u)
                          ["with"](":imageAttributes", l)
                          .build()
                      )(i)
                    );
                  }, 0);
              }),
              (e.$inject = [
                "$scope",
                "$rootScope",
                "$timeout",
                "$http",
                "$compile",
              ]),
              e
            );
          })();
        (r.VhsEmbeddedBundleController = d),
          (r.VhsEmbeddedBundleDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      {
        "../../bundles/models/BundleFileType": 28,
        "../../utils/DomUtils": 225,
        "../../utils/RandomUtils": 232,
        "../../utils/StringBuilder": 233,
        "../../utils/UrlService": 236,
        "../models/Event": 64,
        "./../VhsEmbeddedMaterialDirective": 58,
      },
    ],
    71: [
      function (e, t, r) {
        function i() {
          function e(e, t, r, i) {
            i.init(e, t);
          }
          var t = {
            restrict: "AE",
            link: e,
            controller: u,
            scope: { bundleId: "@?vhsBundleId", fileKey: "@?vhsFileKey" },
          };
          return t;
        }
        var s = e("../../utils/RandomUtils"),
          o = e("../../utils/DomUtils"),
          n = e("../../utils/StringBuilder"),
          a = e("../models/Event"),
          u = (function () {
            function e(e, t, r, i) {
              (this.$scope = e),
                (this.$rootScope = t),
                (this.$timeout = r),
                (this.$http = i);
            }
            return (
              (e.prototype.init = function (e, t) {
                var r = this;
                (this.element = t),
                  (this.fileKey = e.fileKey),
                  this.$timeout(function () {
                    var e = {
                      richTextElementId: r.findRichTextElementId(),
                      richTextBindController: null,
                    };
                    r.$rootScope.$broadcast(
                      a.Event.TA_FIND_RICH_TEXT_BIND_CONTROLLER,
                      e
                    ),
                      (r.richTextBindController = e.richTextBindController),
                      r.loadBundle();
                  }, 0);
              }),
              (e.prototype.loadBundle = function () {
                var e = this;
                this.richTextBindController &&
                  this.richTextBindController
                    .getBundleFile(this.fileKey)
                    .then(function (t) {
                      (e.bundleFile = t),
                        e.bundleFile &&
                          e.bundleFile.url &&
                          (e.element.append(
                            "<iframe sandbox='allow-scripts' src='" +
                              e.bundleFile.url +
                              "' width='" +
                              e.element.attr("width") +
                              "' height='" +
                              e.element.attr("height") +
                              "' style='" +
                              e.element.attr("style") +
                              "' ></iframe>"
                          ),
                          e.element.find("iframe").css({ border: "none" }));
                    })
                    ["catch"](function (t) {
                      e.bundleFile = null;
                    });
              }),
              (e.prototype.findRichTextElementId = function () {
                var e = o.DomUtils.findParentWithAttr(
                  this.element,
                  "vhs-rich-text-bind"
                );
                return (
                  e ||
                    (e = o.DomUtils.findParentWithAttr(
                      this.element,
                      "ta-bind"
                    )),
                  e ? e.attr("id") : null
                );
              }),
              (e.TA_ELEMENT_SELECTOR = "img.ta-vhs-sandbox"),
              (e.TA_DIRECTIVE_HTML =
                "<div vhs-sandbox vhs-bundle-id=':bundleId' vhs-file-key=':fileKey' :imageAttributes></div>"),
              (e.TA_RENDER_FUNCTION = function (t, r, i, o) {
                var a = s.RandomUtils.generateRandomId("vhsSandbox_"),
                  u = t.attr("id"),
                  l = u.indexOf("___"),
                  c = "";
                c = l >= 0 ? u.substring(0, l) : u;
                var d =
                  "width='" +
                  t.attr("width") +
                  "' height='" +
                  t.attr("height") +
                  "' style='" +
                  t.attr("style") +
                  "'";
                t.replaceWith("<div id='" + a + "'></div>"),
                  o(function () {
                    $("#" + a).replaceWith(
                      r(
                        n.StringBuilder.interpolate(e.TA_DIRECTIVE_HTML)
                          ["with"](":fileKey", c)
                          ["with"](":imageAttributes", d)
                          .build()
                      )(i)
                    );
                  }, 0);
              }),
              (e.$inject = ["$scope", "$rootScope", "$timeout", "$http"]),
              e
            );
          })();
        (r.VhsSandboxController = u), (r.VhsSandboxDirectiveFactory = i);
      },
      {
        "../../utils/DomUtils": 225,
        "../../utils/RandomUtils": 232,
        "../../utils/StringBuilder": 233,
        "../models/Event": 64,
      },
    ],
    72: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i) {
            i.init(e, t);
          }
          var r = {
            restrict: "A",
            link: t,
            controller: h,
            scope: { bundleId: "@vhsBundleId" },
            templateUrl: e.template(
              "components/vhs-select-embedded-bundle.html"
            ),
          };
          return r;
        }
        var s = e("../../utils/UrlService"),
          o = e("../../IGridModel"),
          n = e("../../IHttpGridService"),
          a = e("../../bundles/models/BundleFileType"),
          u = e("../models/Event"),
          l = e("../../utils/StringBuilder"),
          c = e("../../utils/DomUtils"),
          d = e("../../bundles/BundleService"),
          h = (function () {
            function e(e, t, r, i, s) {
              var a = this;
              (this.$scope = e),
                (this.$timeout = t),
                (this.$http = r),
                (this.bundleApi = i),
                (this.url = s),
                (this.loadPopupContent = void 0),
                (e.vm = this),
                e.$on(u.Event.TA_SELECT_EMBEDDED_BUNDLE, function (e, t) {
                  a.isEventProcessable(t) &&
                    ((a.loadPopupContent = !0),
                    (a.lastEventData = t),
                    a.element
                      .find("div.modal")
                      .modal({ backdrop: "static", keyboard: !1, show: !0 }));
                }),
                (this.bundleFilesGridModel = new o.GridModel(
                  n.HttpGridHelper.createLoader(
                    r,
                    this.url.service("/api/bundles/" + e.bundleId + "/files")
                  )
                )),
                (this.bundleFilesGridModel.pageSize = 6);
            }
            return (
              (e.prototype.init = function (e, t) {
                (this.element = t),
                  (this.richEditorParent = c.DomUtils.findParentWithClass(
                    this.element,
                    "vhs-rich-editor-content"
                  ));
              }),
              (e.prototype.onBundleFileSelect = function (t) {
                var r = "";
                (r =
                  t.type == a.BundleFileTypeEnum[a.BundleFileTypeEnum.IMAGE]
                    ? l.StringBuilder.interpolate(e.EMBEDDED_IMG_TA_HTML)
                        ["with"](":bundleKey", t.key)
                        ["with"](":imageSrc", t.url)
                        .build()
                    : l.StringBuilder.interpolate(e.EMBEDDED_BUNDLE_TA_HTML)
                        ["with"](":bundleKey", t.key)
                        .build()),
                  this.lastEventData.callbackFunction(r);
              }),
              (e.prototype.isEventProcessable = function (e) {
                if (null != e.eventSourceButton) {
                  var t = c.DomUtils.findParentWithClass(
                    e.eventSourceButton,
                    "vhs-rich-editor-content"
                  );
                  if (null != t && t.is(this.richEditorParent)) return !0;
                }
                return !1;
              }),
              (e.EMBEDDED_BUNDLE_TA_HTML =
                '<p class="ta-vhs-embedded-bundle">:bundleKey</p>'),
              (e.EMBEDDED_IMG_TA_HTML =
                '<img class="ta-vhs-embedded-bundle" src=":imageSrc" width="" height="" alt=":bundleKey"/>'),
              (e.$inject = [
                "$scope",
                "$timeout",
                "$http",
                d.BundleService.NAME,
                s.UrlService.NAME,
              ]),
              e
            );
          })();
        (r.VhsSelectEmbeddedBundleMaterialController = h),
          (r.VhsSelectEmbeddedBundleDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      {
        "../../IGridModel": 2,
        "../../IHttpGridService": 3,
        "../../bundles/BundleService": 26,
        "../../bundles/models/BundleFileType": 28,
        "../../utils/DomUtils": 225,
        "../../utils/StringBuilder": 233,
        "../../utils/UrlService": 236,
        "../models/Event": 64,
      },
    ],
    73: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i) {
            i.init(e, t);
          }
          var r = {
            restrict: "A",
            link: t,
            controller: d,
            scope: {},
            templateUrl: e.template("components/vhs-select-material.html"),
          };
          return r;
        }
        var s = e("../../utils/UrlService"),
          o = e("../../IGridModel"),
          n = e("../../IHttpGridService"),
          a = e("../models/Event"),
          u = e("../../utils/StringBuilder"),
          l = e("../../utils/RandomUtils"),
          c = e("../../utils/DomUtils"),
          d = (function () {
            function e(e, t, r, i) {
              var s = this;
              (this.$scope = e),
                (this.$timeout = t),
                (this.$http = r),
                (this.url = i),
                (this.loadPopupContent = void 0),
                (e.vm = this),
                e.$on(a.Event.TA_SELECT_EMBEDDED_MATERIAL, function (e, t) {
                  s.isEventProcessable(t) &&
                    ((s.loadPopupContent = !0),
                    (s.lastEventData = t),
                    s.element
                      .find("div.modal")
                      .modal({ backdrop: "static", keyboard: !1, show: !0 }));
                }),
                (this.materialsGridModel = new o.GridModel(
                  n.HttpGridHelper.createLoader(
                    r,
                    this.url.service("/api/materials")
                  )
                ));
            }
            return (
              (e.prototype.init = function (e, t) {
                (this.element = t),
                  (this.richEditorParent = c.DomUtils.findParentWithClass(
                    this.element,
                    "vhs-rich-editor-content"
                  ));
              }),
              (e.prototype.onMaterialSelect = function () {
                if (this.materialId) {
                  for (
                    var t = "&nbsp;", r = 0;
                    r < this.materialsGridModel.entries.length;
                    r++
                  ) {
                    var i = this.materialsGridModel.entries[r];
                    if (i.id == this.materialId) {
                      t = i.topic;
                      break;
                    }
                  }
                  this.lastEventData.callbackFunction(
                    u.StringBuilder.interpolate(e.EMBEDDED_MATERIAL_TA_HTML)
                      ["with"](
                        ":materialId",
                        l.RandomUtils.generateRandomId(
                          "" + this.materialId + "__"
                        )
                      )
                      ["with"](":materialName", t)
                      .build()
                  );
                }
              }),
              (e.prototype.isEventProcessable = function (e) {
                if (null != e.eventSourceButton) {
                  var t = c.DomUtils.findParentWithClass(
                    e.eventSourceButton,
                    "vhs-rich-editor-content"
                  );
                  if (null != t && t.is(this.richEditorParent)) return !0;
                }
                return !1;
              }),
              (e.EMBEDDED_MATERIAL_TA_HTML =
                '<p class="ta-vhs-embedded-material" id=":materialId">:materialName</p>'),
              (e.$inject = ["$scope", "$timeout", "$http", s.UrlService.NAME]),
              e
            );
          })();
        (r.VhsSelectMaterialController = d),
          (r.VhsSelectMaterialDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      {
        "../../IGridModel": 2,
        "../../IHttpGridService": 3,
        "../../utils/DomUtils": 225,
        "../../utils/RandomUtils": 232,
        "../../utils/StringBuilder": 233,
        "../../utils/UrlService": 236,
        "../models/Event": 64,
      },
    ],
    74: [
      function (e, t, r) {
        function i(e) {
          function t(e, t, r, i) {
            i.init(e, t);
          }
          var r = {
            restrict: "A",
            link: t,
            controller: p,
            scope: { bundleId: "@vhsBundleId" },
            templateUrl: e.template("components/vhs-select-sandbox.html"),
          };
          return r;
        }
        var s = e("../../utils/UrlService"),
          o = e("../../IGridModel"),
          n = e("../../IHttpGridService"),
          a = e("../../bundles/models/BundleFileType"),
          u = e("../models/Event"),
          l = e("../../utils/StringBuilder"),
          c = e("../../utils/RandomUtils"),
          d = e("../../utils/DomUtils"),
          h = e("../../bundles/BundleService"),
          p = (function () {
            function e(e, t, r, i, s) {
              var l = this;
              (this.$scope = e),
                (this.$timeout = t),
                (this.$http = r),
                (this.bundleApi = i),
                (this.url = s),
                (this.loadPopupContent = void 0),
                (e.vm = this),
                e.$on(u.Event.TA_SELECT_SANDBOX, function (e, t) {
                  l.isEventProcessable(t) &&
                    ((l.loadPopupContent = !0),
                    (l.lastEventData = t),
                    l.element
                      .find("div.modal")
                      .modal({ backdrop: "static", keyboard: !1, show: !0 }));
                }),
                (this.bundleFilesGridModel = new o.GridModel(
                  n.HttpGridHelper.createLoader(
                    r,
                    this.url.service("/api/bundles/" + e.bundleId + "/files")
                  )
                )),
                (this.bundleFilesGridModel.pageSize = 6),
                (this.bundleFilesGridModel.filter.bundleFileType =
                  a.BundleFileTypeEnum[a.BundleFileTypeEnum.HTML]);
            }
            return (
              (e.prototype.init = function (e, t) {
                (this.element = t),
                  (this.richEditorParent = d.DomUtils.findParentWithClass(
                    this.element,
                    "vhs-rich-editor-content"
                  ));
              }),
              (e.prototype.onBundleFileSelect = function (t) {
                var r = l.StringBuilder.interpolate(e.EMBEDDED_IMG_TA_HTML)
                  ["with"](
                    ":bundleId",
                    c.RandomUtils.generateRandomId(t.key + "___")
                  )
                  ["with"](
                    ":imageSrc",
                    this.url.staticResourceUrl(e.SANDBOX_TA_IMG_PATH)
                  )
                  .build();
                this.lastEventData.callbackFunction(r);
              }),
              (e.prototype.isEventProcessable = function (e) {
                if (null != e.eventSourceButton) {
                  var t = d.DomUtils.findParentWithClass(
                    e.eventSourceButton,
                    "vhs-rich-editor-content"
                  );
                  if (null != t && t.is(this.richEditorParent)) return !0;
                }
                return !1;
              }),
              (e.EMBEDDED_IMG_TA_HTML =
                '<img class="ta-vhs-sandbox" id=":bundleId" src=":imageSrc" width="600" height="400"/>'),
              (e.SANDBOX_TA_IMG_PATH = "./themes/default/img/ta_sandbox.png"),
              (e.$inject = [
                "$scope",
                "$timeout",
                "$http",
                h.BundleService.NAME,
                s.UrlService.NAME,
              ]),
              e
            );
          })();
        (r.VhsSelectSandboxController = p),
          (r.VhsSelectSandboxDirectiveFactory = i),
          (i.$inject = [s.UrlService.NAME]);
      },
      {
        "../../IGridModel": 2,
        "../../IHttpGridService": 3,
        "../../bundles/BundleService": 26,
        "../../bundles/models/BundleFileType": 28,
        "../../utils/DomUtils": 225,
        "../../utils/RandomUtils": 232,
        "../../utils/StringBuilder": 233,
        "../../utils/UrlService": 236,
        "../models/Event": 64,
      },
    ],
    75: [
      function (e, t, r) {
        var i = e("./../common/CommonModule"),
          s = e("./../security/SecurityModule"),
          o = e("./../urls/UrlsModule"),
          n = e("./ContentService");
        r.ContentModule = angular
          .module("content", [
            i.CommonModule.name,
            s.SecurityModule.name,
            o.UrlsModule.name,
          ])
          .service(n.ContentService.NAME, n.ContentService);
      },
      {
        "./../common/CommonModule": 29,
        "./../security/SecurityModule": 165,
        "./../urls/UrlsModule": 212,
        "./ContentService": 76,
      },
    ],
    76: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = e("./../ReferencedObjectType"),
          o = (function () {
            function e(e, t) {
              (this.$http = e), (this.url = t);
            }
            return (
              (e.prototype.getContentView = function (e, t) {
                var r =
                  "string" == typeof t
                    ? t
                    : "number" == typeof t
                    ? s.ReferencedObjectType[t]
                    : void 0;
                return this.$http
                  .get(
                    this.url
                      .base("/api/content/:type/:id")
                      .param(":id", e)
                      .param(":type", r)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.NAME = "content.ContentService"),
              (e.$inject = ["$http", i.UrlService.NAME]),
              e
            );
          })();
        r.ContentService = o;
      },
      { "./../ReferencedObjectType": 6, "./../utils/UrlService": 236 },
    ],
    77: [
      function (e, t, r) {
        var i = e("./../security/SecurityService"),
          s = e("./../settings/SettingsService"),
          o = e("./../utils/MenuHelper"),
          n = e("./../utils/PageHeaderHelper"),
          a = e("./../authcore/AuthManager"),
          u = e("./../authcore/AuthRedirect"),
          l = e("../common/CommonNavigation"),
          c = e("./../INotifier"),
          d = e("./../urls/CoursesRouter"),
          h = e("./../urls/AuthRouter"),
          p = e("./../utils/UrlService"),
          f = e("./CourseService"),
          m = e("./ProgressService"),
          S = e("../utils/StringBuilder"),
          v = e("./models/SectionType"),
          y = e("../utils/ObjectTypeUtils"),
          g = e("./../quizzes/QuizService"),
          M = e("./../bundles/BundleService"),
          E = e("../courses/models/CourseProgressStatus"),
          A = e("../auth/AuthService"),
          R = e("./../utils/Moment"),
          T = e("./../infrastructure/Storage"),
          I = e("./models/SectionProgressStatus"),
          P = e("../components/models/Event"),
          C = e("../components/richText/VhsSelectEmbeddedBundleDirective"),
          U = e("../utils/RandomUtils"),
          _ = e("../materials/models/MaterialType"),
          N = e("../urls/PersonalRouter"),
          b = e("moment"),
          w = (function () {
            function e(
              t,
              r,
              i,
              s,
              n,
              a,
              u,
              l,
              c,
              h,
              p,
              f,
              m,
              S,
              y,
              g,
              M,
              E,
              A,
              T,
              I,
              P,
              C
            ) {
              var U = this;
              (this.$location = t),
                (this.$route = r),
                (this.$timeout = i),
                (this.$q = s),
                (this.$scope = n),
                (this.securityService = a),
                (this.settingsService = u),
                (this.$routeParams = l),
                (this.$window = c),
                (this.$sce = h),
                (this.authManager = p),
                (this.authRedirect = f),
                (this.commonNavigation = m),
                (this.url = S),
                (this.coursesRouter = y),
                (this.authRouter = g),
                (this.courseService = M),
                (this.bundleService = E),
                (this.progressService = A),
                (this.quizService = T),
                (this.authService = I),
                (this.sessionStorageWrapper = P),
                (this.personalRouter = C),
                (this.DEFAULT_TOP_MENU_ITEM = "course"),
                (this.DEFAULT_LEFT_MENU_MODULE = 1),
                (this.DEFAULT_INNER_MENU_ITEM = 1),
                (this.ERROR_INTERNET_DISCONNECTED =
                  "error.internet.disconnected"),
                (this.SUBMIT_SECTION_PROGRESS_RETRY_INTERVAL = 1e4),
                (this.sectionsList = []),
                (this.isCourseLoaded = !1),
                (this.isSlideLoading = !0),
                (this.slideLoadingCounter = 0),
                (this.isSlideRemoving = !1),
                (this.isSlideBack = !1),
                (this.showSectionNotAllowedMessage = !1),
                (this.showRePrintParameters = !1),
                (this.modules = []),
                (this.material = {}),
                (this.selectedModule = null),
                (this.selectedSection = null),
                (this.sectionMaterials = []),
                (this.sectionQuiz = {}),
                (this.sectionQuizResults = []),
                (this.sectionQuizCurrentResult = {}),
                (this.sectionQuizPassing = !1),
                (this.sectionQuizCurrentQuestion = {}),
                (this.sectionQuizQuestionAnswered = !1),
                (this.disableCompleteQuizButton = !1),
                (this.currentUserInOwners = !1),
                (this.currentUser = {}),
                (this.nextSection = {}),
                (this.prevSection = {}),
                (this.showSplashPageForStartedCourse = !1),
                (this.disableParticipationForm = !1),
                (this.agreeReleaseDriverHistory = !1),
                (this.course = {}),
                (this.certificateParameters = {
                  format: "pdf",
                  certificateId: null,
                }),
                (this.materialLoaded = !1),
                (this.isCourseMenuVisible = !1),
                (this.isCourseShareMenuVisible = !1),
                (this.showQuizInfoSection = !0),
                (this.showQuizResultsSection = !0),
                (this.showQuizStartSection = !0),
                (this.showLandingPageStartCourseButton = !0),
                (this.showReturnUserPage = !1),
                (this.lmsQuizCompleteListeners = []),
                (this.isCourseStartInProgress = !1),
                (this.sectionStatusUpdatePromise = null),
                (this.minExamDateText = "4/24/2017"),
                (this.minExamDate =
                  1e3 * R.Moment.parse(this.minExamDateText).unix()),
                (this.fourYearsMilliseconds = 1262304e5),
                this.clearAll(),
                (this.courseId = l[d.CoursesRouter.COURSE_ID_PARAM]);
              var _ = t.absUrl().substring(0, t.absUrl().indexOf("#") + 1);
              (this.courseLink =
                _ + this.coursesRouter.detailsUrl(this.courseId)),
                (this.courseShareLink =
                  "http://www.AirSafetyInstitute.org/MedicalAssessment"),
                (this.searchModuleId =
                  parseInt(t.search()[e.MODULE_PARAMETER]) || null),
                (this.searchSectionId =
                  parseInt(t.search()[e.SECTION_PARAMETER]) || null),
                (this.isAuthenticated = this.authManager.isAuthenticated());
              var N = String(this.courseId);
              if (!this.securityService.isAuthenticated())
                return void this.authRedirect.redirectToLogOn();
              this.securityService.demandCoursePermissions(N, function (e) {
                return e.view;
              }),
                this.authService.getCurrentUser().then(function (e) {
                  angular.copy(e, U.currentUser);
                  var t = U.currentUser.fullName.split(" ");
                  U.currentUser.firstName = t[0];
                });
              var b = o.MenuHelper.getCurrentMenuItemKey();
              (b && 0 != b.length) ||
                o.MenuHelper.setCurrentMenuItem(
                  o.MenuHelper.EDUCATION_COURSES_MENU_KEY
                ),
                this.getCurrentDate(),
                this.getCourseProgress()
                  .then(function (e) {
                    return (
                      (U.courseExpired ||
                        U.courseArchived ||
                        (U.courseCompleted &&
                          !U.courseProgress.participantInfoSaved)) &&
                        ((U.searchModuleId = null), (U.searchSectionId = null)),
                      U.searchModuleId ||
                        U.searchSectionId ||
                        !U.courseStarted ||
                        (U.showReturnUserPage = !0),
                      e
                    );
                  })
                  .then(function (e) {
                    return U.loadCourse();
                  })
                  .then(function (e) {
                    var t = [
                      U.loadModules()
                        .then(function () {
                          return U.loadSections(!0);
                        })
                        .then(function () {
                          return U.selectedSection.typeKey ==
                            v.SectionType[v.SectionType.QUIZ]
                            ? U.loadSectionQuiz()
                            : null;
                        }),
                      U.loadBundle(),
                    ];
                    return (
                      t.push(U.loadLandingPage()),
                      U.courseStarted &&
                        U.showReturnUserPage &&
                        U.courseProgress.participantInfoSaved &&
                        t.push(U.loadCourseParticipantInfo()),
                      (!U.courseProgress.submittedToFaa ||
                        U.courseProgress.participantInfoSaved) &&
                        t.push(U.loadCourseProgressHistory()),
                      U.$q.all(t)
                    );
                  })
                  .then(function () {
                    U.checkCourseStartDate();
                  })
                  ["finally"](function () {
                    U.isCourseLoaded = !0;
                  }),
                (c.API = this);
            }
            return (
              (e.prototype.getCurrentDate = function () {
                var e = this;
                return this.settingsService.getCurrentDate().then(function (t) {
                  (e.currentDate = t),
                    (e.minBirthDate = b(e.currentDate)
                      .subtract(120, "years")
                      .valueOf()),
                    (e.maxBirthDate = b(e.currentDate)
                      .subtract(14, "years")
                      .valueOf());
                });
              }),
              (e.prototype.loadModules = function () {
                var e = this;
                return this.courseService
                  .getModules(this.courseId)
                  .then(function (t) {
                    angular.copy(t, e.modules);
                  });
              }),
              (e.prototype.loadSections = function (e) {
                var t = this;
                return this.modules.length > 0
                  ? this.progressService
                      .getCourseSections(this.courseId, this.courseProgressId)
                      .then(function (r) {
                        if (
                          ((t.sectionsList = angular.copy(r)),
                          (t.modulesProgress = new Map()),
                          t.modules.forEach(function (e) {
                            t.sectionsMap.set(
                              e.id,
                              r.filter(function (t) {
                                return t.section.moduleId == e.id;
                              })
                            ),
                              t.setModuleProgress(e.id);
                          }),
                          e)
                        ) {
                          var i = r.filter(function (e) {
                              return (
                                e.section.status ==
                                  I.SectionProgressStatus[
                                    I.SectionProgressStatus.ALLOWED
                                  ] ||
                                e.section.status ==
                                  I.SectionProgressStatus[
                                    I.SectionProgressStatus.STARTED
                                  ] ||
                                e.section.status ==
                                  I.SectionProgressStatus[
                                    I.SectionProgressStatus.FAILED
                                  ]
                              );
                            }),
                            s = null;
                          i.length > 0 &&
                            (s =
                              r.indexOf(i[0]) > 0 &&
                              i[0].section.status ==
                                I.SectionProgressStatus[
                                  I.SectionProgressStatus.ALLOWED
                                ]
                                ? r[r.indexOf(i[0]) - 1].section
                                : i[0].section),
                            t.setMenuItems(s);
                        } else t.getNextSection();
                      })
                  : this.$q.when(null);
              }),
              (e.prototype.loadBundle = function () {
                var t = this;
                return this.course.bundleId
                  ? this.bundleService
                      .getBundle(this.course.bundleId)
                      .then(function (r) {
                        return (
                          (t.courseBundle = r),
                          t.composeRichTextFromLoadAtStartBundles(),
                          t.courseLoadAtStartBundlesText
                            ? t.$timeout(function () {
                                return t.getRichTextLoadedPromise(
                                  e.COURSE_LOAD_AT_START_BUNDLES_RICH_TEXT_ID
                                );
                              }, 0)
                            : null
                        );
                      })
                  : this.$q.when(null);
              }),
              (e.prototype.composeRichTextFromLoadAtStartBundles = function () {
                if (this.courseBundle) {
                  this.courseLoadAtStartBundlesText = "";
                  for (var e = 0; e < this.courseBundle.files.length; e++) {
                    var t = this.courseBundle.files[e];
                    t.loadAtStart &&
                      (this.courseLoadAtStartBundlesText +=
                        S.StringBuilder.interpolate(
                          C.VhsSelectEmbeddedBundleMaterialController
                            .EMBEDDED_BUNDLE_TA_HTML
                        )
                          ["with"](
                            ":bundleId",
                            U.RandomUtils.generateRandomId(t.key + "___")
                          )
                          ["with"](":bundleKey", t.key)
                          .build());
                  }
                }
              }),
              (e.prototype.setModuleProgress = function (e) {
                var t = this.sectionsMap.get(e).filter(function (e) {
                  return (
                    (e.section.typeKey ==
                      v.SectionType[v.SectionType.INFORMATION] &&
                      e.section.status ==
                        I.SectionProgressStatus[
                          I.SectionProgressStatus.OPENED
                        ]) ||
                    (e.section.typeKey == v.SectionType[v.SectionType.QUIZ] &&
                      e.section.status ==
                        I.SectionProgressStatus[
                          I.SectionProgressStatus.COMPLETED
                        ])
                  );
                }).length;
                this.modulesProgress.set(
                  e,
                  Math.round((t / this.sectionsMap.get(e).length) * 100)
                );
              }),
              (e.prototype.loadCourse = function () {
                var e = this;
                return this.courseService.get(this.courseId).then(function (t) {
                  return (
                    (e.course = angular.copy(t)),
                    (e.course.startDateText = R.Moment.isValidDate(
                      t.startDate
                    )),
                    n.PageHeader.set()
                      .header(e.course.topic || e.course.subjectName)
                      .update(),
                    e.isCurrentUserInOwners(),
                    e.course
                  );
                });
              }),
              (e.prototype.checkCourseStartDate = function () {
                if (this.course.startDate) {
                  var e = new Date();
                  b(e).isAfter(this.course.startDate) ||
                  b(e).isSame(this.course.startDate)
                    ? (this.showStartButton = !0)
                    : (this.showStartButton = !1);
                } else this.showStartButton = !0;
              }),
              (e.prototype.setMenuItems = function (e) {
                var t = this;
                null != this.searchModuleId &&
                null != this.searchSectionId &&
                null != this.sectionsMap.get(this.searchModuleId) &&
                this.sectionsMap.get(this.searchModuleId).filter(function (e) {
                  return e.section.id == t.searchSectionId;
                }).length > 0 &&
                this.sectionsMap.get(this.searchModuleId).filter(function (e) {
                  return e.section.id == t.searchSectionId;
                })[0].section.status !=
                  I.SectionProgressStatus[I.SectionProgressStatus.NOT_ALLOWED]
                  ? (this.setLeftMenuModule(
                      this.getModuleById(this.searchModuleId)
                    ),
                    this.setLeftMenuItem(
                      this.sectionsMap
                        .get(this.searchModuleId)
                        .filter(function (e) {
                          return e.section.id == t.searchSectionId;
                        })[0].section
                    ))
                  : null != e
                  ? (this.setLeftMenuModule(this.getModuleById(e.moduleId)),
                    this.setLeftMenuItem(
                      this.sectionsMap.get(e.moduleId).filter(function (t) {
                        return t.section.id == e.id;
                      })[0].section
                    ))
                  : (this.setLeftMenuModule(this.modules[0]),
                    this.setLeftMenuItem(
                      this.sectionsMap.get(this.modules[0].id)[0].section
                    ));
              }),
              (e.prototype.setLeftMenuModule = function (e) {
                (this.selectedModule = e),
                  this.menuKey.leftMenuModuleExpanded !== e.id &&
                    (this.checkQuizPassing() ||
                      (this.menuKey.leftMenuModuleExpanded = e.id));
              }),
              (e.prototype.goToTheModule = function (e) {
                var t = this;
                e &&
                  !this.showParticipationForm &&
                  (this.courseStarted && !this.isCourseShouldBeRestarted()
                    ? this.goToTheModuleInternal(e)
                    : !this.showStartButton ||
                      this.isCourseStartInProgress ||
                      this.sectionsMap.get(e.id)[0].section
                        .lockUntilPreviousSectionsRead ||
                      this.startCourse(!0).then(function () {
                        t.goToTheModuleInternal(e);
                      }));
              }),
              (e.prototype.goToTheModuleInternal = function (e) {
                var t = this.sectionsMap.get(e.id);
                t.length > 0 &&
                  ((this.menuKey.leftMenuModuleExpanded = e.id),
                  this.setLeftMenuModule(e),
                  this.setLeftMenuItem(t[0].section),
                  this.isCourseMenuVisible && this.showHideCourseMenu(!1));
              }),
              (e.prototype.setLeftMenuItem = function (t) {
                var r = this;
                if (
                  t &&
                  t.id &&
                  !(
                    (!this.showSectionNotAllowedMessage &&
                      this.selectedSection &&
                      this.selectedSection.id === t.id) ||
                    this.isSlideRemoving
                  )
                ) {
                  (this.showSplashPageForStartedCourse = !1),
                    (this.isSlideBack =
                      (this.prevSection && t.id == this.prevSection.id) ||
                      (this.courseStarted &&
                        this.showSectionNotAllowedMessage &&
                        this.selectedSection &&
                        this.selectedSection.id == t.id));
                  var i = angular.copy(t);
                  this.isCourseLoaded && e.SLIDE_CHANGE_DELAY
                    ? ((this.isSlideRemoving = !0),
                      this.$timeout(function () {
                        (r.isSlideRemoving = !1),
                          r.scrollPageTop(0),
                          r.setLeftMenuItemInternal(i);
                      }, e.SLIDE_CHANGE_DELAY))
                    : this.setLeftMenuItemInternal(i);
                }
              }),
              (e.prototype.setLeftMenuItemInternal = function (t) {
                var r = this,
                  i = [],
                  s = null,
                  o = null,
                  a = null,
                  u = null,
                  l = this.isSectionViewAllowed(t),
                  c = this.courseStarted && this.checkQuizPassing();
                if (this.courseStarted)
                  if (this.showReturnUserPage)
                    (this.lastViewedSectionOnLoad = t),
                      this.$location
                        .search(e.MODULE_PARAMETER, null)
                        .search(e.SECTION_PARAMETER, null)
                        .replace();
                  else if (
                    !c &&
                    l &&
                    this.selectedSection &&
                    this.selectedSection.id != t.id
                  ) {
                    if (
                      ((this.isViewAllowed = !1),
                      t.typeKey == v.SectionType[v.SectionType.QUIZ] &&
                        (this.clearSectionQuizParameters(),
                        i.push(this.loadSectionQuiz(t.id))),
                      (s = this.$q.defer()),
                      (o = s.promise.then(function () {
                        (r.selectedSection = angular.copy(t)),
                          n.PageHeader.set()
                            .header(
                              r.selectedSection.name +
                                ": " +
                                (r.course.topic || r.course.subjectName)
                            )
                            .update(),
                          r.$location
                            .search(e.MODULE_PARAMETER, t.moduleId)
                            .search(e.SECTION_PARAMETER, t.id)
                            .replace(),
                          (r.menuKey.leftMenuItem = t.id),
                          (r.menuKey.leftMenuItemType = t.typeKey),
                          (r.menuKey.leftMenuModule =
                            r.menuKey.leftMenuModuleExpanded),
                          (r.material = {}),
                          r.resetLMSState(),
                          r.getNextSection(),
                          r.getPrevSection();
                        var i = [];
                        r.isSelectedSectionTypeInfo() &&
                          i.push(r.loadSectionMaterials());
                        var s = r.getRichTextLoadedPromise(
                          e.SECTION_SUMMARY_RICH_TEXT_ID
                        );
                        return s && i.push(s), r.$q.all(i);
                      })),
                      t.typeKey == v.SectionType[v.SectionType.INFORMATION] &&
                        t.status ==
                          I.SectionProgressStatus[
                            I.SectionProgressStatus.ALLOWED
                          ])
                    ) {
                      var d = t.id,
                        h = t.moduleId;
                      (a = this.$q.defer()),
                        (u = a.promise.then(function () {
                          return r
                            .setSectionStatusOpened(d, h)
                            ["catch"](function (e) {
                              e == r.ERROR_INTERNET_DISCONNECTED &&
                                r.setStatusOpenedRetry(d, h);
                            });
                        }));
                    }
                  } else
                    !c && l
                      ? ((s = this.$q.defer()),
                        (o = s.promise.then(function () {
                          n.PageHeader.set()
                            .header(
                              r.selectedSection.name +
                                ": " +
                                (r.course.topic || r.course.subjectName)
                            )
                            .update();
                        })))
                      : c ||
                        l ||
                        ((s = this.$q.defer()),
                        (o = s.promise.then(function () {
                          (r.showSectionNotAllowedMessage = !0),
                            n.PageHeader.set()
                              .header("Missing Prerequisites")
                              .update();
                        })));
                else
                  (s = this.$q.defer()),
                    (o = s.promise.then(function () {
                      return (
                        r.$location
                          .search(e.MODULE_PARAMETER, null)
                          .search(e.SECTION_PARAMETER, null)
                          .replace(),
                        r.getRichTextLoadedPromise(e.LANDING_PAGE_RICH_TEXT_ID)
                      );
                    }));
                (this.showSectionNotAllowedMessage = !1),
                  (this.isSlideLoading = !0),
                  this.slideLoadingCounter++,
                  this.$q
                    .all(i)
                    .then(function () {
                      return s && o ? (s.resolve(), o) : null;
                    })
                    ["finally"](function () {
                      r.slideLoadingCounter--,
                        0 == r.slideLoadingCounter && (r.isSlideLoading = !1);
                    })
                    .then(function () {
                      !r.isSlideLoading &&
                        a &&
                        u &&
                        r.runSectionStatusUpdateDeferred(a, u);
                    });
              }),
              (e.prototype.runSectionStatusUpdateDeferred = function (e, t) {
                var r = this,
                  i = t.then(function () {
                    r.sectionStatusUpdatePromise == i &&
                      (r.sectionStatusUpdatePromise = null);
                  });
                this.sectionStatusUpdatePromise
                  ? (this.sectionStatusUpdatePromise["finally"](function () {
                      return e.resolve(), i;
                    }),
                    (this.sectionStatusUpdatePromise = i))
                  : ((this.sectionStatusUpdatePromise = i), e.resolve());
              }),
              (e.prototype.getRichTextLoadedPromise = function (e) {
                var t = this,
                  r = this.$q.defer(),
                  i = { richTextElementId: e, richTextBindController: null },
                  s = function () {
                    return (
                      t.$scope.$broadcast(
                        P.Event.TA_FIND_RICH_TEXT_BIND_CONTROLLER,
                        i
                      ),
                      i.richTextBindController
                    );
                  },
                  o = function (e) {
                    return e.waitForContentLoaded()["finally"](function () {
                      r.resolve();
                    });
                  },
                  n = function () {
                    var e = s();
                    e ? o(e) : r.resolve();
                  },
                  a = s();
                if (a) o(a);
                else if (this.isCourseLoaded)
                  this.$timeout(function () {
                    n();
                  }, 0);
                else
                  var u = this.$scope.$watch("vm.isCourseLoaded", function (e) {
                    e &&
                      (u(),
                      t.$timeout(function () {
                        n();
                      }, 0));
                  });
                return r.promise;
              }),
              (e.prototype.isSectionViewAllowed = function (e) {
                return this.courseStarted && "NOT_ALLOWED" !== e.status;
              }),
              (e.prototype.setSectionStatusOpened = function (e, t) {
                var r,
                  i = this;
                return this.progressService
                  .setSectionProgress(
                    this.courseId,
                    e,
                    I.SectionProgressStatus[I.SectionProgressStatus.OPENED],
                    this.courseProgressId
                  )
                  .then(function (r) {
                    (i.sectionsMap.get(t).filter(function (t) {
                      return t.section.id == e;
                    })[0].section.status =
                      I.SectionProgressStatus[I.SectionProgressStatus.OPENED]),
                      (i.sectionsList.filter(function (t) {
                        return t.section.id == e;
                      })[0].section.status =
                        I.SectionProgressStatus[
                          I.SectionProgressStatus.OPENED
                        ]),
                      i.setModuleProgress(t),
                      i.recalculateLockSectionsStatuses(),
                      i.getNextSection();
                  })
                  ["catch"](function (e) {
                    return (
                      (r = e),
                      e && e.data && e.data.error
                        ? void 0
                        : i.$q.reject(i.ERROR_INTERNET_DISCONNECTED)
                    );
                  })
                  ["finally"](function () {
                    void 0 === r &&
                      i.progressService
                        .getSectionProgress(i.courseId, e, i.courseProgressId)
                        .then(function (r) {
                          r.status !=
                            I.SectionProgressStatus[
                              I.SectionProgressStatus.OPENED
                            ] &&
                            i
                              .setSectionStatusOpened(e, t)
                              ["catch"](function (r) {
                                r == i.ERROR_INTERNET_DISCONNECTED &&
                                  i.setStatusOpenedRetry(e, t);
                              });
                        });
                  });
              }),
              (e.prototype.setStatusOpenedRetry = function (e, t) {
                var r = this;
                this.$timeout(function () {
                  r.setSectionStatusOpened(e, t)["catch"](function (i) {
                    i == r.ERROR_INTERNET_DISCONNECTED &&
                      r.setStatusOpenedRetry(e, t);
                  });
                }, this.SUBMIT_SECTION_PROGRESS_RETRY_INTERVAL);
              }),
              (e.prototype.recalculateLockSectionsStatuses = function () {
                var e = this.sectionsList.filter(function (e) {
                  return (
                    e.section.lockUntilPreviousSectionsRead &&
                    e.section.status ==
                      I.SectionProgressStatus[
                        I.SectionProgressStatus.NOT_ALLOWED
                      ]
                  );
                });
                if (e.length > 0) {
                  var t = e[0],
                    r = this.sectionsList.indexOf(t),
                    i = this.sectionsList.filter(function (e, t) {
                      return (
                        r > t &&
                        (e.section.status ==
                          I.SectionProgressStatus[
                            I.SectionProgressStatus.OPENED
                          ] ||
                          e.section.status ==
                            I.SectionProgressStatus[
                              I.SectionProgressStatus.COMPLETED
                            ])
                      );
                    });
                  i.length == r &&
                    ((t.section.status =
                      I.SectionProgressStatus[I.SectionProgressStatus.ALLOWED]),
                    (this.sectionsMap
                      .get(t.section.moduleId)
                      .filter(function (e) {
                        return e.section.id == t.section.id;
                      })[0].section.status =
                      I.SectionProgressStatus[
                        I.SectionProgressStatus.ALLOWED
                      ]));
                }
              }),
              (e.prototype.getNextSection = function () {
                this.nextSection = {};
                var e = this.selectedSection.moduleId,
                  t =
                    e && this.sectionsMap.get(e).length > 0
                      ? this.sectionsMap.get(e)[
                          this.sectionsMap.get(e).length - 1
                        ].section.id
                      : null;
                if (t == this.selectedSection.id) {
                  var r = this.getNextModuleId(e);
                  r > 0 &&
                    (this.sectionsMap.get(r)[0]
                      ? (this.nextSection = this.sectionsMap.get(r)[0].section)
                      : (this.nextSection = {}));
                } else
                  for (var i = 0; i < this.sectionsMap.get(e).length; i++)
                    i != this.sectionsMap.get(e).length - 1 &&
                      this.sectionsMap.get(e)[i].section.id ==
                        this.selectedSection.id &&
                      angular.copy(
                        this.sectionsMap.get(e)[i + 1].section,
                        this.nextSection
                      );
              }),
              (e.prototype.getModuleById = function (e) {
                for (var t = {}, r = 0; r < this.modules.length; r++)
                  this.modules[r].id == e && angular.copy(this.modules[r], t);
                return t;
              }),
              (e.prototype.redirectToNextSection = function () {
                (this.menuKey.leftMenuModuleExpanded =
                  this.nextSection.moduleId),
                  this.setLeftMenuModule(
                    this.getModuleById(this.nextSection.moduleId)
                  ),
                  this.setLeftMenuItem(this.nextSection),
                  this.isCourseMenuVisible && this.showHideCourseMenu(!1);
              }),
              (e.prototype.getNextModuleId = function (e) {
                for (var t = 0; t < this.modules.length; t++)
                  if (this.modules[t].id == e && t != this.modules.length - 1)
                    return this.modules[t + 1].id;
                return -1;
              }),
              (e.prototype.getPrevSection = function () {
                this.prevSection = {};
                var e = this.selectedSection.moduleId,
                  t = this.sectionsMap.get(e)[0]
                    ? this.sectionsMap.get(e)[0].section.id
                    : null;
                if (t == this.selectedSection.id) {
                  var r = this.getPrevModuleId(e),
                    i = this.sectionsMap.get(r);
                  r > 0 && i && i.length > 0
                    ? angular.copy(i[i.length - 1].section, this.prevSection)
                    : (this.prevSection = {});
                } else
                  for (
                    var s = 0;
                    s <
                    this.sectionsMap.get(this.menuKey.leftMenuModuleExpanded)
                      .length;
                    s++
                  )
                    0 != s &&
                      this.sectionsMap.get(this.menuKey.leftMenuModuleExpanded)[
                        s
                      ].section.id == this.selectedSection.id &&
                      angular.copy(
                        this.sectionsMap.get(
                          this.menuKey.leftMenuModuleExpanded
                        )[s - 1].section,
                        this.prevSection
                      );
              }),
              (e.prototype.redirectToPrevSection = function () {
                return this.showSectionNotAllowedMessage
                  ? ((this.menuKey.leftMenuModuleExpanded =
                      this.selectedSection.moduleId),
                    void this.setLeftMenuItem(this.selectedSection))
                  : ((this.menuKey.leftMenuModuleExpanded =
                      this.prevSection.moduleId),
                    this.setLeftMenuModule(
                      this.getModuleById(this.prevSection.moduleId)
                    ),
                    this.setLeftMenuItem(this.prevSection),
                    void (
                      this.isCourseMenuVisible && this.showHideCourseMenu(!1)
                    ));
              }),
              (e.prototype.getPrevModuleId = function (e) {
                for (var t = 0; t < this.modules.length; t++)
                  if (this.modules[t].id == e && 0 != t)
                    return this.modules[t - 1].id;
                return -1;
              }),
              (e.prototype.checkQuizPassing = function () {
                return this.sectionQuizPassing &&
                  !this.disableCompleteQuizButton
                  ? (c.notifier.error("Quiz not completed"), !0)
                  : !1;
              }),
              (e.prototype.clearSectionQuizParameters = function () {
                (this.sectionQuiz = {}),
                  (this.sectionQuizResults = []),
                  (this.sectionQuizCurrentResult = {}),
                  (this.sectionQuizPassing = !1),
                  this.commonNavigation.allowNavigation();
              }),
              (e.prototype.isTopMenuActive = function (e) {
                return this.DEFAULT_TOP_MENU_ITEM == e;
              }),
              (e.prototype.isShowProgressTab = function () {
                return (
                  (this.courseStarted ||
                    this.currentUserInOwners ||
                    (this.course.permissions &&
                      this.course.permissions.edit)) &&
                  this.isAuthenticated
                );
              }),
              (e.prototype.isLeftMenuModuleActive = function (e, t) {
                return this.menuKey.leftMenuModuleExpanded == t;
              }),
              (e.prototype.isLeftMenuItemActive = function (e, t, r) {
                return (
                  this.menuKey.leftMenuModule == t &&
                  this.menuKey.leftMenuItem == r
                );
              }),
              (e.prototype.isSelectedSectionTypeInfo = function () {
                return (
                  this.menuKey.leftMenuItemType ===
                  v.SectionType[v.SectionType.INFORMATION]
                );
              }),
              (e.prototype.isSelectedSectionTypeQuiz = function () {
                return (
                  this.menuKey.leftMenuItemType ===
                  v.SectionType[v.SectionType.QUIZ]
                );
              }),
              (e.prototype.isSelectedSectionTypeProblemSolution = function () {
                return (
                  this.menuKey.leftMenuItemType ===
                  v.SectionType[v.SectionType.PROBLEM_SOLUTION]
                );
              }),
              (e.prototype.loadSectionMaterials = function () {
                var e = this;
                return this.selectedSection.materialsCount > 0
                  ? this.courseService
                      .getSectionUploadedOrLinkMaterials(
                        this.courseId,
                        this.menuKey.leftMenuModule,
                        this.selectedSection.id
                      )
                      .then(function (t) {
                        (e.sectionMaterials = angular.copy(t)),
                          e.sectionMaterials.length > 0 &&
                            e.showMaterial(e.sectionMaterials[0]);
                      })
                  : ((this.sectionMaterials = []),
                    (this.material = {}),
                    this.$q.when());
              }),
              (e.prototype.showMaterial = function (e) {
                var t = this;
                (this.materialType = ""),
                  (this.materialLoaded = !1),
                  angular.copy(e, this.material),
                  (this.selectedMaterialId = e.id),
                  this.$timeout(function () {
                    (t.materialLoaded = !0),
                      t.isYoutubeLink(t.material)
                        ? (t.materialType = "YOUTUBE")
                        : (t.materialType = t.material.typeKey),
                      (t.isMaterialEmpty =
                        t.material.id &&
                        t.material.typeKey !==
                          _.MaterialTypeKeyEnum[_.MaterialTypeKeyEnum.LINK] &&
                        (!t.material.fileStatus ||
                          "EMPTY" === t.material.fileStatus)),
                      (t.isMaterialNotReady =
                        !t.isMaterialEmpty &&
                        t.material.id &&
                        t.material.typeKey !==
                          _.MaterialTypeKeyEnum[_.MaterialTypeKeyEnum.LINK] &&
                        t.material.fileStatus &&
                        "EMPTY" !== t.material.fileStatus &&
                        "READY" !== t.material.fileStatus),
                      (t.isViewAllowed =
                        t.materialLoaded &&
                        !t.isMaterialEmpty &&
                        !t.isMaterialNotReady),
                      (t.multimediaSources = [
                        {
                          src: t.isYoutubeLink(t.material)
                            ? t.material.link
                            : t.material.downloadUrl || "",
                          type: t.isYoutubeLink(t.material)
                            ? "video/youtube"
                            : t.material.contentType,
                        },
                      ]);
                  }, 0);
              }),
              (e.prototype.isYoutubeLink = function (e) {
                return 3 == e.typeId && y.ObjectTypeUtils.isYoutubeUrl(e.link);
              }),
              (e.prototype.getMaterialTypeClass = function (e) {
                return y.ObjectTypeUtils.getMaterialGlyphiconClassFromKey(e);
              }),
              (e.prototype.loadSectionQuiz = function (e) {
                var t = this;
                return this.courseService
                  .getSectionQuiz(
                    this.courseId,
                    this.menuKey.leftMenuModule,
                    e || this.selectedSection.id
                  )
                  .then(function (r) {
                    return (
                      angular.copy(r, t.sectionQuiz),
                      t.sectionQuiz.id
                        ? t.loadSectionQuizResults(t.sectionQuiz.id, e)
                        : r
                    );
                  });
              }),
              (e.prototype.loadSectionQuizResults = function (e, t) {
                var r = this;
                return this.quizService
                  .getUserQuizResults(
                    e,
                    "COURSE",
                    t || this.selectedSection.id,
                    this.courseProgressId
                  )
                  .then(function (e) {
                    angular.copy(e, r.sectionQuizResults);
                  });
              }),
              (e.prototype.startSectionQuiz = function () {
                var e = this;
                (this.disableCompleteQuizButton = !0),
                  this.quizService
                    .startQuizByUser(
                      this.sectionQuiz.id,
                      "COURSE",
                      this.selectedSection.id,
                      this.courseProgressId
                    )
                    .then(function (t) {
                      angular.copy(t, e.sectionQuizCurrentResult),
                        (e.disableCompleteQuizButton = !1),
                        (e.sectionQuizPassing = !0),
                        angular.copy(
                          e.sectionQuiz.questions[0],
                          e.sectionQuizCurrentQuestion
                        ),
                        (e.sectionQuizCurrentQuestionIndex = 0),
                        e.commonNavigation.preventNavigation(),
                        (e.sectionQuizCurrentResult.answers = []),
                        (e.sectionQuizDuration =
                          null != e.sectionQuiz.duration
                            ? Math.round(
                                e.sectionQuiz.duration -
                                  (new Date().getTime() - t.startTime) / 1e3
                              )
                            : null),
                        null != e.sectionQuizDuration &&
                        e.sectionQuizDuration < 0
                          ? e.completeSectionQuiz()
                          : null != e.sectionQuizDuration &&
                            (e.$scope.$broadcast(
                              "timer-set-countdown",
                              e.sectionQuizDuration
                            ),
                            e.$scope.$broadcast("timer-start"));
                    });
              }),
              (e.prototype.selectSectionQuizCurrentAnswer = function (e, t) {
                e.answers.forEach(function (e) {
                  e.selected = !1;
                }),
                  (t.selected = !0);
              }),
              (e.prototype.getSectionQuizNextQuestion = function () {
                (this.sectionQuizQuestionAnswered = !1),
                  (this.sectionQuizCurrentQuestionIndex += 1),
                  angular.copy(
                    this.sectionQuiz.questions[
                      this.sectionQuizCurrentQuestionIndex
                    ],
                    this.sectionQuizCurrentQuestion
                  );
              }),
              (e.prototype.submitSectionQuizCurrentQuestionAnswer =
                function () {
                  (this.sectionQuizQuestionAnswered = !0),
                    angular.copy(
                      this.sectionQuizCurrentQuestion,
                      this.sectionQuiz.questions[
                        this.sectionQuizCurrentQuestionIndex
                      ]
                    );
                }),
              (e.prototype.getIsAnsweredQuestionCorrect = function (e) {
                var t = this.sectionQuiz.questions[e].answers;
                return (
                  t.filter(function (e) {
                    return e.isCorrect;
                  }).length ==
                    t.filter(function (e) {
                      return e.selected;
                    }).length &&
                  t.filter(function (e) {
                    return e.selected;
                  }).length ==
                    t.filter(function (e) {
                      return e.isCorrect && e.selected;
                    }).length
                );
              }),
              (e.prototype.completeSectionQuiz = function () {
                var e = this;
                (this.sectionQuizQuestionAnswered = !1),
                  (this.disableCompleteQuizButton = !0),
                  this.sectionQuiz.questions.forEach(function (t) {
                    var r = {
                      quizResultId: e.sectionQuizCurrentResult.id,
                      questionId: t.id,
                      answerIds: t.answers
                        .filter(function (e) {
                          return e.selected;
                        })
                        .map(function (e) {
                          return e.id;
                        }),
                    };
                    e.sectionQuizCurrentResult.answers.push(r);
                  }),
                  this.quizService
                    .completeQuizByUser(this.sectionQuizCurrentResult)
                    .then(function (t) {
                      return (
                        (e.sectionQuizPassing = !1),
                        e.commonNavigation.allowNavigation(),
                        (e.disableCompleteQuizButton = !1),
                        (e.sectionQuizCurrentResult = {}),
                        e.sectionQuiz.questions.forEach(function (e) {
                          e.answers.forEach(function (e) {
                            return (e.selected = !1);
                          });
                        }),
                        e.$scope.$broadcast("timer-clear"),
                        (e.sectionQuizDuration = null),
                        e.loadSections(!1),
                        t
                      );
                    })
                    .then(function (t) {
                      return e
                        .loadSectionQuizResults(e.sectionQuiz.id)
                        .then(function () {
                          return e.isQuizPassed() &&
                            "STARTED" == e.courseProgress.status
                            ? e.getCourseProgress()
                            : void 0;
                        })
                        .then(function () {
                          if (e.lmsQuizCompleteListeners) {
                            for (
                              var t = 0;
                              t < e.lmsQuizCompleteListeners.length;
                              t++
                            )
                              try {
                                e.lmsQuizCompleteListeners[t]();
                              } catch (r) {}
                            e.lmsQuizCompleteListeners = [];
                          }
                        });
                    });
              }),
              (e.prototype.isCurrentUserInOwners = function () {
                for (var e = 0; e < this.course.ownerIds.length; e++)
                  if (this.course.ownerIds[e] == this.currentUser.id) {
                    this.currentUserInOwners = !0;
                    break;
                  }
              }),
              (e.prototype.getCourseProgress = function (e) {
                var t = this;
                return (
                  (this.courseProgressId = e
                    ? e
                    : this.sessionStorageWrapper.get(
                        this.progressService.COURSE_PROGRESS_ID_STORAGE_KEY
                      )),
                  this.progressService
                    .getCourseProgress(this.courseId, this.courseProgressId)
                    .then(function (e) {
                      return t.initializeCourseProgress(e), t.courseProgress;
                    })
                );
              }),
              (e.prototype.loadCourseProgressHistory = function () {
                var e = this;
                return this.progressService
                  .getCourseProgressHistory(this.courseId)
                  .then(function (t) {
                    return (
                      (e.progressHistory = t),
                      e.progressHistory && e.progressHistory.length > 0
                        ? (e.lastFinishedCourseProgress = e.progressHistory[0])
                        : (e.lastFinishedCourseProgress = null),
                      t
                    );
                  });
              }),
              (e.prototype.clearAll = function () {
                (this.menuKey = {
                  leftMenuModule: null,
                  leftMenuModuleExpanded: null,
                  leftMenuItem: null,
                  innerItem: null,
                }),
                  (this.modules = []),
                  (this.selectedModule = {}),
                  (this.sectionsMap = new Map()),
                  (this.selectedSection = {}),
                  (this.prevSection = {}),
                  (this.nextSection = {}),
                  (this.sectionMaterials = []),
                  (this.material = {}),
                  (this.multimediaSources = []);
              }),
              (e.prototype.startCourse = function (e) {
                var t = this;
                if (this.isCourseStartInProgress) return this.$q.when(null);
                (this.showParticipationForm = !1),
                  (this.isCourseStartInProgress = !0);
                var r = this.progressService.startCourse(this.courseId, {});
                return r
                  .then(function (r) {
                    return (
                      (t.showSplashPageForStartedCourse = !1),
                      t.initializeCourseProgress(r),
                      t.loadSections(!e)
                    );
                  })
                  ["finally"](function () {
                    t.isCourseStartInProgress = !1;
                  });
              }),
              (e.prototype.reTakeCourse = function () {
                this.isCourseStartInProgress ||
                  ((this.showReturnUserPage = !1),
                  (this.showSplashPageForStartedCourse = !0));
              }),
              (e.prototype.isCourseShouldBeRestarted = function () {
                return (
                  this.courseExpired ||
                  this.courseArchived ||
                  (this.courseCompleted &&
                    !this.courseProgress.participantInfoSaved)
                );
              }),
              (e.prototype.reTakeQuiz = function () {
                if (this.isRetakeQuizAllowed()) {
                  var e = this.findFirstQuizSection();
                  e &&
                    ((this.showReturnUserPage = !1), this.setLeftMenuItem(e));
                }
              }),
              (e.prototype.isRetakeQuizAllowed = function () {
                if (this.courseJustStarted) {
                  var e = this.findFirstQuizSection();
                  if (e)
                    return (
                      e.status ===
                      I.SectionProgressStatus[I.SectionProgressStatus.FAILED]
                    );
                }
                return !1;
              }),
              (e.prototype.reEnterParticipationFormData = function () {
                this.startEditCourseParticipationForm();
              }),
              (e.prototype.applyForBasicMed = function () {
                this.startEditCourseParticipationForm(!0);
              }),
              (e.prototype.continueWithCourse = function () {
                (this.showReturnUserPage = !1),
                  this.lastViewedSectionOnLoad &&
                    (this.setLeftMenuItem(this.lastViewedSectionOnLoad),
                    (this.lastViewedSectionOnLoad = null));
              }),
              (e.prototype.findFirstQuizSection = function () {
                if (this.modules && this.modules.length > 0)
                  for (var e = 0, t = this.modules; e < t.length; e++) {
                    var r = t[e],
                      i = this.sectionsMap.get(r.id);
                    if (i && i.length > 0)
                      for (var s = 0; s < i.length; s++) {
                        var o = i[s];
                        if (
                          o.section.typeKey ===
                          v.SectionType[v.SectionType.QUIZ]
                        )
                          return o.section;
                      }
                  }
                return null;
              }),
              (e.prototype.initializeCourseProgress = function (e) {
                (this.courseProgress = angular.copy(e)),
                  (this.courseProgressId = this.courseProgress.id),
                  this.sessionStorageWrapper.put(
                    this.progressService.COURSE_PROGRESS_ID_STORAGE_KEY,
                    this.courseProgressId
                  ),
                  (this.courseStarted =
                    e.status &&
                    e.status !==
                      E.CourseProgressStatus[
                        E.CourseProgressStatus.NOT_STARTED
                      ]),
                  (this.courseJustStarted =
                    e.status &&
                    e.status ===
                      E.CourseProgressStatus[E.CourseProgressStatus.STARTED]),
                  (this.coursePassed =
                    e.status &&
                    e.status ===
                      E.CourseProgressStatus[E.CourseProgressStatus.PASSED]),
                  (this.courseCompleted =
                    e.status &&
                    e.status ===
                      E.CourseProgressStatus[E.CourseProgressStatus.COMPLETED]),
                  (this.courseExpired =
                    e.status &&
                    e.status ===
                      E.CourseProgressStatus[E.CourseProgressStatus.EXPIRED]),
                  (this.courseArchived =
                    e.status &&
                    e.status ===
                      E.CourseProgressStatus[E.CourseProgressStatus.ARCHIVED]);
              }),
              (e.prototype.redirectToProgress = function () {
                this.$location.url(
                  this.coursesRouter.progressUrl(this.courseId)
                );
              }),
              (e.prototype.redirectToInfo = function () {
                this.$location.url(this.coursesRouter.infoUrl(this.courseId));
              }),
              (e.prototype.editCourse = function () {
                this.$location.url(this.coursesRouter.updateUrl(this.courseId));
              }),
              (e.prototype.redirectToSection = function (e) {
                this.courseStarted &&
                  this.modules.length > 0 &&
                  this.menuKey.leftMenuItem &&
                  (37 == e.keyCode &&
                    !this.sectionQuizPassing &&
                    this.prevSection.id &&
                    this.redirectToPrevSection(),
                  39 == e.keyCode &&
                    !this.sectionQuizPassing &&
                    this.nextSection.id &&
                    "NOT_ALLOWED" !== this.nextSection.status &&
                    this.redirectToNextSection());
              }),
              (e.prototype.reprintForOptedOutUser = function () {
                this.startEditCourseParticipationForm();
              }),
              (e.prototype.startEditCourseParticipationForm = function (e) {
                var t = this;
                !this.checkQuizPassing() &&
                  this.isParticipationFormAllowed() &&
                  (this.isCourseMenuVisible && this.showHideCourseMenu(!1),
                  (this.isApplyForBasicMed = e),
                  this.getCurrentDate().then(function () {
                    var r = e
                      ? t.getParticipantInfoForApply()
                      : t.getParticipantInfoForEdit();
                    (t.maxExamDate = new Date().getTime()),
                      r
                        ? ((t.showReturnUserPage = !1),
                          t.startWithParticipationForm(r))
                        : t.loadCourseParticipantInfo().then(function (r) {
                            r &&
                              ((t.showReturnUserPage = !1),
                              t.startWithParticipationForm(
                                e
                                  ? t.getParticipantInfoForApply()
                                  : t.getParticipantInfoForEdit()
                              ));
                          });
                  }));
              }),
              (e.prototype.isParticipationFormAllowed = function () {
                return (
                  this.courseProgress &&
                  (this.coursePassed ||
                    ((this.courseJustStarted ||
                      this.courseCompleted ||
                      this.courseExpired ||
                      this.courseArchived) &&
                      this.isCompletedCourseInfoExists()) ||
                    (this.courseCompleted &&
                      !this.courseProgress.participantInfoSaved))
                );
              }),
              (e.prototype.saveParticipationForm = function (e, t) {
                if (
                  !e.$valid ||
                  !this.participationFormData.agreeFourMandatoryAgreements ||
                  !this.agreeReleaseDriverHistory
                ) {
                  $("#participation_form").attr("validation", "");
                  var r = $("#form_validation_popup");
                  return void r.showPopup();
                }
                if (t && this.courseProgressId) {
                  var r = $("#confirmation_popup");
                  return void r.showPopup();
                }
                this.courseProgressId && this.updateCourseParticipantInfo();
              }),
              (e.prototype.loadCourseParticipantInfo = function () {
                var e = this;
                if (2 != this.currentUser.id || this.courseProgressId) {
                  var t = this.courseService.getCourseParticipationInfo(
                    this.courseId,
                    this.courseProgressId
                  );
                  return (
                    t.then(function (t) {
                      e.participationInfo = angular.copy(t);
                    }),
                    t
                  );
                }
                return this.$q.when(null);
              }),
              (e.prototype.modifyParticipationFormDataFields = function () {
                (this.participationFormData.dob =
                  "" != this.dobDateString && null != this.dobDateString
                    ? this.formatDateForSaving(this.dobDateString)
                    : null),
                  (this.participationFormData.examDate =
                    this.formatDateForSaving(this.examDateString)),
                  this.participationFormData.phone.replace("-", ""),
                  this.participationFormData.physicianPhone.replace("-", ""),
                  "USA" !== this.participationFormData.country &&
                    (this.participationFormData.state = "");
              }),
              (e.prototype.updateCourseParticipantInfo = function () {
                var e = this;
                if (!this.disableParticipationForm) {
                  (this.disableParticipationForm = !0),
                    this.modifyParticipationFormDataFields();
                  var t =
                      (this.coursePassed && this.isApplyForBasicMed) ||
                      (this.courseCompleted &&
                        !this.courseProgress.participantInfoSaved),
                    r =
                      (this.coursePassed && this.isApplyForBasicMed) ||
                      (this.courseCompleted &&
                        !this.courseProgress.participantInfoSaved) ||
                      !this.lastFinishedCourseProgress ||
                      !this.lastFinishedCourseProgress.id
                        ? this.courseProgressId
                        : this.lastFinishedCourseProgress.id;
                  return this.courseService
                    .updateCourseParticipationInfo(
                      this.courseId,
                      r,
                      this.participationFormData
                    )
                    .then(function (i) {
                      return (
                        r == e.courseProgressId
                          ? (e.participationInfo = angular.copy(i))
                          : (e.lastFinishedCourseProgress.participationInfo =
                              i),
                        t
                          ? (e.getCertificate(!0, e.participationFormData),
                            e.getCourseProgress(e.courseProgressId))
                          : i
                      );
                    })
                    .then(function () {
                      return e.courseProgress.participantInfoSaved
                        ? e.loadCourseProgressHistory()
                        : void 0;
                    })
                    .then(function () {
                      c.notifier.success(
                        "Your information have been submitted"
                      ),
                        e.cancelParticipationForm();
                    })
                    ["catch"](function (e) {
                      "error.parse.dob.date" == e.data.error
                        ? c.notifier.error("Unable to parse Date of Birth")
                        : "error.parse.exam.date" == e.data.error &&
                          c.notifier.error(
                            "Unable to parse Date of BasicMed-Specific Exam"
                          );
                    })
                    ["finally"](function () {
                      e.disableParticipationForm = !1;
                    });
                }
              }),
              (e.prototype.startWithParticipationForm = function (e) {
                this.initializeParticipationForm(),
                  (this.showParticipationForm = !0);
              }),
              (e.prototype.initializeParticipationForm = function (e) {
                (this.participationFormData = {}),
                  (this.participationFormData.country = "USA"),
                  (this.participationFormData.agreeFourMandatoryAgreements =
                    !1),
                  (this.participationFormData.agreeSendReminder = !1),
                  (this.participationFormData.agreeSendSurvey = !1),
                  (this.participationFormData.agreeSendOtherCommunications =
                    !1),
                  (this.agreeReleaseDriverHistory = !1);
                var t = e ? e : this.getParticipantInfoForEdit();
                if (this.isCompletedCourseInfoExists())
                  (this.participationFormData = angular.copy(t)),
                    (this.dobDateString =
                      null != t.dob ? this.formatDateForDisplay(t.dob) : null),
                    (this.examDateString = this.formatDateForDisplay(
                      t.examDate
                    )),
                    !this.coursePassed ||
                    (this.coursePassed && !this.isApplyForBasicMed)
                      ? (this.agreeReleaseDriverHistory =
                          this.participationFormData.agreeFourMandatoryAgreements)
                      : ((this.participationFormData.agreeSendReminder =
                          "true" == t.agreeSendReminder),
                        (this.participationFormData.agreeSendSurvey =
                          "true" == t.agreeSendSurvey),
                        (this.participationFormData.agreeSendOtherCommunications =
                          "true" == t.agreeSendOtherCommunications));
                else if (2 != this.currentUser.id && null != t.fullName) {
                  this.participationFormData.email = t.email;
                  var r = t.fullName.split(" ");
                  (this.participationFormData.firstName = r[0]),
                    (this.participationFormData.lastName =
                      r.length > 1 ? r[r.length - 1] : ""),
                    (this.dobDateString = null),
                    (this.examDateString = null);
                }
                this.participationFormData.physicianState = "";
              }),
              (e.prototype.cancelParticipationForm = function () {
                (this.showParticipationForm = !1),
                  (this.showReturnUserPage = !0);
              }),
              (e.prototype.loadCourseCertificates = function () {
                return this.$q.when(this.courseCertificates);
              }),
              (e.prototype.isLastSectionInCourse = function (e) {
                return (
                  this.menuKey.leftMenuModuleExpanded ==
                    this.modules[this.modules.length - 1].id &&
                  null !=
                    this.sectionsMap.get(this.menuKey.leftMenuModuleExpanded) &&
                  (e || this.selectedSection.id) ==
                    this.sectionsMap.get(this.menuKey.leftMenuModuleExpanded)[
                      this.sectionsMap.get(this.menuKey.leftMenuModuleExpanded)
                        .length - 1
                    ].section.id
                );
              }),
              (e.prototype.isQuizPassed = function () {
                var e = this.sectionQuizResults.filter(function (e) {
                  return e.passed;
                });
                return e.length > 0;
              }),
              (e.prototype.getCertificate = function (e, t, r) {
                var i = this,
                  s = {
                    courseId: this.courseId,
                    userId: this.currentUser.id,
                    progressId: r ? r : this.courseProgressId,
                    certificateId: this.certificateParameters.certificateId,
                    format: this.certificateParameters.format,
                  };
                t && (s.participationData = JSON.stringify(t)),
                  e
                    ? this.courseService
                        .downloadCertificate(s)
                        .then(function (e) {
                          i.$window.open(e),
                            (i.certificateDownloadLink = e),
                            i.$timeout(function () {
                              var e = $("#certificate_link_popup");
                              e.showPopup();
                            }, 300);
                        })
                    : ((s.format = "png"),
                      this.courseService
                        .downloadCertificate(s)
                        .then(function (e) {
                          return (i.certificateContent =
                            '<img style="width: 100%;" src="' + e + '"/>');
                        }));
              }),
              (e.prototype.showRePrintCertificateParams = function () {}),
              (e.prototype.loadLandingPage = function () {
                var e = this;
                return this.courseService
                  .getLandingPage(this.courseId)
                  .then(function (t) {
                    e.landingPage = angular.copy(t);
                  });
              }),
              (e.prototype.showHideCourseMenu = function (e) {
                var t = this;
                if (
                  !this.isCourseMenuVisible ||
                  (this.isCourseMenuVisible &&
                    this.isCourseShareMenuVisible != e)
                ) {
                  (this.isCourseMenuVisible = !0),
                    (this.isCourseShareMenuVisible = e);
                  var r = $(".interface"),
                    i = r.offset().top,
                    s = i + r.outerHeight();
                  $("html, body").animate({ scrollTop: s }, "slow");
                } else
                  $("html, body").animate(
                    { scrollTop: 0 },
                    "slow",
                    function () {
                      t.isCourseMenuVisible = !1;
                    }
                  );
              }),
              (e.prototype.isCompletedCourseInfoExists = function () {
                return (
                  this.courseProgress.participantInfoSaved ||
                  (!this.courseProgress.submittedToFaa &&
                    this.lastFinishedCourseProgress &&
                    this.lastFinishedCourseProgress.participantInfoSaved)
                );
              }),
              (e.prototype.getCourseCertificateExpirationDate = function () {
                return this.courseProgress.submittedToFaa
                  ? this.courseProgress.archivingDate
                  : this.lastFinishedCourseProgress
                  ? this.lastFinishedCourseProgress.archivingDate
                  : null;
              }),
              (e.prototype.isCourseCertificateExpired = function () {
                return (
                  (this.courseProgress.submittedToFaa && this.courseArchived) ||
                  (!this.courseProgress.submittedToFaa &&
                    this.lastFinishedCourseProgress &&
                    this.lastFinishedCourseProgress.status ===
                      E.CourseProgressStatus[E.CourseProgressStatus.ARCHIVED])
                );
              }),
              (e.prototype.getActualParticipantInfo = function () {
                return !this.courseProgress.submittedToFaa &&
                  this.lastFinishedCourseProgress &&
                  this.lastFinishedCourseProgress.participantInfoSaved
                  ? this.lastFinishedCourseProgress.participationInfo
                  : this.participationInfo;
              }),
              (e.prototype.getParticipantInfoForEdit = function () {
                return !this.courseProgress.submittedToFaa &&
                  this.lastFinishedCourseProgress &&
                  this.lastFinishedCourseProgress.participantInfoSaved
                  ? this.lastFinishedCourseProgress.participationInfo
                  : this.participationInfo;
              }),
              (e.prototype.getParticipantInfoForApply = function () {
                return this.participationInfo;
              }),
              (e.prototype.scrollPageTop = function (e) {
                $("html, body").scrollTop(e);
              }),
              (e.prototype.goToFullScreenMode = function () {
                this.$location.search("fullScreen");
              }),
              (e.prototype.goToHome = function () {
                this.sectionQuizPassing ||
                  (this.$location.url(this.courseLink), this.$route.reload());
              }),
              (e.prototype.getModulePreviewImageBundle = function (t) {
                if (void 0 == this.courseBundle) return void 0;
                if (!this.courseBundle || !t || !t.id) return null;
                var r = S.StringBuilder.interpolate(
                  e.MODULE_PREVIEW_IMAGE_BUNLE_FILE_TEMPLATE
                )
                  ["with"](":index", t.sortIndex)
                  .build();
                return this.courseBundle.filesMap.has(r)
                  ? this.courseBundle.filesMap.get(r)
                  : null;
              }),
              (e.prototype.resetLMSState = function () {
                (this.showQuizInfoSection = !0),
                  (this.showQuizResultsSection = !0),
                  (this.showQuizStartSection = !0),
                  (this.showLandingPageStartCourseButton = !0);
              }),
              (e.prototype.getTemplateForInclude = function (e) {
                return this.url.template(e);
              }),
              (e.prototype.formatDateForSaving = function (e) {
                return R.Moment.parse(e).format("YYYYMMDD");
              }),
              (e.prototype.formatDateForDisplay = function (e) {
                return e
                  ? b(e, "YYYYMMDD").format(R.Moment.DEFAULT_FORMAT)
                  : "";
              }),
              (e.prototype.showExamDateValidationDetails = function () {
                var e = $("#form_exam_date_validation_details_popup");
                e.showPopup();
              }),
              (e.prototype.showWarningMessageToFaaSubmissionForm = function () {
                if (this.examDateString) {
                  var e = new Date(),
                    t = new Date(this.examDateString);
                  return (
                    e.getTime() - t.getTime() >= this.fourYearsMilliseconds
                  );
                }
                return !1;
              }),
              (e.prototype.LMSInitialize = function () {
                return !0;
              }),
              (e.prototype.LMSFinish = function () {
                return !0;
              }),
              (e.prototype.LMSGetValue = function (e) {
                switch (e) {
                  case "vhs.current_section.status":
                    return this.selectedSection.status;
                  case "vhs.current_section.quiz_taken":
                    return this.sectionQuizResults.length > 0;
                  case "vhs.current_section.quiz_passed":
                    return this.isQuizPassed();
                  case "vhs.current_section.quiz_passed_score":
                    for (
                      var t = 0, r = 0;
                      r < this.sectionQuizResults.length;
                      r++
                    ) {
                      var i =
                        this.sectionQuizResults[r].correctAnswersPercentage;
                      i > t && (t = i);
                    }
                    return t;
                  case "vhs.current_section.quiz_last_score":
                    return this.sectionQuizResults[
                      this.sectionQuizResults.length - 1
                    ].correctAnswersPercentage;
                  case "vhs.current_section.quiz_last_passed":
                    return this.sectionQuizResults[
                      this.sectionQuizResults.length - 1
                    ].passed;
                  case "vhs.current_section.quiz_last_correct_answers":
                    return this.sectionQuizResults[
                      this.sectionQuizResults.length - 1
                    ].correctAnswersCount;
                  case "vhs.current_section.quiz_questions_count":
                    return this.sectionQuiz.questions.length;
                  case "vhs.current_date":
                    return this.currentDate;
                  case "vhs.current_section.course-certificates":
                    return this.courseCertificates
                      ? this.courseCertificates
                      : [];
                  case "vhs.course.participation_form_allowed":
                    return this.coursePassed;
                }
                return void 0;
              }),
              (e.prototype.LMSSetValue = function (e, t) {
                switch (e) {
                  case "vhs.current_section.quiz.complete.listener":
                    return "function" == typeof t
                      ? (this.lmsQuizCompleteListeners.push(t), !0)
                      : !1;
                  case "vhs.current_section.course-certificate-id":
                    return (
                      (this.certificateParameters.certificateId = parseInt(t)),
                      parseInt(t)
                    );
                }
              }),
              (e.prototype.LMSCommit = function (e) {
                switch (e) {
                  case "vhs.current_section.start_quiz":
                    return this.startSectionQuiz();
                  case "vhs.current_section.go_back":
                    return this.prevSection && this.prevSection.id
                      ? this.setLeftMenuItem(this.prevSection)
                      : !1;
                  case "vhs.current_section.go_next":
                    return this.nextSection
                      ? this.setLeftMenuItem(this.nextSection)
                      : !1;
                  case "vhs.current_section.go_to_start":
                    return this.modules &&
                      this.modules.length > 0 &&
                      this.sectionsMap.get(this.modules[0].id).length > 0
                      ? (this.setLeftMenuItem(
                          this.sectionsMap.get(this.modules[0].id)[0].section
                        ),
                        !0)
                      : !1;
                  case "vhs.current_section.quiz.hide_info":
                    return (this.showQuizInfoSection = !1);
                  case "vhs.current_section.quiz.hide_results":
                    return (this.showQuizResultsSection = !1);
                  case "vhs.current_section.quiz.hide_start_section":
                    return (this.showQuizStartSection = !1);
                  case "vhs.current_section.landing_page.hide_start_section":
                    return (this.showLandingPageStartCourseButton = !1);
                  case "vhs.start_course":
                    return !this.showParticipationForm && this.showStartButton
                      ? this.startOrContinueCourse()
                      : !1;
                  case "vhs.show_participation_form":
                    return this.showParticipationForm
                      ? !1
                      : (this.startEditCourseParticipationForm(!0), !0);
                  case "vhs.current_section.get_certificate":
                    return this.isQuizPassed()
                      ? this.getCertificate(!0)
                      : (this.courseCertificates &&
                        0 != this.courseCertificates.length
                          ? c.notifier.error(
                              "Impossible to generate the certificate."
                            )
                          : c.notifier.error(
                              "Impossible to generate the certificate. The template of certificate is not found"
                            ),
                        !1);
                }
              }),
              (e.prototype.startOrContinueCourse = function () {
                return (
                  !this.courseStarted || this.isCourseShouldBeRestarted()
                    ? this.startCourse()
                    : this.modules &&
                      this.modules.length > 0 &&
                      this.sectionsMap.get(this.modules[0].id).length > 0
                    ? this.setLeftMenuItem(
                        this.sectionsMap.get(this.modules[0].id)[0].section
                      )
                    : this.nextSection &&
                      this.setLeftMenuItem(this.nextSection),
                  !0
                );
              }),
              (e.prototype.LMSGetLastError = function () {}),
              (e.prototype.LMSGetErrorString = function () {}),
              (e.prototype.LMSGetDiagnostic = function () {}),
              (e.NAME = "courses.CourseDetailsController"),
              (e.SECTION_SUMMARY_RICH_TEXT_ID = "section_summary_rich_text"),
              (e.LANDING_PAGE_RICH_TEXT_ID = "landing_page_rich_text"),
              (e.COURSE_LOAD_AT_START_BUNDLES_RICH_TEXT_ID =
                "course_load_at_start_bundles_rich_text"),
              (e.SLIDE_CHANGE_DELAY = 500),
              (e.MODULE_PREVIEW_IMAGE_BUNLE_FILE_TEMPLATE =
                "module_:index_logo.png"),
              (e.MODULE_PARAMETER = "module"),
              (e.SECTION_PARAMETER = "section"),
              (e.$inject = [
                "$location",
                "$route",
                "$timeout",
                "$q",
                "$scope",
                i.SecurityService.NAME,
                s.SettingsService.NAME,
                "$routeParams",
                "$window",
                "$sce",
                a.AuthManager.NAME,
                u.AuthRedirect.NAME,
                l.CommonNavigation.NAME,
                p.UrlService.NAME,
                d.CoursesRouter.NAME,
                h.AuthRouter.NAME,
                f.CourseService.NAME,
                M.BundleService.NAME,
                m.ProgressService.NAME,
                g.QuizService.NAME,
                A.AuthService.NAME,
                T.Storages.SESSION_NAME,
                N.PersonalRouter.NAME,
              ]),
              e
            );
          })();
        r.CourseDetailsController = w;
      },
      {
        "../auth/AuthService": 10,
        "../common/CommonNavigation": 30,
        "../components/models/Event": 64,
        "../components/richText/VhsSelectEmbeddedBundleDirective": 65,
        "../courses/models/CourseProgressStatus": 86,
        "../materials/models/MaterialType": 124,
        "../urls/PersonalRouter": 206,
        "../utils/ObjectTypeUtils": 230,
        "../utils/RandomUtils": 232,
        "../utils/StringBuilder": 233,
        "./../INotifier": 4,
        "./../authcore/AuthManager": 18,
        "./../authcore/AuthRedirect": 19,
        "./../bundles/BundleService": 26,
        "./../infrastructure/Storage": 105,
        "./../quizzes/QuizService": 149,
        "./../security/SecurityService": 166,
        "./../settings/SettingsService": 171,
        "./../urls/AuthRouter": 194,
        "./../urls/CoursesRouter": 199,
        "./../utils/MenuHelper": 227,
        "./../utils/Moment": 228,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./CourseService": 81,
        "./ProgressService": 84,
        "./models/SectionProgressStatus": 87,
        "./models/SectionType": 89,
        moment: 1,
      },
    ],
    78: [
      function (e, t, r) {
        var i = e("./../urls/CoursesRouter"),
          s = e("./../security/SecurityService"),
          o = e("./../security/PermissionsService"),
          n = e("./../utils/UrlService"),
          a = e("./../authcore/AuthManager"),
          u = e("./../urls/AuthRouter"),
          l = e("./../utils/MenuHelper"),
          c = e("./../utils/PageHeaderHelper"),
          d = e("./../security/permissions/SecuredObjectType"),
          h = e("./../utils/Moment"),
          p = e("./../INotifier"),
          f = e("./../IGridModel"),
          m = e("./../IHttpGridService"),
          S = e("./CourseService"),
          v = e("./../users/UserService"),
          y = e("./../auth/AuthService"),
          g = e("./models/SectionType"),
          M = e("../tree/TreeElementsInfoFiller"),
          E = e("../utils/ObjectTypeUtils"),
          A = e("../utils/UploadUtils"),
          R = e("../storage/UploadsService"),
          T = e("../bundles/BundleService"),
          I = e("../materials/models/MaterialType"),
          P = (function () {
            function e(e, t, r, s, o, n, a, h, S, v, y, g, M, E, A, R) {
              var T = this;
              (this.$scope = e),
                (this.$http = t),
                (this.$location = r),
                (this.$routeParams = s),
                (this.$timeout = o),
                (this.url = n),
                (this.securityService = a),
                (this.permissionsService = h),
                (this.coursesRouter = S),
                (this.courseService = v),
                (this.$uploader = y),
                (this.userService = g),
                (this.authService = M),
                (this.authManager = E),
                (this.uploadUtils = A),
                (this.bundleService = R),
                (this.DEFAULT_TOP_MENU_ITEM = "info"),
                (this.MODULE = "module"),
                (this.SECTION = "section"),
                (this.permissionsWithUsersAndGroups = []),
                (this.hasPreviewUrlCanceled = !1),
                (this.owners = []),
                (this.formIsDirty = !1),
                (this.modules = []),
                (this.module = {}),
                (this.section = {}),
                (this.sectionMaterials = []),
                (this.material = {}),
                (this.selectedSection = null),
                (this.sectionQuiz = {}),
                (this.isModuleEditing = !1),
                (this.editingModule = {}),
                (this.isSectionEditing = !1),
                (this.editingSection = {}),
                (this.hasCertificates = !1),
                (this.uploadCourseCertificates = []),
                (this.courseCertificates = []),
                (this.bundleFilesGridModel = null),
                (this.addedFile = []),
                (this.addedBundleFiles = []),
                (this.removedBundleFiles = []),
                (this.loadOnStartFileIdsChanged = []),
                (this.bundleFilesSaving = !1),
                (this.archiveUploading = !1),
                (this.materialLoaded = !1),
                (this.disabledRemoveModuleButton = !1),
                (this.disabledRemoveSectionButton = !1),
                (this.removeCurrentUserSectionProgress = !1),
                (this.savingInProgress = !1),
                (this.courseId = s[i.CoursesRouter.COURSE_ID_PARAM]);
              var I = String(this.courseId),
                P = null != this.courseId;
              this.securityService
                .demandAuthentication()
                .demandSystemPermissionsIf(!P, function (e) {
                  return e.addCourses;
                })
                .demandCoursePermissionsIf(P, I, function (e) {
                  return e.edit;
                }),
                (this.isValidityInPerpetuity = !0),
                (this.course = {}),
                (this.course.ownerIds = []),
                (this.menuKey = { topMenu: this.DEFAULT_TOP_MENU_ITEM }),
                (this.sectionsMap = new Map()),
                (this.availableSectionParent = new Map()),
                P
                  ? (c.PageHeader.set().header("Edit a Course").update(),
                    this.loadCourse(),
                    this.loadModules(),
                    (this.disabledSaveButton = !1),
                    this.loadPermissionsWithUsersAndGroups(
                      d.SecuredObjectType.COURSE,
                      I
                    ),
                    this.setTopMenu("course"))
                  : (l.MenuHelper.setCurrentMenuItem(
                      l.MenuHelper.EDUCATION_COURSES_MENU_KEY
                    ),
                    c.PageHeader.set().header("New Course").update(),
                    this.authService.getCurrentUser().then(function (e) {
                      (T.currentUserId = e.id),
                        (T.currentUserName = e.fullName),
                        T.course.ownerIds.push(e.id);
                    }),
                    this.loadPermissionsWithUsersAndGroups(
                      d.SecuredObjectType.COURSE
                    )),
                this.userService
                  .getUsersWithoutExcludedUsersForSelector()
                  .then(function (e) {
                    (T.owners = angular.copy(e)),
                      (T.ownersMap = new Map()),
                      T.owners.forEach(function (e) {
                        T.ownersMap.set(e.id, e);
                      });
                  }),
                this.$scope.$on("$locationChangeStart", function (e, t) {
                  (t && -1 != t.indexOf(u.AuthRouter.logonRoute)) ||
                    (T.courseId && !T.isCourseHasSections()
                      ? (p.notifier.warning(
                          "The course should include at least one module and one section"
                        ),
                        e.preventDefault())
                      : (T.formIsDirty || T.$scope.landingPageForm.$dirty) &&
                        (confirm(
                          "Unsaved data will be lost if you leave this page"
                        ) ||
                          e.preventDefault()));
                }),
                (this.isAuthenticated = this.authManager.isAuthenticated()),
                this.isAuthenticated &&
                  this.permissionsService
                    .getSystemPermissions()
                    .then(function (e) {
                      T.systemPermissions = e;
                    }),
                (this.uploadMaterialsGridModel = new f.GridModel(
                  m.HttpGridHelper.createLoader(
                    this.$http,
                    this.url.service(
                      "/api/courses/" + this.courseId + "/availableMaterials"
                    )
                  )
                )),
                this.uploadMaterialsGridModel.addLoadingListener(this),
                this.$scope.$watchCollection(
                  function () {
                    return T.addedFile;
                  },
                  function (e) {
                    e &&
                      e.forEach(function (e) {
                        var t = { file: e };
                        T.addedBundleFiles.push(t);
                      });
                  }
                );
            }
            return (
              (e.prototype.isCourseHasSections = function () {
                if (0 == this.sectionsMap.size) return !1;
                for (var e = 0; e < this.sectionsMap.size; e++)
                  if (0 != this.sectionsMap.get(this.modules[e].id).length)
                    return !0;
                return !1;
              }),
              (e.prototype.loadModules = function () {
                var e = this;
                this.courseService.getModules(this.courseId).then(function (t) {
                  angular.copy(t, e.modules),
                    e.modules.length > 0 &&
                      (e.menuKey.leftMenuModuleExpanded
                        ? e.setLeftMenuModule(e.menuKey.leftMenuModuleExpanded)
                        : e.setLeftMenuModule(e.modules[0].id)),
                    t.forEach(function (t) {
                      e.loadSectionsForModule(t.id);
                    });
                });
              }),
              (e.prototype.loadSectionsForModule = function (e) {
                var t = this;
                this.courseService
                  .getModuleSections(this.courseId, e)
                  .then(function (r) {
                    M.TreeElementsInfoFiller.fillHierarchyInfoWithMaxLevel(
                      r,
                      Number.MAX_VALUE
                    ),
                      t.sectionsMap.set(e, r),
                      t.loadAvailableSectionParent(e, r);
                  });
              }),
              (e.prototype.loadAvailableSectionParent = function (e, t) {
                var r = [];
                t.forEach(function (e) {
                  e.section.typeKey ==
                    g.SectionType[g.SectionType.INFORMATION] &&
                    e.level < 6 &&
                    r.push(e);
                }),
                  this.availableSectionParent.set(e, r);
              }),
              (e.prototype.loadCourse = function () {
                var e = this,
                  t = this.courseService.get(this.courseId);
                t.then(function (t) {
                  angular.copy(t, e.course),
                    (e.course.endDateText = h.Moment.isValidDate(t.endDate)),
                    (e.course.startDateText = h.Moment.isValidDate(
                      t.startDate
                    )),
                    e.course.endDateText && (e.isValidityInPerpetuity = !1),
                    (e.previewUrl = e.course.previewUrl
                      ? e.course.previewUrl
                      : null),
                    e.loadCourseCertificates();
                });
              }),
              (e.prototype.loadPermissionsWithUsersAndGroups = function (e, t) {
                var r = this;
                this.permissionsService
                  .getAllObjectPermissionsWithUsersAndGroups(e, t)
                  .then(function (e) {
                    r.permissionsWithUsersAndGroups = e;
                  });
              }),
              (e.prototype.loadCourseCertificates = function () {
                var e = this;
                this.courseService
                  .getCourseCertificates(this.courseId, !0)
                  .then(function (t) {
                    t.length > 0 && (e.hasCertificates = !0),
                      t.forEach(function (t) {
                        var r = { removed: !1 };
                        angular.copy(t, r),
                          (r.removed = !1),
                          e.courseCertificates.push(r);
                      });
                  });
              }),
              (e.prototype.getDefaultModuleForCourse = function (e) {
                var t = {};
                return (
                  (t.courseId = e), (t.name = "Module 1"), (t.sortIndex = 1), t
                );
              }),
              (e.prototype.getDefaultSectionForModule = function (e, t) {
                var r = {};
                return (
                  (r.courseId = e),
                  (r.parentId = null),
                  (r.name = "Section 1"),
                  (r.moduleId = t),
                  (r.typeKey = g.SectionType[g.SectionType.INFORMATION]),
                  (r.summary = ""),
                  (r.sortIndex = 1),
                  r
                );
              }),
              (e.prototype.save = function () {
                var e = this;
                this.disabledSaveButton = !0;
                var t = this.preview,
                  r = this.hasPreviewUrlCanceled;
                (this.preview = null),
                  (this.hasPreviewUrlCanceled = !1),
                  (this.course.endDate = h.Moment.textToJavaDate(
                    this.course.endDateText
                  )),
                  (this.course.startDate = h.Moment.textToJavaDate(
                    this.course.startDateText
                  )),
                  this.courseId
                    ? this.courseService
                        .update(
                          this.course,
                          this.permissionsWithUsersAndGroups,
                          r,
                          t
                        )
                        .then(function (r) {
                          if (
                            (angular.copy(
                              r[R.UploadsService.COURSE_KEY],
                              e.course
                            ),
                            null != t)
                          ) {
                            e.uploadUtils.cancelCoursePreviews(e.courseId);
                            var i = r[R.UploadsService.PREVIEW_UPLOAD_URL_KEY],
                              s = r[R.UploadsService.PREVIEW_UPLOAD_METHOD_KEY];
                            e.uploadUtils.uploadCourseByChunks(
                              t,
                              e.course.previewId,
                              e.course.id,
                              i,
                              s
                            );
                          }
                          e.uploadCourseCertificates.length > 0
                            ? e.uploadCertificates(
                                0,
                                r[R.UploadsService.COURSE_KEY].id
                              )
                            : e.updateCourseCertificates();
                        })
                        ["catch"](function (e) {
                          "error.storage.not.available" == e.data.error &&
                            p.notifier.error(
                              "No available storage. Thumbnail has not been saved"
                            );
                        })
                    : this.courseService
                        .create(
                          this.course,
                          this.permissionsWithUsersAndGroups,
                          t
                        )
                        .then(function (r) {
                          angular.copy(
                            r[R.UploadsService.COURSE_KEY],
                            e.course
                          ),
                            e.courseService
                              .createModule(
                                e.course.id,
                                e.getDefaultModuleForCourse(e.course.id)
                              )
                              .then(function (i) {
                                e.courseService
                                  .createSection(
                                    e.course.id,
                                    i.id,
                                    e.getDefaultSectionForModule(
                                      e.course.id,
                                      i.id
                                    )
                                  )
                                  .then(function (i) {
                                    if (null != t) {
                                      var s =
                                          r[
                                            R.UploadsService
                                              .PREVIEW_UPLOAD_URL_KEY
                                          ],
                                        o =
                                          r[
                                            R.UploadsService
                                              .PREVIEW_UPLOAD_METHOD_KEY
                                          ];
                                      e.uploadUtils.uploadCourseByChunks(
                                        t,
                                        e.course.previewId,
                                        e.course.id,
                                        s,
                                        o
                                      );
                                    }
                                    e.uploadCourseCertificates.length > 0
                                      ? e.uploadCertificates(
                                          0,
                                          r[R.UploadsService.COURSE_KEY].id
                                        )
                                      : e.processSuccessCallback(
                                          r[R.UploadsService.COURSE_KEY].id
                                        );
                                  });
                              });
                        })
                        ["catch"](function (e) {
                          "error.storage.not.available" == e.data.error &&
                            p.notifier.error(
                              "No available storage. Thumbnail has not been saved"
                            );
                        });
              }),
              (e.prototype.updateCourseCertificates = function () {
                var e = this;
                if (this.courseCertificates.length > 0) {
                  var t = this.courseCertificates.filter(function (e) {
                    return 1 == e.removed;
                  });
                  if (t.length > 0) {
                    var r = t.map(function (e) {
                      return e.id;
                    });
                    this.courseService
                      .removeCourseCertificates(this.courseId, r)
                      .then(function (t) {
                        e.updateSuccessCallback(e.courseId);
                      });
                  } else this.updateSuccessCallback(this.courseId);
                } else this.updateSuccessCallback(this.courseId);
              }),
              (e.prototype.uploadCertificates = function (e, t) {
                var r = this;
                this.upload(
                  this.uploadCourseCertificates[e],
                  t,
                  "certificate"
                ).then(function (i) {
                  e < r.uploadCourseCertificates.length - 1
                    ? r.uploadCertificates(e + 1, t)
                    : r.courseCertificates.length > 0
                    ? r.updateCourseCertificates()
                    : null == r.courseId
                    ? r.processSuccessCallback(t)
                    : r.updateSuccessCallback(t);
                });
              }),
              (e.prototype.processSuccessCallback = function (e) {
                p.notifier.success("The course has been saved"),
                  this.$location.url(this.coursesRouter.updateUrl(e));
              }),
              (e.prototype.updateSuccessCallback = function (e) {
                (this.disabledSaveButton = !1),
                  p.notifier.success(
                    "Modifications of the course have been saved"
                  ),
                  (this.courseCertificates = []),
                  (this.uploadCourseCertificates = []),
                  this.loadCourse(),
                  this.loadModules(),
                  (this.permissionsWithUsersAndGroups = []),
                  this.loadPermissionsWithUsersAndGroups(
                    d.SecuredObjectType.COURSE,
                    String(e)
                  ),
                  this.setTopMenu("info");
              }),
              (e.prototype.cleanValidity = function () {
                this.course.endDateText = "";
              }),
              (e.prototype.upload = function (e, t, r) {
                var i = this.url
                  .base(
                    "/api/courses/upload?courseId=:courseId&fileType=:fileType"
                  )
                  .param(":courseId", t)
                  .param(":fileType", r);
                return this.$uploader.upload({
                  method: "POST",
                  url: angular.copy(i).service(),
                  file: e,
                });
              }),
              (e.prototype.setTopMenu = function (e) {
                this.menuKey = {
                  topMenu: e,
                  leftMenuModule: this.menuKey.leftMenuModule,
                  leftMenuModuleExpanded: this.menuKey.leftMenuModuleExpanded,
                  leftMenuItem: this.menuKey.leftMenuItem,
                };
              }),
              (e.prototype.setLeftMenuModule = function (e) {
                var t = this;
                this.formIsDirty &&
                  this.updateSection(this.selectedSection).then(function (e) {
                    t.loadSectionsForModule(t.menuKey.leftMenuModuleExpanded),
                      t.setLeftMenuItem(e),
                      p.notifier.success("The section has been saved");
                  }),
                  (this.menuKey.leftMenuModuleExpanded = e),
                  null == this.sectionsMap.get(e) &&
                    this.loadSectionsForModule(e);
              }),
              (e.prototype.saveSection = function (e) {
                var t = this;
                null != this.selectedSection && this.formIsDirty
                  ? this.savingInProgress
                    ? (this.setLeftMenuItem(e),
                      p.notifier.error(
                        "This data has been modified by another user: please refresh the page and try again"
                      ))
                    : ((this.savingInProgress = !0),
                      this.updateSection(this.selectedSection).then(function (
                        r
                      ) {
                        t.loadSectionsForModule(t.menuKey.leftMenuModule),
                          (t.savingInProgress = !1),
                          t.selectedSection.id == e.id
                            ? (t.setLeftMenuItem(r),
                              p.notifier.success("The section has been saved"),
                              t.isSectionEditing &&
                                t.editingSection.id == r.id &&
                                angular.copy(r, t.editingSection))
                            : t.setLeftMenuItem(e);
                      }))
                  : this.setLeftMenuItem(e);
              }),
              (e.prototype.setLeftMenuItem = function (e) {
                (this.formIsDirty = !1),
                  (this.selectedSection = angular.copy(e)),
                  (this.menuKey.leftMenuItem = e.id),
                  (this.menuKey.leftMenuItemType = e.typeKey),
                  (this.menuKey.leftMenuModule = e.moduleId),
                  (this.material = {}),
                  e.typeKey == g.SectionType[g.SectionType.INFORMATION] &&
                    this.loadSectionMaterials(),
                  e.typeKey == g.SectionType[g.SectionType.QUIZ] &&
                    (this.loadSectionQuiz(),
                    this.loadAvailableQuizzesForSection());
              }),
              (e.prototype.isTopMenuActive = function (e) {
                return this.menuKey.topMenu == e;
              }),
              (e.prototype.isLeftMenuModuleActive = function (e, t) {
                return (
                  this.menuKey.topMenu == e &&
                  this.menuKey.leftMenuModuleExpanded == t
                );
              }),
              (e.prototype.isLeftMenuItemActive = function (e, t, r) {
                return (
                  this.menuKey.topMenu == e &&
                  (this.menuKey.leftMenuModule == t ||
                    this.menuKey.leftMenuModuleExpanded == t) &&
                  this.menuKey.leftMenuItem == r
                );
              }),
              (e.prototype.isSelectedSectionTypeInfo = function () {
                return (
                  this.menuKey.leftMenuItemType ===
                  g.SectionType[g.SectionType.INFORMATION]
                );
              }),
              (e.prototype.isSelectedSectionTypeQuiz = function () {
                return (
                  this.menuKey.leftMenuItemType ===
                  g.SectionType[g.SectionType.QUIZ]
                );
              }),
              (e.prototype.isSelectedSectionTypeProblemSolution = function () {
                return (
                  this.menuKey.leftMenuItemType ===
                  g.SectionType[g.SectionType.PROBLEM_SOLUTION]
                );
              }),
              (e.prototype.showCreationModal = function (e, t) {
                (this.creationKey = e),
                  e === this.SECTION && (this.moduleId = t),
                  $(".modal-body").css("overflow-y", "auto"),
                  $("#creationDialog").modal({
                    backdrop: "static",
                    keyboard: !1,
                    show: !0,
                  });
              }),
              (e.prototype.editCourse = function () {
                this.$location.url(
                  this.coursesRouter.detailsUrl(this.courseId)
                );
              }),
              (e.prototype.createModuleOrSection = function () {
                var e = this;
                this.creationKey === this.MODULE
                  ? ((this.module.courseId = this.courseId),
                    (this.module.sortIndex = this.modules.length + 1),
                    this.courseService
                      .createModule(this.courseId, this.module)
                      .then(function (t) {
                        (e.module = {}), e.loadModules();
                      }))
                  : this.creationKey === this.SECTION &&
                    ((this.section.typeKey = g.SectionType[this.typeKey]),
                    (this.section.moduleId = this.moduleId),
                    (this.section.allowResit = !0),
                    (this.section.blockingNextSections = !1),
                    this.setSectionSortIndex(this.section),
                    this.courseService
                      .createSection(this.courseId, this.moduleId, this.section)
                      .then(function (t) {
                        (e.section = {}),
                          (e.typeKey = null),
                          e.loadSectionsForModule(e.moduleId);
                      }));
              }),
              (e.prototype.setSectionSortIndex = function (e) {
                null != e.parentId
                  ? this.sectionsMap.get(this.moduleId).forEach(function (t) {
                      t.section.id == e.parentId &&
                        (e.sortIndex = t.children.length + 1);
                    })
                  : this.sectionsMap.get(this.moduleId)
                  ? (e.sortIndex =
                      this.sectionsMap.get(this.moduleId).length + 1)
                  : (e.sortIndex = 1);
              }),
              (e.prototype.loadSectionMaterials = function () {
                var e = this;
                (this.sectionMaterials = null),
                  this.courseService
                    .getSectionAllMaterials(
                      this.courseId,
                      this.menuKey.leftMenuModule,
                      this.selectedSection.id
                    )
                    .then(function (t) {
                      (e.sectionMaterials = angular.copy(t)),
                        e.sectionMaterials && e.sectionMaterials.length > 0
                          ? e.showMaterial(e.sectionMaterials[0])
                          : e.hideCurrentMaterial(),
                        e.uploadMaterialsGridModel.loadPage(0);
                    });
              }),
              (e.prototype.startLoading = function () {
                (this.uploadMaterialsGridModel.filter.materialIds = this
                  .sectionMaterials
                  ? this.sectionMaterials.map(function (e) {
                      return e.id;
                    })
                  : []),
                  (this.uploadMaterialsGridModel.pageSize = 5);
              }),
              (e.prototype.endLoading = function () {}),
              (e.prototype.addMaterialToSection = function (e) {
                (this.formIsDirty = !0),
                  this.sectionMaterials.push(e),
                  this.showMaterial(this.sectionMaterials[0]),
                  this.uploadMaterialsGridModel.loadPage(0);
              }),
              (e.prototype.removeMaterialFromSection = function (e, t) {
                (this.formIsDirty = !0),
                  this.sectionMaterials.splice(e, 1),
                  0 == this.sectionMaterials.length && (this.material = {}),
                  this.uploadMaterialsGridModel.loadPage(0);
              }),
              (e.prototype.moveUp = function (e) {
                var t = {},
                  r = this.sectionMaterials.splice(e, 1, t)[0];
                this.sectionMaterials.splice(e - 1, 0, r),
                  this.sectionMaterials.splice(
                    this.sectionMaterials.indexOf(t),
                    1
                  );
              }),
              (e.prototype.moveDown = function (e) {
                var t = {},
                  r = this.sectionMaterials.splice(e + 1, 1, t)[0];
                this.sectionMaterials.splice(e, 0, r),
                  this.sectionMaterials.splice(
                    this.sectionMaterials.indexOf(t),
                    1
                  );
              }),
              (e.prototype.isMoveUp = function (e) {
                return e > 0;
              }),
              (e.prototype.isMoveDown = function (e) {
                return e < this.sectionMaterials.length - 1;
              }),
              (e.prototype.showMaterial = function (e) {
                var t = this;
                (this.materialType = ""),
                  (this.materialLoaded = !1),
                  angular.copy(e, this.material),
                  (this.selectedMaterialId = e.id),
                  this.$timeout(function () {
                    (t.materialLoaded = !0),
                      t.isYoutubeLink(t.material)
                        ? (t.materialType = "YOUTUBE")
                        : (t.materialType = t.material.typeKey),
                      (t.isMaterialEmpty =
                        t.material.id &&
                        t.material.typeKey !==
                          I.MaterialTypeKeyEnum[I.MaterialTypeKeyEnum.LINK] &&
                        (!t.material.fileStatus ||
                          "EMPTY" === t.material.fileStatus)),
                      (t.isMaterialNotReady =
                        !t.isMaterialEmpty &&
                        t.material.id &&
                        t.material.typeKey !==
                          I.MaterialTypeKeyEnum[I.MaterialTypeKeyEnum.LINK] &&
                        t.material.fileStatus &&
                        "EMPTY" !== t.material.fileStatus &&
                        "READY" !== t.material.fileStatus),
                      (t.isViewAllowed =
                        t.materialLoaded &&
                        !t.isMaterialEmpty &&
                        !t.isMaterialNotReady),
                      (t.multimediaSources = [
                        {
                          src: t.isYoutubeLink(t.material)
                            ? t.material.link
                            : t.material.downloadUrl || "",
                          type: t.isYoutubeLink(t.material)
                            ? "video/youtube"
                            : t.material.contentType,
                        },
                      ]);
                  }, 0);
              }),
              (e.prototype.hideCurrentMaterial = function () {
                (this.material = {}), (this.isViewAllowed = !1);
              }),
              (e.prototype.isYoutubeLink = function (e) {
                return 3 == e.typeId && E.ObjectTypeUtils.isYoutubeUrl(e.link);
              }),
              (e.prototype.updateSection = function (e) {
                return (
                  e.typeKey == g.SectionType[g.SectionType.INFORMATION]
                    ? (e.materialIds = this.sectionMaterials.map(function (e) {
                        return e.id;
                      }))
                    : e.typeKey == g.SectionType[g.SectionType.QUIZ] &&
                      (e.quizId = this.sectionQuiz.id),
                  this.courseService.updateSection(this.courseId, e.moduleId, e)
                );
              }),
              (e.prototype.updateSectionName = function (e) {
                return this.courseService.updateSectionName(
                  this.courseId,
                  e.moduleId,
                  e
                );
              }),
              (e.prototype.redirect = function () {
                this.courseId &&
                  (this.course &&
                  this.course.permissions &&
                  this.course.permissions.view
                    ? this.$location.url(
                        this.coursesRouter.detailsUrl(this.courseId)
                      )
                    : this.$location.url(this.coursesRouter.indexUrl()));
              }),
              (e.prototype.setFormIsDirty = function () {
                this.formIsDirty = !0;
              }),
              (e.prototype.showRemovalModal = function (e, t, r) {
                (this.creationKey = e),
                  t && angular.copy(t, this.module),
                  r && angular.copy(r, this.section),
                  $(".modal-body").css("overflow-y", "auto"),
                  $("#removalDialog").modal({
                    backdrop: "static",
                    keyboard: !1,
                    show: !0,
                  });
              }),
              (e.prototype.removeModule = function (e) {
                var t = this;
                this.disabledRemoveModuleButton = !0;
                var r = !1;
                this.menuKey.leftMenuModuleExpanded == e.id && (r = !0),
                  this.sectionsMap["delete"](e.id),
                  this.courseService
                    .deleteModule(this.courseId, e.id, e.version)
                    .then(function (e) {
                      p.notifier.success("The module has been removed"),
                        (t.disabledRemoveModuleButton = !1),
                        (t.module = {}),
                        (t.formIsDirty = !1),
                        r &&
                          ((t.selectedSection = {}),
                          (t.menuKey.leftMenuItem = {}),
                          (t.menuKey.leftMenuItemType = null)),
                        t.loadModules();
                    });
              }),
              (e.prototype.removeSection = function (e) {
                var t = this;
                (this.disabledRemoveSectionButton = !0),
                  (this.moduleId = e.moduleId);
                var r = !1;
                this.selectedSection &&
                  this.selectedSection.id == e.id &&
                  (r = !0),
                  this.courseService
                    .deleteSection(
                      this.courseId,
                      e.moduleId,
                      e.id,
                      e.version,
                      this.removeCurrentUserSectionProgress
                    )
                    .then(function (e) {
                      p.notifier.success("The section has been removed"),
                        (t.disabledRemoveSectionButton = !1),
                        (t.section = {}),
                        (t.formIsDirty = !1),
                        r &&
                          ((t.selectedSection = {}),
                          (t.menuKey.leftMenuItem = {}),
                          (t.menuKey.leftMenuItemType = null)),
                        t.loadSectionsForModule(t.moduleId);
                    })
                    ["catch"](function (e) {
                      e &&
                        e.data &&
                        "error.delete.section.in.use" == e.data.error &&
                        p.notifier.error(
                          "Section cannot be deleted automatically, because some users already started it. Please, ask system administrator to delete this section manually."
                        ),
                        (t.disabledRemoveSectionButton = !1);
                    });
              }),
              (e.prototype.toggleMaterialCreationForm = function () {
                this.showMaterialCreationForm = !this.showMaterialCreationForm;
              }),
              (e.prototype.callbackWhenMaterialCreated = function (e) {
                (this.showMaterialCreationForm = !1),
                  this.addMaterialToSection(e);
              }),
              (e.prototype.getMaterialTypeClass = function (e) {
                return E.ObjectTypeUtils.getMaterialGlyphiconClassFromKey(e);
              }),
              (e.prototype.reloadSection = function (e) {
                var t = this;
                this.loadSectionsForModule(e.moduleId),
                  this.sectionsMap.get(e.moduleId).forEach(function (r) {
                    r.section.id == e.id && t.setLeftMenuItem(r.section);
                  });
              }),
              (e.prototype.loadAvailableQuizzesForSection = function () {
                (this.availableQuizzesGridModel = new f.GridModel(
                  m.HttpGridHelper.createLoader(
                    this.$http,
                    this.url.service(
                      "/api/courses/" +
                        this.courseId +
                        "/modules/" +
                        this.menuKey.leftMenuModule +
                        "/sections/" +
                        this.selectedSection.id +
                        "/availableQuizzes"
                    )
                  )
                )),
                  (this.availableQuizzesGridModel.filter.sectionId =
                    this.selectedSection.id),
                  (this.availableQuizzesGridModel.pageSize = 5),
                  this.availableQuizzesGridModel.loadCurrentPage();
              }),
              (e.prototype.loadSectionQuiz = function () {
                var e = this;
                this.courseService
                  .getSectionQuiz(
                    this.courseId,
                    this.menuKey.leftMenuModule,
                    this.selectedSection.id
                  )
                  .then(function (t) {
                    angular.copy(t, e.sectionQuiz);
                  });
              }),
              (e.prototype.addQuizToSection = function (e) {
                (this.formIsDirty = !0),
                  null != this.sectionQuiz.id && this.removeQuizFromSection(),
                  angular.copy(e, this.sectionQuiz);
                var t = this.availableQuizzesGridModel.entries.indexOf(e);
                this.availableQuizzesGridModel.entries.splice(t, 1);
              }),
              (e.prototype.removeQuizFromSection = function () {
                (this.formIsDirty = !0),
                  this.availableQuizzesGridModel.entries.push(this.sectionQuiz),
                  (this.sectionQuiz = {});
              }),
              (e.prototype.cleanCreationModal = function () {
                (this.module = {}), (this.section = {});
              }),
              (e.prototype.loadBundleForm = function () {
                var e = this;
                this.course.bundleId
                  ? this.bundleService
                      .getBundle(this.course.bundleId)
                      .then(function (t) {
                        (e.bundle = t),
                          null == e.bundleFilesGridModel
                            ? ((e.bundleFilesGridModel = new f.GridModel(
                                m.HttpGridHelper.createLoader(
                                  e.$http,
                                  e.url
                                    .base("/api/bundles/:bundleId/files")
                                    .param(":bundleId", e.bundle.id)
                                    .service()
                                )
                              )),
                              (e.bundleFilesGridModel.filter.excludedBundleFileIds =
                                []),
                              e.bundleFilesGridModel.addLoadingListener({
                                startLoading: function () {},
                                endLoading: function () {
                                  for (
                                    var t = 0;
                                    t < e.bundleFilesGridModel.entries.length;
                                    t++
                                  ) {
                                    var r = e.bundleFilesGridModel.entries[t];
                                    -1 !=
                                      e.loadOnStartFileIdsChanged.indexOf(
                                        r.id
                                      ) && (r.loadAtStart = !r.loadAtStart);
                                  }
                                },
                              }))
                            : ((e.bundleFilesGridModel.filter.excludedBundleFileIds =
                                []),
                              e.bundleFilesGridModel.loadPage(0));
                      })
                  : (this.bundle = null),
                  (this.addedFile = []),
                  (this.addedBundleFiles = []),
                  (this.removedBundleFiles = []),
                  (this.loadOnStartFileIdsChanged = []),
                  (this.archive = null);
              }),
              (e.prototype.loadLandingPage = function () {
                var e = this;
                this.courseId
                  ? this.courseService
                      .getLandingPage(this.courseId)
                      .then(function (t) {
                        (e.landingPage = angular.copy(t)),
                          e.$scope.landingPageForm.$setPristine();
                      })
                  : ((this.landingPage = { richText: "" }),
                    this.$scope.landingPageForm.$setPristine());
              }),
              (e.prototype.saveLandingPage = function () {
                var e = this,
                  t = this.landingPage.id
                    ? this.courseService.updateLandingPage(
                        this.courseId,
                        this.landingPage
                      )
                    : this.courseService.createLandingPage(
                        this.courseId,
                        this.landingPage
                      );
                t.then(function (t) {
                  (e.landingPage = angular.copy(t)),
                    p.notifier.success(
                      "The course welcome page has been saved"
                    ),
                    e.$scope.landingPageForm.$setPristine();
                });
              }),
              (e.prototype.startModuleInlineEdit = function (e) {
                (this.isModuleEditing = !0),
                  angular.copy(e, this.editingModule);
              }),
              (e.prototype.updateEditedModule = function () {
                var e = this;
                this.editingModule.name
                  ? this.courseService
                      .updateModule(this.courseId, this.editingModule)
                      .then(function (t) {
                        (e.editingModule = {}),
                          (e.isModuleEditing = !1),
                          e.loadModules();
                      })
                  : p.notifier.warning("Please specify module name");
              }),
              (e.prototype.startSectionInlineEdit = function (e) {
                (this.isSectionEditing = !0),
                  angular.copy(e, this.editingSection);
              }),
              (e.prototype.updateEditedSection = function () {
                var e = this;
                this.editingSection.name
                  ? this.updateSectionName(this.editingSection).then(function (
                      t
                    ) {
                      (e.editingSection = {}),
                        (e.isSectionEditing = !1),
                        e.loadSectionsForModule(t.moduleId),
                        e.selectedSection &&
                          e.selectedSection.id == t.id &&
                          angular.copy(t, e.selectedSection);
                    })
                  : p.notifier.warning("Please specify section name");
              }),
              (e.prototype.saveModulesHierarchy = function (e, t) {
                var r = this;
                e != this.modules.length - 1 && e++,
                  e != t.sortIndex &&
                    ((t.sortIndex = e),
                    this.courseService
                      .updateModuleHierarchy(this.courseId, t)
                      .then(function (e) {
                        p.notifier.success("Course hierarchy has been changed"),
                          r.loadModules();
                      }));
              }),
              (e.prototype.saveSectionsHierarchy = function (e, t, r) {
                var i = this;
                (this.isSectionEditing = !1), (this.editingSection = {});
                var s = t.section.moduleId;
                null != t.parentId &&
                  r == s &&
                  (e = this.recalculateSectionWithParentIndex(e, t, r)),
                  (null == t.parentId &&
                    (e != t.section.sortIndex || s != r)) ||
                  (null != t.parentId && e != t.section.sortIndex && s == r)
                    ? (null == t.parentId &&
                        ((s == r && e != this.sectionsMap.get(r).length - 1) ||
                          (s != r && e != this.sectionsMap.get(r).length)) &&
                        e++,
                      (t.section.moduleId = r),
                      (t.section.sortIndex = e),
                      this.courseService
                        .updateSectionHierarchy(
                          this.courseId,
                          t.section.moduleId,
                          t.section
                        )
                        .then(function (e) {
                          p.notifier.success(
                            "Course hierarchy has been changed"
                          ),
                            i.loadSectionsForModule(r),
                            s != r && i.loadSectionsForModule(s);
                        }))
                    : (this.loadSectionsForModule(r),
                      s != r && this.loadSectionsForModule(s));
              }),
              (e.prototype.recalculateSectionWithParentIndex = function (
                e,
                t,
                r
              ) {
                var i = this,
                  s = 0,
                  o = null;
                return (
                  this.sectionsMap.get(r).forEach(function (e) {
                    e.id == t.parentId &&
                      ((s = i.sectionsMap.get(r).indexOf(e)), (o = e.children));
                  }),
                  (e =
                    s > e
                      ? 1
                      : e >= s + o.length
                      ? o[o.length - 1].section.sortIndex
                      : this.sectionsMap.get(r)[e + 1].section.sortIndex)
                );
              }),
              (e.prototype.showEditingModal = function (e) {
                var t = this;
                (this.availableCurrentSectionParent = []),
                  this.courseService
                    .getAvailableSectionsNoChildren(
                      this.courseId,
                      e.moduleId,
                      e.id
                    )
                    .then(function (r) {
                      angular.copy(r, t.availableCurrentSectionParent),
                        angular.copy(e, t.editingSection),
                        $(".modal-body").css("overflow-y", "auto"),
                        $("#editingDialog").modal({
                          backdrop: "static",
                          keyboard: !1,
                          show: !0,
                        });
                    });
              }),
              (e.prototype.cleanEditingModal = function () {
                (this.editingSection = {}),
                  (this.availableCurrentSectionParent = []);
              }),
              (e.prototype.editSectionParent = function () {
                var e = this;
                this.courseService
                  .updateSectionHierarchy(
                    this.courseId,
                    this.editingSection.moduleId,
                    this.editingSection
                  )
                  .then(function (t) {
                    (e.editingSection = {}),
                      (e.isSectionEditing = !1),
                      e.loadSectionsForModule(t.moduleId),
                      e.selectedSection &&
                        e.selectedSection.id == t.id &&
                        angular.copy(t, e.selectedSection),
                      p.notifier.success("The section has been saved");
                  });
              }),
              (e.prototype.attachCertificate = function (e) {
                null != this.newCertificate &&
                  null == e &&
                  (this.uploadCourseCertificates.push(this.newCertificate),
                  (this.newCertificate = null));
              }),
              (e.prototype.removeCertificate = function (e) {
                this.uploadCourseCertificates.splice(e, 1);
              }),
              (e.prototype.resetPreview = function () {
                this.preview
                  ? (this.preview = void 0)
                  : this.previewUrl &&
                    ((this.previewUrl = void 0),
                    (this.hasPreviewUrlCanceled = !0));
              }),
              (e.prototype.restorePreviewUrl = function () {
                (this.preview = void 0),
                  (this.previewUrl = this.course.previewUrl),
                  (this.hasPreviewUrlCanceled = !1);
              }),
              (e.prototype.cancelAddedBundleFile = function (e) {
                this.addedBundleFiles.splice(e, 1);
              }),
              (e.prototype.removeBundleFile = function (e) {
                this.removedBundleFiles.push(
                  this.bundleFilesGridModel.entries[e]
                ),
                  (this.bundleFilesGridModel.filter.excludedBundleFileIds =
                    this.getRemovedBundleFileIds()),
                  this.bundleFilesGridModel.loadCurrentPage();
              }),
              (e.prototype.restoreBundleFile = function (e) {
                this.removedBundleFiles.splice(e, 1),
                  (this.bundleFilesGridModel.filter.excludedBundleFileIds =
                    this.getRemovedBundleFileIds()),
                  this.bundleFilesGridModel.loadCurrentPage();
              }),
              (e.prototype.changeBundleFileLoadAtStartValue = function (e) {
                var t = this.loadOnStartFileIdsChanged.indexOf(e.id);
                -1 != t
                  ? this.loadOnStartFileIdsChanged.splice(t, 1)
                  : this.loadOnStartFileIdsChanged.push(e.id),
                  (e.loadAtStart = !e.loadAtStart);
              }),
              (e.prototype.getRemovedBundleFileIds = function () {
                var e = [];
                return (
                  this.removedBundleFiles.forEach(function (t) {
                    e.push(t.id);
                  }),
                  e
                );
              }),
              (e.prototype.updateBundleFromFiles = function () {
                var e = this,
                  t = [],
                  r = [];
                this.addedBundleFiles.forEach(function (e) {
                  t.push({
                    name: e.file.name,
                    type: e.file.type,
                    size: e.file.size,
                    path: e.relativePath,
                  });
                }),
                  this.removedBundleFiles.forEach(function (e) {
                    r.push(e.fileId);
                  });
                var i = {
                  id: this.bundle.id,
                  version: this.bundle.version,
                  addedFiles: t,
                  deletedFileIds: r,
                  loadOnStartFilesChangedIds: this.loadOnStartFileIdsChanged,
                };
                this.bundleService
                  .updateBundleFromFiles(i)
                  .then(function (t) {
                    var r = e.addedBundleFiles;
                    (e.addedBundleFiles = []),
                      (e.bundle = t.bundle),
                      e.bundleFilesGridModel.loadPage(0),
                      (e.removedBundleFiles = []),
                      (e.loadOnStartFileIdsChanged = []);
                    for (
                      var i = t.fileUploadInfos, s = 0, o = 0;
                      s < r.length || o < i.length;
                      ++s, ++o
                    ) {
                      var n = r[s].file,
                        a = i[o];
                      e.uploadUtils.uploadBundleByChunks(
                        n,
                        a.fileId,
                        e.bundle.id,
                        a.url,
                        a.method
                      );
                    }
                  })
                  ["catch"](function (e) {
                    "error.storage.not.available" == e.data.error &&
                      p.notifier.error("No available storage");
                  })
                  ["finally"](function () {
                    e.bundleFilesSaving = !1;
                  });
              }),
              (e.prototype.updateBundleFromArchive = function () {
                var e = this;
                this.$uploader
                  .upload({
                    method: "POST",
                    url: this.url
                      .base(
                        "/api/bundles/:bundleId/archive?bundleVersion=:bundleVersion"
                      )
                      .param(":bundleId", this.bundle.id)
                      .param(":bundleVersion", this.bundle.version)
                      .service(),
                    file: this.archive,
                  })
                  .success(function () {
                    e.loadBundleForm(),
                      (e.archiveUploading = !1),
                      p.notifier.success(
                        "The archive was successfully imported"
                      );
                  })
                  .error(function () {
                    e.loadBundleForm(),
                      (e.archiveUploading = !1),
                      p.notifier.error(
                        "An error occurred during archive import"
                      );
                  });
              }),
              (e.prototype.saveBundleFiles = function () {
                var e = this;
                (this.bundleFilesSaving = !0),
                  this.bundle
                    ? this.updateBundleFromFiles()
                    : this.courseService
                        .createCourseBundle(this.course.id, this.course.version)
                        .then(function (t) {
                          (e.bundle = t.bundle),
                            (e.bundleFilesGridModel =
                              null == e.bundleFilesGridModel
                                ? new f.GridModel(
                                    m.HttpGridHelper.createLoader(
                                      e.$http,
                                      e.url
                                        .base("/api/bundles/:bundleId/files")
                                        .param(":bundleId", e.bundle.id)
                                        .service()
                                    )
                                  )
                                : e.bundleFilesGridModel),
                            (e.bundleFilesGridModel.filter.excludedBundleFileIds =
                              []),
                            (e.course.bundleId = e.bundle.id),
                            (e.course.version = t.course.version),
                            e.updateBundleFromFiles();
                        })
                        ["catch"](function (t) {
                          "error.storage.not.available" == t.data.error &&
                            p.notifier.error("No available storage"),
                            (e.bundleFilesSaving = !1);
                        });
              }),
              (e.prototype.saveBundleArchive = function () {
                var e = this;
                if (this.archive) {
                  var t = this.archive.name.match(
                    /\.([0-9a-z]+)(?=[?#])|(\.)(?:[\w]+)$/
                  );
                  if (".zip" != t[0])
                    return void p.notifier.error(
                      "Invalid archive format. Only zip format is supported."
                    );
                  (this.archiveUploading = !0),
                    this.bundle
                      ? this.updateBundleFromArchive()
                      : this.courseService
                          .createCourseBundle(
                            this.course.id,
                            this.course.version
                          )
                          .then(function (t) {
                            (e.bundle = t.bundle),
                              (e.bundleFilesGridModel =
                                null == e.bundleFilesGridModel
                                  ? new f.GridModel(
                                      m.HttpGridHelper.createLoader(
                                        e.$http,
                                        e.url
                                          .base("/api/bundles/:bundleId/files")
                                          .param(":bundleId", e.bundle.id)
                                          .service()
                                      )
                                    )
                                  : e.bundleFilesGridModel),
                              (e.bundleFilesGridModel.filter.excludedBundleFileIds =
                                []),
                              (e.course.bundleId = e.bundle.id),
                              (e.course.version = t.course.version),
                              e.updateBundleFromArchive();
                          })
                          ["catch"](function (t) {
                            "error.storage.not.available" == t.data.error
                              ? p.notifier.error("No available storage")
                              : p.notifier.error(
                                  "An error occurred during archive import"
                                ),
                              (e.archiveUploading = !1);
                          });
                }
              }),
              (e.prototype.refreshBundleFiles = function () {
                this.bundleFilesGridModel.loadPage(0);
              }),
              (e.prototype.getDownloadBundleToArchiveUrl = function (e) {
                return this.url
                  .base("/api/bundles/:bundleId/archive")
                  .param(":bundleId", e)
                  .service();
              }),
              (e.NAME = "courses.CourseEditController"),
              (e.$inject = [
                "$scope",
                "$http",
                "$location",
                "$routeParams",
                "$timeout",
                n.UrlService.NAME,
                s.SecurityService.NAME,
                o.PermissionsService.NAME,
                i.CoursesRouter.NAME,
                S.CourseService.NAME,
                "Upload",
                v.UserService.NAME,
                y.AuthService.NAME,
                a.AuthManager.NAME,
                A.UploadUtils.NAME,
                T.BundleService.NAME,
              ]),
              e
            );
          })();
        r.CourseEditController = P;
      },
      {
        "../bundles/BundleService": 26,
        "../materials/models/MaterialType": 124,
        "../storage/UploadsService": 191,
        "../tree/TreeElementsInfoFiller": 192,
        "../utils/ObjectTypeUtils": 230,
        "../utils/UploadUtils": 235,
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../INotifier": 4,
        "./../auth/AuthService": 10,
        "./../authcore/AuthManager": 18,
        "./../security/PermissionsService": 164,
        "./../security/SecurityService": 166,
        "./../security/permissions/SecuredObjectType": 168,
        "./../urls/AuthRouter": 194,
        "./../urls/CoursesRouter": 199,
        "./../users/UserService": 218,
        "./../utils/MenuHelper": 227,
        "./../utils/Moment": 228,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./CourseService": 81,
        "./models/SectionType": 89,
      },
    ],
    79: [
      function (e, t, r) {
        var i = e("../auth/AuthService"),
          s = e("./CourseService"),
          o = e("./ProgressService"),
          n = e("../urls/CoursesRouter"),
          a = e("../security/SecurityService"),
          u = e("../utils/MenuHelper"),
          l = e("../utils/PageHeaderHelper"),
          c = e("../utils/Moment"),
          d = e("./models/CourseProgressStatus"),
          h = e("../authcore/AuthManager"),
          p = e("./../infrastructure/Storage"),
          f = (function () {
            function e(e, t, r, i, s, o, a, l, c) {
              var d = this;
              (this.$location = e),
                (this.securityService = t),
                (this.$routeParams = r),
                (this.coursesRouter = i),
                (this.courseService = s),
                (this.progressService = o),
                (this.authService = a),
                (this.authManager = l),
                (this.sessionStorageWrapper = c),
                (this.owners = []),
                (this.course = {}),
                (this.currentUserInOwners = !1),
                (this.currentUser = {}),
                (this.courseId = r[n.CoursesRouter.COURSE_ID_PARAM]);
              var h = String(this.courseId);
              (this.isAuthenticated = this.authManager.isAuthenticated()),
                this.securityService.demandCoursePermissions(h, function (e) {
                  return e.view;
                });
              var p = u.MenuHelper.getCurrentMenuItemKey();
              (p && 0 != p.length) ||
                u.MenuHelper.setCurrentMenuItem(
                  u.MenuHelper.EDUCATION_COURSES_MENU_KEY
                ),
                this.authService.getCurrentUser().then(function (e) {
                  angular.copy(e, d.currentUser);
                }),
                this.loadCourse();
            }
            return (
              (e.prototype.loadCourse = function () {
                var e = this,
                  t = this.courseService.get(this.courseId);
                t.then(function (t) {
                  (e.course = angular.copy(t)),
                    l.PageHeader.set()
                      .header(e.course.topic || e.course.subjectName)
                      .update(),
                    (e.course.endDateText = c.Moment.isValidDate(t.endDate)),
                    (e.course.startDateText = c.Moment.isValidDate(
                      t.startDate
                    )),
                    e.loadOwners();
                });
              }),
              (e.prototype.loadOwners = function () {
                var e = this;
                this.courseService
                  .getCourseOwners(this.courseId)
                  .then(function (t) {
                    angular.copy(t, e.owners),
                      e.isCurrentUserInOwners(),
                      e.getCourseProgress();
                  });
              }),
              (e.prototype.isCurrentUserInOwners = function () {
                for (var e = 0; e < this.owners.length; e++)
                  this.owners[e].id == this.currentUser.id &&
                    (this.currentUserInOwners = !0);
              }),
              (e.prototype.getCourseProgress = function () {
                var e = this;
                (this.courseProgressId = this.sessionStorageWrapper.get(
                  this.progressService.COURSE_PROGRESS_ID_STORAGE_KEY
                )),
                  this.progressService
                    .getCourseProgress(this.courseId, this.courseProgressId)
                    .then(function (t) {
                      (e.courseProgress = angular.copy(t)),
                        (e.courseProgressId = e.courseProgress.id),
                        e.sessionStorageWrapper.put(
                          e.progressService.COURSE_PROGRESS_ID_STORAGE_KEY,
                          e.courseProgressId
                        ),
                        (e.courseStarted =
                          t.status &&
                          t.status !==
                            d.CourseProgressStatus[
                              d.CourseProgressStatus.NOT_STARTED
                            ]);
                    });
              }),
              (e.prototype.redirectToProgress = function () {
                this.$location.url(
                  this.coursesRouter.progressUrl(this.courseId)
                );
              }),
              (e.prototype.redirectToDetails = function () {
                this.$location.url(
                  this.coursesRouter.detailsUrl(this.courseId)
                );
              }),
              (e.prototype.editCourse = function () {
                this.$location.url(this.coursesRouter.updateUrl(this.courseId));
              }),
              (e.prototype.loadLandingPage = function () {
                var e = this;
                this.courseService
                  .getLandingPage(this.courseId)
                  .then(function (t) {
                    e.landingPage = angular.copy(t);
                  });
              }),
              (e.prototype.isTopMenuActive = function (e) {
                return "info" == e;
              }),
              (e.prototype.isShowProgressTab = function () {
                return (
                  (this.courseStarted ||
                    this.currentUserInOwners ||
                    (this.course.permissions &&
                      this.course.permissions.edit)) &&
                  this.isAuthenticated
                );
              }),
              (e.NAME = "courses.CourseInfoController"),
              (e.$inject = [
                "$location",
                a.SecurityService.NAME,
                "$routeParams",
                n.CoursesRouter.NAME,
                s.CourseService.NAME,
                o.ProgressService.NAME,
                i.AuthService.NAME,
                h.AuthManager.NAME,
                p.Storages.SESSION_NAME,
              ]),
              e
            );
          })();
        r.CourseInfoController = f;
      },
      {
        "../auth/AuthService": 10,
        "../authcore/AuthManager": 18,
        "../security/SecurityService": 166,
        "../urls/CoursesRouter": 199,
        "../utils/MenuHelper": 227,
        "../utils/Moment": 228,
        "../utils/PageHeaderHelper": 231,
        "./../infrastructure/Storage": 105,
        "./CourseService": 81,
        "./ProgressService": 84,
        "./models/CourseProgressStatus": 86,
      },
    ],
    80: [
      function (e, t, r) {
        var i = e("../urls/CoursesRouter"),
          s = e("./CourseService"),
          o = e("./ProgressService"),
          n = e("../auth/AuthService"),
          a = e("./models/SectionProgressStatus"),
          u = e("./models/SectionResultStatistic"),
          l = e("../utils/MenuHelper"),
          c = e("../security/SecurityService"),
          d = e("../utils/PageHeaderHelper"),
          h = e("../IHttpGridService"),
          p = e("../utils/UrlService"),
          f = e("../IGridModel"),
          m = (function () {
            function e(e, t, r, s, o, n, a, u, c) {
              var d = this;
              (this.$http = e),
                (this.$location = t),
                (this.$routeParams = r),
                (this.url = s),
                (this.securityService = o),
                (this.coursesRouter = n),
                (this.courseService = a),
                (this.progressService = u),
                (this.authService = c),
                (this.currentUser = {}),
                (this.owners = []),
                (this.userProgress = []),
                (this.courseUsers = []),
                (this.courseGroups = []),
                (this.sectionsStatistics = []),
                (this.selectedUserIds = []),
                (this.selectedGroupIds = []),
                (this.selectedQuizProgress = {}),
                (this.currentUserInOwners = !1),
                (this.course = {}),
                (this.isSectionSelected = !1),
                (this.selectedSectionStatistic = {}),
                (this.courseId = r[i.CoursesRouter.COURSE_ID_PARAM]);
              var h = String(this.courseId);
              this.securityService.demandCoursePermissions(h, function (e) {
                return e.view;
              });
              var p = l.MenuHelper.getCurrentMenuItemKey();
              (p && 0 != p.length) ||
                l.MenuHelper.setCurrentMenuItem(
                  l.MenuHelper.EDUCATION_COURSES_MENU_KEY
                ),
                (this.searchType = 0),
                this.loadCourse(),
                this.authService.getCurrentUser().then(function (e) {
                  angular.copy(e, d.currentUser),
                    d.loadProgressForCurrentUser();
                });
            }
            return (
              (e.prototype.loadCourse = function () {
                var e = this,
                  t = this.courseService.get(this.courseId);
                t.then(function (t) {
                  (e.course = angular.copy(t)),
                    d.PageHeader.set()
                      .header(e.course.topic || e.course.subjectName)
                      .update();
                });
              }),
              (e.prototype.loadProgressForCurrentUser = function () {
                var e = this;
                this.courseService
                  .getCourseOwners(this.courseId)
                  .then(function (t) {
                    angular.copy(t, e.owners);
                    for (var r = 0; r < e.owners.length; r++)
                      e.owners[r].id == e.currentUser.id &&
                        (e.currentUserInOwners = !0);
                    e.loadProgress();
                  });
              }),
              (e.prototype.loadProgress = function () {
                this.currentUserInOwners
                  ? (this.getUsers(), this.getGroups())
                  : this.getUserProgress();
              }),
              (e.prototype.getUsers = function () {
                var e = this;
                this.progressService
                  .getCourseUsers(this.courseId)
                  .then(function (t) {
                    t.forEach(function (t) {
                      var r = { selected: !1 };
                      angular.copy(t, r),
                        (r.selected = !1),
                        e.courseUsers.push(r);
                    });
                  });
              }),
              (e.prototype.getGroups = function () {
                var e = this;
                this.progressService
                  .getCourseGroups(this.courseId)
                  .then(function (t) {
                    t.forEach(function (t) {
                      var r = { selected: !1 };
                      angular.copy(t, r),
                        (r.selected = !1),
                        e.courseGroups.push(r);
                    });
                  });
              }),
              (e.prototype.getSectionsStatistics = function () {
                var e = this,
                  t = [],
                  r = [];
                0 == this.searchType
                  ? (t =
                      this.selectedUserIds.length > 0
                        ? this.selectedUserIds
                        : [])
                  : (r =
                      this.selectedGroupIds.length > 0
                        ? this.selectedGroupIds
                        : []),
                  (this.sectionsStatistics = []),
                  this.progressService
                    .getSectionsStatistics(this.courseId, t, r)
                    .then(function (t) {
                      t.forEach(function (t) {
                        var r = { status: "" };
                        angular.copy(t, r),
                          (r.status = e.getSectionResultStatus(t)),
                          e.sectionsStatistics.push(r);
                      });
                    });
              }),
              (e.prototype.getSectionResultStatus = function (e) {
                return e.count[
                  a.SectionProgressStatus[a.SectionProgressStatus.COMPLETED]
                ] > 0 &&
                  0 ==
                    e.count[
                      a.SectionProgressStatus[
                        a.SectionProgressStatus.NOT_ALLOWED
                      ]
                    ] &&
                  0 ==
                    e.count[
                      a.SectionProgressStatus[a.SectionProgressStatus.ALLOWED]
                    ] &&
                  0 ==
                    e.count[
                      a.SectionProgressStatus[a.SectionProgressStatus.OPENED]
                    ] &&
                  0 ==
                    e.count[
                      a.SectionProgressStatus[a.SectionProgressStatus.STARTED]
                    ] &&
                  0 ==
                    e.count[
                      a.SectionProgressStatus[a.SectionProgressStatus.SUBMITTED]
                    ] &&
                  0 ==
                    e.count[
                      a.SectionProgressStatus[a.SectionProgressStatus.FAILED]
                    ] &&
                  0 ==
                    e.count[
                      a.SectionProgressStatus[a.SectionProgressStatus.SOS]
                    ]
                  ? u.SectionResultStatistic[u.SectionResultStatistic.COMPLETED]
                  : e.count[
                      a.SectionProgressStatus[a.SectionProgressStatus.SUBMITTED]
                    ] > 0 ||
                    e.count[
                      a.SectionProgressStatus[a.SectionProgressStatus.FAILED]
                    ] > 0 ||
                    e.count[
                      a.SectionProgressStatus[a.SectionProgressStatus.SOS]
                    ] > 0 ||
                    e.count[
                      a.SectionProgressStatus[a.SectionProgressStatus.COMPLETED]
                    ] > 0
                  ? u.SectionResultStatistic[u.SectionResultStatistic.SUBMITTED]
                  : e.count[
                      a.SectionProgressStatus[a.SectionProgressStatus.FAILED]
                    ] > 0 &&
                    0 ==
                      e.count[
                        a.SectionProgressStatus[
                          a.SectionProgressStatus.NOT_ALLOWED
                        ]
                      ] &&
                    0 ==
                      e.count[
                        a.SectionProgressStatus[a.SectionProgressStatus.ALLOWED]
                      ] &&
                    0 ==
                      e.count[
                        a.SectionProgressStatus[a.SectionProgressStatus.OPENED]
                      ] &&
                    0 ==
                      e.count[
                        a.SectionProgressStatus[a.SectionProgressStatus.STARTED]
                      ] &&
                    0 ==
                      e.count[
                        a.SectionProgressStatus[
                          a.SectionProgressStatus.SUBMITTED
                        ]
                      ] &&
                    0 ==
                      e.count[
                        a.SectionProgressStatus[a.SectionProgressStatus.SOS]
                      ] &&
                    0 ==
                      e.count[
                        a.SectionProgressStatus[
                          a.SectionProgressStatus.SUBMITTED
                        ]
                      ]
                  ? u.SectionResultStatistic[u.SectionResultStatistic.FAILED]
                  : "";
              }),
              (e.prototype.getUserProgress = function () {
                var e = this;
                this.progressService
                  .getProgressForUser(this.courseId)
                  .then(function (t) {
                    angular.copy(t, e.userProgress);
                  });
              }),
              (e.prototype.getProgressForUser = function (e) {
                var t = this;
                if (e.selected) {
                  var r = this.selectedUserIds.indexOf(e.id);
                  this.selectedUserIds.splice(r, 1),
                    (this.courseUsers[this.courseUsers.indexOf(e)].selected =
                      !1),
                    this.selectedUserIds.length > 1
                      ? this.getSectionsStatistics()
                      : 1 == this.selectedUserIds.length &&
                        this.progressService
                          .getProgressForUser(
                            this.courseId,
                            this.selectedUserIds[0]
                          )
                          .then(function (e) {
                            e && angular.copy(e, t.userProgress);
                          });
                } else
                  this.selectedUserIds.push(e.id),
                    (this.courseUsers[this.courseUsers.indexOf(e)].selected =
                      !0),
                    1 == this.selectedUserIds.length
                      ? this.progressService
                          .getProgressForUser(this.courseId, e.id)
                          .then(function (e) {
                            e && angular.copy(e, t.userProgress);
                          })
                      : this.getSectionsStatistics();
              }),
              (e.prototype.getProgressForGroup = function (e) {
                var t = this;
                if (e.selected) {
                  var r = this.selectedGroupIds.indexOf(e.id);
                  this.selectedGroupIds.splice(r, 1),
                    (this.courseGroups[this.courseGroups.indexOf(e)].selected =
                      !1);
                } else
                  (this.selectedGroupIds = []),
                    this.selectedGroupIds.push(e.id),
                    (this.courseGroups[this.courseGroups.indexOf(e)].selected =
                      !0),
                    this.courseGroups.forEach(function (r) {
                      r.id != e.id &&
                        (t.courseGroups[t.courseGroups.indexOf(r)].selected =
                          !1);
                    });
                this.cleanSelectedSection(), this.getSectionsStatistics();
              }),
              (e.prototype.getUserProgressForQuiz = function (e) {
                var t = this;
                this.userProgress.forEach(function (r) {
                  r.sectionId == e && angular.copy(r, t.selectedQuizProgress);
                });
              }),
              (e.prototype.getSectionProgress = function (e) {
                var t =
                  this.selectedSectionStatistic &&
                  !!this.selectedSectionStatistic.sectionId;
                angular.copy(e, this.selectedSectionStatistic),
                  (this.isSectionSelected = !0);
                var r = [],
                  i = [];
                0 == this.searchType
                  ? (r =
                      this.selectedUserIds.length > 0
                        ? this.selectedUserIds
                        : [])
                  : (i =
                      this.selectedGroupIds.length > 0
                        ? this.selectedGroupIds
                        : []),
                  (this.sectionProgressGridModel = new f.GridModel(
                    h.HttpGridHelper.createLoader(
                      this.$http,
                      this.url.service(
                        "/api/progress/course/" +
                          this.courseId +
                          "/sections/" +
                          e.sectionId
                      )
                    )
                  )),
                  (this.sectionProgressGridModel.filter.userIds = r),
                  (this.sectionProgressGridModel.filter.groupIds = i),
                  t && this.sectionProgressGridModel.loadPage(0);
              }),
              (e.prototype.getUserInSectionProgressStatus = function (e) {
                return e ===
                  a.SectionProgressStatus[a.SectionProgressStatus.NOT_ALLOWED]
                  ? "Not started"
                  : e ===
                    a.SectionProgressStatus[a.SectionProgressStatus.ALLOWED]
                  ? "Not started yet"
                  : e ===
                    a.SectionProgressStatus[a.SectionProgressStatus.OPENED]
                  ? "Opened"
                  : e ===
                    a.SectionProgressStatus[a.SectionProgressStatus.STARTED]
                  ? "Started"
                  : e ===
                    a.SectionProgressStatus[a.SectionProgressStatus.SUBMITTED]
                  ? "Submitted"
                  : e ===
                    a.SectionProgressStatus[a.SectionProgressStatus.FAILED]
                  ? "Failed"
                  : e === a.SectionProgressStatus[a.SectionProgressStatus.SOS]
                  ? "Failed. No more attempts are allowed"
                  : e ===
                    a.SectionProgressStatus[a.SectionProgressStatus.COMPLETED]
                  ? "Passed"
                  : "N/A";
              }),
              (e.prototype.redirectToDetails = function () {
                this.$location.url(
                  this.coursesRouter.detailsUrl(this.courseId)
                );
              }),
              (e.prototype.redirectToInfo = function () {
                this.$location.url(this.coursesRouter.infoUrl(this.courseId));
              }),
              (e.prototype.editCourse = function () {
                this.$location.url(this.coursesRouter.updateUrl(this.courseId));
              }),
              (e.prototype.changeFilter = function () {
                0 == this.searchType
                  ? (this.courseUsers.forEach(function (e) {
                      e.selected = !1;
                    }),
                    (this.selectedGroupIds = []))
                  : (this.courseGroups.forEach(function (e) {
                      e.selected = !1;
                    }),
                    (this.selectedUserIds = [])),
                  this.cleanSelectedSection();
              }),
              (e.prototype.cleanSelectedSection = function () {
                (this.selectedSectionStatistic = {}),
                  (this.selectedQuizProgress = {});
              }),
              (e.prototype.isTopMenuActive = function (e) {
                return "progress" == e;
              }),
              (e.prototype.isShowProgressTab = function () {
                return !0;
              }),
              (e.NAME = "courses.CourseProgressController"),
              (e.$inject = [
                "$http",
                "$location",
                "$routeParams",
                p.UrlService.NAME,
                c.SecurityService.NAME,
                i.CoursesRouter.NAME,
                s.CourseService.NAME,
                o.ProgressService.NAME,
                n.AuthService.NAME,
              ]),
              e
            );
          })();
        r.CourseProgressController = m;
      },
      {
        "../IGridModel": 2,
        "../IHttpGridService": 3,
        "../auth/AuthService": 10,
        "../security/SecurityService": 166,
        "../urls/CoursesRouter": 199,
        "../utils/MenuHelper": 227,
        "../utils/PageHeaderHelper": 231,
        "../utils/UrlService": 236,
        "./CourseService": 81,
        "./ProgressService": 84,
        "./models/SectionProgressStatus": 87,
        "./models/SectionResultStatistic": 88,
      },
    ],
    81: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = (function () {
            function e(e, t, r) {
              (this.$http = e), (this.$sce = t), (this.url = r);
            }
            return (
              (e.prototype.findCoursesByMaterial = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/courses/by/material/:materialId")
                      .param(":materialId", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.get = function (e) {
                return this.$http
                  .get(
                    this.url.base("/api/courses/:id?").param(":id", e).service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.createCourseBundle = function (e, t) {
                return this.$http
                  .post(
                    this.url
                      .base(
                        "/api/courses/:courseId/bundles?courseVersion=:courseVersion"
                      )
                      .param(":courseId", e)
                      .param(":courseVersion", t)
                      .service(),
                    null
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.create = function (e, t, r) {
                return (
                  (e.preview =
                    null != r
                      ? { name: r.name, type: r.type, size: r.size }
                      : null),
                  (e.permissionsWithUsersAndGroups = t),
                  this.$http
                    .post(this.url.service("/api/courses"), e)
                    .then(function (e) {
                      return e.data;
                    })
                );
              }),
              (e.prototype.update = function (e, t, r, i) {
                return (
                  (e.preview =
                    null != i
                      ? { name: i.name, type: i.type, size: i.size }
                      : null),
                  (e.permissionsWithUsersAndGroups = t),
                  (e.resetPreview = r),
                  this.$http
                    .put(this.url.service("/api/courses"), e)
                    .then(function (e) {
                      return e.data;
                    })
                );
              }),
              (e.prototype.getModules = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/courses/:id/modules")
                      .param(":id", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getModuleSections = function (e, t) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/courses/:courseId/modules/:moduleId/sections")
                      .param(":courseId", e)
                      .param(":moduleId", t)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.createModule = function (e, t) {
                return this.$http
                  .post(
                    this.url
                      .base("/api/courses/:courseId/modules")
                      .param(":courseId", e)
                      .service(),
                    t
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.updateModule = function (e, t) {
                return this.$http
                  .put(
                    this.url
                      .base("/api/courses/:courseId/modules")
                      .param(":courseId", e)
                      .service(),
                    t
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.updateModuleHierarchy = function (e, t) {
                return this.$http
                  .put(
                    this.url
                      .base("/api/courses/:courseId/modules/updateHierarchy")
                      .param(":courseId", e)
                      .service(),
                    t
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.createSection = function (e, t, r) {
                return this.$http
                  .post(
                    this.url
                      .base("/api/courses/:courseId/modules/:moduleId/sections")
                      .param(":courseId", e)
                      .param(":moduleId", t)
                      .service(),
                    r
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.updateSection = function (e, t, r) {
                return this.$http
                  .put(
                    this.url
                      .base("/api/courses/:courseId/modules/:moduleId/sections")
                      .param(":courseId", e)
                      .param(":moduleId", t)
                      .service(),
                    r
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.updateSectionName = function (e, t, r) {
                return this.$http
                  .put(
                    this.url
                      .base(
                        "/api/courses/:courseId/modules/:moduleId/sections/updateName"
                      )
                      .param(":courseId", e)
                      .param(":moduleId", t)
                      .service(),
                    r
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.updateSectionHierarchy = function (e, t, r) {
                return this.$http
                  .put(
                    this.url
                      .base(
                        "/api/courses/:courseId/modules/:moduleId/sections/updateHierarchy"
                      )
                      .param(":courseId", e)
                      .param(":moduleId", t)
                      .service(),
                    r
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getAvailableSectionsNoChildren = function (e, t, r) {
                return this.$http
                  .get(
                    this.url
                      .base(
                        "/api/courses/:courseId/modules/:moduleId/sections/available/no/children/:sectionId"
                      )
                      .param(":courseId", e)
                      .param(":moduleId", t)
                      .param(":sectionId", r)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getSectionUploadedOrLinkMaterials = function (
                e,
                t,
                r
              ) {
                return this.$http
                  .get(
                    this.url
                      .base(
                        "/api/courses/:courseId/modules/:moduleId/sections/:sectionId/materials/uploadedOrLink"
                      )
                      .param(":courseId", e)
                      .param(":moduleId", t)
                      .param(":sectionId", r)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getSectionAllMaterials = function (e, t, r) {
                return this.$http
                  .get(
                    this.url
                      .base(
                        "/api/courses/:courseId/modules/:moduleId/sections/:sectionId/materials/all"
                      )
                      .param(":courseId", e)
                      .param(":moduleId", t)
                      .param(":sectionId", r)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.deleteModule = function (e, t, r) {
                return this.$http["delete"](
                  this.url
                    .base(
                      "api/courses/:courseId/modules/:moduleId?version=:version"
                    )
                    .param(":courseId", e)
                    .param(":moduleId", t)
                    .param(":version", r)
                    .service()
                ).then(function (e) {
                  return e.data;
                });
              }),
              (e.prototype.deleteSection = function (e, t, r, i, s) {
                return this.$http["delete"](
                  this.url
                    .base(
                      "api/courses/:courseId/modules/:moduleId/sections/:sectionId?version=:version&removeProgress=:removeProgress"
                    )
                    .param(":courseId", e)
                    .param(":moduleId", t)
                    .param(":sectionId", r)
                    .param(":version", i)
                    .param(":removeProgress", s)
                    .service()
                ).then(function (e) {
                  return e.data;
                });
              }),
              (e.prototype.getCourseOwners = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("api/courses/:courseId/owners")
                      .param(":courseId", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getSectionQuiz = function (e, t, r) {
                return this.$http
                  .get(
                    this.url
                      .base(
                        "/api/courses/:courseId/modules/:moduleId/sections/:sectionId/quiz"
                      )
                      .param(":courseId", e)
                      .param(":moduleId", t)
                      .param(":sectionId", r)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.createLandingPage = function (e, t) {
                return this.$http
                  .post(
                    this.url
                      .base("/api/courses/:courseId/landingPage")
                      .param(":courseId", e)
                      .service(),
                    t
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getLandingPage = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/courses/:courseId/landingPage")
                      .param(":courseId", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.updateLandingPage = function (e, t) {
                return this.$http
                  .put(
                    this.url
                      .base("/api/courses/:courseId/landingPage")
                      .param(":courseId", e)
                      .service(),
                    t
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.downloadCertificate = function (e) {
                var t = this,
                  r = "COURSE_CERTIFICATE";
                return this.$http
                  .post(
                    this.url
                      .base("/api/reports/downloadToken/:reportType")
                      .param(":reportType", r)
                      .service(),
                    { parameters: JSON.stringify(e) }
                  )
                  .then(function (e) {
                    return t.url
                      .base("/api/reports/download/:token")
                      .param(":token", e.data.token)
                      .service();
                  });
              }),
              (e.prototype.viewCertificate = function (e) {
                var t = "COURSE_CERTIFICATE";
                return this.$http
                  .post(
                    this.url
                      .base("/api/reports/preview/:reportType")
                      .param(":reportType", t)
                      .service(),
                    JSON.stringify(e)
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getCourseCertificates = function (e, t) {
                return this.$http
                  .get(
                    this.url
                      .base(
                        "/api/courses/:courseId/certificates?editCourse=:editCourse"
                      )
                      .param(":courseId", e)
                      .param(":editCourse", t)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.removeCourseCertificates = function (e, t) {
                return this.$http["delete"](
                  this.url
                    .base("/api/courses/:courseId/certificates")
                    .param(":courseId", e)
                    .service(),
                  { params: { certificatesIds: t } }
                ).then(function (e) {
                  return e.data;
                });
              }),
              (e.prototype.getEmbeddedMaterial = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/courses/embedded/material/:materialId")
                      .param(":materialId", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getCourseParticipationInfo = function (e, t) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/courses/:courseId/participationInfo")
                      .param(":courseId", e)
                      .service(),
                    { params: { courseProgressId: t } }
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.updateCourseParticipationInfo = function (e, t, r) {
                return this.$http
                  .put(
                    this.url
                      .base(
                        "/api/courses/:courseId/participationInfo?courseProgressId=:courseProgressId"
                      )
                      .param(":courseId", e)
                      .param(":courseProgressId", t)
                      .service(),
                    r
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.NAME = "courses.CourseService"),
              (e.$inject = ["$http", "$sce", i.UrlService.NAME]),
              e
            );
          })();
        r.CourseService = s;
      },
      { "./../utils/UrlService": 236 },
    ],
    82: [
      function (e, t, r) {
        var i = e("./../authcore/AuthManager"),
          s = e("./../urls/CoursesRouter"),
          o = e("./../utils/MenuHelper"),
          n = e("./../utils/PageHeaderHelper"),
          a = e("./../security/PermissionsService"),
          u = e("./../IGridModel"),
          l = e("./../utils/UrlService"),
          c = e("./../IHttpGridService"),
          d = e("./../personal/PersonalService"),
          h = e("./../INotifier"),
          p = e("./../ReferencedObjectType"),
          f = (function () {
            function e(e, t, r, i, s, a, l) {
              var d = this;
              (this.$location = t),
                (this.coursesRouter = r),
                (this.permissionsApi = i),
                (this.authManager = s),
                (this.url = a),
                (this.personalService = l),
                (this.SUBJECT_MODULE = "subject"),
                (this.COMPLEXITY_LEVEL_MODULE = "complexityLevel"),
                (this.LANGUAGE_MODULE = "language"),
                (this.SOURCE_MODULE = "source"),
                (this.STUDENT_MODULE = "student"),
                (this.DEFAULT_TOP_MENU_ITEM = "course"),
                (this.selectedItemInModule = new Map()),
                (this.rowShow = new Map()),
                this.selectedItemInModule.set(this.SUBJECT_MODULE, 0),
                this.selectedItemInModule.set(this.COMPLEXITY_LEVEL_MODULE, 0),
                this.selectedItemInModule.set(this.LANGUAGE_MODULE, 0),
                this.selectedItemInModule.set(this.SOURCE_MODULE, 0),
                this.selectedItemInModule.set(this.STUDENT_MODULE, 1),
                (this.viewType = 1),
                (this.menuKey = { topMenu: this.DEFAULT_TOP_MENU_ITEM }),
                (this.isAuthenticated = this.authManager.isAuthenticated()),
                o.MenuHelper.setCurrentMenuItem(
                  o.MenuHelper.EDUCATION_COURSES_MENU_KEY
                ),
                n.PageHeader.set().header("Courses").update(),
                this.isAuthenticated &&
                  this.permissionsApi.getSystemPermissions().then(function (e) {
                    d.systemPermissions = e;
                  }),
                (this.coursesGridModel = new u.GridModel(
                  c.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/courses")
                  )
                )),
                (this.coursesGridModel.pageSize = 8);
            }
            return (
              (e.prototype.setSearch = function (e, t) {
                this.selectedItemInModule.get(e) == t
                  ? this.selectedItemInModule.set(e, 0)
                  : this.selectedItemInModule.set(e, t),
                  this.searchCourse();
              }),
              (e.prototype.isSearchItemActive = function (e, t) {
                return this.selectedItemInModule.get(e) == t;
              }),
              (e.prototype.isSearchItemHide = function (e, t) {
                return !(
                  0 == this.selectedItemInModule.get(e) ||
                  this.selectedItemInModule.get(e) == t
                );
              }),
              (e.prototype.isTopMenuActive = function (e) {
                return this.menuKey.topMenu == e;
              }),
              (e.prototype.showDetails = function (e) {
                this.rowShow.set(e, !this.rowShow.get(e));
              }),
              (e.prototype.loadCourse = function (e) {
                this.$location.url(this.coursesRouter.detailsUrl(e));
              }),
              (e.prototype.searchCourse = function () {
                (this.coursesGridModel.filter.searchString = null),
                  this.coursesGridModel.loadCurrentPage();
              }),
              (e.prototype.addToFavorites = function (e) {
                this.rowShow.set(e.id, !this.rowShow.get(e.id)),
                  this.personalService
                    .addToFavorites(e.id, p.ReferencedObjectType.COURSE)
                    .then(function (t) {
                      h.notifier.success(
                        "The course has been added to your favorites"
                      ),
                        (e.favorite = !0);
                    })
                    ["catch"](function (e) {
                      "object.already.in.favorite" == e.data.error &&
                        h.notifier.error(
                          "This course is already in your favorites"
                        );
                    });
              }),
              (e.prototype.removeFromFavorites = function (e) {
                this.rowShow.set(e.id, !this.rowShow.get(e.id)),
                  this.personalService
                    .removeFromFavorites(e.id, p.ReferencedObjectType.COURSE)
                    .then(function (t) {
                      h.notifier.success(
                        "The course has been removed from your favorites"
                      ),
                        (e.favorite = !1);
                    })
                    ["catch"](function (e) {
                      "object.not.in.favorite" == e.data.error &&
                        h.notifier.error(
                          "Failed to remove from your favorites"
                        );
                    });
              }),
              (e.NAME = "courses.CoursesController"),
              (e.$inject = [
                "$http",
                "$location",
                s.CoursesRouter.NAME,
                a.PermissionsService.NAME,
                i.AuthManager.NAME,
                l.UrlService.NAME,
                d.PersonalService.NAME,
              ]),
              e
            );
          })();
        r.CoursesController = f;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../INotifier": 4,
        "./../ReferencedObjectType": 6,
        "./../authcore/AuthManager": 18,
        "./../personal/PersonalService": 136,
        "./../security/PermissionsService": 164,
        "./../urls/CoursesRouter": 199,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
      },
    ],
    83: [
      function (e, t, r) {
        var i = e("./CoursesController"),
          s = e("./CourseDetailsController"),
          o = e("./QuizDetailsController"),
          n = e("./CourseEditController"),
          a = e("./CourseService"),
          u = e("./ProgressService"),
          l = e("./../security/SecurityModule"),
          c = e("./../authcore/AuthCoreModule"),
          d = e("./../urls/UrlsModule"),
          h = e("./../quizzes/QuizzesModule"),
          p = e("./CourseProgressController"),
          f = e("./CourseInfoController");
        r.CoursesModule = angular
          .module("courses", [
            l.SecurityModule.name,
            c.AuthCoreModule.name,
            d.UrlsModule.name,
            h.QuizzesModule.name,
          ])
          .service(a.CourseService.NAME, a.CourseService)
          .service(u.ProgressService.NAME, u.ProgressService)
          .controller(i.CoursesController.NAME, i.CoursesController)
          .controller(s.CourseDetailsController.NAME, s.CourseDetailsController)
          .controller(o.QuizDetailsController.NAME, o.QuizDetailsController)
          .controller(n.CourseEditController.NAME, n.CourseEditController)
          .controller(
            p.CourseProgressController.NAME,
            p.CourseProgressController
          )
          .controller(f.CourseInfoController.NAME, f.CourseInfoController);
      },
      {
        "./../authcore/AuthCoreModule": 17,
        "./../quizzes/QuizzesModule": 151,
        "./../security/SecurityModule": 165,
        "./../urls/UrlsModule": 212,
        "./CourseDetailsController": 77,
        "./CourseEditController": 78,
        "./CourseInfoController": 79,
        "./CourseProgressController": 80,
        "./CourseService": 81,
        "./CoursesController": 82,
        "./ProgressService": 84,
        "./QuizDetailsController": 85,
      },
    ],
    84: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = (function () {
            function e(e, t, r) {
              (this.$http = e),
                (this.$sce = t),
                (this.url = r),
                (this.COURSE_PROGRESS_ID_STORAGE_KEY =
                  "vhs.application.courses.course.progress.id");
            }
            return (
              (e.prototype.startCourse = function (e, t) {
                return this.$http
                  .post(
                    this.url
                      .base("/api/progress/course/:courseId/start")
                      .param(":courseId", e)
                      .service(),
                    t
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getCourseProgress = function (e, t, r) {
                return this.$http
                  .get(
                    this.url
                      .base(
                        "/api/progress/course/:courseId?userId=:userId&courseProgressId=:courseProgressId"
                      )
                      .param(":courseId", e)
                      .param(":userId", r || "")
                      .param(":courseProgressId", t || "")
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getCourseProgressHistory = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/progress/course/:courseId/history")
                      .param(":courseId", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getCourseSections = function (e, t) {
                return this.$http
                  .get(
                    this.url
                      .base(
                        "/api/progress/structure/courses/:courseId/sections?courseProgressId=:courseProgressId"
                      )
                      .param(":courseId", e)
                      .param(":courseProgressId", t || "")
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getModuleSections = function (e, t, r) {
                return this.$http
                  .get(
                    this.url
                      .base(
                        "/api/progress/structure/courses/:courseId/modules/:moduleId/sections?courseProgressId=:courseProgressId"
                      )
                      .param(":courseId", e)
                      .param(":moduleId", t)
                      .param(":courseProgressId", r || "")
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getCourseUsers = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/courses/:courseId/users")
                      .param(":courseId", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getCourseGroups = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/courses/:courseId/groups")
                      .param(":courseId", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getProgressForUser = function (e, t) {
                return t
                  ? this.$http
                      .get(
                        this.url
                          .base(
                            "/api/progress/course/:courseId/sections?userId=:userId"
                          )
                          .param(":courseId", e)
                          .param(":userId", t)
                          .service()
                      )
                      .then(function (e) {
                        return e.data;
                      })
                  : this.$http
                      .get(
                        this.url
                          .base("/api/progress/course/:courseId/sections")
                          .param(":courseId", e)
                          .service()
                      )
                      .then(function (e) {
                        return e.data;
                      });
              }),
              (e.prototype.getProgressForQuiz = function (e, t, r, i) {
                var s = { params: { userIdsFilter: r, groupIdsFilter: i } };
                return this.$http
                  .get(
                    this.url
                      .base(
                        "/api/progress/course/:courseId/sections/:sectionId?page=0&pageSize=1000"
                      )
                      .param(":courseId", e)
                      .param(":sectionId", t)
                      .service(),
                    s
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getSectionsStatistics = function (e, t, r) {
                var i = { params: { userIdsFilter: t, groupIdsFilter: r } };
                return this.$http
                  .get(
                    this.url
                      .base(
                        "/api/progress/course/:courseId/sections/statistics"
                      )
                      .param(":courseId", e)
                      .service(),
                    i
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.setSectionProgress = function (e, t, r, i) {
                return this.$http
                  .put(
                    this.url
                      .base(
                        "/api/progress/course/:courseId/sections/:sectionId/status/:status"
                      )
                      .param(":courseId", e)
                      .param(":sectionId", t)
                      .param(":status", r.toUpperCase())
                      .service(),
                    i ? JSON.stringify(i) : null
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getSectionProgress = function (e, t, r) {
                return this.$http
                  .get(
                    this.url
                      .base(
                        "/api/progress/course/:courseId/sections/:sectionId/progress/:courseProgressId"
                      )
                      .param(":courseId", e)
                      .param(":sectionId", t)
                      .param(":courseProgressId", r)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.NAME = "courses.ProgressService"),
              (e.$inject = ["$http", "$sce", i.UrlService.NAME]),
              e
            );
          })();
        r.ProgressService = s;
      },
      { "./../utils/UrlService": 236 },
    ],
    85: [
      function (e, t, r) {
        var i = e("./../utils/MenuHelper"),
          s = e("./../utils/PageHeaderHelper"),
          o = e("./../urls/CoursesRouter"),
          n = e("./../security/SecurityService"),
          a = (function () {
            function e(e, t, r) {
              (this.$location = e),
                (this.$routeParams = t),
                (this.securityService = r),
                (this.quizNumber = t[o.CoursesRouter.COURSE_QUIZ_ID_PARAM]);
              String(this.quizNumber);
              this.securityService.demandAuthentication();
              var n = i.MenuHelper.getCurrentMenuItemKey();
              (n && 0 != n.length) ||
                i.MenuHelper.setCurrentMenuItem(
                  i.MenuHelper.EDUCATION_COURSES_MENU_KEY
                ),
                s.PageHeader.set()
                  .header("Test #" + this.quizNumber + " of English language")
                  .update();
            }
            return (
              (e.prototype.isQuizNumberOdd = function (e) {
                return this.quizNumber % 2 != 0;
              }),
              (e.NAME = "courses.QuizDetailsController"),
              (e.$inject = [
                "$location",
                "$routeParams",
                n.SecurityService.NAME,
              ]),
              e
            );
          })();
        r.QuizDetailsController = a;
      },
      {
        "./../security/SecurityService": 166,
        "./../urls/CoursesRouter": 199,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
      },
    ],
    86: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.NOT_STARTED = 0)] = "NOT_STARTED"),
            (e[(e.STARTED = 1)] = "STARTED"),
            (e[(e.FAILED = 2)] = "FAILED"),
            (e[(e.PASSED = 3)] = "PASSED"),
            (e[(e.COMPLETED = 4)] = "COMPLETED"),
            (e[(e.EXPIRED = 5)] = "EXPIRED"),
            (e[(e.ARCHIVED = 6)] = "ARCHIVED");
        })(r.CourseProgressStatus || (r.CourseProgressStatus = {}));
        r.CourseProgressStatus;
      },
      {},
    ],
    87: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.NOT_ALLOWED = 0)] = "NOT_ALLOWED"),
            (e[(e.ALLOWED = 1)] = "ALLOWED"),
            (e[(e.OPENED = 2)] = "OPENED"),
            (e[(e.STARTED = 3)] = "STARTED"),
            (e[(e.SUBMITTED = 4)] = "SUBMITTED"),
            (e[(e.FAILED = 5)] = "FAILED"),
            (e[(e.SOS = 6)] = "SOS"),
            (e[(e.COMPLETED = 7)] = "COMPLETED");
        })(r.SectionProgressStatus || (r.SectionProgressStatus = {}));
        r.SectionProgressStatus;
      },
      {},
    ],
    88: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.SUBMITTED = 0)] = "SUBMITTED"),
            (e[(e.FAILED = 1)] = "FAILED"),
            (e[(e.COMPLETED = 2)] = "COMPLETED");
        })(r.SectionResultStatistic || (r.SectionResultStatistic = {}));
        r.SectionResultStatistic;
      },
      {},
    ],
    89: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.INFORMATION = 0)] = "INFORMATION"),
            (e[(e.QUIZ = 1)] = "QUIZ"),
            (e[(e.PROBLEM_SOLUTION = 2)] = "PROBLEM_SOLUTION");
        })(r.SectionType || (r.SectionType = {}));
        r.SectionType;
      },
      {},
    ],
    90: [
      function (e, t, r) {
        var i = e("./../security/SecurityService"),
          s = e("./../utils/MenuHelper"),
          o = e("./../utils/PageHeaderHelper"),
          n = (function () {
            function e(e, t) {
              (this.$location = e),
                (this.securityService = t),
                this.securityService
                  .demandAuthentication()
                  .demandSystemPermissions(function (e) {
                    return e.managementAccount;
                  }),
                s.MenuHelper.setCurrentMenuItem(
                  s.MenuHelper.OPERATIONS_ACCOUNT_MANAGEMENT_MENU_KEY
                ),
                o.PageHeader.set().header("Money").update();
            }
            return (
              (e.prototype.doSubmit = function () {}),
              (e.NAME = "finances.AccountManagementController"),
              (e.$inject = ["$location", i.SecurityService.NAME]),
              e
            );
          })();
        r.AccountManagementController = n;
      },
      {
        "./../security/SecurityService": 166,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
      },
    ],
    91: [
      function (e, t, r) {
        var i = e("./../security/SecurityService"),
          s = (function () {
            function e(e, t) {
              (this.$location = e),
                (this.securityService = t),
                this.securityService
                  .demandAuthentication()
                  .demandSystemPermissions(function (e) {
                    return e.rechargeAccount;
                  });
            }
            return (
              (e.prototype.doSubmit = function () {}),
              (e.NAME = "finances.BalanceController"),
              (e.$inject = ["$location", i.SecurityService.NAME]),
              e
            );
          })();
        r.BalanceController = s;
      },
      { "./../security/SecurityService": 166 },
    ],
    92: [
      function (e, t, r) {
        var i = e("./BalanceController"),
          s = e("./PurchaseHistoryController"),
          o = e("./AccountManagementController"),
          n = e("./PurchaseController"),
          a = e("./PurchaseService"),
          u = e("./../common/CommonModule"),
          l = e("./../security/SecurityModule"),
          c = e("./../urls/UrlsModule"),
          d = e("./../content/ContentModule");
        r.FinancesModule = angular
          .module("finances", [
            u.CommonModule.name,
            l.SecurityModule.name,
            c.UrlsModule.name,
            d.ContentModule.name,
          ])
          .controller(i.BalanceController.NAME, i.BalanceController)
          .controller(
            s.PurchaseHistoryController.NAME,
            s.PurchaseHistoryController
          )
          .controller(
            o.AccountManagementController.NAME,
            o.AccountManagementController
          )
          .controller(n.PurchaseController.NAME, n.PurchaseController)
          .service(a.PurchaseService.NAME, a.PurchaseService);
      },
      {
        "./../common/CommonModule": 29,
        "./../content/ContentModule": 75,
        "./../security/SecurityModule": 165,
        "./../urls/UrlsModule": 212,
        "./AccountManagementController": 90,
        "./BalanceController": 91,
        "./PurchaseController": 93,
        "./PurchaseHistoryController": 94,
        "./PurchaseService": 95,
      },
    ],
    93: [
      function (e, t, r) {
        var i = e("./../utils/MenuHelper"),
          s = e("./../utils/PageHeaderHelper"),
          o = e("./../urls/FinancesRouter"),
          n = e("./PurchaseService"),
          a = e("./../INotifier"),
          u = e("./../statistics/ActionLogService"),
          l = e("./../statistics/models/ActionType"),
          c = e("./../ReferencedObjectType"),
          d = e("./../authcore/AuthManager"),
          h = e("./../authcore/AuthRedirect"),
          p = e("./../authcore/RedirectReason"),
          f = e("./../urls/ContentRouter"),
          m = e("./../content/ContentService"),
          S = e("./../urls/MainRouter"),
          v = (function () {
            function e(e, t, r, n, u, l, d, h, f, m) {
              var S = this;
              (this.$location = e),
                (this.$window = t),
                (this.$routeParams = r),
                (this.purchaseApi = n),
                (this.actionLogService = u),
                (this.authManager = l),
                (this.authRedirect = d),
                (this.contentRouter = h),
                (this.contentApi = f),
                (this.mainRouter = m),
                (this.content = {}),
                l.isAuthenticated() ||
                  d.redirectToLogOn(p.RedirectReason.LOGON_REQUIRED),
                i.MenuHelper.getCurrentMenuItemKey() ||
                  i.MenuHelper.setCurrentMenuItem(i.MenuHelper.SEARCH_MENU_KEY),
                (this.objectType =
                  c.ReferencedObjectType[
                    this.$routeParams[
                      o.FinancesRouter.OBJECT_TYPE_PARAM
                    ].toUpperCase()
                  ]),
                (this.objectId =
                  this.$routeParams[o.FinancesRouter.OBJECT_ID_PARAM]),
                this.contentApi
                  .getContentView(this.objectId, this.objectType)
                  .then(function (e) {
                    e.permissions.view &&
                      (a.notifier.warning(
                        "You already have a permission to view this content, so you don’t need to buy it. Lucky you!"
                      ),
                      S.$location.url(
                        S.contentRouter.detailsUrl(S.objectId, S.objectType)
                      )),
                      angular.copy(e, S.content);
                  })
                  ["catch"](function (e) {
                    S.content = { typeName: "", title: "Failed to load" };
                  })
                  ["finally"](function () {
                    s.PageHeader.set()
                      .header(
                        (S.content.contentType || "") +
                          " ‘" +
                          (S.content.name || "") +
                          "’ > Request of purchase confirmation"
                      )
                      .update();
                  });
            }
            return (
              (e.prototype.doSubmit = function () {
                var e = this;
                this.purchaseApi
                  .purchase(this.objectType, this.objectId)
                  .then(function (t) {
                    e.actionLogService.create(
                      e.objectId,
                      e.objectType,
                      e.getPurchaseActionType(e.objectType)
                    ),
                      a.notifier.success(
                        "Purchase has been successfully accomplished"
                      ),
                      e.$location.url(
                        e.contentRouter.detailsUrl(e.objectId, e.objectType)
                      );
                  });
              }),
              (e.prototype.doCancel = function () {
                this.$window.history.length > 1
                  ? this.$window.history.back()
                  : this.$location.url(this.mainRouter.mainUrl());
              }),
              (e.prototype.getPurchaseActionType = function (e) {
                switch (e) {
                  case c.ReferencedObjectType.MATERIAL:
                    return l.ActionType.MATERIAL_PURCHASE;
                  default:
                    return null;
                }
              }),
              (e.NAME = "finances.PurchaseController"),
              (e.$inject = [
                "$location",
                "$window",
                "$routeParams",
                n.PurchaseService.NAME,
                u.ActionLogService.NAME,
                d.AuthManager.NAME,
                h.AuthRedirect.NAME,
                f.ContentRouter.NAME,
                m.ContentService.NAME,
                S.MainRouter.NAME,
              ]),
              e
            );
          })();
        r.PurchaseController = v;
      },
      {
        "./../INotifier": 4,
        "./../ReferencedObjectType": 6,
        "./../authcore/AuthManager": 18,
        "./../authcore/AuthRedirect": 19,
        "./../authcore/RedirectReason": 21,
        "./../content/ContentService": 76,
        "./../statistics/ActionLogService": 177,
        "./../statistics/models/ActionType": 184,
        "./../urls/ContentRouter": 198,
        "./../urls/FinancesRouter": 200,
        "./../urls/MainRouter": 203,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./PurchaseService": 95,
      },
    ],
    94: [
      function (e, t, r) {
        var i = e("./../security/SecurityService"),
          s = e("./../urls/ContentRouter"),
          o = e("./../utils/UrlService"),
          n = e("./../IGridModel"),
          a = e("./../IHttpGridService"),
          u = (function () {
            function e(e, t, r, i, s) {
              (this.$location = t),
                (this.url = r),
                (this.contentRouter = i),
                (this.securityService = s),
                this.securityService
                  .demandAuthentication()
                  .demandSystemPermissions(function (e) {
                    return e.viewPurchaseHistory;
                  }),
                (this.purchaseHistoryGridModel = new n.GridModel(
                  a.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/finance/purchaseHistory")
                  )
                )),
                (this.viewType = 0);
            }
            return (
              (e.NAME = "finances.PurchaseHistoryController"),
              (e.$inject = [
                "$http",
                "$location",
                o.UrlService.NAME,
                s.ContentRouter.NAME,
                i.SecurityService.NAME,
              ]),
              e
            );
          })();
        r.PurchaseHistoryController = u;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../security/SecurityService": 166,
        "./../urls/ContentRouter": 198,
        "./../utils/UrlService": 236,
      },
    ],
    95: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = (function () {
            function e(e, t) {
              (this.$http = e), (this.url = t);
            }
            return (
              (e.prototype.purchase = function (e, t) {
                var r = { objectType: e, objectId: t };
                return this.$http
                  .post(this.url.service("api/finance/purchase"), r)
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.NAME = "finances.PurchaseService"),
              (e.$inject = ["$http", i.UrlService.NAME]),
              e
            );
          })();
        r.PurchaseService = s;
      },
      { "./../utils/UrlService": 236 },
    ],
    96: [
      function (e, t, r) {
        var i = e("./../authcore/AuthManager"),
          s = e("./../authcore/AuthRedirect"),
          o = e("./../authcore/RedirectReason"),
          n = e("./../INotifier"),
          a = e("../common/CommonNavigation"),
          u = e("./../utils/UrlService"),
          l = (function () {
            function e(e, t, r, i) {
              var s = this;
              (this.$q = e),
                (this.authRedirect = t),
                (this.authManager = r),
                (this.commonNavigation = i),
                (this.request = function (e) {
                  e.headers = e.headers || {};
                  var t = s.authManager.getToken();
                  return (
                    null == t ||
                      0 == e.url.indexOf(u.VIEWS_URL_PREFIX) ||
                      e.withoutAuthorization ||
                      (e.headers.Authorization =
                        t.tokenType + " " + t.accessToken),
                    (e.headers["X-Timezone"] = moment(new Date()).utcOffset()),
                    e
                  );
                }),
                (this.responseError = function (e) {
                  return (
                    401 === e.status
                      ? s.redirectToLogOn(o.RedirectReason.ACCESS_DENIED)
                      : 403 === e.status
                      ? s.authManager.isAuthenticated()
                        ? s.authRedirect.forwardToAccessDenied()
                        : s.authManager.hasToken()
                        ? (s.authManager.logOff(),
                          s.redirectToLogOn(o.RedirectReason.TOKEN_EXPIRED))
                        : s.redirectToLogOn(o.RedirectReason.ACCESS_DENIED)
                      : e.status >= 500
                      ? n.notifier.error(
                          "Query has failed: please contact your system administrator or help desk"
                        )
                      : 409 === e.status
                      ? ("InvalidState" === e.data.error ||
                          "OptimisticLock" === e.data.error) &&
                        n.notifier.error(
                          "This data has been modified by another user: please refresh the page and try again"
                        )
                      : 404 === e.status &&
                        !0 !== e.config.ignore404 &&
                        s.commonNavigation.redirectToNotFound(),
                    s.$q.reject(e)
                  );
                });
            }
            return (
              (e.Factory = function (t, r, i, s) {
                return new e(t, r, i, s);
              }),
              (e.prototype.redirectToLogOn = function (e) {
                this.authManager.eraseToken(),
                  this.authRedirect.redirectToLogOn(e);
              }),
              (e.NAME = "http.HttpInterceptor"),
              e
            );
          })();
        (r.HttpInterceptor = l),
          (l.Factory.$inject = [
            "$q",
            s.AuthRedirect.NAME,
            i.AuthManager.NAME,
            a.CommonNavigation.NAME,
          ]);
      },
      {
        "../common/CommonNavigation": 30,
        "./../INotifier": 4,
        "./../authcore/AuthManager": 18,
        "./../authcore/AuthRedirect": 19,
        "./../authcore/RedirectReason": 21,
        "./../utils/UrlService": 236,
      },
    ],
    97: [
      function (e, t, r) {
        var i = e("./HttpInterceptor"),
          s = e("./../authcore/AuthCoreModule"),
          o = e("./../common/CommonModule");
        r.HttpModule = angular
          .module("http", [s.AuthCoreModule.name, o.CommonModule.name])
          .factory(i.HttpInterceptor.NAME, i.HttpInterceptor.Factory);
      },
      {
        "./../authcore/AuthCoreModule": 17,
        "./../common/CommonModule": 29,
        "./HttpInterceptor": 96,
      },
    ],
    98: [
      function (e, t, r) {
        var i = e("./../utils/MenuHelper"),
          s = e("./../utils/PageHeaderHelper"),
          o = (function () {
            function e(e) {
              (this.$location = e),
                i.MenuHelper.setCurrentMenuItem(
                  i.MenuHelper.ABOUT_COMPANY_MENU_KEY
                ),
                s.PageHeader.set().header("About Us").update();
            }
            return (
              (e.NAME = "info.AboutCompanyController"),
              (e.$inject = ["$location"]),
              e
            );
          })();
        r.AboutCompanyController = o;
      },
      { "./../utils/MenuHelper": 227, "./../utils/PageHeaderHelper": 231 },
    ],
    99: [
      function (e, t, r) {
        var i = e("./../utils/MenuHelper"),
          s = e("./../utils/PageHeaderHelper"),
          o = (function () {
            function e(e) {
              (this.$location = e),
                i.MenuHelper.setCurrentMenuItem(
                  i.MenuHelper.ABOUT_PROJECT_MENU_KEY
                ),
                s.PageHeader.set().header("About the System").update();
            }
            return (
              (e.NAME = "info.AboutProjectController"),
              (e.$inject = ["$location"]),
              e
            );
          })();
        r.AboutProjectController = o;
      },
      { "./../utils/MenuHelper": 227, "./../utils/PageHeaderHelper": 231 },
    ],
    100: [
      function (e, t, r) {
        var i = e("./../utils/MenuHelper"),
          s = e("./../utils/PageHeaderHelper"),
          o = (function () {
            function e(e) {
              (this.$location = e),
                i.MenuHelper.setCurrentMenuItem(i.MenuHelper.CONTACTS_MENU_KEY),
                s.PageHeader.set().header("Contacts").update();
            }
            return (
              (e.NAME = "info.ContactsController"),
              (e.$inject = ["$location"]),
              e
            );
          })();
        r.ContactsController = o;
      },
      { "./../utils/MenuHelper": 227, "./../utils/PageHeaderHelper": 231 },
    ],
    101: [
      function (e, t, r) {
        var i = e("./../utils/MenuHelper"),
          s = e("./../utils/PageHeaderHelper"),
          o = e("../utils/UrlService"),
          n = (function () {
            function e(e, t) {
              (this.$location = e),
                (this.url = t),
                i.MenuHelper.setCurrentMenuItem(i.MenuHelper.FAQ_MENU_KEY),
                s.PageHeader.set().header("FAQ").update();
            }
            return (
              (e.NAME = "info.FAQController"),
              (e.$inject = ["$location", o.UrlService.NAME]),
              e
            );
          })();
        r.FAQController = n;
      },
      {
        "../utils/UrlService": 236,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
      },
    ],
1101: [
  function (e, t, r) {
    var i = e("./../utils/MenuHelper"),
        s = e("./../utils/PageHeaderHelper"),
        o = e("../utils/UrlService"),
        n = (function () {
          function e(e, t) {
            this.$location = e;
            this.url = t;

            i.MenuHelper.setCurrentMenuItem(i.MenuHelper.WELCOME_MENU_KEY);
            s.PageHeader.set().header("Welcome").update();
          }

          return (
            e.NAME = "info.WelcomeController",
            e.$inject = ["$location", o.UrlService.NAME],
            e
          );
        })();

    r.WelcomeController = n;
  },
  {
    "../utils/UrlService": 236,
    "./../utils/MenuHelper": 227,
    "./../utils/PageHeaderHelper": 231,
  },
],
1102: [
  function (e, t, r) {
    var i = e("./../utils/MenuHelper"),
        s = e("./../utils/PageHeaderHelper"),
        o = e("../utils/UrlService"),
        n = (function () {
          function e(e, t) {
            this.$location = e;
            this.url = t;

            i.MenuHelper.setCurrentMenuItem(i.MenuHelper.RENEWAL_MENU_KEY);
            s.PageHeader.set().header("Renewal Calendar Input").update();
          }

          return (
            e.NAME = "info.RenewalController",
            e.$inject = ["$location", o.UrlService.NAME],
            e
          );
        })();

    r.RenewalController = n;
  },
  {
    "../utils/UrlService": 236,
    "./../utils/MenuHelper": 227,
    "./../utils/PageHeaderHelper": 231,
  },
],
1103: [
  function (e, t, r) {
    var i = e("./../utils/MenuHelper"),
        s = e("./../utils/PageHeaderHelper"),
        o = e("../utils/UrlService"),
        n = (function () {
          function e(e, t) {
            this.$location = e;
            this.url = t;

            i.MenuHelper.setCurrentMenuItem(i.MenuHelper.ELIGIBILITY_MENU_KEY);
            s.PageHeader.set().header("Eligibility and Renewal Tool").update();
          }

          return (
            e.NAME = "info.EligibilityController",
            e.$inject = ["$location", o.UrlService.NAME],
            e
          );
        })();

    r.EligibilityController = n;
  },
  {
    "../utils/UrlService": 236,
    "./../utils/MenuHelper": 227,
    "./../utils/PageHeaderHelper": 231,
  },
],
1104: [
  function (e, t, r) {
    var i = e("./../utils/MenuHelper"),
        s = e("./../utils/PageHeaderHelper"),
        o = e("../utils/UrlService"),
        n = (function () {
          function e(e, t) {
            this.$location = e;
            this.url = t;

            i.MenuHelper.setCurrentMenuItem(i.MenuHelper.GUIDE_MENU_KEY);
            s.PageHeader.set().header("Physicians Guide to BasicMed").update();
          }

          return (
            e.NAME = "info.GuideController",
            e.$inject = ["$location", o.UrlService.NAME],
            e
          );
        })();

    r.GuideController = n;
  },
  {
    "../utils/UrlService": 236,
    "./../utils/MenuHelper": 227,
    "./../utils/PageHeaderHelper": 231,
  },
],
    102: [
      function (e, t, r) {
        var i = e("./AboutProjectController"),
          s = e("./AboutCompanyController"),
          o = e("./FAQController"),
          n = e("./ContactsController"),
          z = e("./RenewalController"),
          y = e("./EligibilityController"),
          l = e("./GuideController"),
          w = e("./WelcomeController");
        r.InfoModule = angular
          .module("info", [])
          .controller(i.AboutProjectController.NAME, i.AboutProjectController)
          .controller(s.AboutCompanyController.NAME, s.AboutCompanyController)
          .controller(o.FAQController.NAME, o.FAQController)
          .controller(n.ContactsController.NAME, n.ContactsController)
          .controller(z.RenewalController.NAME, z.RenewalController)
          .controller(y.EligibilityController.NAME, y.EligibilityController)
          .controller(l.GuideController.NAME, l.GuideController)
          .controller(w.WelcomeController.NAME, w.WelcomeController);
      },
      {
        "./AboutCompanyController": 98,
        "./AboutProjectController": 99,
        "./ContactsController": 100,
        "./FAQController": 101,
        "./RenewalController": 1102,
        "./EligibilityController": 1103,
        "./GuideController": 1104,
        "./WelcomeController": 1101,
      },
    ],
    103: [
      function (e, t, r) {
        var i = (function () {
          function e() {
            this.listeners = new Map();
          }
          return (
            (e.prototype.registerListener = function (e, t) {
              (e = e || ""),
                this.listeners.has(e) || this.listeners.set(e, []),
                this.listeners.get(e).push(t);
            }),
            (e.prototype.unregisterListener = function (e, t) {
              if (((e = e || ""), this.listeners.has(e))) {
                for (var r = 0; r < this.listeners.get(e).length; ++r) {
                  var i = this.listeners.get(e)[r];
                  if (i == t) {
                    this.listeners.get(e).splice(r, 1);
                    break;
                  }
                }
                0 == this.listeners.get(e).length &&
                  this.listeners["delete"](e);
              }
            }),
            (e.prototype.notify = function (e) {
              e = e || "";
              var t = this.listeners.get(e);
              angular.forEach(t, function (e) {
                return e();
              });
            }),
            (e.NAME = "infrastructure.EventService"),
            e
          );
        })();
        r.EventService = i;
      },
      {},
    ],
    104: [
      function (e, t, r) {
        var i = e("./Storage"),
          s = e("./EventService");
        r.InfrastructureModule = angular
          .module("infrastructure", [])
          .constant(i.Storages.LOCAL_NAME, i.Storages.LOCAL)
          .constant(i.Storages.SESSION_NAME, i.Storages.SESSION)
          .service(s.EventService.NAME, s.EventService);
      },
      { "./EventService": 103, "./Storage": 105 },
    ],
    105: [
      function (e, t, r) {
        var i = (function () {
          function e(e) {
            this.storage = e;
          }
          return (
            (e.prototype.put = function (e, t) {
              var r = JSON.stringify(t);
              this.storage.setItem(e, r);
            }),
            (e.prototype.get = function (e) {
              var t = this.storage.getItem(e);
              return t && t.length > 0 ? $.parseJSON(t) : null;
            }),
            (e.prototype.contains = function (e) {
              var t = this.storage.getItem(e);
              return t && t.length > 0;
            }),
            (e.prototype.remove = function (e) {
              this.storage.removeItem(e);
            }),
            e
          );
        })();
        r.StorageWrapper = i;
        var s = (function () {
          function e() {}
          return (
            (e.LOCAL_NAME = "infrastructure.LocalStorage"),
            (e.SESSION_NAME = "infrastructure.SessionStorage"),
            (e.LOCAL = new i(localStorage)),
            (e.SESSION = new i(sessionStorage)),
            e
          );
        })();
        r.Storages = s;
      },
      {},
    ],
    106: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.SUCCESS = 0)] = "SUCCESS"),
            (e[(e.FAILED = 1)] = "FAILED"),
            (e[(e.FAILED_INVALID_CREDENTIALS = 2)] =
              "FAILED_INVALID_CREDENTIALS"),
            (e[(e.FAILED_UNKNOWN_CREDENTIALS = 3)] =
              "FAILED_UNKNOWN_CREDENTIALS"),
            (e[(e.FAILED_ACCESS_DENIED = 4)] = "FAILED_ACCESS_DENIED");
        })(r.SecurityLogStatusEnum || (r.SecurityLogStatusEnum = {}));
        var i = r.SecurityLogStatusEnum;
        (r.SECURITY_LOG_STATUS_ENUM_VALUES = [
          i.SUCCESS,
          i.FAILED,
          i.FAILED_INVALID_CREDENTIALS,
          i.FAILED_UNKNOWN_CREDENTIALS,
          i.FAILED_ACCESS_DENIED,
        ]),
          (function (e) {
            (e[(e.AUTHENTICATION = 0)] = "AUTHENTICATION"),
              (e[(e.LOGOUT = 1)] = "LOGOUT"),
              (e[(e.AUTHORIZATION = 2)] = "AUTHORIZATION");
          })(r.SecurityLogActionEnum || (r.SecurityLogActionEnum = {}));
        var s = r.SecurityLogActionEnum;
        r.SECURITY_LOG_ACTION_ENUM_VALUES = [
          s.AUTHENTICATION,
          s.LOGOUT,
          s.AUTHORIZATION,
        ];
      },
      {},
    ],
    107: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.SERVER = 0)] = "SERVER"),
            (e[(e.CLIENT = 1)] = "CLIENT"),
            (e[(e.USER_REPORT = 2)] = "USER_REPORT");
        })(r.SystemLogSourceEnum || (r.SystemLogSourceEnum = {}));
        var i = r.SystemLogSourceEnum;
        (r.SYSTEM_LOG_SOURCE_ENUM_VALUES = [i.SERVER, i.CLIENT, i.USER_REPORT]),
          (function (e) {
            (e[(e.ERROR = 0)] = "ERROR"),
              (e[(e.WARN = 1)] = "WARN"),
              (e[(e.INFO = 2)] = "INFO"),
              (e[(e.DEBUG = 3)] = "DEBUG");
          })(r.SystemLogLevelEnum || (r.SystemLogLevelEnum = {}));
        var s = r.SystemLogLevelEnum;
        r.SYSTEM_LOG_LEVEL_ENUM_VALUES = [s.ERROR, s.WARN, s.INFO, s.DEBUG];
      },
      {},
    ],
    108: [
      function (e, t, r) {
        var i = e("./SecurityLogController"),
          s = e("./SystemLogController"),
          o = e("./../urls/UrlsModule");
        r.LogsModule = angular
          .module("logs", [o.UrlsModule.name])
          .controller(i.SecurityLogController.NAME, i.SecurityLogController)
          .controller(s.SystemLogController.NAME, s.SystemLogController);
      },
      {
        "./../urls/UrlsModule": 212,
        "./SecurityLogController": 109,
        "./SystemLogController": 110,
      },
    ],
    109: [
      function (e, t, r) {
        var i = e("./../utils/MenuHelper"),
          s = e("./../utils/Moment"),
          o = e("./../utils/PageHeaderHelper"),
          n = e("./../IGridModel"),
          a = e("./ISecurityLog"),
          u = e("./../urls/UsersRouter"),
          l = e("./../utils/UrlService"),
          c = e("./../security/PermissionsService"),
          d = e("./../IHttpGridService"),
          h = (function () {
            function e(e, t, r, s) {
              var a = this;
              (this.permissionsApi = t),
                (this.url = r),
                (this.usersRouter = s),
                (this.securityActionTypes = []),
                (this.securityLogStatuses = []),
                (this.actionsFilter = []),
                (this.statusesFilter = []),
                i.MenuHelper.setCurrentMenuItem(
                  i.MenuHelper.ADMINISTRATION_SECURITY_LOGS_KEY
                ),
                o.PageHeader.set().header("Security logs").update(),
                (this.securityLogsGridModel = new n.GridModel(
                  d.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/logs/security")
                  )
                )),
                this.securityLogsGridModel.addLoadingListener(this),
                this.permissionsApi.getSystemPermissions().then(function (e) {
                  a.systemPermissions = e;
                }),
                this.fillSecurityActionTypes(),
                this.fillSecurityLogStatuses();
            }
            return (
              (e.prototype.startLoading = function () {
                var e = null;
                this.forDateFilter &&
                  (e = s.Moment.textToJavaDate(this.forDateFilter)),
                  (this.securityLogsGridModel.filter.forDate = e);
                for (var t = [], r = 0; r < this.statusesFilter.length; r++)
                  t.push(a.SecurityLogStatusEnum[this.statusesFilter[r]]);
                this.securityLogsGridModel.filter.statuses = t;
                for (var i = [], r = 0; r < this.actionsFilter.length; r++)
                  i.push(a.SecurityLogActionEnum[this.actionsFilter[r]]);
                this.securityLogsGridModel.filter.actions = i;
              }),
              (e.prototype.endLoading = function () {}),
              (e.prototype.fillSecurityActionTypes = function () {
                for (
                  var e = 0;
                  e < a.SECURITY_LOG_ACTION_ENUM_VALUES.length;
                  e++
                )
                  this.securityActionTypes.push({
                    id: e,
                    name: a.SecurityLogActionEnum[
                      a.SECURITY_LOG_ACTION_ENUM_VALUES[e]
                    ],
                  });
              }),
              (e.prototype.fillSecurityLogStatuses = function () {
                for (
                  var e = 0;
                  e < a.SECURITY_LOG_STATUS_ENUM_VALUES.length;
                  e++
                )
                  this.securityLogStatuses.push({
                    id: e,
                    name: a.SecurityLogStatusEnum[
                      a.SECURITY_LOG_STATUS_ENUM_VALUES[e]
                    ],
                  });
              }),
              (e.NAME = "logs.SecurityLogController"),
              (e.$inject = [
                "$http",
                c.PermissionsService.NAME,
                l.UrlService.NAME,
                u.UsersRouter.NAME,
              ]),
              e
            );
          })();
        r.SecurityLogController = h;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../security/PermissionsService": 164,
        "./../urls/UsersRouter": 213,
        "./../utils/MenuHelper": 227,
        "./../utils/Moment": 228,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./ISecurityLog": 106,
      },
    ],
    110: [
      function (e, t, r) {
        var i = e("./../utils/MenuHelper"),
          s = e("./../utils/Moment"),
          o = e("./../utils/PageHeaderHelper"),
          n = e("./../IGridModel"),
          a = e("./ISystemLog"),
          u = e("./../urls/UsersRouter"),
          l = e("./../utils/UrlService"),
          c = e("./../security/PermissionsService"),
          d = e("./../IHttpGridService"),
          h = (function () {
            function e(e, t, r, s) {
              var a = this;
              (this.permissionsApi = t),
                (this.url = r),
                (this.usersRouter = s),
                (this.systemLogLevels = []),
                (this.systemLogSources = []),
                (this.levelsFilter = []),
                (this.sourcesFilter = []),
                i.MenuHelper.setCurrentMenuItem(
                  i.MenuHelper.ADMINISTRATION_SYSTEM_LOGS_KEY
                ),
                o.PageHeader.set().header("System logs").update(),
                (this.url = r),
                (this.permissionsApi = t),
                (this.usersRouter = s),
                (this.systemLogsGridModel = new n.GridModel(
                  d.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/logs/system")
                  )
                )),
                this.systemLogsGridModel.addLoadingListener(this),
                this.permissionsApi.getSystemPermissions().then(function (e) {
                  a.systemPermissions = e;
                }),
                this.fillSystemActionTypes(),
                this.fillSystemLogStatuses();
            }
            return (
              (e.prototype.startLoading = function () {
                var e = null;
                this.forDateFilter &&
                  (e = s.Moment.textToJavaDate(this.forDateFilter)),
                  (this.systemLogsGridModel.filter.forDate = e);
                for (var t = [], r = 0; r < this.sourcesFilter.length; r++)
                  t.push(a.SystemLogSourceEnum[this.sourcesFilter[r]]);
                this.systemLogsGridModel.filter.sources = t;
                for (var i = [], r = 0; r < this.levelsFilter.length; r++)
                  i.push(a.SystemLogLevelEnum[this.levelsFilter[r]]);
                this.systemLogsGridModel.filter.levels = i;
              }),
              (e.prototype.endLoading = function () {}),
              (e.prototype.fillSystemActionTypes = function () {
                for (var e = 0; e < a.SYSTEM_LOG_LEVEL_ENUM_VALUES.length; e++)
                  this.systemLogLevels.push({
                    id: e,
                    name: a.SystemLogLevelEnum[
                      a.SYSTEM_LOG_LEVEL_ENUM_VALUES[e]
                    ],
                  });
              }),
              (e.prototype.fillSystemLogStatuses = function () {
                for (var e = 0; e < a.SYSTEM_LOG_SOURCE_ENUM_VALUES.length; e++)
                  this.systemLogSources.push({
                    id: e,
                    name: a.SystemLogSourceEnum[
                      a.SYSTEM_LOG_SOURCE_ENUM_VALUES[e]
                    ],
                  });
              }),
              (e.NAME = "logs.SystemLogController"),
              (e.$inject = [
                "$http",
                c.PermissionsService.NAME,
                l.UrlService.NAME,
                u.UsersRouter.NAME,
              ]),
              e
            );
          })();
        r.SystemLogController = h;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../security/PermissionsService": 164,
        "./../urls/UsersRouter": 213,
        "./../utils/MenuHelper": 227,
        "./../utils/Moment": 228,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./ISystemLog": 107,
      },
    ],
    111: [
      function (e, t, r) {
        var i = e("./../utils/MenuHelper"),
          s = e("./../utils/PageHeaderHelper"),
          o = (function () {
            function e() {
              i.MenuHelper.setCurrentMenuItem(i.MenuHelper.MAIN_MENU_KEY),
                s.PageHeader.set().header("").update();
            }
            return (e.NAME = "main.MainController"), (e.$inject = []), e;
          })();
        r.MainController = o;
      },
      { "./../utils/MenuHelper": 227, "./../utils/PageHeaderHelper": 231 },
    ],
    112: [
      function (e, t, r) {
        var i = e("./MainService"),
          s = e("./MainController"),
          o = e("./../urls/UrlsModule");
        r.MainModule = angular
          .module("main", [o.UrlsModule.name])
          .service(i.MainService.NAME, i.MainService)
          .controller(s.MainController.NAME, s.MainController);
      },
      {
        "./../urls/UrlsModule": 212,
        "./MainController": 111,
        "./MainService": 113,
      },
    ],
    113: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = (function () {
            function e(e, t) {
              (this.$http = e), (this.url = t);
            }
            return (
              (e.NAME = "main.MainService"),
              (e.$inject = ["$http", i.UrlService.NAME]),
              e
            );
          })();
        r.MainService = s;
      },
      { "./../utils/UrlService": 236 },
    ],
    114: [
      function (e, t, r) {
        var i = e("./../security/permissions/SecuredObjectType"),
          s = e("./../security/SecurityService"),
          o = e("./../security/PermissionsService"),
          n = e("./../utils/MenuHelper"),
          a = e("./../utils/PageHeaderHelper"),
          u = e("./../utils/UrlService"),
          l = e("./../utils/Moment"),
          c = e("./../INotifier"),
          d = e("./../statistics/ActionLogService"),
          h = e("./../statistics/models/ActionType"),
          p = e("./../ReferencedObjectType"),
          f = e("./../users/UserService"),
          m = e("./../auth/AuthService"),
          S = e("./../utils/UploadUtils"),
          v = e("./../storage/UploadsService"),
          y = e("./../utils/ContentUtils"),
          g = e("./models/MaterialType"),
          M = e("./MaterialService"),
          E = e("./../urls/MaterialsRouter"),
          A = e("../utils/ObjectTypeUtils"),
          R = (function () {
            function e(e, t, r, s, o, u, l, c, d, h, p, f) {
              var m = this;
              (this.$location = e),
                (this.url = t),
                (this.materialService = r),
                (this.securityService = s),
                (this.permissionsService = o),
                (this.$routeParams = u),
                (this.materialsRouter = l),
                (this.actionLogService = c),
                (this.userService = d),
                (this.authService = h),
                (this.uploadUtils = p),
                (this.$http = f),
                (this.permissionsWithUsersAndGroups = []),
                (this.hasPreviewUrlCanceled = !1),
                (this.owners = []),
                (this.materialSubjectChangeCallback = function (e) {
                  m.material.subjectName = e;
                }),
                (this.materialLanguageChangeCallback = function (e) {
                  m.material.languageName = e;
                }),
                (this.materialOwnerChangeCallback = function () {
                  m.material.ownerName = m.ownersMap.get(
                    m.material.ownerId
                  ).name;
                }),
                (this.materialId = u[E.MaterialsRouter.MATERIAL_ID_PARAM]);
              var S = String(this.materialId),
                v = null != this.materialId;
              this.securityService
                .demandAuthentication()
                .demandSystemPermissionsIf(!v, function (e) {
                  return e.addMaterial;
                })
                .demandMaterialPermissionsIf(v, S, function (e) {
                  return e.edit;
                }),
                (this.isValidityInPerpetuity = !0),
                (this.attachFormat = ""),
                (this.material = {}),
                (this.disabledSaveButton = !0),
                (this.disabledUploadButton = !1),
                this.userService
                  .getUsersWithoutExcludedUsersForSelector()
                  .then(function (e) {
                    (m.owners = angular.copy(e)),
                      (m.ownersMap = new Map()),
                      m.owners.forEach(function (e) {
                        m.ownersMap.set(e.id, e);
                      });
                  }),
                v
                  ? ((this.showUploadButton = !1),
                    a.PageHeader.set().header("Edit a Material").update(),
                    this.loadMaterial(),
                    this.enableButtonForLinkUpload(),
                    (this.disabledSaveButton = !1),
                    this.loadPermissionsWithUsersAndGroups(
                      i.SecuredObjectType.MATERIAL,
                      S
                    ))
                  : ((this.showUploadButton = !0),
                    n.MenuHelper.setCurrentMenuItem(
                      n.MenuHelper.OPERATIONS_UPLOADS_MENU_KEY
                    ),
                    a.PageHeader.set().header("Uploads").update(),
                    (this.typeId = 1),
                    (this.uploadContentType = 1),
                    this.authService.getCurrentUser().then(function (e) {
                      (m.material.ownerId = e.id),
                        (m.material.ownerName = e.fullName);
                    }),
                    this.loadPermissionsWithUsersAndGroups(
                      i.SecuredObjectType.MATERIAL
                    ));
            }
            return (
              (e.prototype.loadMaterial = function () {
                var e = this,
                  t = this.materialService.get(this.materialId);
                return (
                  t.then(function (t) {
                    angular.copy(t, e.material),
                      (e.material.validityText = l.Moment.isValidDate(
                        t.validity
                      )),
                      e.material.validityText &&
                        (e.isValidityInPerpetuity = !1),
                      (e.previewUrl = e.material.previewUrl
                        ? e.material.previewUrl
                        : null),
                      (e.fileName = t.fileName),
                      (e.typeId = t.typeId),
                      null == t.link
                        ? (e.uploadContentType = 1)
                        : (e.uploadContentType = 2),
                      3 != e.material.typeId &&
                        (e.showUploadButton = !e.material.fileId),
                      (e.multimediaSources = [
                        {
                          src: e.material.downloadUrl || "",
                          type: e.material.contentType,
                        },
                      ]);
                  }),
                  t
                );
              }),
              (e.prototype.loadPermissionsWithUsersAndGroups = function (e, t) {
                var r = this;
                this.permissionsService
                  .getAllObjectPermissionsWithUsersAndGroups(e, t)
                  .then(function (e) {
                    r.permissionsWithUsersAndGroups = e;
                  });
              }),
              (e.prototype.saveOrUpdateMaterial = function (e, t) {
                var r = this;
                (this.disabledSaveButton = !0),
                  (this.disabledUploadButton = !0);
                var i = this.file,
                  s = this.preview;
                if (
                  ((this.material.validity = l.Moment.textToJavaDate(
                    e.validityText
                  )),
                  (this.material.typeId = this.typeId),
                  this.material.typeId == g.MaterialType.LINK || null == i)
                ) {
                  var o = this.materialId
                    ? this.materialService.update(
                        e,
                        t,
                        this.hasPreviewUrlCanceled,
                        i,
                        s
                      )
                    : this.materialService.create(e, t, i, s);
                  o.then(function (t) {
                    if (
                      ((r.material = angular.copy(
                        t[v.UploadsService.MATERIAL_KEY]
                      )),
                      s)
                    ) {
                      r.materialId &&
                        r.uploadUtils.cancelMaterialPreviews(e.id);
                      var i = t[v.UploadsService.PREVIEW_UPLOAD_URL_KEY],
                        o = t[v.UploadsService.PREVIEW_UPLOAD_METHOD_KEY];
                      r.uploadUtils.uploadMaterialByChunks(
                        s,
                        r.material.previewId,
                        r.material.id,
                        i,
                        o
                      );
                    }
                    r.processSuccessCallback(r.material.id);
                  })["catch"](function (e) {
                    r.enableButton(),
                      "error.storage.not.available" == e.data.error &&
                        c.notifier.error("No available storage");
                  });
                } else {
                  var n = y.ContentUtils.getFileExt(i.name);
                  if (y.ContentUtils.checkFileExt(e.typeId, n)) {
                    var o = this.materialId
                      ? this.materialService.update(
                          e,
                          t,
                          this.hasPreviewUrlCanceled,
                          i,
                          s
                        )
                      : this.materialService.create(e, t, i, s);
                    o.then(function (t) {
                      if (
                        ((r.material = angular.copy(
                          t[v.UploadsService.MATERIAL_KEY]
                        )),
                        null != s)
                      ) {
                        r.materialId &&
                          r.uploadUtils.cancelMaterialPreviews(e.id);
                        var o = t[v.UploadsService.PREVIEW_UPLOAD_URL_KEY],
                          n = t[v.UploadsService.PREVIEW_UPLOAD_METHOD_KEY];
                        r.uploadUtils.uploadMaterialByChunks(
                          s,
                          r.material.previewId,
                          r.material.id,
                          o,
                          n
                        );
                      }
                      r.materialId && r.uploadUtils.cancelMaterialFiles(e.id);
                      var a = t[v.UploadsService.FILE_UPLOAD_URL_KEY],
                        u = t[v.UploadsService.FILE_UPLOAD_METHOD_KEY];
                      r.uploadUtils.uploadMaterialByChunks(
                        i,
                        r.material.fileId,
                        r.material.id,
                        a,
                        u
                      ),
                        r.processSuccessCallback(r.material.id);
                    })["catch"](function (e) {
                      r.enableButton(),
                        "error.storage.not.available" == e.data.error &&
                          c.notifier.error("No available storage");
                    });
                  } else
                    c.notifier.error(
                      "Failed to upload this file: please check whether the file format is valid"
                    ),
                      this.enableButton();
                }
              }),
              (e.prototype.processSuccessCallback = function (e) {
                this.actionLogService.create(
                  e,
                  p.ReferencedObjectType.MATERIAL,
                  h.ActionType.MATERIAL_CREATION
                ),
                  c.notifier.success("The material has been saved"),
                  this.redirectOrClearFields();
              }),
              (e.prototype.redirectOrClearFields = function () {
                this.materialId
                  ? this.material &&
                    this.material.permissions &&
                    this.material.permissions.view
                    ? this.$location.url(
                        this.materialsRouter.watchUrl(this.materialId)
                      )
                    : this.$location.url(this.materialsRouter.searchUrl())
                  : this.cleanFields();
              }),
              (e.prototype.enableButton = function () {
                (this.disabledSaveButton = !1),
                  (this.disabledUploadButton = !1);
              }),
              (e.prototype.enableButtonForLinkUpload = function () {
                this.disabledSaveButton = !1;
              }),
              (e.prototype.cleanFields = function () {
                var e = this;
                (this.isValidityInPerpetuity = !0),
                  (this.material = {}),
                  (this.uploadContentType = 1),
                  this.authService.getCurrentUser().then(function (t) {
                    (e.material.ownerId = t.id),
                      (e.material.ownerName = t.fullName);
                  }),
                  (this.file = void 0),
                  (this.preview = void 0),
                  (this.disabledUploadButton = !1),
                  (this.permissionsWithUsersAndGroups = []),
                  this.loadPermissionsWithUsersAndGroups(
                    i.SecuredObjectType.MATERIAL
                  );
              }),
              (e.prototype.cleanValidity = function () {
                this.material.validityText = "";
              }),
              (e.prototype.resetPreview = function () {
                this.preview
                  ? (this.preview = void 0)
                  : this.previewUrl &&
                    ((this.previewUrl = void 0),
                    (this.hasPreviewUrlCanceled = !0));
              }),
              (e.prototype.restorePreviewUrl = function () {
                (this.preview = void 0),
                  (this.previewUrl = this.material.previewUrl),
                  (this.hasPreviewUrlCanceled = !1);
              }),
              (e.prototype.reupload = function () {
                this.showUploadButton
                  ? (this.fileName = this.material.fileName)
                  : (this.fileName = ""),
                  (this.showUploadButton = !this.showUploadButton),
                  (this.file = void 0);
              }),
              (e.prototype.setMaterialType = function () {
                if (this.file) {
                  var e = y.ContentUtils.getFileExt(this.file.name);
                  this.typeId = this.material.typeId =
                    y.ContentUtils.findMaterialTypeByFileExtension(e);
                }
              }),
              (e.prototype.setFileOrLinkType = function () {
                1 == this.uploadContentType
                  ? ((this.typeId = g.MaterialType.AUDIO),
                    (this.showUploadButton = !0))
                  : (this.typeId = g.MaterialType.LINK);
              }),
              (e.prototype.showPreview = function () {
                $(".modal-body").css("overflow-y", "auto"),
                  $("#previewDialog").modal({ keyboard: !1, show: !0 }),
                  $("#previewDialog").on("hide.bs.modal", function () {
                    $("video").trigger("pause"), $("audio").trigger("pause");
                  }),
                  (this.hasFile = !!this.file),
                  (this.isMaterialFileStatusReady =
                    this.materialId && "READY" == this.material.fileStatus),
                  (this.isAudioOrVideo =
                    "VIDEO" === this.material.typeKey ||
                    "AUDIO" === this.material.typeKey),
                  (this.isPhoto = "PHOTO" === this.material.typeKey),
                  (this.isYoutube =
                    this.typeId === g.MaterialType.LINK &&
                    A.ObjectTypeUtils.isYoutubeUrl(this.material.link)),
                  (this.youtubeMultimediaSources = [
                    { src: this.material.link, type: "video/youtube" },
                  ]);
              }),
              (e.prototype.stopVideoAndAudioOnHidePreview = function () {
                (this.hasFile = !1),
                  (this.isMaterialFileStatusReady = !1),
                  (this.isAudioOrVideo = !1),
                  (this.isPhoto = !1),
                  (this.isYoutube = !1),
                  $("#previewDialog").on("hidden.bs.modal", function () {
                    $("video").trigger("pause"), $("audio").trigger("pause");
                  });
              }),
              (e.prototype.multimediaErrorCallback = function (e, t) {
                return this.loadMaterial();
              }),
              (e.prototype.getMaterialValidity = function () {
                return (
                  this.material.validityText
                    ? (this.material.validity = l.Moment.textToJavaDate(
                        this.material.validityText
                      ))
                    : (this.material.validity = null),
                  this.material.validity
                );
              }),
              (e.NAME = "materials.EditMaterialController"),
              (e.$inject = [
                "$location",
                u.UrlService.NAME,
                M.MaterialService.NAME,
                s.SecurityService.NAME,
                o.PermissionsService.NAME,
                "$routeParams",
                E.MaterialsRouter.NAME,
                d.ActionLogService.NAME,
                f.UserService.NAME,
                m.AuthService.NAME,
                S.UploadUtils.NAME,
                "$http",
              ]),
              e
            );
          })();
        r.EditMaterialController = R;
      },
      {
        "../utils/ObjectTypeUtils": 230,
        "./../INotifier": 4,
        "./../ReferencedObjectType": 6,
        "./../auth/AuthService": 10,
        "./../security/PermissionsService": 164,
        "./../security/SecurityService": 166,
        "./../security/permissions/SecuredObjectType": 168,
        "./../statistics/ActionLogService": 177,
        "./../statistics/models/ActionType": 184,
        "./../storage/UploadsService": 191,
        "./../urls/MaterialsRouter": 204,
        "./../users/UserService": 218,
        "./../utils/ContentUtils": 224,
        "./../utils/MenuHelper": 227,
        "./../utils/Moment": 228,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UploadUtils": 235,
        "./../utils/UrlService": 236,
        "./MaterialService": 116,
        "./models/MaterialType": 124,
      },
    ],
    115: [
      function (e, t, r) {
        var i = e("./../urls/MaterialsRouter"),
          s = e("./MaterialService"),
          o = e("./../authcore/AuthManager"),
          n = e("./../authcore/AuthRedirect"),
          a = e("./../utils/MenuHelper"),
          u = e("./../utils/ObjectTypeUtils"),
          l = e("./../utils/PageHeaderHelper"),
          c = e("./../INotifier"),
          d = e("./../personal/PersonalService"),
          h = e("./../social/SocialService"),
          p = e("./../IGridModel"),
          f = e("./../IHttpGridService"),
          m = e("./../utils/UrlService"),
          S = e("./../tree/TreeElementsInfoFiller"),
          v = e("./../statistics/ActionLogService"),
          y = e("./../statistics/models/ActionType"),
          g = e("./../ReferencedObjectType"),
          M = e("./../urls/FinancesRouter"),
          E = e("./../security/PermissionsService"),
          A = e("./../courses/CourseService"),
          R = e("./PlaylistService"),
          T = e("../utils/StringBuilder"),
          I = e("../utils/UploadUtils"),
          P = e("./models/MaterialType"),
          C = (function () {
            function e(
              e,
              t,
              r,
              s,
              o,
              n,
              u,
              l,
              c,
              d,
              h,
              m,
              S,
              v,
              y,
              M,
              E,
              A,
              R,
              T
            ) {
              var I = this;
              (this.$location = t),
                (this.$anchorScroll = r),
                (this.$timeout = s),
                (this.url = o),
                (this.$routeParams = n),
                (this.$q = u),
                (this.materialsRouter = l),
                (this.financeRouter = c),
                (this.materialService = d),
                (this.personalService = h),
                (this.socialService = m),
                (this.authRedirect = S),
                (this.authManager = v),
                (this.$window = y),
                (this.actionLogService = M),
                (this.permissionsApi = E),
                (this.courseService = A),
                (this.playlistService = R),
                (this.uploadUtils = T),
                (this.material = {}),
                (this.disabledRemoveButton = !1),
                (this.materialId = n[i.MaterialsRouter.MATERIAL_ID_PARAM]),
                (this.isAuthenticated = this.authManager.isAuthenticated()),
                (this.anchorComplete = !1),
                this.isAuthenticated &&
                  this.permissionsApi.getSystemPermissions().then(function (e) {
                    I.systemPermissions = e;
                  }),
                a.MenuHelper.getCurrentMenuItemKey() ||
                  a.MenuHelper.setCurrentMenuItem(a.MenuHelper.SEARCH_MENU_KEY),
                this.loadMaterial(this.materialId),
                this.materialService
                  .getRelatedMaterials(this.materialId)
                  .then(function (e) {
                    I.relatedMaterials = e;
                  }),
                (this.commentsGridModel = new p.GridModel(
                  f.HttpGridHelper.createLoader(
                    e,
                    this.url
                      .base(
                        "/api/social/comments?objectId=:objectId&objectType=:objectType"
                      )
                      .param(":objectId", this.materialId)
                      .param(
                        ":objectType",
                        g.ReferencedObjectType[g.ReferencedObjectType.MATERIAL]
                      )
                      .service()
                  )
                )),
                this.commentsGridModel.addLoadingListener(this),
                this.loadCommentsCount();
            }
            return (
              (e.prototype.startLoading = function () {}),
              (e.prototype.endLoading = function () {
                var e = this;
                S.TreeElementsInfoFiller.fillHierarchyInfoWithMaxLevel(
                  this.commentsGridModel.entries,
                  Number.MAX_VALUE
                ),
                  this.$timeout(function () {
                    e.scrollAnchor();
                  }, 0);
              }),
              (e.prototype.scrollAnchor = function () {
                this.anchorComplete ||
                  (this.$anchorScroll(this.$location.hash()),
                  (this.anchorComplete = !0));
              }),
              (e.prototype.getFileTypeName = function (e) {
                switch (e) {
                  case "video":
                    return "video";
                  case "audio":
                    return "audio";
                  case "presentation":
                    return "presentation";
                  case "text":
                    return "text file";
                  default:
                    return "video";
                }
              }),
              (e.prototype.isYoutubeLink = function (e) {
                return 3 == e.typeId && u.ObjectTypeUtils.isYoutubeUrl(e.link);
              }),
              (e.prototype.loadMaterial = function (e) {
                var t = this;
                (this.newComment = { text: "" }),
                  (this.newReplyComment = { text: "" });
                var r = this.materialService.get(e);
                return (
                  r
                    .then(function (e) {
                      (t.material = angular.copy(e)),
                        t.isYoutubeLink(t.material)
                          ? (t.materialType = "YOUTUBE")
                          : (t.materialType = t.material.typeKey),
                        (t.isMaterialEmpty =
                          t.material.id &&
                          t.material.typeKey !==
                            P.MaterialTypeKeyEnum[P.MaterialTypeKeyEnum.LINK] &&
                          (!t.material.fileStatus ||
                            "EMPTY" === t.material.fileStatus)),
                        (t.isMaterialNotReady =
                          !t.isMaterialEmpty &&
                          t.material.id &&
                          t.material.typeKey !==
                            P.MaterialTypeKeyEnum[P.MaterialTypeKeyEnum.LINK] &&
                          t.material.fileStatus &&
                          "EMPTY" !== t.material.fileStatus &&
                          "READY" !== t.material.fileStatus),
                        (t.isViewAllowed =
                          t.material.permissions.view &&
                          !t.isMaterialEmpty &&
                          !t.isMaterialNotReady),
                        (t.multimediaSources = [
                          {
                            src: t.isYoutubeLink(t.material)
                              ? t.material.link
                              : t.material.downloadUrl || "",
                            type: t.isYoutubeLink(t.material)
                              ? "video/youtube"
                              : t.material.contentType,
                          },
                        ]),
                        t.material.permissions.view &&
                          t.actionLogService.create(
                            t.material.id,
                            g.ReferencedObjectType.MATERIAL,
                            y.ActionType.MATERIAL_VIEW
                          );
                    })
                    ["catch"](function (e) {
                      if ("material.is.not.available" == e.data.error) {
                        c.notifier.error(
                          "Access to the material is restricted"
                        );
                        var r = t.$location.url();
                        t.$timeout(function () {
                          r === t.$location.url() && t.goBack();
                        }, 5e3);
                      } else
                        t.material = {
                          typeName: "",
                          title: "Failed to retrieve the material details",
                        };
                    })
                    ["finally"](function () {
                      l.PageHeader.set()
                        .header(
                          (t.material.typeName || "") +
                            " ‘" +
                            (t.material.title || "") +
                            "’"
                        )
                        .update();
                    }),
                  r
                );
              }),
              (e.prototype.loadCommentsCount = function () {
                var e = this;
                this.socialService
                  .getCommentsCount(
                    this.materialId,
                    g.ReferencedObjectType.MATERIAL
                  )
                  .then(function (t) {
                    e.commentsCount = t;
                  });
              }),
              (e.prototype.addToFavorites = function () {
                var e = this;
                this.personalService
                  .addToFavorites(
                    this.materialId,
                    g.ReferencedObjectType.MATERIAL
                  )
                  .then(function (t) {
                    c.notifier.success(
                      "The material has been added to your favorites"
                    ),
                      (e.material.favorite = !0);
                  })
                  ["catch"](function (e) {
                    "object.already.in.favorite" == e.data.error &&
                      c.notifier.error(
                        "This material is already in your favorites"
                      );
                  });
              }),
              (e.prototype.removeFromFavorites = function () {
                var e = this;
                this.personalService
                  .removeFromFavorites(
                    this.materialId,
                    g.ReferencedObjectType.MATERIAL
                  )
                  .then(function (t) {
                    c.notifier.success(
                      "The material has been removed from your favorites"
                    ),
                      (e.material.favorite = !1);
                  })
                  ["catch"](function (e) {
                    "object.not.in.favorite" == e.data.error &&
                      c.notifier.error("Failed to remove from favorites");
                  });
              }),
              (e.prototype.changeMaterialRating = function (e) {
                var t = this;
                this.isAuthenticated
                  ? this.socialService
                      .changeObjectRating(
                        this.materialId,
                        g.ReferencedObjectType.MATERIAL,
                        e
                      )
                      .then(function (r) {
                        (t.material.likesCount = r.likesCount),
                          (t.material.dislikesCount = r.dislikesCount),
                          e &&
                            ((t.material.liked = !t.material.liked),
                            (t.material.disliked = !1)),
                          e ||
                            ((t.material.disliked = !t.material.disliked),
                            (t.material.liked = !1));
                      })
                  : this.authRedirect.redirectToLogOn();
              }),
              (e.prototype.multimediaErrorCallback = function (e, t) {
                return this.loadMaterial(this.materialId);
              }),
              (e.prototype.addComment = function (e, t) {
                var r = this;
                e && (this.newReplyComment.parentId = t),
                  this.socialService
                    .addComment(
                      this.materialId,
                      g.ReferencedObjectType.MATERIAL,
                      e ? this.newReplyComment : this.newComment
                    )
                    .then(function (e) {
                      c.notifier.success("Comment has been added"),
                        r.commentsGridModel.loadCurrentPage(),
                        (r.newComment.text = ""),
                        (r.newReplyComment.text = ""),
                        (r.newReplyComment.parentId = null),
                        r.loadCommentsCount();
                    });
              }),
              (e.prototype.cleanComment = function () {
                (this.newComment.text = ""),
                  (this.newReplyComment.text = ""),
                  (this.newReplyComment.parentId = null);
              }),
              (e.prototype.replyComment = function (e) {
                this.commentsGridModel.entries.forEach(function (t) {
                  t.reply = t.id == e;
                });
              }),
              (e.prototype.editMaterial = function (e) {
                this.$location.url(this.materialsRouter.updateUrl(e.id));
              }),
              (e.prototype.deleteMaterial = function (e) {
                var t = this;
                (this.disabledRemoveButton = !0),
                  this.courseService
                    .findCoursesByMaterial(e.id)
                    .then(function (r) {
                      if (0 == r.length)
                        t.materialService
                          .isMaterialPurchased(e.id)
                          .then(function (r) {
                            r ||
                              t.playlistService
                                .findPlaylistsByMaterial(e.id)
                                .then(function (r) {
                                  var i = function (e, t) {
                                      return t + 1 + ". " + e.name;
                                    },
                                    s =
                                      0 == r.length
                                        ? "This material will be completely removed from the system. Continue?\n"
                                        : T.StringBuilder.interpolate(
                                            "The material is included into the following playlists: :lists Confirm removing the material?"
                                          )
                                            ["with"](
                                              ":lists",
                                              "\n\n" +
                                                t.getItemsFormattedString(
                                                  r,
                                                  i,
                                                  "\n"
                                                ) +
                                                "\n"
                                            )
                                            .build() + "\n";
                                  confirm(s) &&
                                    (t.materialService["delete"](e.id).then(
                                      function () {
                                        c.notifier.success(
                                          "The material has been removed"
                                        ),
                                          (t.disabledRemoveButton = !1),
                                          t.$location.url(
                                            t.materialsRouter.searchUrl()
                                          );
                                      }
                                    ),
                                    t.uploadUtils.cancelMaterialPreviews(e.id),
                                    t.uploadUtils.cancelMaterialFiles(e.id));
                                });
                          });
                      else {
                        var i = function (e, t) {
                          return t + 1 + ". " + e.subjectName + ". " + e.topic;
                        };
                        T.StringBuilder.interpolate(
                          "The material can not be removed. It is used in courses::courses"
                        )
                          ["with"](
                            ":courses",
                            "\n\n" + t.getItemsFormattedString(r, i, "\n")
                          )
                          .build();
                      }
                    });
              }),
              (e.prototype.getItemsFormattedString = function (e, t, r) {
                var i = "";
                return (
                  e.forEach(function (e, s) {
                    i += t(e, s) + r;
                  }),
                  i
                );
              }),
              (e.prototype.createMaterialDownloadActionLog = function (e) {
                this.actionLogService.create(
                  e,
                  g.ReferencedObjectType.MATERIAL,
                  y.ActionType.MATERIAL_DOWNLOAD
                );
              }),
              (e.prototype.goBack = function () {
                this.$window.history.length > 1
                  ? this.$window.history.back()
                  : this.authRedirect.forwardToAccessDenied();
              }),
              (e.prototype.changeAuthorSubscription = function () {
                var e = this;
                this.personalService
                  .changeAuthorSubscription(this.material.ownerId)
                  .then(function (t) {
                    t
                      ? c.notifier.success(
                          "You successfully subscribed to publications of " +
                            e.material.ownerName
                        )
                      : c.notifier.success(
                          "You successfully unsubscribed from publications of " +
                            e.material.ownerName
                        ),
                      (e.material.subscribe = t);
                  });
              }),
              (e.NAME = "materials.MaterialController"),
              (e.$inject = [
                "$http",
                "$location",
                "$anchorScroll",
                "$timeout",
                m.UrlService.NAME,
                "$routeParams",
                "$q",
                i.MaterialsRouter.NAME,
                M.FinancesRouter.NAME,
                s.MaterialService.NAME,
                d.PersonalService.NAME,
                h.SocialService.NAME,
                n.AuthRedirect.NAME,
                o.AuthManager.NAME,
                "$window",
                v.ActionLogService.NAME,
                E.PermissionsService.NAME,
                A.CourseService.NAME,
                R.PlaylistService.NAME,
                I.UploadUtils.NAME,
              ]),
              e
            );
          })();
        r.MaterialController = C;
      },
      {
        "../utils/StringBuilder": 233,
        "../utils/UploadUtils": 235,
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../INotifier": 4,
        "./../ReferencedObjectType": 6,
        "./../authcore/AuthManager": 18,
        "./../authcore/AuthRedirect": 19,
        "./../courses/CourseService": 81,
        "./../personal/PersonalService": 136,
        "./../security/PermissionsService": 164,
        "./../social/SocialService": 176,
        "./../statistics/ActionLogService": 177,
        "./../statistics/models/ActionType": 184,
        "./../tree/TreeElementsInfoFiller": 192,
        "./../urls/FinancesRouter": 200,
        "./../urls/MaterialsRouter": 204,
        "./../utils/MenuHelper": 227,
        "./../utils/ObjectTypeUtils": 230,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./MaterialService": 116,
        "./PlaylistService": 121,
        "./models/MaterialType": 124,
      },
    ],
    116: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = (function () {
            function e(e, t, r) {
              (this.$http = e), (this.$sce = t), (this.url = r);
            }
            return (
              (e.prototype.get = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/materials/:id")
                      .param(":id", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getPublicInfo = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/materials/:id/publicInfo")
                      .param(":id", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.create = function (e, t, r, i) {
                return (
                  (e.file =
                    null != r
                      ? { name: r.name, type: r.type, size: r.size }
                      : null),
                  (e.preview =
                    null != i
                      ? { name: i.name, type: i.type, size: i.size }
                      : null),
                  (e.permissionsWithUsersAndGroups = t),
                  this.$http
                    .post(this.url.service("/api/materials"), e)
                    .then(function (e) {
                      return e.data;
                    })
                );
              }),
              (e.prototype.update = function (e, t, r, i, s) {
                return (
                  (e.file =
                    null != i
                      ? { name: i.name, type: i.type, size: i.size }
                      : null),
                  (e.preview =
                    null != s
                      ? { name: s.name, type: s.type, size: s.size }
                      : null),
                  (e.permissionsWithUsersAndGroups = t),
                  (e.isResetPreview = r),
                  this.$http
                    .put(this.url.service("/api/materials"), e)
                    .then(function (e) {
                      return e.data;
                    })
                );
              }),
              (e.prototype["delete"] = function (e) {
                return this.$http["delete"](
                  this.url.base("/api/materials/:id").param(":id", e).service()
                ).then(function (e) {
                  return e.data;
                });
              }),
              (e.prototype.getRelatedMaterials = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/materials/:id/related")
                      .param(":id", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.isMaterialPurchased = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/materials/:id/is/purchased")
                      .param(":id", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.NAME = "materials.MaterialService"),
              (e.$inject = ["$http", "$sce", i.UrlService.NAME]),
              e
            );
          })();
        r.MaterialService = s;
      },
      { "./../utils/UrlService": 236 },
    ],
    117: [
      function (e, t, r) {
        var i = e("./MaterialService"),
          s = e("./SearchController"),
          o = e("./MaterialController"),
          n = e("./MyDownloadsController"),
          a = e("./EditMaterialController"),
          u = e("./PlaylistsController"),
          l = e("./PlaylistDetailsController"),
          c = e("./PlaylistEditController"),
          d = e("./PlaylistService"),
          h = e("./../authcore/AuthCoreModule"),
          p = e("./../security/SecurityModule"),
          f = e("./../urls/UrlsModule"),
          m = e("./../personal/PersonalModule"),
          S = e("./../social/SocialModule"),
          v = e("./../storage/StorageModule"),
          y = e("./../users/UsersModule"),
          g = e("./../courses/CoursesModule");
        r.MaterialsModule = angular
          .module("materials", [
            h.AuthCoreModule.name,
            p.SecurityModule.name,
            f.UrlsModule.name,
            m.PersonalModule.name,
            S.SocialModule.name,
            v.StorageModule.name,
            y.UsersModule.name,
            g.CoursesModule.name,
          ])
          .service(i.MaterialService.NAME, i.MaterialService)
          .service(d.PlaylistService.NAME, d.PlaylistService)
          .controller(s.SearchController.NAME, s.SearchController)
          .controller(o.MaterialController.NAME, o.MaterialController)
          .controller(n.MyDownloadsController.NAME, n.MyDownloadsController)
          .controller(a.EditMaterialController.NAME, a.EditMaterialController)
          .controller(u.PlaylistsController.NAME, u.PlaylistsController)
          .controller(
            l.PlaylistDetailsController.NAME,
            l.PlaylistDetailsController
          )
          .controller(c.PlaylistEditController.NAME, c.PlaylistEditController);
      },
      {
        "./../authcore/AuthCoreModule": 17,
        "./../courses/CoursesModule": 83,
        "./../personal/PersonalModule": 135,
        "./../security/SecurityModule": 165,
        "./../social/SocialModule": 175,
        "./../storage/StorageModule": 190,
        "./../urls/UrlsModule": 212,
        "./../users/UsersModule": 221,
        "./EditMaterialController": 114,
        "./MaterialController": 115,
        "./MaterialService": 116,
        "./MyDownloadsController": 118,
        "./PlaylistDetailsController": 119,
        "./PlaylistEditController": 120,
        "./PlaylistService": 121,
        "./PlaylistsController": 122,
        "./SearchController": 123,
      },
    ],
    118: [
      function (e, t, r) {
        var i = e("./../security/SecurityService"),
          s = e("./../urls/MaterialsRouter"),
          o = (function () {
            function e(e, t, r) {
              (this.$location = e),
                (this.materialsRouter = t),
                (this.securityService = r),
                (this.rowShow = new Map()),
                this.securityService
                  .demandAuthentication()
                  .demandSystemPermissions(function (e) {
                    return e.addMaterial;
                  }),
                this.rowShow.set(1, !1),
                this.rowShow.set(2, !1),
                this.rowShow.set(3, !1),
                this.rowShow.set(4, !1),
                (this.viewType = 0);
            }
            return (
              (e.prototype.showDetails = function (e) {
                this.rowShow.set(e, !this.rowShow.get(e));
              }),
              (e.prototype.watch = function (e) {
                this.$location.url(this.materialsRouter.watchUrl(e));
              }),
              (e.NAME = "materials.MyDownloadsController"),
              (e.$inject = [
                "$location",
                s.MaterialsRouter.NAME,
                i.SecurityService.NAME,
              ]),
              e
            );
          })();
        r.MyDownloadsController = o;
      },
      {
        "./../security/SecurityService": 166,
        "./../urls/MaterialsRouter": 204,
      },
    ],
    119: [
      function (e, t, r) {
        var i = e("./../security/SecurityService"),
          s = e("./../utils/MenuHelper"),
          o = e("./../utils/PageHeaderHelper"),
          n = e("./../urls/MaterialsRouter"),
          a = e("./../IGridModel"),
          u = e("./../IHttpGridService"),
          l = e("./../utils/UrlService"),
          c = e("./PlaylistService"),
          d = e("./../utils/ObjectTypeUtils"),
          h = e("./../statistics/ActionLogService"),
          p = e("./../statistics/models/ActionType"),
          f = e("./../ReferencedObjectType"),
          m = e("./../INotifier"),
          S = (function () {
            function e(e, t, r, i, o, l, c, d) {
              var h = this;
              (this.$location = e),
                (this.$routeParams = t),
                (this.materialsRouter = i),
                (this.securityService = o),
                (this.url = l),
                (this.playlistService = c),
                (this.actionLogService = d),
                (this.rowShow = new Map()),
                (this.playlist = {}),
                (this.playlistId = t[n.MaterialsRouter.PLAYLIST_ID_PARAM]),
                (this.materialsGridModel = new a.GridModel(
                  u.HttpGridHelper.createLoader(
                    r,
                    this.url.service(
                      "/api/playlists/" + this.playlistId + "/materials"
                    )
                  )
                )),
                this.materialsGridModel.entries.forEach(function (e) {
                  h.rowShow.set(e.id, !1);
                });
              var p = s.MenuHelper.getCurrentMenuItemKey();
              (p && 0 != p.length) ||
                s.MenuHelper.setCurrentMenuItem(
                  s.MenuHelper.EDUCATION_PLAYLISTS_MENU_KEY
                ),
                this.loadPlaylist(),
                (this.viewType = 0);
            }
            return (
              (e.prototype.loadPlaylist = function () {
                var e = this,
                  t = this.playlistService.get(this.playlistId);
                t.then(function (t) {
                  angular.copy(t, e.playlist),
                    e.actionLogService.create(
                      e.playlist.id,
                      f.ReferencedObjectType.PLAYLIST,
                      p.ActionType.PLAYLIST_VIEW
                    ),
                    o.PageHeader.set()
                      .header(" ‘" + t.name + "’")
                      .update();
                });
              }),
              (e.prototype.getMaterialTypeClass = function (e) {
                return d.ObjectTypeUtils.getMaterialGlyphiconClass(e);
              }),
              (e.prototype.loadMaterialPage = function (e) {
                e.available
                  ? this.$location.url(this.materialsRouter.watchUrl(e.id))
                  : m.notifier.error("Access to the material is restricted");
              }),
              (e.prototype.showDetails = function (e) {
                this.rowShow.set(e, !this.rowShow.get(e));
              }),
              (e.NAME = "materials.PlaylistDetailsController"),
              (e.$inject = [
                "$location",
                "$routeParams",
                "$http",
                n.MaterialsRouter.NAME,
                i.SecurityService.NAME,
                l.UrlService.NAME,
                c.PlaylistService.NAME,
                h.ActionLogService.NAME,
              ]),
              e
            );
          })();
        r.PlaylistDetailsController = S;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../INotifier": 4,
        "./../ReferencedObjectType": 6,
        "./../security/SecurityService": 166,
        "./../statistics/ActionLogService": 177,
        "./../statistics/models/ActionType": 184,
        "./../urls/MaterialsRouter": 204,
        "./../utils/MenuHelper": 227,
        "./../utils/ObjectTypeUtils": 230,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./PlaylistService": 121,
      },
    ],
    120: [
      function (e, t, r) {
        var i = e("./PlaylistService"),
          s = e("./../urls/MaterialsRouter"),
          o = e("./../security/SecurityService"),
          n = e("./../security/PermissionsService"),
          a = e("./../utils/UrlService"),
          u = e("./../auth/AuthService"),
          l = e("./../utils/MenuHelper"),
          c = e("./../utils/PageHeaderHelper"),
          d = e("./../security/permissions/SecuredObjectType"),
          h = e("./../utils/Moment"),
          p = e("./../INotifier"),
          f = e("./../IGridModel"),
          m = e("./../IHttpGridService"),
          S = (function () {
            function e(e, t, r, i, o, n, a, u, h, p) {
              var S = this;
              (this.$location = t),
                (this.$routeParams = r),
                (this.$uploader = i),
                (this.url = o),
                (this.authService = n),
                (this.playlistService = a),
                (this.securityService = u),
                (this.permissionsService = h),
                (this.materialsRouter = p),
                (this.permissionsWithUsersAndGroups = []),
                (this.playlistMaterials = []),
                (this.playlistId = r[s.MaterialsRouter.PLAYLIST_ID_PARAM]),
                l.MenuHelper.setCurrentMenuItem(
                  l.MenuHelper.EDUCATION_PLAYLISTS_MENU_KEY
                );
              var v = String(this.playlistId),
                y = null != this.playlistId;
              this.securityService
                .demandAuthentication()
                .demandSystemPermissionsIf(!y, function (e) {
                  return e.addPlaylists;
                })
                .demandPlaylistPermissionsIf(y, v, function (e) {
                  return e.edit;
                }),
                (this.isValidityInPerpetuity = !0),
                (this.playlist = {}),
                y
                  ? (c.PageHeader.set().header("Edit a Playlist").update(),
                    this.loadPlaylist(),
                    this.loadPlaylistMaterials(),
                    (this.disabledSaveButton = !1),
                    this.loadPermissionsWithUsersAndGroups(
                      d.SecuredObjectType.PLAYLIST,
                      v
                    ))
                  : (c.PageHeader.set().header("New Playlist").update(),
                    this.authService.getCurrentUser().then(function (e) {
                      (S.playlist.ownerId = e.id),
                        (S.playlist.ownerFullName = e.fullName);
                    }),
                    this.loadPermissionsWithUsersAndGroups(
                      d.SecuredObjectType.PLAYLIST
                    )),
                (this.userMaterialsGridModel = new f.GridModel(
                  m.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/playlists/userMaterials")
                  )
                )),
                (this.userMaterialsGridModel.filter.playlistId =
                  this.playlistId),
                this.userMaterialsGridModel.loadCurrentPage();
            }
            return (
              (e.prototype.loadPlaylist = function () {
                var e = this,
                  t = this.playlistService.get(this.playlistId);
                t.then(function (t) {
                  angular.copy(t, e.playlist),
                    (e.playlist.validityText = h.Moment.isValidDate(
                      t.validity
                    )),
                    e.playlist.validityText && (e.isValidityInPerpetuity = !1);
                });
              }),
              (e.prototype.loadPlaylistMaterials = function () {
                var e = this;
                this.playlistService
                  .getMaterials(this.playlistId)
                  .then(function (t) {
                    angular.copy(t, e.playlistMaterials);
                  });
              }),
              (e.prototype.loadPermissionsWithUsersAndGroups = function (e, t) {
                var r = this;
                this.permissionsService
                  .getAllObjectPermissionsWithUsersAndGroups(e, t)
                  .then(function (e) {
                    r.permissionsWithUsersAndGroups = e;
                  });
              }),
              (e.prototype.save = function () {
                var e = this;
                (this.disabledSaveButton = !0),
                  (this.playlist.validity = this.getValidity()),
                  (this.playlist.materialIds = this.playlistMaterials.map(
                    function (e) {
                      return e.id;
                    }
                  ));
                var t = this.playlistId
                  ? this.playlistService.update(
                      this.playlist,
                      this.permissionsWithUsersAndGroups
                    )
                  : this.playlistService.create(
                      this.playlist,
                      this.permissionsWithUsersAndGroups
                    );
                t.then(function (t) {
                  null != e.preview
                    ? e
                        .upload(e.preview, t.id, "preview")
                        .then(function (r) {
                          e.processSuccessCallback(t.id);
                        })
                        ["catch"](function (r) {
                          "error.storage.not.available" == r.data.error &&
                            p.notifier.error(
                              "No available storage. Thumbnail has not been saved"
                            ),
                            e.processSuccessCallback(t.id);
                        })
                    : e.processSuccessCallback(t.id);
                })["catch"](function (e) {
                  p.notifier.error(e);
                });
              }),
              (e.prototype.processSuccessCallback = function (e) {
                (this.disabledSaveButton = !1),
                  p.notifier.success("The playlist has been saved"),
                  this.$location.url(
                    this.materialsRouter.playlistDetailsUrl(e)
                  );
              }),
              (e.prototype.upload = function (e, t, r) {
                var i = this.url
                  .base(
                    "/api/playlists/upload?playlistId=:playlistId&fileType=:fileType"
                  )
                  .param(":playlistId", t)
                  .param(":fileType", r);
                return this.$uploader.upload({
                  method: "POST",
                  url: angular.copy(i).service(),
                  file: e,
                });
              }),
              (e.prototype.getValidity = function () {
                return (
                  this.playlist.validityText
                    ? (this.playlist.validity = h.Moment.textToJavaDate(
                        this.playlist.validityText
                      ))
                    : (this.playlist.validity = null),
                  this.playlist.validity
                );
              }),
              (e.prototype.redirectOrClearFields = function () {
                this.playlistId
                  ? this.$location.url(
                      this.materialsRouter.playlistDetailsUrl(this.playlistId)
                    )
                  : this.cleanFields();
              }),
              (e.prototype.cleanFields = function () {
                var e = this;
                (this.isValidityInPerpetuity = !0),
                  (this.playlist = {}),
                  this.authService.getCurrentUser().then(function (t) {
                    (e.playlist.ownerId = t.id),
                      (e.playlist.ownerFullName = t.fullName);
                  }),
                  (this.permissionsWithUsersAndGroups = []),
                  (this.preview = null),
                  this.loadPermissionsWithUsersAndGroups(
                    d.SecuredObjectType.PLAYLIST
                  );
              }),
              (e.prototype.cleanValidity = function () {
                this.playlist.validityText = "";
              }),
              (e.prototype.addMaterialToPlaylist = function (e) {
                this.playlistMaterials.push(e);
                var t = this.userMaterialsGridModel.entries.indexOf(e);
                this.userMaterialsGridModel.entries.splice(t, 1);
              }),
              (e.prototype.removeMaterialFromPlaylist = function (e, t) {
                this.playlistMaterials.splice(e, 1),
                  this.userMaterialsGridModel.entries.push(t);
              }),
              (e.prototype.moveUp = function (e) {
                var t = {},
                  r = this.playlistMaterials.splice(e, 1, t)[0];
                this.playlistMaterials.splice(e - 1, 0, r),
                  this.playlistMaterials.splice(
                    this.playlistMaterials.indexOf(t),
                    1
                  );
              }),
              (e.prototype.moveDown = function (e) {
                var t = {},
                  r = this.playlistMaterials.splice(e + 1, 1, t)[0];
                this.playlistMaterials.splice(e, 0, r),
                  this.playlistMaterials.splice(
                    this.playlistMaterials.indexOf(t),
                    1
                  );
              }),
              (e.prototype.isMoveUp = function (e) {
                return e > 0;
              }),
              (e.prototype.isMoveDown = function (e) {
                return e < this.playlistMaterials.length - 1;
              }),
              (e.NAME = "materials.PlaylistEditController"),
              (e.$inject = [
                "$http",
                "$location",
                "$routeParams",
                "Upload",
                a.UrlService.NAME,
                u.AuthService.NAME,
                i.PlaylistService.NAME,
                o.SecurityService.NAME,
                n.PermissionsService.NAME,
                s.MaterialsRouter.NAME,
              ]),
              e
            );
          })();
        r.PlaylistEditController = S;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../INotifier": 4,
        "./../auth/AuthService": 10,
        "./../security/PermissionsService": 164,
        "./../security/SecurityService": 166,
        "./../security/permissions/SecuredObjectType": 168,
        "./../urls/MaterialsRouter": 204,
        "./../utils/MenuHelper": 227,
        "./../utils/Moment": 228,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./PlaylistService": 121,
      },
    ],
    121: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = (function () {
            function e(e, t, r) {
              (this.$http = e), (this.$sce = t), (this.url = r);
            }
            return (
              (e.prototype.findPlaylistsByMaterial = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/playlists/by/material/:materialId")
                      .param(":materialId", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.get = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/playlists/:id?")
                      .param(":id", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.create = function (e, t) {
                return (
                  (e.permissionsWithUsersAndGroups = t),
                  this.$http
                    .post(this.url.service("/api/playlists"), e)
                    .then(function (e) {
                      return e.data;
                    })
                );
              }),
              (e.prototype.update = function (e, t) {
                return (
                  (e.permissionsWithUsersAndGroups = t),
                  this.$http
                    .put(this.url.service("/api/playlists"), e)
                    .then(function (e) {
                      return e.data;
                    })
                );
              }),
              (e.prototype.getMaterials = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/playlists/:id/materialsList")
                      .param(":id", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.NAME = "materials.PlaylistService"),
              (e.$inject = ["$http", "$sce", i.UrlService.NAME]),
              e
            );
          })();
        r.PlaylistService = s;
      },
      { "./../utils/UrlService": 236 },
    ],
    122: [
      function (e, t, r) {
        var i = e("./../utils/MenuHelper"),
          s = e("./../utils/PageHeaderHelper"),
          o = e("./../urls/MaterialsRouter"),
          n = e("./../security/PermissionsService"),
          a = e("./../IGridModel"),
          u = e("./../IHttpGridService"),
          l = e("./../utils/UrlService"),
          c = e("./../personal/PersonalService"),
          d = e("./../INotifier"),
          h = e("./../authcore/AuthManager"),
          p = e("./../ReferencedObjectType"),
          f = (function () {
            function e(e, t, r, o, n, l, c) {
              var d = this;
              (this.$location = t),
                (this.materialsRouter = r),
                (this.permissionsApi = o),
                (this.url = n),
                (this.personalService = l),
                (this.authManager = c),
                (this.rowShow = new Map()),
                i.MenuHelper.setCurrentMenuItem(
                  i.MenuHelper.EDUCATION_PLAYLISTS_MENU_KEY
                ),
                s.PageHeader.set().header("Playlists").update(),
                (this.isAuthenticated = this.authManager.isAuthenticated()),
                this.isAuthenticated &&
                  this.permissionsApi.getSystemPermissions().then(function (e) {
                    d.systemPermissions = e;
                  }),
                (this.playlistsGridModel = new a.GridModel(
                  u.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/playlists")
                  )
                )),
                (this.playlistsGridModel.pageSize = 8),
                (this.viewType = 1);
            }
            return (
              (e.prototype.getLanguages = function (e) {
                var t = "";
                return (
                  e.forEach(function (e) {
                    t += e + ", ";
                  }),
                  t.substring(0, t.length - 2)
                );
              }),
              (e.prototype.searchPlaylists = function () {
                this.playlistsGridModel.loadCurrentPage();
              }),
              (e.prototype.loadPlaylist = function (e) {
                this.$location.url(this.materialsRouter.playlistDetailsUrl(e));
              }),
              (e.prototype.showDetails = function (e) {
                this.rowShow.set(e, !this.rowShow.get(e));
              }),
              (e.prototype.addToFavorites = function (e) {
                this.rowShow.set(e.id, !this.rowShow.get(e.id)),
                  this.personalService
                    .addToFavorites(e.id, p.ReferencedObjectType.PLAYLIST)
                    .then(function (t) {
                      d.notifier.success(
                        "The playlist has been added to your favorites"
                      ),
                        (e.favorite = !0);
                    })
                    ["catch"](function (e) {
                      "object.already.in.favorite" == e.data.error &&
                        d.notifier.error(
                          "This playlist is already in your favorites"
                        );
                    });
              }),
              (e.prototype.removeFromFavorites = function (e) {
                this.rowShow.set(e.id, !this.rowShow.get(e.id)),
                  this.personalService
                    .removeFromFavorites(e.id, p.ReferencedObjectType.PLAYLIST)
                    .then(function (t) {
                      d.notifier.success(
                        "The playlist has been removed from your favorites"
                      ),
                        (e.favorite = !1);
                    })
                    ["catch"](function (e) {
                      "object.not.in.favorite" == e.data.error &&
                        d.notifier.error(
                          "Failed to remove from your favorites"
                        );
                    });
              }),
              (e.NAME = "materials.PlaylistsController"),
              (e.$inject = [
                "$http",
                "$location",
                o.MaterialsRouter.NAME,
                n.PermissionsService.NAME,
                l.UrlService.NAME,
                c.PersonalService.NAME,
                h.AuthManager.NAME,
              ]),
              e
            );
          })();
        r.PlaylistsController = f;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../INotifier": 4,
        "./../ReferencedObjectType": 6,
        "./../authcore/AuthManager": 18,
        "./../personal/PersonalService": 136,
        "./../security/PermissionsService": 164,
        "./../urls/MaterialsRouter": 204,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
      },
    ],
    123: [
      function (e, t, r) {
        var i = e("./../urls/MaterialsRouter"),
          s = e("./../urls/FinancesRouter"),
          o = e("./../components/VhsSearchDirective"),
          n = e("./../utils/MenuHelper"),
          a = e("./../utils/PageHeaderHelper"),
          u = e("./../IGridModel"),
          l = e("./../IHttpGridService"),
          c = e("./../utils/UrlService"),
          d = e("./../users/UserService"),
          h = e("./../utils/Moment"),
          p = e("./../utils/ObjectTypeUtils"),
          f = e("./../ReferencedObjectType"),
          m = (function () {
            function e(e, t, r, i, s, c, d) {
              var h = this;
              (this.$location = t),
                (this.$timeout = r),
                (this.url = i),
                (this.userService = s),
                (this.materialsRouter = c),
                (this.financesRouter = d),
                (this.owners = []),
                (this.searchType =
                  t.search()[o.VhsSearchController.FILE_FORMAT_PARAMETER]),
                (this.searchQuery =
                  t.search()[o.VhsSearchController.SEARCH_STRING_PARAMETER]),
                n.MenuHelper.setCurrentMenuItem(n.MenuHelper.SEARCH_MENU_KEY),
                a.PageHeader.set().header("Search").update(),
                (this.materialsGridModel = new u.GridModel(
                  l.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/materials")
                  )
                )),
                (this.materialsGridModel.pageSize = 9),
                null != this.searchType
                  ? (this.materialsGridModel.filter.fileType = this.searchType)
                  : "",
                null != this.searchQuery
                  ? (this.materialsGridModel.filter.searchString =
                      this.searchQuery)
                  : "",
                (this.searchViewType = 1),
                (this.viewType = null),
                this.userService
                  .getUsersWithoutExcludedUsersForSelector()
                  .then(function (e) {
                    h.owners = angular.copy(e);
                  });
            }
            return (
              (e.prototype.searchMaterial = function () {
                (this.materialsGridModel.filter.dateFrom =
                  h.Moment.textToJavaDate(
                    this.materialsGridModel.filter.dateFromText
                  )),
                  (this.materialsGridModel.filter.dateTo =
                    h.Moment.textToJavaDate(
                      this.materialsGridModel.filter.dateToText
                    )),
                  (this.materialsGridModel.filter.viewType = this.viewType),
                  this.materialsGridModel.loadPage(0);
              }),
              (e.prototype.filterMaterialViewType = function (e) {
                (this.viewType = e), this.searchMaterial();
              }),
              (e.prototype.clearSearch = function () {
                (this.viewType = null),
                  (this.materialsGridModel.filter.searchString = null),
                  (this.materialsGridModel.filter.viewType = null),
                  (this.materialsGridModel.filter.ownerId = ""),
                  (this.materialsGridModel.filter.subjectId = ""),
                  (this.materialsGridModel.filter.topic = null),
                  (this.materialsGridModel.filter.languageId = ""),
                  (this.materialsGridModel.filter.fileType = ""),
                  (this.materialsGridModel.filter.dateFrom = null),
                  (this.materialsGridModel.filter.dateFromText = null),
                  (this.materialsGridModel.filter.dateTo = null),
                  (this.materialsGridModel.filter.dateToText = null),
                  this.materialsGridModel.loadPage(0);
              }),
              (e.prototype.loadMaterialPage = function (e) {
                this.$location.url(this.materialsRouter.watchUrl(e));
              }),
              (e.prototype.doPurchase = function (e) {
                this.$location.url(
                  this.financesRouter.purchaseUrl(
                    e,
                    f.ReferencedObjectType.MATERIAL
                  )
                );
              }),
              (e.prototype.showPuchaseHint = function (e) {
                $("#button-purchase-" + e).popover("show"),
                  this.$timeout(function () {
                    return $("#button-purchase-" + e).popover("hide");
                  }, 5e3);
              }),
              (e.prototype.getMaterialTypeClass = function (e) {
                return p.ObjectTypeUtils.getMaterialGlyphiconClass(e);
              }),
              (e.prototype.getMaterialTypeTitle = function (e) {
                return p.ObjectTypeUtils.getMaterialTypeTitle(e);
              }),
              (e.prototype.showDetails = function (e) {
                e.shown = !e.shown;
              }),
              (e.NAME = "materials.SearchController"),
              (e.$inject = [
                "$http",
                "$location",
                "$timeout",
                c.UrlService.NAME,
                d.UserService.NAME,
                i.MaterialsRouter.NAME,
                s.FinancesRouter.NAME,
              ]),
              e
            );
          })();
        r.SearchController = m;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../ReferencedObjectType": 6,
        "./../components/VhsSearchDirective": 60,
        "./../urls/FinancesRouter": 200,
        "./../urls/MaterialsRouter": 204,
        "./../users/UserService": 218,
        "./../utils/MenuHelper": 227,
        "./../utils/Moment": 228,
        "./../utils/ObjectTypeUtils": 230,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
      },
    ],
    124: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.AUDIO = 1)] = "AUDIO"),
            (e[(e.VIDEO = 2)] = "VIDEO"),
            (e[(e.LINK = 3)] = "LINK"),
            (e[(e.PHOTO = 4)] = "PHOTO"),
            (e[(e.DOCUMENTS = 5)] = "DOCUMENTS");
        })(r.MaterialTypeEnum || (r.MaterialTypeEnum = {}));
        r.MaterialTypeEnum;
        !(function (e) {
          (e[(e.AUDIO = 0)] = "AUDIO"),
            (e[(e.VIDEO = 1)] = "VIDEO"),
            (e[(e.LINK = 2)] = "LINK"),
            (e[(e.PHOTO = 3)] = "PHOTO"),
            (e[(e.DOCUMENTS = 4)] = "DOCUMENTS");
        })(r.MaterialTypeKeyEnum || (r.MaterialTypeKeyEnum = {}));
        var i =
          (r.MaterialTypeKeyEnum,
          (function () {
            function e() {}
            return (
              (e.AUDIO = 1),
              (e.VIDEO = 2),
              (e.LINK = 3),
              (e.PHOTO = 4),
              (e.DOCUMENTS = 5),
              e
            );
          })());
        r.MaterialType = i;
      },
      {},
    ],
    125: [
      function (e, t, r) {
        var i = e("./../urls/NewsRouter"),
          s = e("./NewsService"),
          o = e("./../authcore/AuthManager"),
          n = e("./../authcore/AuthRedirect"),
          a = e("./../utils/PageHeaderHelper"),
          u = e("./../INotifier"),
          l = e("./../security/SecurityService"),
          c = (function () {
            function e(e, t, r, s, o, n, u) {
              (this.$location = e),
                (this.$routeParams = t),
                (this.authManager = r),
                (this.authRedirect = s),
                (this.newsService = o),
                (this.securityService = n),
                (this.newsRouter = u),
                (this.news = { type: "ALL" }),
                (this.newsId = t[i.NewsRouter.ONE_NEWS_ID_PARAM]),
                (this.isAuthenticated = this.authManager.isAuthenticated()),
                this.isAuthenticated || s.redirectToLogOn(),
                this.securityService
                  .demandAuthentication()
                  .demandSystemPermissionsIf(null == this.newsId, function (e) {
                    return e.addNews;
                  })
                  .demandNewsPermissionsIf(
                    null != this.newsId,
                    String(this.newsId),
                    function (e) {
                      return e.edit;
                    }
                  ),
                this.newsId
                  ? this.loadNews()
                  : a.PageHeader.set().header("Add News").update();
            }
            return (
              (e.prototype.loadNews = function () {
                var e = this;
                this.newsService.getNews(this.newsId).then(function (t) {
                  angular.copy(t, e.news),
                    a.PageHeader.set().header("Edit This News").update();
                });
              }),
              (e.prototype.save = function () {
                var e = this;
                this.disabledSaveButton = !0;
                var t = this.newsId
                  ? this.newsService.update(this.news)
                  : this.newsService.create(this.news);
                t.then(function (t) {
                  (e.disabledSaveButton = !1),
                    u.notifier.success("News has been saved"),
                    e.$location.url(e.newsRouter.oneNewsUrl(t.id));
                });
              }),
              (e.prototype.redirectOrClearFields = function () {
                this.newsId
                  ? this.$location.url(this.newsRouter.oneNewsUrl(this.newsId))
                  : this.cleanFields();
              }),
              (e.prototype.cleanFields = function () {
                (this.news = {}), (this.news.type = "ALL");
              }),
              (e.NAME = "news.NewsEditController"),
              (e.$inject = [
                "$location",
                "$routeParams",
                o.AuthManager.NAME,
                n.AuthRedirect.NAME,
                s.NewsService.NAME,
                l.SecurityService.NAME,
                i.NewsRouter.NAME,
              ]),
              e
            );
          })();
        r.NewsEditController = c;
      },
      {
        "./../INotifier": 4,
        "./../authcore/AuthManager": 18,
        "./../authcore/AuthRedirect": 19,
        "./../security/SecurityService": 166,
        "./../urls/NewsRouter": 205,
        "./../utils/PageHeaderHelper": 231,
        "./NewsService": 128,
      },
    ],
    126: [
      function (e, t, r) {
        var i = e("./NewsService"),
          s = e("./NewsSearchController"),
          o = e("./OneNewsController"),
          n = e("./NewsEditController"),
          a = e("./../authcore/AuthCoreModule"),
          u = e("./../social/SocialModule"),
          l = e("./../security/SecurityModule");
        r.NewsModule = angular
          .module("news", [
            a.AuthCoreModule.name,
            u.SocialModule.name,
            l.SecurityModule.name,
          ])
          .service(i.NewsService.NAME, i.NewsService)
          .controller(s.NewsSearchController.NAME, s.NewsSearchController)
          .controller(o.OneNewsController.NAME, o.OneNewsController)
          .controller(n.NewsEditController.NAME, n.NewsEditController);
      },
      {
        "./../authcore/AuthCoreModule": 17,
        "./../security/SecurityModule": 165,
        "./../social/SocialModule": 175,
        "./NewsEditController": 125,
        "./NewsSearchController": 127,
        "./NewsService": 128,
        "./OneNewsController": 129,
      },
    ],
    127: [
      function (e, t, r) {
        var i = e("./../urls/NewsRouter"),
          s = e("./NewsService"),
          o = e("./../utils/MenuHelper"),
          n = e("./../utils/PageHeaderHelper"),
          a = e("./../IGridModel"),
          u = e("./../IHttpGridService"),
          l = e("./../utils/Moment"),
          c = e("./../INotifier"),
          d = e("./../authcore/AuthManager"),
          h = e("./../utils/UrlService"),
          p = e("./../security/PermissionsService"),
          f = e("./../security/SecurityService"),
          m = e("./../personal/PersonalService"),
          S = (function () {
            function e(e, t, r, s, l, c, d, h, p, f) {
              var m = this;
              switch (
                ((this.$location = t),
                (this.$routeParams = r),
                (this.authManager = s),
                (this.url = l),
                (this.permissionsService = c),
                (this.securityService = d),
                (this.personalService = h),
                (this.newsService = p),
                (this.newsRouter = f),
                (this.subscribe = !1),
                (this.isAuthenticated = this.authManager.isAuthenticated()),
                (this.newsType = r[i.NewsRouter.NEWS_TYPE_PARAM]),
                this.newsType)
              ) {
                case "all":
                  o.MenuHelper.setCurrentMenuItem(
                    o.MenuHelper.ALL_NEWS_MENU_KEY
                  ),
                    n.PageHeader.set().header("All News").update();
                  break;
                case "students":
                  o.MenuHelper.setCurrentMenuItem(
                    o.MenuHelper.STUDENTS_OFFERS_MENU_KEY
                  ),
                    n.PageHeader.set().header("News for Students").update(),
                    this.securityService.demandAuthentication();
              }
              c.getSystemPermissions().then(function (e) {
                n.PageHeader.set()
                  .preserveHeader()
                  .addActionLinkIf(
                    e.addNews,
                    "+&nbsp;New",
                    m.newsRouter.oneNewsCreateUrl()
                  )
                  .update(),
                  (m.systemPermissions = e);
              }),
                (this.newsGridModel = new a.GridModel(
                  u.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/news")
                  )
                )),
                (this.newsGridModel.filter.type = this.newsType.toUpperCase()),
                this.newsGridModel.loadCurrentPage(),
                this.checkSubscription();
            }
            return (
              (e.prototype.openOneNews = function (e) {
                this.$location.url(this.newsRouter.oneNewsUrl(e));
              }),
              (e.prototype.applyFilter = function () {
                (this.newsGridModel.filter.dateFrom = l.Moment.textToJavaDate(
                  this.newsGridModel.filter.dateFromText
                )),
                  (this.newsGridModel.filter.dateTo = l.Moment.textToJavaDate(
                    this.newsGridModel.filter.dateToText
                  )),
                  this.newsGridModel.loadCurrentPage();
              }),
              (e.prototype.clearFilter = function () {
                (this.newsGridModel.filter.searchString = null),
                  (this.newsGridModel.filter.tags = null),
                  (this.newsGridModel.filter.authorName = null),
                  (this.newsGridModel.filter.dateFrom = null),
                  (this.newsGridModel.filter.dateFromText = null),
                  (this.newsGridModel.filter.dateTo = null),
                  (this.newsGridModel.filter.dateToText = null),
                  this.newsGridModel.loadCurrentPage();
              }),
              (e.prototype.checkSubscription = function () {
                var e = this;
                this.newsService
                  .checkNewsSubscription(this.newsType.toUpperCase())
                  .then(function (t) {
                    e.subscribe = t;
                  });
              }),
              (e.prototype.changeNewsSubscription = function () {
                var e = this;
                this.personalService
                  .changeNewsSubscription(this.newsType.toUpperCase())
                  .then(function (t) {
                    t
                      ? "all" == e.newsType
                        ? c.notifier.success(
                            "You successfully subscribed to all news"
                          )
                        : c.notifier.success(
                            "You successfully subscribed to news for students"
                          )
                      : "all" == e.newsType
                      ? c.notifier.success(
                          "You successfully unsubscribed from all news"
                        )
                      : c.notifier.success(
                          "You successfully unsubscribed from news for students"
                        ),
                      (e.subscribe = t);
                  });
              }),
              (e.NAME = "news.NewsSearchController"),
              (e.$inject = [
                "$http",
                "$location",
                "$routeParams",
                d.AuthManager.NAME,
                h.UrlService.NAME,
                p.PermissionsService.NAME,
                f.SecurityService.NAME,
                m.PersonalService.NAME,
                s.NewsService.NAME,
                i.NewsRouter.NAME,
              ]),
              e
            );
          })();
        r.NewsSearchController = S;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../INotifier": 4,
        "./../authcore/AuthManager": 18,
        "./../personal/PersonalService": 136,
        "./../security/PermissionsService": 164,
        "./../security/SecurityService": 166,
        "./../urls/NewsRouter": 205,
        "./../utils/MenuHelper": 227,
        "./../utils/Moment": 228,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./NewsService": 128,
      },
    ],
    128: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = (function () {
            function e(e, t) {
              (this.$http = e), (this.url = t);
            }
            return (
              (e.prototype.getNews = function (e) {
                return this.$http
                  .get(this.url.base("/api/news/:id").param(":id", e).service())
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.create = function (e) {
                return this.$http
                  .post(this.url.service("/api/news"), e)
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.update = function (e) {
                return this.$http
                  .put(this.url.service("/api/news"), e)
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.checkNewsSubscription = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/news/subscription?newsType=:newsType")
                      .param(":newsType", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.NAME = "news.NewsService"),
              (e.$inject = ["$http", i.UrlService.NAME]),
              e
            );
          })();
        r.NewsService = s;
      },
      { "./../utils/UrlService": 236 },
    ],
    129: [
      function (e, t, r) {
        var i = e("./../urls/NewsRouter"),
          s = e("./NewsService"),
          o = e("./../utils/UrlService"),
          n = e("./../social/SocialService"),
          a = e("./../security/SecurityService"),
          u = e("./../authcore/AuthManager"),
          l = e("./../authcore/AuthRedirect"),
          c = e("./../utils/MenuHelper"),
          d = e("./../utils/PageHeaderHelper"),
          h = e("./../tree/TreeElementsInfoFiller"),
          p = e("./../IGridModel"),
          f = e("./../IHttpGridService"),
          m = e("./../INotifier"),
          S = e("./../ReferencedObjectType"),
          v = e("../security/PermissionsService"),
          y = (function () {
            function e(e, t, r, s, o, n, a, u, l, d, h, m, v) {
              var y = this;
              (this.$anchorScroll = t),
                (this.$timeout = r),
                (this.$location = s),
                (this.$routeParams = o),
                (this.url = n),
                (this.authManager = a),
                (this.authRedirect = u),
                (this.newsService = l),
                (this.socialService = d),
                (this.securityService = h),
                (this.newsRouter = m),
                (this.permissionsApi = v),
                (this.news = {}),
                (this.newComment = {}),
                (this.newReplyComment = {}),
                (this.newsId = o[i.NewsRouter.ONE_NEWS_ID_PARAM]),
                (this.isAuthenticated = this.authManager.isAuthenticated()),
                (this.anchorComplete = !1),
                this.isAuthenticated &&
                  this.permissionsApi.getSystemPermissions().then(function (e) {
                    y.systemPermissions = e;
                  }),
                c.MenuHelper.setCurrentMenuItem(c.MenuHelper.ALL_NEWS_MENU_KEY),
                this.loadNews(),
                (this.commentsGridModel = new p.GridModel(
                  f.HttpGridHelper.createLoader(
                    e,
                    this.url
                      .base(
                        "/api/social/comments?objectId=:objectId&objectType=:objectType"
                      )
                      .param(":objectId", this.newsId)
                      .param(
                        ":objectType",
                        S.ReferencedObjectType[S.ReferencedObjectType.NEWS]
                      )
                      .service()
                  )
                )),
                this.commentsGridModel.addLoadingListener(this),
                this.loadCommentsCount();
            }
            return (
              (e.prototype.startLoading = function () {}),
              (e.prototype.endLoading = function () {
                var e = this;
                h.TreeElementsInfoFiller.fillHierarchyInfoWithMaxLevel(
                  this.commentsGridModel.entries,
                  Number.MAX_VALUE
                ),
                  this.$timeout(function () {
                    e.scrollAnchor();
                  }, 0);
              }),
              (e.prototype.scrollAnchor = function () {
                this.anchorComplete ||
                  (this.$anchorScroll(this.$location.hash()),
                  (this.anchorComplete = !0));
              }),
              (e.prototype.loadNews = function () {
                var e = this;
                this.newsService.getNews(this.newsId).then(function (t) {
                  angular.copy(t, e.news),
                    "STUDENTS" == t.type &&
                      (c.MenuHelper.setCurrentMenuItem(
                        c.MenuHelper.STUDENTS_OFFERS_MENU_KEY
                      ),
                      e.securityService.demandAuthentication()),
                    d.PageHeader.set().header(t.title).update();
                });
              }),
              (e.prototype.loadCommentsCount = function () {
                var e = this;
                this.socialService
                  .getCommentsCount(this.newsId, S.ReferencedObjectType.NEWS)
                  .then(function (t) {
                    e.commentsCount = t;
                  });
              }),
              (e.prototype.addComment = function (e, t) {
                var r = this;
                e && (this.newReplyComment.parentId = t),
                  this.socialService
                    .addComment(
                      this.newsId,
                      S.ReferencedObjectType.NEWS,
                      e ? this.newReplyComment : this.newComment
                    )
                    .then(function (e) {
                      m.notifier.success("Comment has been added"),
                        r.commentsGridModel.loadCurrentPage(),
                        (r.newComment.text = ""),
                        (r.newReplyComment.text = ""),
                        (r.newReplyComment.parentId = null),
                        r.loadCommentsCount();
                    });
              }),
              (e.prototype.cleanComment = function () {
                (this.newComment.text = ""),
                  (this.newReplyComment.text = ""),
                  (this.newReplyComment.parentId = null);
              }),
              (e.prototype.replyComment = function (e) {
                this.commentsGridModel.entries.forEach(function (t) {
                  t.reply = t.id == e;
                });
              }),
              (e.NAME = "news.OneNewsController"),
              (e.$inject = [
                "$http",
                "$anchorScroll",
                "$timeout",
                "$location",
                "$routeParams",
                o.UrlService.NAME,
                u.AuthManager.NAME,
                l.AuthRedirect.NAME,
                s.NewsService.NAME,
                n.SocialService.NAME,
                a.SecurityService.NAME,
                i.NewsRouter.NAME,
                v.PermissionsService.NAME,
              ]),
              e
            );
          })();
        r.OneNewsController = y;
      },
      {
        "../security/PermissionsService": 164,
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../INotifier": 4,
        "./../ReferencedObjectType": 6,
        "./../authcore/AuthManager": 18,
        "./../authcore/AuthRedirect": 19,
        "./../security/SecurityService": 166,
        "./../social/SocialService": 176,
        "./../tree/TreeElementsInfoFiller": 192,
        "./../urls/NewsRouter": 205,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./NewsService": 128,
      },
    ],
    130: [
      function (e, t, r) {
        var i = e("./../users/UserService"),
          s = e("./../security/SecurityService"),
          o = e("./../utils/MenuHelper"),
          n = (function () {
            function e(e, t) {
              (this.securityService = e),
                (this.userService = t),
                this.securityService
                  .demandAuthentication()
                  .demandSystemPermissions(function (e) {
                    return e.rechargeAccount;
                  }),
                o.MenuHelper.setCurrentMenuItem(
                  o.MenuHelper.PERSONAL_ACCOUNT_BALANCE_MENU_KEY
                ),
                this.loadUserProfile();
            }
            return (
              (e.prototype.loadUserProfile = function () {
                var e = this;
                this.userService.getCurrentUserProfile().then(function (t) {
                  e.userProfile = t;
                });
              }),
              (e.NAME = "personal.BalanceController"),
              (e.$inject = [s.SecurityService.NAME, i.UserService.NAME]),
              e
            );
          })();
        r.BalanceController = n;
      },
      {
        "./../security/SecurityService": 166,
        "./../users/UserService": 218,
        "./../utils/MenuHelper": 227,
      },
    ],
    131: [
      function (e, t, r) {
        var i = e("./../users/UserService"),
          s = e("./../security/SecurityService"),
          o = e("./../utils/MenuHelper"),
          n = (function () {
            function e(e, t) {
              (this.securityService = e),
                (this.userService = t),
                this.securityService.demandAuthentication(),
                o.MenuHelper.setCurrentMenuItem(
                  o.MenuHelper.PERSONAL_ACCOUNT_COUPONS_MENU_KEY
                ),
                this.loadUserProfile();
            }
            return (
              (e.prototype.loadUserProfile = function () {
                var e = this;
                this.userService.getCurrentUserProfile().then(function (t) {
                  e.userProfile = t;
                });
              }),
              (e.NAME = "personal.CouponsController"),
              (e.$inject = [s.SecurityService.NAME, i.UserService.NAME]),
              e
            );
          })();
        r.CouponsController = n;
      },
      {
        "./../security/SecurityService": 166,
        "./../users/UserService": 218,
        "./../utils/MenuHelper": 227,
      },
    ],
    132: [
      function (e, t, r) {
        var i = e("./PersonalService"),
          s = e("./../users/UserService"),
          o = e("./../security/SecurityService"),
          n = e("./../utils/MenuHelper"),
          a = e("./../utils/UrlService"),
          u = e("./../urls/CoursesRouter"),
          l = e("./../IGridModel"),
          c = e("./../IHttpGridService"),
          d = e("./../ReferencedObjectType"),
          h = e("./../INotifier"),
          p = (function () {
            function e(e, t, r, i, s, o, a) {
              var u = this;
              (this.$location = t),
                (this.url = r),
                (this.securityService = i),
                (this.userService = s),
                (this.personalService = o),
                (this.coursesRouter = a),
                (this.rowShow = new Map()),
                this.securityService.demandAuthentication(),
                n.MenuHelper.setCurrentMenuItem(
                  n.MenuHelper.PERSONAL_ACCOUNT_COURSES_MENU_KEY
                ),
                (this.viewType = 0),
                this.loadUserProfile(),
                (this.coursesGridModel = new l.GridModel(
                  c.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/courses/my")
                  )
                )),
                this.coursesGridModel.entries.forEach(function (e) {
                  u.rowShow.set(e.id, !1);
                });
            }
            return (
              (e.prototype.showDetails = function (e) {
                this.rowShow.set(e, !this.rowShow.get(e));
              }),
              (e.prototype.loadCourse = function (e) {
                this.$location.url(this.coursesRouter.detailsUrl(e));
              }),
              (e.prototype.addCourseToFavorites = function (e) {
                this.addToFavorites(e.id, d.ReferencedObjectType.COURSE)
                  .then(function (t) {
                    h.notifier.success(
                      "The course has been added to your favorites"
                    ),
                      (e.favorite = !0);
                  })
                  ["catch"](function (e) {
                    "object.already.in.favorite" == e.data.error &&
                      h.notifier.error(
                        "This course is already in your favorites"
                      );
                  });
              }),
              (e.prototype.removeCourseFromFavorites = function (e) {
                this.removeFromFavorites(e.id, d.ReferencedObjectType.COURSE)
                  .then(function (t) {
                    h.notifier.success(
                      "The course has been removed from your favorites"
                    ),
                      (e.favorite = !1);
                  })
                  ["catch"](function (e) {
                    "object.not.in.favorite" == e.data.error &&
                      h.notifier.error("Failed to remove from your favorites");
                  });
              }),
              (e.prototype.addToFavorites = function (e, t) {
                return (
                  this.rowShow.set(e, !this.rowShow.get(e)),
                  this.personalService.addToFavorites(e, t)
                );
              }),
              (e.prototype.removeFromFavorites = function (e, t) {
                return (
                  this.rowShow.set(e, !this.rowShow.get(e)),
                  this.personalService.removeFromFavorites(e, t)
                );
              }),
              (e.prototype.loadUserProfile = function () {
                var e = this;
                this.userService.getCurrentUserProfile().then(function (t) {
                  e.userProfile = t;
                });
              }),
              (e.NAME = "personal.CoursesController"),
              (e.$inject = [
                "$http",
                "$location",
                a.UrlService.NAME,
                o.SecurityService.NAME,
                s.UserService.NAME,
                i.PersonalService.NAME,
                u.CoursesRouter.NAME,
              ]),
              e
            );
          })();
        r.CoursesController = p;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../INotifier": 4,
        "./../ReferencedObjectType": 6,
        "./../security/SecurityService": 166,
        "./../urls/CoursesRouter": 199,
        "./../users/UserService": 218,
        "./../utils/MenuHelper": 227,
        "./../utils/UrlService": 236,
        "./PersonalService": 136,
      },
    ],
    133: [
      function (e, t, r) {
        var i = e("./../authcore/AuthManager"),
          s = e("./PersonalService"),
          o = e("./../security/SecurityService"),
          n = e("./../utils/MenuHelper"),
          a = e("./../urls/MaterialsRouter"),
          u = e("./../urls/CoursesRouter"),
          l = e("./../utils/PageHeaderHelper"),
          c = e("./../IGridModel"),
          d = e("./../IHttpGridService"),
          h = e("./../utils/UrlService"),
          p = e("./../utils/ObjectTypeUtils"),
          f = e("./../INotifier"),
          m = e("./../ReferencedObjectType"),
          S = (function () {
            function e(e, t, r, i, s, o, a, u) {
              (this.$location = t),
                (this.url = r),
                (this.authManager = i),
                (this.personalService = s),
                (this.materialsRouter = o),
                (this.securityService = a),
                (this.coursesRouter = u),
                (this.rowShow = new Map()),
                (this.disableRemoveButton = !1),
                this.securityService.demandAuthentication(),
                (this.viewType = 1),
                n.MenuHelper.setCurrentMenuItem(
                  n.MenuHelper.FAVORITES_MENU_KEY
                ),
                l.PageHeader.set().header("Favorites").update(),
                (this.favoritesGridModel = new c.GridModel(
                  d.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/personal/favorites")
                  )
                )),
                (this.favoritesGridModel.pageSize = 8);
            }
            return (
              (e.prototype.showDetails = function (e, t) {
                t.available && this.rowShow.set(e, !this.rowShow.get(e));
              }),
              (e.prototype.loadFavoritePage = function (e) {
                e.objectType ==
                  m.ReferencedObjectType[m.ReferencedObjectType.MATERIAL] &&
                  (e.available
                    ? this.$location.url(
                        this.materialsRouter.watchUrl(e.objectId)
                      )
                    : f.notifier.error(
                        "Access to this material is restricted"
                      )),
                  e.objectType ==
                    m.ReferencedObjectType[m.ReferencedObjectType.PLAYLIST] &&
                    (e.available
                      ? this.$location.url(
                          this.materialsRouter.playlistDetailsUrl(e.objectId)
                        )
                      : f.notifier.error(
                          "Access to this playlist is restricted"
                        )),
                  e.objectType ==
                    m.ReferencedObjectType[m.ReferencedObjectType.COURSE] &&
                    (e.available
                      ? this.$location.url(
                          this.coursesRouter.detailsUrl(e.objectId)
                        )
                      : f.notifier.error(
                          "Access to this course is restricted"
                        ));
              }),
              (e.prototype.isMaterialObject = function (e) {
                return p.ObjectTypeUtils.isMaterialObject(e);
              }),
              (e.prototype.isPlaylistObject = function (e) {
                return p.ObjectTypeUtils.isPlaylistObject(e);
              }),
              (e.prototype.isCourseObject = function (e) {
                return p.ObjectTypeUtils.isCourseObject(e);
              }),
              (e.prototype.getMaterialTypeClass = function (e) {
                return p.ObjectTypeUtils.getMaterialGlyphiconClassFromKey(e);
              }),
              (e.prototype.getContentTypeTitle = function (e) {
                return p.ObjectTypeUtils.getContentTypeTitle(e);
              }),
              (e.prototype.removeFromFavorites = function (e, t) {
                var r = this;
                (this.disableRemoveButton = !0),
                  this.personalService
                    .removeFromFavorites(
                      e,
                      p.ObjectTypeUtils.getReferenceObjectTypeFromString(t)
                    )
                    .then(function (e) {
                      f.notifier.success(r.getRemoveMessage(t)),
                        r.favoritesGridModel.loadCurrentPage(),
                        (r.disableRemoveButton = !1);
                    })
                    ["catch"](function (e) {
                      f.notifier.error(
                        "Failed to remove it from your favorites"
                      ),
                        (r.disableRemoveButton = !1);
                    });
              }),
              (e.prototype.getRemoveMessage = function (e) {
                switch (e) {
                  case "MATERIAL":
                    return "Material removed from your favorites";
                  case "PLAYLIST":
                    return "Playlist removed from your favorites";
                  case "COURSE":
                    return "Course removed from your favorites";
                  default:
                    return "Material removed from your favorites";
                }
              }),
              (e.prototype.getLanguages = function (e) {
                var t = "";
                return (
                  e.forEach(function (e) {
                    t += e + ", ";
                  }),
                  t.substring(0, t.length - 2)
                );
              }),
              (e.NAME = "personal.FavoritesController"),
              (e.$inject = [
                "$http",
                "$location",
                h.UrlService.NAME,
                i.AuthManager.NAME,
                s.PersonalService.NAME,
                a.MaterialsRouter.NAME,
                o.SecurityService.NAME,
                u.CoursesRouter.NAME,
              ]),
              e
            );
          })();
        r.FavoritesController = S;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../INotifier": 4,
        "./../ReferencedObjectType": 6,
        "./../authcore/AuthManager": 18,
        "./../security/SecurityService": 166,
        "./../urls/CoursesRouter": 199,
        "./../urls/MaterialsRouter": 204,
        "./../utils/MenuHelper": 227,
        "./../utils/ObjectTypeUtils": 230,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./PersonalService": 136,
      },
    ],
    134: [
      function (e, t, r) {
        var i = e("./PersonalService"),
          s = e("./../users/UserService"),
          o = e("./../security/SecurityService"),
          n = e("./../utils/MenuHelper"),
          a = e("./../utils/UrlService"),
          u = e("./../utils/ObjectTypeUtils"),
          l = e("./../urls/MaterialsRouter"),
          c = e("./../urls/NewsRouter"),
          d = e("./../IGridModel"),
          h = e("./../IHttpGridService"),
          p = e("./../ReferencedObjectType"),
          f = e("./../INotifier"),
          m = (function () {
            function e(e, t, r, i, s, o, a, u) {
              var l = this;
              (this.$location = t),
                (this.url = r),
                (this.securityService = i),
                (this.userService = s),
                (this.personalService = o),
                (this.materialsRouter = a),
                (this.newsRouter = u),
                (this.rowShow = new Map()),
                (this.objectComments = new Map()),
                this.securityService.demandAuthentication(),
                n.MenuHelper.setCurrentMenuItem(
                  n.MenuHelper.PERSONAL_ACCOUNT_NEW_COMMENTS_MENU_KEY
                ),
                (this.disableGetCommentsButton = !1),
                this.loadUserProfile(),
                (this.objectsWithCommentsGridModel = new d.GridModel(
                  h.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/personal/comments/objects")
                  )
                )),
                this.objectsWithCommentsGridModel.entries.forEach(function (e) {
                  l.rowShow.set(e.objectId, !1);
                });
            }
            return (
              (e.prototype.showComments = function (e, t) {
                var r = this;
                this.rowShow.get(e) || this.disableGetCommentsButton
                  ? this.rowShow.set(e, !this.rowShow.get(e))
                  : this.objectComments.has(e) ||
                    ((this.disableGetCommentsButton = !0),
                    this.personalService
                      .getUserCommentsForObject(
                        e,
                        u.ObjectTypeUtils.getReferenceObjectTypeFromString(t)
                      )
                      .then(function (t) {
                        r.objectComments.set(e, t),
                          r.rowShow.set(e, !r.rowShow.get(e)),
                          (r.disableGetCommentsButton = !1);
                      }));
              }),
              (e.prototype.getObjectRoute = function (e) {
                e.objectType ==
                p.ReferencedObjectType[p.ReferencedObjectType.MATERIAL]
                  ? e.available
                    ? this.$location.url(
                        this.materialsRouter.watchUrl(e.objectId)
                      )
                    : f.notifier.error("Access to the material is restricted")
                  : e.objectType ==
                      p.ReferencedObjectType[p.ReferencedObjectType.NEWS] &&
                    this.$location.url(this.newsRouter.oneNewsUrl(e.objectId));
              }),
              (e.prototype.getGlyphiconClass = function (e, t) {
                switch (e) {
                  case p.ReferencedObjectType[p.ReferencedObjectType.MATERIAL]:
                    return u.ObjectTypeUtils.getMaterialGlyphiconClass(t);
                  case p.ReferencedObjectType[p.ReferencedObjectType.NEWS]:
                    return u.ObjectTypeUtils.getNewsGlyphiconClass();
                }
              }),
              (e.prototype.getTypeTitle = function (e, t) {
                switch (e) {
                  case p.ReferencedObjectType[p.ReferencedObjectType.MATERIAL]:
                    return u.ObjectTypeUtils.getMaterialTypeTitle(t);
                  default:
                    return u.ObjectTypeUtils.getReferenceObjectTypeTitle(e);
                }
              }),
              (e.prototype.getObjectRouteForComment = function (e, t) {
                e.permissions.view &&
                  (e.objectType ==
                  p.ReferencedObjectType[p.ReferencedObjectType.MATERIAL]
                    ? this.$location
                        .url(this.materialsRouter.watchUrl(e.objectId))
                        .hash("comment" + t)
                    : e.objectType ==
                        p.ReferencedObjectType[p.ReferencedObjectType.NEWS] &&
                      this.$location
                        .url(this.newsRouter.oneNewsUrl(e.objectId))
                        .hash("comment" + t));
              }),
              (e.prototype.loadUserProfile = function () {
                var e = this;
                this.userService.getCurrentUserProfile().then(function (t) {
                  e.userProfile = t;
                });
              }),
              (e.NAME = "personal.NewCommentsController"),
              (e.$inject = [
                "$http",
                "$location",
                a.UrlService.NAME,
                o.SecurityService.NAME,
                s.UserService.NAME,
                i.PersonalService.NAME,
                l.MaterialsRouter.NAME,
                c.NewsRouter.NAME,
              ]),
              e
            );
          })();
        r.NewCommentsController = m;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../INotifier": 4,
        "./../ReferencedObjectType": 6,
        "./../security/SecurityService": 166,
        "./../urls/MaterialsRouter": 204,
        "./../urls/NewsRouter": 205,
        "./../users/UserService": 218,
        "./../utils/MenuHelper": 227,
        "./../utils/ObjectTypeUtils": 230,
        "./../utils/UrlService": 236,
        "./PersonalService": 136,
      },
    ],
    135: [
      function (e, t, r) {
        var i = e("./PersonalService"),
          s = e("./ProfileController"),
          o = e("./FavoritesController"),
          n = e("./UploadsController"),
          a = e("./CoursesController"),
          u = e("./QuizzesController"),
          l = e("./PlaylistsController"),
          c = e("./SubscriptionsController"),
          d = e("./NewCommentsController"),
          h = e("./SupportController"),
          p = e("./CouponsController"),
          f = e("./PurchasesHistoryController"),
          m = e("./BalanceController"),
          S = e("./SettingsController"),
          v = e("./../security/SecurityModule"),
          y = e("./../urls/UrlsModule"),
          g = e("./../settings/SettingsModule"),
          M = e("./../reference/ReferenceModule"),
          E = e("./../users/UsersModule");
        r.PersonalModule = angular
          .module("personal", [
            v.SecurityModule.name,
            y.UrlsModule.name,
            g.SettingsModule.name,
            M.ReferenceModule.name,
            E.UsersModule.name,
          ])
          .service(i.PersonalService.NAME, i.PersonalService)
          .controller(s.ProfileController.NAME, s.ProfileController)
          .controller(o.FavoritesController.NAME, o.FavoritesController)
          .controller(n.UploadsController.NAME, n.UploadsController)
          .controller(a.CoursesController.NAME, a.CoursesController)
          .controller(u.QuizzesController.NAME, u.QuizzesController)
          .controller(l.PlaylistsController.NAME, l.PlaylistsController)
          .controller(d.NewCommentsController.NAME, d.NewCommentsController)
          .controller(c.SubscriptionsController.NAME, c.SubscriptionsController)
          .controller(h.SupportController.NAME, h.SupportController)
          .controller(p.CouponsController.NAME, p.CouponsController)
          .controller(
            f.PurchasesHistoryController.NAME,
            f.PurchasesHistoryController
          )
          .controller(m.BalanceController.NAME, m.BalanceController)
          .controller(S.SettingsController.NAME, S.SettingsController);
      },
      {
        "./../reference/ReferenceModule": 154,
        "./../security/SecurityModule": 165,
        "./../settings/SettingsModule": 170,
        "./../urls/UrlsModule": 212,
        "./../users/UsersModule": 221,
        "./BalanceController": 130,
        "./CouponsController": 131,
        "./CoursesController": 132,
        "./FavoritesController": 133,
        "./NewCommentsController": 134,
        "./PersonalService": 136,
        "./PlaylistsController": 137,
        "./ProfileController": 138,
        "./PurchasesHistoryController": 140,
        "./QuizzesController": 141,
        "./SettingsController": 142,
        "./SubscriptionsController": 143,
        "./SupportController": 144,
        "./UploadsController": 145,
      },
    ],
    136: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = e("./../ReferencedObjectType"),
          o = (function () {
            function e(e, t) {
              (this.$http = e), (this.url = t);
            }
            return (
              (e.prototype.addToFavorites = function (e, t) {
                return this.$http
                  .post(
                    this.url
                      .base(
                        "/api/personal/favorites?objectId=:objectId&objectType=:objectType"
                      )
                      .param(":objectId", e)
                      .param(":objectType", s.ReferencedObjectType[t])
                      .service(),
                    null
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.removeFromFavorites = function (e, t) {
                return this.$http["delete"](
                  this.url.service("/api/personal/favorites"),
                  {
                    params: {
                      objectId: e,
                      objectType: s.ReferencedObjectType[t],
                    },
                  }
                ).then(function (e) {
                  return e.data;
                });
              }),
              (e.prototype.getUserCommentsForObject = function (e, t) {
                return this.$http
                  .get(
                    this.url
                      .base(
                        "/api/personal/comments?objectId=:objectId&objectType=:objectType"
                      )
                      .param(":objectId", e)
                      .param(":objectType", s.ReferencedObjectType[t])
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.changeAuthorSubscription = function (e) {
                return this.$http
                  .post(
                    this.url
                      .base("/api/personal/subscribe/author?authorId=:authorId")
                      .param(":authorId", e)
                      .service(),
                    null
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.changeNewsSubscription = function (e) {
                return this.$http
                  .post(this.url.service("/api/personal/subscribe/news"), e)
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.loadSubscriptions = function () {
                return this.$http
                  .get(this.url.service("/api/personal/subscriptions"))
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.changeSubscriptions = function (e) {
                return this.$http
                  .post(this.url.service("/api/personal/subscribe/all"), e)
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.sendMessageToSupport = function (e) {
                return this.$http
                  .post(this.url.service("/api/personal/support"), e)
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.NAME = "personal.PersonalService"),
              (e.$inject = ["$http", i.UrlService.NAME]),
              e
            );
          })();
        r.PersonalService = o;
      },
      { "./../ReferencedObjectType": 6, "./../utils/UrlService": 236 },
    ],
    137: [
      function (e, t, r) {
        var i = e("./PersonalService"),
          s = e("./../users/UserService"),
          o = e("./../security/SecurityService"),
          n = e("./../utils/MenuHelper"),
          a = e("./../utils/UrlService"),
          u = e("./../urls/MaterialsRouter"),
          l = e("./../IGridModel"),
          c = e("./../IHttpGridService"),
          d = e("./../ReferencedObjectType"),
          h = e("./../INotifier"),
          p = (function () {
            function e(e, t, r, i, s, o, a) {
              var u = this;
              (this.$location = t),
                (this.url = r),
                (this.securityService = i),
                (this.userService = s),
                (this.personalService = o),
                (this.materialsRouter = a),
                (this.rowShow = new Map()),
                this.securityService.demandAuthentication(),
                n.MenuHelper.setCurrentMenuItem(
                  n.MenuHelper.PERSONAL_ACCOUNT_PLAYLISTS_MENU_KEY
                ),
                (this.viewType = 0),
                (this.playlistViewType = 1),
                this.loadUserProfile(),
                (this.playlistsGridModel = new l.GridModel(
                  c.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/playlists/profilePlaylists")
                  )
                )),
                this.playlistsGridModel.entries.forEach(function (e) {
                  u.rowShow.set(e.id, !1);
                });
            }
            return (
              (e.prototype.showDetails = function (e) {
                this.rowShow.set(e, !this.rowShow.get(e));
              }),
              (e.prototype.loadPlaylist = function (e) {
                this.$location.url(this.materialsRouter.playlistDetailsUrl(e));
              }),
              (e.prototype.setPlaylistViewType = function (e) {
                (this.playlistViewType = e),
                  this.searchGridModelObjects(
                    this.playlistsGridModel,
                    this.playlistViewType
                  );
              }),
              (e.prototype.addPlaylistToFavorites = function (e) {
                this.addToFavorites(e.id, d.ReferencedObjectType.PLAYLIST)
                  .then(function (t) {
                    h.notifier.success(
                      "The playlist has been added to your favorites"
                    ),
                      (e.favorite = !0);
                  })
                  ["catch"](function (e) {
                    "object.already.in.favorite" == e.data.error &&
                      h.notifier.error(
                        "This playlist is already in your favorites"
                      );
                  });
              }),
              (e.prototype.removePlaylistFromFavorites = function (e) {
                this.removeFromFavorites(e.id, d.ReferencedObjectType.PLAYLIST)
                  .then(function (t) {
                    h.notifier.success(
                      "The playlist has been removed from your favorites"
                    ),
                      (e.favorite = !1);
                  })
                  ["catch"](function (e) {
                    "object.not.in.favorite" == e.data.error &&
                      h.notifier.error("Failed to remove from your favorites");
                  });
              }),
              (e.prototype.getLanguages = function (e) {
                var t = "";
                return (
                  e.forEach(function (e) {
                    t += e + ", ";
                  }),
                  t.substring(0, t.length - 2)
                );
              }),
              (e.prototype.searchGridModelObjects = function (e, t) {
                (e.filter.viewType = t), e.loadCurrentPage();
              }),
              (e.prototype.addToFavorites = function (e, t) {
                return (
                  this.rowShow.set(e, !this.rowShow.get(e)),
                  this.personalService.addToFavorites(e, t)
                );
              }),
              (e.prototype.removeFromFavorites = function (e, t) {
                return (
                  this.rowShow.set(e, !this.rowShow.get(e)),
                  this.personalService.removeFromFavorites(e, t)
                );
              }),
              (e.prototype.loadUserProfile = function () {
                var e = this;
                this.userService.getCurrentUserProfile().then(function (t) {
                  e.userProfile = t;
                });
              }),
              (e.NAME = "personal.PlaylistsController"),
              (e.$inject = [
                "$http",
                "$location",
                a.UrlService.NAME,
                o.SecurityService.NAME,
                s.UserService.NAME,
                i.PersonalService.NAME,
                u.MaterialsRouter.NAME,
              ]),
              e
            );
          })();
        r.PlaylistsController = p;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../INotifier": 4,
        "./../ReferencedObjectType": 6,
        "./../security/SecurityService": 166,
        "./../urls/MaterialsRouter": 204,
        "./../users/UserService": 218,
        "./../utils/MenuHelper": 227,
        "./../utils/UrlService": 236,
        "./PersonalService": 136,
      },
    ],
    138: [
      function (e, t, r) {
        var i = e("./ProfileMenuItemsKey"),
          s = e("./../security/PermissionsService"),
          o = e("./../security/SecurityService"),
          n = e("./PersonalService"),
          a = e("./../utils/UrlService"),
          u = e("./../users/UserService"),
          l = e("./../settings/SettingsService"),
          c = e("./../quizzes/QuizService"),
          d = e("./../reference/ReferenceService"),
          h = e("./../urls/MaterialsRouter"),
          p = e("./../urls/CoursesRouter"),
          f = e("./../urls/NewsRouter"),
          m = e("./../urls/QuizzesRouter"),
          S = e("./../utils/MenuHelper"),
          v = e("./../utils/PageHeaderHelper"),
          y = e("./../utils/ObjectTypeUtils"),
          g = e("./../IGridModel"),
          M = e("./../IHttpGridService"),
          E = e("./../INotifier"),
          A = e("./../users/models/IUser"),
          R = e("./../ReferencedObjectType"),
          T = (function () {
            function e(e, t, r, i, s, o, n, a, u, l, c, d, h, p) {
              var f = this;
              (this.$location = t),
                (this.url = r),
                (this.permissionsApi = i),
                (this.referenceApi = s),
                (this.personalService = o),
                (this.securityService = n),
                (this.userService = a),
                (this.settingsService = u),
                (this.quizService = l),
                (this.materialsRouter = c),
                (this.coursesRouter = d),
                (this.newsRouter = h),
                (this.quizzesRouter = p),
                (this.rowShow = new Map()),
                (this.objectComments = new Map()),
                (this.quizResults = new Map()),
                (this.disableSaveButton = !1),
                (this.users = []),
                (this.hasCreatedQuizzes = !1),
                this.securityService.demandAuthentication(),
                (this.isAuthenticated = !0),
                (this.currentMenuItem = 0),
                (this.viewType = 0),
                (this.disableGetCommentsButton = !1),
                (this.disableGetQuizResultsButton = !1),
                this.rowShow.set(1, !1),
                this.rowShow.set(2, !1),
                this.rowShow.set(3, !1),
                this.rowShow.set(4, !1),
                this.permissionsApi.getSystemPermissions().then(function (e) {
                  (f.systemPermissions = e), f.loadLeftMenu();
                }),
                S.MenuHelper.setCurrentMenuItem(S.MenuHelper.PROFILE_MENU_KEY),
                v.PageHeader.set().header("My Profile").update(),
                (this.newUserProfile = { fullName: "", locale: null }),
                (this.userLogon = { name: "", password: "" }),
                this.loadUserProfile(),
                this.loadUserLogon(),
                (this.uploadsGridModel = new g.GridModel(
                  M.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/materials/uploads")
                  )
                )),
                this.uploadsGridModel.entries.forEach(function (e) {
                  f.rowShow.set(e.id, !1);
                }),
                (this.objectsWithCommentsGridModel = new g.GridModel(
                  M.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/personal/comments/objects")
                  )
                )),
                this.objectsWithCommentsGridModel.entries.forEach(function (e) {
                  f.rowShow.set(e.objectId, !1);
                }),
                (this.coursesGridModel = new g.GridModel(
                  M.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/courses/my")
                  )
                )),
                this.coursesGridModel.entries.forEach(function (e) {
                  f.rowShow.set(e.id, !1);
                }),
                (this.playlistsGridModel = new g.GridModel(
                  M.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/playlists/profilePlaylists")
                  )
                )),
                this.playlistsGridModel.entries.forEach(function (e) {
                  f.rowShow.set(e.id, !1);
                }),
                (this.playlistViewType = 1),
                (this.createdQuizzesGridModel = new g.GridModel(
                  M.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/quizzes/profileQuizzes/created")
                  )
                )),
                this.createdQuizzesGridModel.entries.forEach(function (e) {
                  f.rowShow.set(e.id, !1);
                }),
                (this.passedQuizzesGridModel = new g.GridModel(
                  M.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/quizzes/profileQuizzes/passed")
                  )
                )),
                this.passedQuizzesGridModel.entries.forEach(function (e) {
                  f.rowShow.set(e.id, !1);
                }),
                (this.quizViewType = 1),
                (this.subscriptions = {
                  authorsIds: [],
                  subjectsIds: [],
                  allNewsSubscription: !1,
                  studentsNewsSubscription: !1,
                  commentsSubscription: !1,
                }),
                this.loadSubscriptions(),
                this.loadNotificationsFrequency(),
                this.getUserHasCreatedQuizzes();
            }
            return (
              (e.prototype.loadLeftMenu = function () {
                (this.leftMenu = [
                  {
                    key: i.ProfileMenuItemsKey.MY_COURSES,
                    value: "My courses",
                  },
                  {
                    key: i.ProfileMenuItemsKey.MY_QUIZZES,
                    value: "My quizzes",
                  },
                  {
                    key: i.ProfileMenuItemsKey.MY_PLAYLISTS,
                    value: "My playlists",
                  },
                  {
                    key: i.ProfileMenuItemsKey.SUBSCRIPTIONS,
                    value: "My subscriptions",
                  },
                  {
                    key: i.ProfileMenuItemsKey.NEW_COMMENTS,
                    value: "New comments",
                  },
                  { key: i.ProfileMenuItemsKey.SUPPORT, value: "Support" },
                  { key: i.ProfileMenuItemsKey.COUPONS, value: "Coupons" },
                  { key: i.ProfileMenuItemsKey.SETTINGS, value: "Settings" },
                ]),
                  this.systemPermissions.addMaterial &&
                    this.leftMenu.push({
                      key: i.ProfileMenuItemsKey.MY_UPLOADS,
                      value: "My uploads",
                    }),
                  this.systemPermissions.rechargeAccount &&
                    this.leftMenu.push({
                      key: i.ProfileMenuItemsKey.BALANCE,
                      value: "Top-up",
                    }),
                  this.systemPermissions.viewPurchaseHistory &&
                    this.leftMenu.push({
                      key: i.ProfileMenuItemsKey.HISTORY,
                      value: "History of purchases",
                    }),
                  this.leftMenu.sort(function (e, t) {
                    return e.key < t.key ? -1 : e.key > t.key ? 1 : 0;
                  });
              }),
              (e.prototype.loadUserProfile = function () {
                var e = this;
                (this.confirmPassword = ""),
                  this.userService.getCurrentUserProfile().then(function (t) {
                    (e.userProfile = t),
                      angular.copy(t, e.newUserProfile),
                      (e.isEverythingDisabled =
                        t.id == A.PredefinedUsersEnum.GUEST),
                      e.loadAvailableLocales();
                  });
              }),
              (e.prototype.loadUserLogon = function () {
                var e = this;
                this.userService.getCurrentUserLocalLogon().then(function (t) {
                  t && angular.copy(t, e.userLogon);
                });
              }),
              (e.prototype.loadAvailableLocales = function () {
                var e = this;
                this.settingsService.getAvailableLocales().then(function (t) {
                  e.availableLocales = t;
                });
              }),
              (e.prototype.loadNotificationsFrequency = function () {
                var e = this;
                this.referenceApi
                  .getActiveReferenceEntitiesForSelectorWithoutParams(
                    "calendarPeriods",
                    []
                  )
                  .then(function (t) {
                    e.notificationsFrequency = t;
                  });
              }),
              (e.prototype.getUserHasCreatedQuizzes = function () {
                var e = this;
                this.quizService.hasUserCreatedQuizzes().then(function (t) {
                  e.hasCreatedQuizzes = t;
                });
              }),
              (e.prototype.saveProfileSettings = function () {
                var e = this;
                (this.disableSaveButton = !0), (this.confirmPassword = null);
                var t = this.userService.updateCurrentUserProfile(
                  this.newUserProfile,
                  this.userLogon.password
                );
                t.then(function (t) {
                  (e.disableSaveButton = !1),
                    E.notifier.success("Settings are successfully saved"),
                    e.loadUserProfile();
                })["catch"](function (t) {
                  (e.disableSaveButton = !1),
                    "error.email.not.unique" == t.data.error
                      ? E.notifier.error(
                          "This email has already been registered in the system"
                        )
                      : "error.try.update.another.user" == t.data.error &&
                        E.notifier.error(
                          "You can change only your own profile settings"
                        );
                });
              }),
              (e.prototype.cancelProfileSettings = function () {
                this.loadUserProfile(), this.loadUserLogon();
              }),
              (e.prototype.setLeftMenuItem = function (e) {
                this.currentMenuItem = e;
              }),
              (e.prototype.isLeftMenuItemActive = function (e) {
                return this.currentMenuItem == e;
              }),
              (e.prototype.showDetails = function (e) {
                this.rowShow.set(e, !this.rowShow.get(e));
              }),
              (e.prototype.watch = function (e) {
                this.$location.url(this.materialsRouter.watchUrl(e));
              }),
              (e.prototype.getObjectRoute = function (e) {
                e.objectType ==
                R.ReferencedObjectType[R.ReferencedObjectType.MATERIAL]
                  ? e.available
                    ? this.$location.url(
                        this.materialsRouter.watchUrl(e.objectId)
                      )
                    : E.notifier.error("Access to the material is restricted")
                  : e.objectType ==
                      R.ReferencedObjectType[R.ReferencedObjectType.NEWS] &&
                    this.$location.url(this.newsRouter.oneNewsUrl(e.objectId));
              }),
              (e.prototype.getObjectRouteForComment = function (e, t) {
                e.permissions.view &&
                  (e.objectType ==
                  R.ReferencedObjectType[R.ReferencedObjectType.MATERIAL]
                    ? this.$location
                        .url(this.materialsRouter.watchUrl(e.objectId))
                        .hash("comment" + t)
                    : e.objectType ==
                        R.ReferencedObjectType[R.ReferencedObjectType.NEWS] &&
                      this.$location
                        .url(this.newsRouter.oneNewsUrl(e.objectId))
                        .hash("comment" + t));
              }),
              (e.prototype.getGlyphiconClass = function (e, t) {
                switch (e) {
                  case R.ReferencedObjectType[R.ReferencedObjectType.MATERIAL]:
                    return y.ObjectTypeUtils.getMaterialGlyphiconClass(t);
                  case R.ReferencedObjectType[R.ReferencedObjectType.NEWS]:
                    return y.ObjectTypeUtils.getNewsGlyphiconClass();
                }
              }),
              (e.prototype.getTypeTitle = function (e, t) {
                switch (e) {
                  case R.ReferencedObjectType[R.ReferencedObjectType.MATERIAL]:
                    return y.ObjectTypeUtils.getMaterialTypeTitle(t);
                  default:
                    return y.ObjectTypeUtils.getReferenceObjectTypeTitle(e);
                }
              }),
              (e.prototype.showComments = function (e, t) {
                var r = this;
                this.rowShow.get(e) || this.disableGetCommentsButton
                  ? this.rowShow.set(e, !this.rowShow.get(e))
                  : this.objectComments.has(e) ||
                    ((this.disableGetCommentsButton = !0),
                    this.personalService
                      .getUserCommentsForObject(
                        e,
                        y.ObjectTypeUtils.getReferenceObjectTypeFromString(t)
                      )
                      .then(function (t) {
                        r.objectComments.set(e, t),
                          r.rowShow.set(e, !r.rowShow.get(e)),
                          (r.disableGetCommentsButton = !1);
                      }));
              }),
              (e.prototype.showQuizResults = function (e, t, r, i) {
                var s = this;
                this.rowShow.get(e) ||
                this.disableGetQuizResultsButton ||
                1 != this.quizViewType ||
                this.quizResults.has(e)
                  ? this.rowShow.set(e, !this.rowShow.get(e))
                  : ((this.disableGetQuizResultsButton = !0),
                    this.quizService
                      .getUserQuizResults(t, r, i)
                      .then(function (t) {
                        s.quizResults.set(e, t),
                          s.rowShow.set(e, !s.rowShow.get(e)),
                          (s.disableGetQuizResultsButton = !1);
                      }));
              }),
              (e.prototype.getLanguages = function (e) {
                var t = "";
                return (
                  e.forEach(function (e) {
                    t += e + ", ";
                  }),
                  t.substring(0, t.length - 2)
                );
              }),
              (e.prototype.loadPlaylist = function (e) {
                this.$location.url(this.materialsRouter.playlistDetailsUrl(e));
              }),
              (e.prototype.loadCourse = function (e) {
                this.$location.url(this.coursesRouter.detailsUrl(e));
              }),
              (e.prototype.loadQuiz = function (e) {
                this.$location.url(this.quizzesRouter.detailsUrl(e));
              }),
              (e.prototype.addCourseToFavorites = function (e) {
                this.addToFavorites(e.id, R.ReferencedObjectType.COURSE)
                  .then(function (t) {
                    E.notifier.success(
                      "The course has been added to your favorites"
                    ),
                      (e.favorite = !0);
                  })
                  ["catch"](function (e) {
                    "object.already.in.favorite" == e.data.error &&
                      E.notifier.error(
                        "This course is already in your favorites"
                      );
                  });
              }),
              (e.prototype.removeCourseFromFavorites = function (e) {
                this.removeFromFavorites(e.id, R.ReferencedObjectType.COURSE)
                  .then(function (t) {
                    E.notifier.success(
                      "The course has been removed from your favorites"
                    ),
                      (e.favorite = !1);
                  })
                  ["catch"](function (e) {
                    "object.not.in.favorite" == e.data.error &&
                      E.notifier.error("Failed to remove from your favorites");
                  });
              }),
              (e.prototype.addPlaylistToFavorites = function (e) {
                this.addToFavorites(e.id, R.ReferencedObjectType.PLAYLIST)
                  .then(function (t) {
                    E.notifier.success(
                      "The playlist has been added to your favorites"
                    ),
                      (e.favorite = !0);
                  })
                  ["catch"](function (e) {
                    "object.already.in.favorite" == e.data.error &&
                      E.notifier.error(
                        "This playlist is already in your favorites"
                      );
                  });
              }),
              (e.prototype.removePlaylistFromFavorites = function (e) {
                this.removeFromFavorites(e.id, R.ReferencedObjectType.PLAYLIST)
                  .then(function (t) {
                    E.notifier.success(
                      "The playlist has been removed from your favorites"
                    ),
                      (e.favorite = !1);
                  })
                  ["catch"](function (e) {
                    "object.not.in.favorite" == e.data.error &&
                      E.notifier.error("Failed to remove from your favorites");
                  });
              }),
              (e.prototype.addToFavorites = function (e, t) {
                return (
                  this.rowShow.set(e, !this.rowShow.get(e)),
                  this.personalService.addToFavorites(e, t)
                );
              }),
              (e.prototype.removeFromFavorites = function (e, t) {
                return (
                  this.rowShow.set(e, !this.rowShow.get(e)),
                  this.personalService.removeFromFavorites(e, t)
                );
              }),
              (e.prototype.setPlaylistViewType = function (e) {
                (this.playlistViewType = e),
                  this.searchGridModelObjects(
                    this.playlistsGridModel,
                    this.playlistViewType
                  );
              }),
              (e.prototype.setQuizViewType = function (e) {
                this.quizViewType = e;
              }),
              (e.prototype.searchGridModelObjects = function (e, t) {
                (e.filter.viewType = t), e.loadCurrentPage();
              }),
              (e.prototype.loadSubscriptions = function () {
                var e = this;
                this.personalService.loadSubscriptions().then(function (t) {
                  angular.copy(t, e.subscriptions), e.loadUsers();
                });
              }),
              (e.prototype.loadUsers = function () {
                var e = this;
                this.userService
                  .getUsersWithoutExcludedUsersForSelector()
                  .then(function (t) {
                    angular.copy(t, e.users);
                  });
              }),
              (e.prototype.changeSubscriptionsSettings = function () {
                var e = this;
                this.personalService
                  .changeSubscriptions(this.subscriptions)
                  .then(function (t) {
                    e.userService
                      .changeUserNotificationFrequency(
                        e.userProfile.notificationFrequencyId
                      )
                      .then(function (e) {
                        E.notifier.success(
                          "Subscriptions are successfully saved"
                        );
                      });
                  });
              }),
              (e.prototype.cancelSubscriptionsSettings = function () {
                this.loadSubscriptions();
              }),
              (e.prototype.sendMessageToSupport = function () {
                var e = this;
                this.personalService
                  .sendMessageToSupport(this.messageToSupport)
                  .then(function (t) {
                    E.notifier.success(
                      "Your message has been sent to the help desk, you will hear from them soon"
                    ),
                      (e.messageToSupport = "");
                  });
              }),
              (e.NAME = "personal.ProfileController"),
              (e.$inject = [
                "$http",
                "$location",
                a.UrlService.NAME,
                s.PermissionsService.NAME,
                d.ReferenceService.NAME,
                n.PersonalService.NAME,
                o.SecurityService.NAME,
                u.UserService.NAME,
                l.SettingsService.NAME,
                c.QuizService.NAME,
                h.MaterialsRouter.NAME,
                p.CoursesRouter.NAME,
                f.NewsRouter.NAME,
                m.QuizzesRouter.NAME,
              ]),
              e
            );
          })();
        r.ProfileController = T;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../INotifier": 4,
        "./../ReferencedObjectType": 6,
        "./../quizzes/QuizService": 149,
        "./../reference/ReferenceService": 156,
        "./../security/PermissionsService": 164,
        "./../security/SecurityService": 166,
        "./../settings/SettingsService": 171,
        "./../urls/CoursesRouter": 199,
        "./../urls/MaterialsRouter": 204,
        "./../urls/NewsRouter": 205,
        "./../urls/QuizzesRouter": 207,
        "./../users/UserService": 218,
        "./../users/models/IUser": 223,
        "./../utils/MenuHelper": 227,
        "./../utils/ObjectTypeUtils": 230,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./PersonalService": 136,
        "./ProfileMenuItemsKey": 139,
      },
    ],
    139: [
      function (e, t, r) {
        var i = (function () {
          function e() {}
          return (
            (e.MY_UPLOADS = 1),
            (e.MY_COURSES = 2),
            (e.MY_QUIZZES = 3),
            (e.MY_PLAYLISTS = 4),
            (e.SUBSCRIPTIONS = 5),
            (e.NEW_COMMENTS = 6),
            (e.SUPPORT = 7),
            (e.COUPONS = 8),
            (e.HISTORY = 9),
            (e.BALANCE = 10),
            (e.ACCOUNT_MANAGEMENT = 11),
            (e.SETTINGS = 12),
            e
          );
        })();
        r.ProfileMenuItemsKey = i;
      },
      {},
    ],
    140: [
      function (e, t, r) {
        var i = e("./../users/UserService"),
          s = e("./../security/SecurityService"),
          o = e("./../utils/MenuHelper"),
          n = (function () {
            function e(e, t) {
              (this.securityService = e),
                (this.userService = t),
                this.securityService
                  .demandAuthentication()
                  .demandSystemPermissions(function (e) {
                    return e.viewPurchaseHistory;
                  }),
                o.MenuHelper.setCurrentMenuItem(
                  o.MenuHelper.PERSONAL_ACCOUNT_PURCHASES_HISTORY_MENU_KEY
                ),
                this.loadUserProfile();
            }
            return (
              (e.prototype.loadUserProfile = function () {
                var e = this;
                this.userService.getCurrentUserProfile().then(function (t) {
                  e.userProfile = t;
                });
              }),
              (e.NAME = "personal.PurchasesHistoryController"),
              (e.$inject = [s.SecurityService.NAME, i.UserService.NAME]),
              e
            );
          })();
        r.PurchasesHistoryController = n;
      },
      {
        "./../security/SecurityService": 166,
        "./../users/UserService": 218,
        "./../utils/MenuHelper": 227,
      },
    ],
    141: [
      function (e, t, r) {
        var i = e("./../users/UserService"),
          s = e("./../security/SecurityService"),
          o = e("./../utils/MenuHelper"),
          n = e("./../quizzes/QuizService"),
          a = e("./../utils/UrlService"),
          u = e("./../urls/QuizzesRouter"),
          l = e("./../IGridModel"),
          c = e("./../IHttpGridService"),
          d = (function () {
            function e(e, t, r, i, s, n, a) {
              var u = this;
              (this.$location = t),
                (this.url = r),
                (this.securityService = i),
                (this.userService = s),
                (this.quizService = n),
                (this.quizzesRouter = a),
                (this.rowShow = new Map()),
                (this.quizResults = new Map()),
                (this.hasCreatedQuizzes = !1),
                this.securityService.demandAuthentication(),
                o.MenuHelper.setCurrentMenuItem(
                  o.MenuHelper.PERSONAL_ACCOUNT_QUIZZES_MENU_KEY
                ),
                (this.viewType = 0),
                (this.quizViewType = 1),
                (this.disableGetQuizResultsButton = !1),
                this.loadUserProfile(),
                this.hasUserCreatedQuizzes(),
                (this.createdQuizzesGridModel = new l.GridModel(
                  c.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/quizzes/profileQuizzes/created")
                  )
                )),
                this.createdQuizzesGridModel.entries.forEach(function (e) {
                  u.rowShow.set(e.id, !1);
                }),
                (this.passedQuizzesGridModel = new l.GridModel(
                  c.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/quizzes/profileQuizzes/passed")
                  )
                )),
                this.passedQuizzesGridModel.entries.forEach(function (e) {
                  u.rowShow.set(e.id, !1);
                });
            }
            return (
              (e.prototype.setQuizViewType = function (e) {
                this.quizViewType = e;
              }),
              (e.prototype.showDetails = function (e) {
                this.rowShow.set(e, !this.rowShow.get(e));
              }),
              (e.prototype.showQuizResults = function (e, t, r, i) {
                var s = this;
                this.rowShow.get(e) ||
                this.disableGetQuizResultsButton ||
                1 != this.quizViewType ||
                this.quizResults.has(e)
                  ? this.rowShow.set(e, !this.rowShow.get(e))
                  : ((this.disableGetQuizResultsButton = !0),
                    this.quizService
                      .getUserQuizResults(t, r, i)
                      .then(function (t) {
                        s.quizResults.set(e, t),
                          s.rowShow.set(e, !s.rowShow.get(e)),
                          (s.disableGetQuizResultsButton = !1);
                      }));
              }),
              (e.prototype.loadQuiz = function (e) {
                this.$location.url(this.quizzesRouter.detailsUrl(e));
              }),
              (e.prototype.hasUserCreatedQuizzes = function () {
                var e = this;
                this.quizService.hasUserCreatedQuizzes().then(function (t) {
                  e.hasCreatedQuizzes = t;
                });
              }),
              (e.prototype.loadUserProfile = function () {
                var e = this;
                this.userService.getCurrentUserProfile().then(function (t) {
                  e.userProfile = t;
                });
              }),
              (e.NAME = "personal.QuizzesController"),
              (e.$inject = [
                "$http",
                "$location",
                a.UrlService.NAME,
                s.SecurityService.NAME,
                i.UserService.NAME,
                n.QuizService.NAME,
                u.QuizzesRouter.NAME,
              ]),
              e
            );
          })();
        r.QuizzesController = d;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../quizzes/QuizService": 149,
        "./../security/SecurityService": 166,
        "./../urls/QuizzesRouter": 207,
        "./../users/UserService": 218,
        "./../utils/MenuHelper": 227,
        "./../utils/UrlService": 236,
      },
    ],
    142: [
      function (e, t, r) {
        var i = e("./../users/UserService"),
          s = e("./../users/models/IUser"),
          o = e("./../security/SecurityService"),
          n = e("./../settings/SettingsService"),
          a = e("./../utils/MenuHelper"),
          u = e("./../INotifier"),
          l = e("../urls/MainRouter"),
          c = e("../utils/UrlService"),
          d = (function () {
            function e(e, t, r, i, s, o) {
              (this.$location = e),
                (this.securityService = t),
                (this.userService = r),
                (this.settingsService = i),
                (this.mainRouter = s),
                (this.url = o),
                (this.disableSaveButton = !1),
                this.securityService.demandAuthentication(),
                a.MenuHelper.setCurrentMenuItem(
                  a.MenuHelper.PERSONAL_ACCOUNT_SETTINGS_MENU_KEY
                ),
                (this.newUserProfile = { fullName: "", locale: null }),
                (this.userLogon = { name: "", password: "" }),
                this.loadUserProfile(),
                this.loadUserLogon();
            }
            return (
              (e.prototype.saveProfileSettings = function () {
                var e = this;
                (this.disableSaveButton = !0),
                  (this.confirmPassword = null),
                  (this.newUserProfile.fullName =
                    this.newUserProfile.firstName +
                    " " +
                    this.newUserProfile.lastName);
                var t = this.userService.updateCurrentUserProfile(
                  this.newUserProfile,
                  this.userLogon.password
                );
                t.then(function (t) {
                  (e.disableSaveButton = !1),
                    u.notifier.success("Settings are successfully saved"),
                    e.$location.url(e.mainRouter.mainUrl());
                })["catch"](function (t) {
                  (e.disableSaveButton = !1),
                    "error.email.not.unique" == t.data.error
                      ? u.notifier.error(
                          "This email has already been registered in the system"
                        )
                      : "error.try.update.another.user" == t.data.error &&
                        u.notifier.error(
                          "You can change only your own profile settings"
                        );
                });
              }),
              (e.prototype.cancelProfileSettings = function () {
                this.loadUserProfile(), this.loadUserLogon();
              }),
              (e.prototype.loadUserProfile = function () {
                var e = this;
                (this.confirmPassword = ""),
                  this.userService.getCurrentUserProfile().then(function (t) {
                    (t.firstName = t.fullName.split(" ")[0]),
                      (t.lastName =
                        t.fullName.split(" ").length > 1
                          ? t.fullName.split(" ")[1]
                          : ""),
                      (e.userProfile = t),
                      angular.copy(t, e.newUserProfile),
                      (e.isEverythingDisabled =
                        t.id == s.PredefinedUsersEnum.GUEST),
                      e.loadAvailableLocales();
                  });
              }),
              (e.prototype.loadUserLogon = function () {
                var e = this;
                this.userService.getCurrentUserLocalLogon().then(function (t) {
                  t && angular.copy(t, e.userLogon);
                });
              }),
              (e.prototype.loadAvailableLocales = function () {
                var e = this;
                this.settingsService.getAvailableLocales().then(function (t) {
                  e.availableLocales = t;
                });
              }),
              (e.NAME = "personal.SettingsController"),
              (e.$inject = [
                "$location",
                o.SecurityService.NAME,
                i.UserService.NAME,
                n.SettingsService.NAME,
                l.MainRouter.NAME,
                c.UrlService.NAME,
              ]),
              e
            );
          })();
        r.SettingsController = d;
      },
      {
        "../urls/MainRouter": 203,
        "../utils/UrlService": 236,
        "./../INotifier": 4,
        "./../security/SecurityService": 166,
        "./../settings/SettingsService": 171,
        "./../users/UserService": 218,
        "./../users/models/IUser": 223,
        "./../utils/MenuHelper": 227,
      },
    ],
    143: [
      function (e, t, r) {
        var i = e("./PersonalService"),
          s = e("./../users/UserService"),
          o = e("./../security/SecurityService"),
          n = e("./../utils/MenuHelper"),
          a = e("./../reference/ReferenceService"),
          u = e("./../INotifier"),
          l = (function () {
            function e(e, t, r, i) {
              (this.securityService = e),
                (this.userService = t),
                (this.personalService = r),
                (this.referenceApi = i),
                (this.users = []),
                (this.disableSaveButton = !1),
                this.securityService.demandAuthentication(),
                n.MenuHelper.setCurrentMenuItem(
                  n.MenuHelper.PERSONAL_ACCOUNT_SUBSCRIPTIONS_MENU_KEY
                ),
                (this.subscriptions = {
                  authorsIds: [],
                  subjectsIds: [],
                  allNewsSubscription: !1,
                  studentsNewsSubscription: !1,
                  commentsSubscription: !1,
                }),
                this.loadUserProfile(),
                this.loadSubscriptions(),
                this.loadNotificationsFrequency();
            }
            return (
              (e.prototype.changeSubscriptionsSettings = function () {
                var e = this;
                this.personalService
                  .changeSubscriptions(this.subscriptions)
                  .then(function (t) {
                    e.userService
                      .changeUserNotificationFrequency(
                        e.userProfile.notificationFrequencyId
                      )
                      .then(function (e) {
                        u.notifier.success(
                          "Subscriptions are successfully saved"
                        );
                      });
                  });
              }),
              (e.prototype.loadUserProfile = function () {
                var e = this;
                this.userService.getCurrentUserProfile().then(function (t) {
                  e.userProfile = t;
                });
              }),
              (e.prototype.loadSubscriptions = function () {
                var e = this;
                this.personalService.loadSubscriptions().then(function (t) {
                  angular.copy(t, e.subscriptions), e.loadUsers();
                });
              }),
              (e.prototype.cancelSubscriptionsSettings = function () {
                this.loadSubscriptions(), this.loadUserProfile();
              }),
              (e.prototype.loadNotificationsFrequency = function () {
                var e = this;
                this.referenceApi
                  .getActiveReferenceEntitiesForSelectorWithoutParams(
                    "calendarPeriods",
                    []
                  )
                  .then(function (t) {
                    e.notificationsFrequency = t;
                  });
              }),
              (e.prototype.loadUsers = function () {
                var e = this;
                this.userService
                  .getUsersWithoutExcludedUsersForSelector()
                  .then(function (t) {
                    angular.copy(t, e.users);
                  });
              }),
              (e.NAME = "personal.SubscriptionsController"),
              (e.$inject = [
                o.SecurityService.NAME,
                s.UserService.NAME,
                i.PersonalService.NAME,
                a.ReferenceService.NAME,
              ]),
              e
            );
          })();
        r.SubscriptionsController = l;
      },
      {
        "./../INotifier": 4,
        "./../reference/ReferenceService": 156,
        "./../security/SecurityService": 166,
        "./../users/UserService": 218,
        "./../utils/MenuHelper": 227,
        "./PersonalService": 136,
      },
    ],
    144: [
      function (e, t, r) {
        var i = e("./PersonalService"),
          s = e("./../users/UserService"),
          o = e("./../security/SecurityService"),
          n = e("./../utils/MenuHelper"),
          a = e("./../INotifier"),
          u = (function () {
            function e(e, t, r) {
              (this.securityService = e),
                (this.userService = t),
                (this.personalService = r),
                this.securityService.demandAuthentication(),
                n.MenuHelper.setCurrentMenuItem(
                  n.MenuHelper.PERSONAL_ACCOUNT_SUPPORT_MENU_KEY
                ),
                this.loadUserProfile();
            }
            return (
              (e.prototype.sendMessageToSupport = function () {
                var e = this;
                this.personalService
                  .sendMessageToSupport(this.messageToSupport)
                  .then(function (t) {
                    a.notifier.success(
                      "Your message has been sent to the help desk, you will hear from them soon"
                    ),
                      (e.messageToSupport = "");
                  });
              }),
              (e.prototype.loadUserProfile = function () {
                var e = this;
                this.userService.getCurrentUserProfile().then(function (t) {
                  e.userProfile = t;
                });
              }),
              (e.NAME = "personal.SupportController"),
              (e.$inject = [
                o.SecurityService.NAME,
                s.UserService.NAME,
                i.PersonalService.NAME,
              ]),
              e
            );
          })();
        r.SupportController = u;
      },
      {
        "./../INotifier": 4,
        "./../security/SecurityService": 166,
        "./../users/UserService": 218,
        "./../utils/MenuHelper": 227,
        "./PersonalService": 136,
      },
    ],
    145: [
      function (e, t, r) {
        var i = e("./../users/UserService"),
          s = e("./../security/SecurityService"),
          o = e("./../utils/MenuHelper"),
          n = e("./../utils/UrlService"),
          a = e("./../utils/ObjectTypeUtils"),
          u = e("./../urls/MaterialsRouter"),
          l = e("./../IGridModel"),
          c = e("./../IHttpGridService"),
          d = e("./../ReferencedObjectType"),
          h = (function () {
            function e(e, t, r, i, s, n) {
              var a = this;
              (this.$location = t),
                (this.url = r),
                (this.securityService = i),
                (this.userService = s),
                (this.materialsRouter = n),
                (this.rowShow = new Map()),
                this.securityService
                  .demandAuthentication()
                  .demandSystemPermissions(function (e) {
                    return e.addMaterial;
                  }),
                o.MenuHelper.setCurrentMenuItem(
                  o.MenuHelper.PERSONAL_ACCOUNT_UPLOADS_MENU_KEY
                ),
                (this.viewType = 0),
                this.loadUserProfile(),
                (this.uploadsGridModel = new l.GridModel(
                  c.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/materials/uploads")
                  )
                )),
                this.uploadsGridModel.entries.forEach(function (e) {
                  a.rowShow.set(e.id, !1);
                });
            }
            return (
              (e.prototype.showDetails = function (e) {
                this.rowShow.set(e, !this.rowShow.get(e));
              }),
              (e.prototype.watch = function (e) {
                this.$location.url(this.materialsRouter.watchUrl(e));
              }),
              (e.prototype.getGlyphiconClass = function (e, t) {
                switch (e) {
                  case d.ReferencedObjectType[d.ReferencedObjectType.MATERIAL]:
                    return a.ObjectTypeUtils.getMaterialGlyphiconClass(t);
                  case d.ReferencedObjectType[d.ReferencedObjectType.NEWS]:
                    return a.ObjectTypeUtils.getNewsGlyphiconClass();
                }
              }),
              (e.prototype.getTypeTitle = function (e, t) {
                switch (e) {
                  case d.ReferencedObjectType[d.ReferencedObjectType.MATERIAL]:
                    return a.ObjectTypeUtils.getMaterialTypeTitle(t);
                  default:
                    return a.ObjectTypeUtils.getReferenceObjectTypeTitle(e);
                }
              }),
              (e.prototype.loadUserProfile = function () {
                var e = this;
                this.userService.getCurrentUserProfile().then(function (t) {
                  e.userProfile = t;
                });
              }),
              (e.NAME = "personal.UploadsController"),
              (e.$inject = [
                "$http",
                "$location",
                n.UrlService.NAME,
                s.SecurityService.NAME,
                i.UserService.NAME,
                u.MaterialsRouter.NAME,
              ]),
              e
            );
          })();
        r.UploadsController = h;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../ReferencedObjectType": 6,
        "./../security/SecurityService": 166,
        "./../urls/MaterialsRouter": 204,
        "./../users/UserService": 218,
        "./../utils/MenuHelper": 227,
        "./../utils/ObjectTypeUtils": 230,
        "./../utils/UrlService": 236,
      },
    ],
    146: [
      function (e, t, r) {
        var i = e("./../urls/QuizzesRouter"),
          s = e("./QuizService"),
          o = e("./../authcore/AuthManager"),
          n = e("./../authcore/AuthRedirect"),
          a = e("./../utils/MenuHelper"),
          u = e("./../utils/PageHeaderHelper"),
          l = e("./../INotifier"),
          c = (function () {
            function e(e, t, r, s, o, n) {
              (this.$location = e),
                (this.$routeParams = t),
                (this.authManager = r),
                (this.authRedirect = s),
                (this.quizService = o),
                (this.quizzesRouter = n),
                (this.quiz = {}),
                (this.quizResults = []),
                (this.quizId = t[i.QuizzesRouter.QUIZ_ID_PARAM]),
                (this.isAuthenticated = this.authManager.isAuthenticated()),
                a.MenuHelper.setCurrentMenuItem(
                  a.MenuHelper.EDUCATION_QUIZZES_MENU_KEY
                ),
                this.loadQuiz();
            }
            return (
              (e.prototype.loadQuiz = function () {
                var e = this;
                this.quizService.get(this.quizId).then(function (t) {
                  angular.copy(t, e.quiz),
                    u.PageHeader.set().header(t.title).update(),
                    e.loadUserQuizResult();
                });
              }),
              (e.prototype.loadUserQuizResult = function () {
                var e = this;
                this.quizService
                  .getUserQuizResults(this.quizId, "QUIZ")
                  .then(function (t) {
                    angular.copy(t, e.quizResults);
                  });
              }),
              (e.prototype.startQuiz = function () {
                var e = this;
                this.isAuthenticated
                  ? 0 == this.quizResults.length
                    ? this.quizService
                        .startQuizByUser(this.quizId, "QUIZ")
                        .then(function (t) {
                          e.$location.url(e.quizzesRouter.passingUrl(e.quizId));
                        })
                    : l.notifier.error(
                        "You have reached the limit of retries for this quiz"
                      )
                  : this.authRedirect.redirectToLogOn();
              }),
              (e.NAME = "quizzes.QuizController"),
              (e.$inject = [
                "$location",
                "$routeParams",
                o.AuthManager.NAME,
                n.AuthRedirect.NAME,
                s.QuizService.NAME,
                i.QuizzesRouter.NAME,
              ]),
              e
            );
          })();
        r.QuizController = c;
      },
      {
        "./../INotifier": 4,
        "./../authcore/AuthManager": 18,
        "./../authcore/AuthRedirect": 19,
        "./../urls/QuizzesRouter": 207,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./QuizService": 149,
      },
    ],
    147: [
      function (e, t, r) {
        var i = e("./../urls/QuizzesRouter"),
          s = e("./QuizService"),
          o = e("./../security/permissions/SecuredObjectType"),
          n = e("./../utils/MenuHelper"),
          a = e("./../utils/PageHeaderHelper"),
          u = e("./../utils/UrlService"),
          l = e("./../security/SecurityService"),
          c = e("./../security/PermissionsService"),
          d = e("./../auth/AuthService"),
          h = e("./../INotifier"),
          p = e("./../users/UserService"),
          f = (function () {
            function e(e, t, r, s, u, l, c, d, h, p, f, m) {
              var S = this;
              (this.$http = e),
                (this.$scope = t),
                (this.$location = r),
                (this.$routeParams = s),
                (this.$uploader = u),
                (this.url = l),
                (this.securityService = c),
                (this.permissionsService = d),
                (this.authService = h),
                (this.quizService = p),
                (this.userService = f),
                (this.quizzesRouter = m),
                (this.quizQuestions = []),
                (this.currentQuestion = {}),
                (this.currentAnswers = []),
                (this.isEditQuestion = !1),
                (this.disabledSaveButton = !1),
                (this.owners = []),
                (this.permissionsWithUsersAndGroups = []),
                (this.quizId = s[i.QuizzesRouter.QUIZ_ID_PARAM]),
                n.MenuHelper.setCurrentMenuItem(
                  n.MenuHelper.EDUCATION_QUIZZES_MENU_KEY
                );
              var v = String(this.quizId),
                y = null != this.quizId;
              this.securityService
                .demandAuthentication()
                .demandSystemPermissionsIf(!y, function (e) {
                  return e.addQuizzes;
                })
                .demandQuizPermissionsIf(y, v, function (e) {
                  return e.edit;
                }),
                (this.quiz = {
                  questions: [],
                  correctAnswersType: "PERCENTAGE",
                }),
                (this.currentQuestion = {
                  text: "",
                  isMultiple: !1,
                  answers: [],
                }),
                this.userService
                  .getUsersWithoutExcludedUsersForSelector()
                  .then(function (e) {
                    S.owners = angular.copy(e);
                  }),
                this.authService.getCurrentUser().then(function (e) {
                  (S.quiz.ownerId = e.id), (S.quiz.ownerName = e.fullName);
                }),
                y
                  ? (a.PageHeader.set().header("Edit a quiz").update(),
                    this.loadQuiz(),
                    (this.disabledSaveButton = !1),
                    this.loadPermissionsWithUsersAndGroups(
                      o.SecuredObjectType.QUIZ,
                      v
                    ))
                  : (a.PageHeader.set().header("New quiz").update(),
                    this.loadPermissionsWithUsersAndGroups(
                      o.SecuredObjectType.QUIZ
                    )),
                this.$scope.$on("$locationChangeStart", function (e) {
                  S.$scope.quiz_form.$dirty &&
                    0 == S.disabledSaveButton &&
                    (confirm(
                      "Unsaved data will be lost if you leave this page"
                    ) ||
                      e.preventDefault());
                });
            }
            return (
              (e.prototype.loadQuiz = function () {
                var t = this,
                  r = this.quizService.get(this.quizId);
                r.then(function (r) {
                  angular.copy(r, t.quiz),
                    null != r.duration && (t.quiz.duration = r.duration / 60),
                    angular.copy(r.questions, t.quizQuestions),
                    r.correctAnswersType == e.PERCENTAGE_TYPE
                      ? (t.percentageNumber = r.correctAnswersNumber)
                      : (t.pointsNumber = r.correctAnswersNumber);
                });
              }),
              (e.prototype.loadPermissionsWithUsersAndGroups = function (e, t) {
                var r = this;
                this.permissionsService
                  .getAllObjectPermissionsWithUsersAndGroups(e, t)
                  .then(function (e) {
                    r.permissionsWithUsersAndGroups = e;
                  });
              }),
              (e.prototype.save = function () {
                var t = this;
                this.quiz.hasProgress &&
                  h.notifier.warning(
                    "Your changes were saved, but some users have already completed this quiz. Results for completed quizzes were not modified and can be inconsistent with new version of quiz."
                  ),
                  (this.disabledSaveButton = !0),
                  this.writeIndexes(this.quizQuestions),
                  angular.copy(this.quizQuestions, this.quiz.questions),
                  (this.quiz.correctAnswersNumber =
                    this.quiz.correctAnswersType == e.PERCENTAGE_TYPE
                      ? this.percentageNumber
                      : this.pointsNumber);
                var r = this.quizId
                  ? this.quizService.update(
                      this.quiz,
                      this.permissionsWithUsersAndGroups
                    )
                  : this.quizService.create(
                      this.quiz,
                      this.permissionsWithUsersAndGroups
                    );
                r.then(function (e) {
                  null != t.preview
                    ? t
                        .upload(t.preview, e.id, "preview")
                        .then(function (r) {
                          t.processSuccessCallback(e.id);
                        })
                        ["catch"](function (r) {
                          "error.storage.not.available" == r.data.error &&
                            h.notifier.error(
                              "No available storage. Thumbnail has not been saved"
                            ),
                            t.processSuccessCallback(e.id);
                        })
                    : t.processSuccessCallback(e.id);
                })["catch"](function (e) {
                  h.notifier.error(e);
                });
              }),
              (e.prototype.processSuccessCallback = function (e) {
                h.notifier.success("The quiz is successfully saved"),
                  this.$location.url(this.quizzesRouter.detailsUrl(e));
              }),
              (e.prototype.upload = function (e, t, r) {
                var i = this.url
                  .base("/api/quizzes/upload?quizId=:quizId&fileType=:fileType")
                  .param(":quizId", t)
                  .param(":fileType", r);
                return this.$uploader.upload({
                  method: "POST",
                  url: angular.copy(i).service(),
                  file: e,
                });
              }),
              (e.prototype.redirectOrClearFields = function () {
                this.quizId
                  ? this.$location.url(
                      this.quizzesRouter.detailsUrl(this.quizId)
                    )
                  : this.cleanFields();
              }),
              (e.prototype.cleanFields = function () {
                (this.quiz = {}),
                  this.loadPermissionsWithUsersAndGroups(
                    o.SecuredObjectType.QUIZ
                  );
              }),
              (e.prototype.clearCurrentQuestionFields = function () {
                (this.currentQuestion = {
                  text: "",
                  isMultiple: !1,
                  answers: [],
                }),
                  (this.currentAnswers = []),
                  (this.isEditQuestion = !1),
                  (this.editQuestionIndex = null);
              }),
              (e.prototype.currentQuestionValid = function () {
                return (
                  "" != this.currentQuestion.text &&
                  this.currentAnswers.every(function (e) {
                    return "" != e.text;
                  }) &&
                  this.currentAnswers.filter(function (e) {
                    return e.isCorrect;
                  }).length > 0
                );
              }),
              (e.prototype.checkCurrentCorrectAnswer = function (e) {
                this.currentAnswers.forEach(function (e) {
                  e.isCorrect = !1;
                }),
                  (e.isCorrect = !0);
              }),
              (e.prototype.toggleQuestionMultiple = function () {
                !this.currentQuestion.isMultiple &&
                  this.currentAnswers.filter(function (e) {
                    return e.isCorrect;
                  }).length > 1 &&
                  this.currentAnswers.forEach(function (e) {
                    e.isCorrect = !1;
                  });
              }),
              (e.prototype.editQuestion = function (e, t) {
                angular.copy(t, this.currentQuestion),
                  angular.copy(t.answers, this.currentAnswers),
                  (this.currentQuestion.answers = []),
                  (this.isEditQuestion = !0),
                  (this.editQuestionIndex = e);
              }),
              (e.prototype.addAnswerToQuestion = function () {
                var e = { text: "", isCorrect: !1 };
                this.currentAnswers.push(e);
              }),
              (e.prototype.removeAnswerFromQuestion = function (e) {
                this.currentAnswers.splice(e, 1);
              }),
              (e.prototype.addQuestionToQuiz = function () {
                angular.copy(this.currentAnswers, this.currentQuestion.answers),
                  null == this.currentQuestion.points &&
                    (this.currentQuestion.points = 1),
                  this.isEditQuestion
                    ? this.quizQuestions.splice(
                        this.editQuestionIndex,
                        1,
                        this.currentQuestion
                      )
                    : this.quizQuestions.push(this.currentQuestion),
                  this.clearCurrentQuestionFields();
              }),
              (e.prototype.removeQuestionFromQuiz = function (e) {
                this.quizQuestions.splice(e, 1);
              }),
              (e.prototype.writeIndexes = function (e) {
                e.forEach(function (t) {
                  (t.indexNumber = e.indexOf(t)),
                    t.answers.forEach(function (e) {
                      return (e.indexNumber = t.answers.indexOf(e));
                    });
                });
              }),
              (e.prototype.getQuizPointsSum = function () {
                var e = 0;
                return (
                  this.quizQuestions.forEach(function (t) {
                    e += t.points;
                  }),
                  e
                );
              }),
              (e.prototype.moveUp = function (e, t) {
                var r = {},
                  i = t.splice(e, 1, r)[0];
                t.splice(e - 1, 0, i), t.splice(t.indexOf(r), 1);
              }),
              (e.prototype.moveDown = function (e, t) {
                var r = {},
                  i = t.splice(e + 1, 1, r)[0];
                t.splice(e, 0, i), t.splice(t.indexOf(r), 1);
              }),
              (e.prototype.isMoveUp = function (e) {
                return e > 0;
              }),
              (e.prototype.isMoveDown = function (e, t) {
                return e < t.length - 1;
              }),
              (e.NAME = "quizzes.QuizEditController"),
              (e.PERCENTAGE_TYPE = "PERCENTAGE"),
              (e.$inject = [
                "$http",
                "$scope",
                "$location",
                "$routeParams",
                "Upload",
                u.UrlService.NAME,
                l.SecurityService.NAME,
                c.PermissionsService.NAME,
                d.AuthService.NAME,
                s.QuizService.NAME,
                p.UserService.NAME,
                i.QuizzesRouter.NAME,
              ]),
              e
            );
          })();
        r.QuizEditController = f;
      },
      {
        "./../INotifier": 4,
        "./../auth/AuthService": 10,
        "./../security/PermissionsService": 164,
        "./../security/SecurityService": 166,
        "./../security/permissions/SecuredObjectType": 168,
        "./../urls/QuizzesRouter": 207,
        "./../users/UserService": 218,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./QuizService": 149,
      },
    ],
    148: [
      function (e, t, r) {
        var i = e("./../urls/QuizzesRouter"),
          s = e("./QuizService"),
          o = e("./../utils/MenuHelper"),
          n = e("./../utils/PageHeaderHelper"),
          a = (function () {
            function e(e, t, r, s, n) {
              var a = this;
              (this.$scope = e),
                (this.$location = t),
                (this.$routeParams = r),
                (this.quizService = s),
                (this.quizzesRouter = n),
                (this.quiz = {}),
                (this.quizResult = {}),
                (this.disableCompleteButton = !1),
                (this.quizId = r[i.QuizzesRouter.QUIZ_ID_PARAM]),
                o.MenuHelper.setCurrentMenuItem(
                  o.MenuHelper.EDUCATION_QUIZZES_MENU_KEY
                ),
                this.loadQuiz(),
                this.$scope.$on("$locationChangeStart", function (e) {
                  !a.disableCompleteButton &&
                    a.quizResult &&
                    a.quizResult.id &&
                    e.preventDefault();
                });
            }
            return (
              (e.prototype.loadUserQuizResult = function () {
                var e = this;
                this.quizService
                  .getUserQuizCurrentResult(
                    this.quizId,
                    this.quizResult.attempt
                  )
                  .then(function (t) {
                    (e.quizResult = angular.copy(t)),
                      e.quizResult && e.quizResult.id
                        ? ((e.duration =
                            null != e.quiz.duration
                              ? Math.round(
                                  e.quiz.duration -
                                    (new Date().getTime() - t.startTime) / 1e3
                                )
                              : null),
                          e.duration &&
                            (e.duration <= 0
                              ? e.completeQuiz()
                              : (e.$scope.$broadcast(
                                  "timer-set-countdown",
                                  e.duration
                                ),
                                e.$scope.$broadcast("timer-start"))))
                        : e.$location.url(e.quizzesRouter.detailsUrl(e.quizId));
                  });
              }),
              (e.prototype.loadQuiz = function () {
                var e = this;
                this.quizService.get(this.quizId).then(function (t) {
                  angular.copy(t, e.quiz),
                    n.PageHeader.set().header(t.title).update(),
                    e.loadUserQuizResult();
                });
              }),
              (e.prototype.selectCurrentAnswer = function (e, t) {
                e.answers.forEach(function (e) {
                  e.selected = !1;
                }),
                  (t.selected = !0);
              }),
              (e.prototype.completeQuiz = function () {
                var e = this;
                (this.disableCompleteButton = !0),
                  (this.quizResult.answers = []),
                  this.quiz.questions.forEach(function (t) {
                    var r = {
                      quizResultId: e.quizResult.id,
                      questionId: t.id,
                      answerIds: t.answers
                        .filter(function (e) {
                          return e.selected;
                        })
                        .map(function (e) {
                          return e.id;
                        }),
                    };
                    e.quizResult.answers.push(r);
                  }),
                  this.quizService
                    .completeQuizByUser(this.quizResult)
                    .then(function (t) {
                      e.$location.url(e.quizzesRouter.detailsUrl(e.quizId));
                    });
              }),
              (e.NAME = "quizzes.QuizPassingController"),
              (e.$inject = [
                "$scope",
                "$location",
                "$routeParams",
                s.QuizService.NAME,
                i.QuizzesRouter.NAME,
              ]),
              e
            );
          })();
        r.QuizPassingController = a;
      },
      {
        "./../urls/QuizzesRouter": 207,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./QuizService": 149,
      },
    ],
    149: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = (function () {
            function e(e, t, r) {
              (this.$http = e), (this.$sce = t), (this.url = r);
            }
            return (
              (e.prototype.get = function (e) {
                return this.$http
                  .get(
                    this.url.base("/api/quizzes/:id?").param(":id", e).service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.create = function (e, t) {
                return (
                  (e.permissionsWithUsersAndGroups = t),
                  this.$http
                    .post(this.url.service("/api/quizzes"), e)
                    .then(function (e) {
                      return e.data;
                    })
                );
              }),
              (e.prototype.update = function (e, t) {
                return (
                  (e.permissionsWithUsersAndGroups = t),
                  this.$http
                    .put(this.url.service("/api/quizzes"), e)
                    .then(function (e) {
                      return e.data;
                    })
                );
              }),
              (e.prototype.startQuizByUser = function (e, t, r, i) {
                return this.$http
                  .post(this.url.service("/api/quizzes/results"), {
                    quizId: e,
                    sourceType: t,
                    sectionId: r,
                    courseProgressId: i,
                  })
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.completeQuizByUser = function (e) {
                return this.$http
                  .put(this.url.service("/api/quizzes/results"), e)
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getUserQuizResults = function (e, t, r, i) {
                var s = "/api/quizzes/results/:quizId";
                null != t && (s += "?sourceType=:sourceType"),
                  null != r && (s += "&sectionId=:sectionId"),
                  i && (s += "&courseProgressId=:courseProgressId");
                var o = this.url.base(s).param(":quizId", e);
                return (
                  null != t && o.param(":sourceType", t),
                  null != r && o.param(":sectionId", r),
                  i && o.param(":courseProgressId", i),
                  this.$http.get(o.service()).then(function (e) {
                    return e.data;
                  })
                );
              }),
              (e.prototype.getUserQuizCurrentResult = function (e, t) {
                return this.$http
                  .get(
                    this.url
                      .base(
                        "/api/quizzes/results/current/:quizId?attempt=:attempt"
                      )
                      .param(":quizId", e)
                      .param(":attempt", t || "")
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.hasUserCreatedQuizzes = function () {
                return this.$http
                  .get(
                    this.url.service("/api/quizzes/profileQuizzes/hasCreated")
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.NAME = "quizzes.QuizService"),
              (e.$inject = ["$http", "$sce", i.UrlService.NAME]),
              e
            );
          })();
        r.QuizService = s;
      },
      { "./../utils/UrlService": 236 },
    ],
    150: [
      function (e, t, r) {
        var i = e("./../urls/QuizzesRouter"),
          s = e("./../utils/MenuHelper"),
          o = e("./../utils/PageHeaderHelper"),
          n = e("./../security/PermissionsService"),
          a = e("./../IGridModel"),
          u = e("./../utils/UrlService"),
          l = e("./../IHttpGridService"),
          c = e("./../users/UserService"),
          d = (function () {
            function e(e, t, r, i, n, u) {
              var c = this;
              (this.$location = t),
                (this.quizzesRouter = r),
                (this.permissionsApi = i),
                (this.url = n),
                (this.userService = u),
                (this.rowShow = new Map()),
                (this.owners = []),
                s.MenuHelper.setCurrentMenuItem(
                  s.MenuHelper.EDUCATION_QUIZZES_MENU_KEY
                ),
                o.PageHeader.set().header("Quizzes").update(),
                (this.viewType = 1),
                (this.quizzesGridModel = new a.GridModel(
                  l.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/quizzes")
                  )
                )),
                (this.quizzesGridModel.pageSize = 8),
                this.userService
                  .getUsersWithoutExcludedUsersForSelector()
                  .then(function (e) {
                    c.owners = angular.copy(e);
                  }),
                this.permissionsApi.getSystemPermissions().then(function (e) {
                  c.systemPermissions = e;
                });
            }
            return (
              (e.prototype.showDetails = function (e) {
                this.rowShow.set(e, !this.rowShow.get(e));
              }),
              (e.prototype.searchQuiz = function () {
                this.quizzesGridModel.loadCurrentPage();
              }),
              (e.prototype.loadQuizDetails = function (e) {
                this.$location.url(this.quizzesRouter.detailsUrl(e));
              }),
              (e.NAME = "quizzes.QuizzesController"),
              (e.$inject = [
                "$http",
                "$location",
                i.QuizzesRouter.NAME,
                n.PermissionsService.NAME,
                u.UrlService.NAME,
                c.UserService.NAME,
              ]),
              e
            );
          })();
        r.QuizzesController = d;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../security/PermissionsService": 164,
        "./../urls/QuizzesRouter": 207,
        "./../users/UserService": 218,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
      },
    ],
    151: [
      function (e, t, r) {
        var i = e("./QuizService"),
          s = e("./QuizzesController"),
          o = e("./QuizEditController"),
          n = e("./QuizController"),
          a = e("./QuizPassingController"),
          u = e("./../auth/AuthModule"),
          l = e("./../authcore/AuthCoreModule"),
          c = e("./../security/SecurityModule"),
          d = e("./../users/UsersModule"),
          h = e("./../urls/UrlsModule");
        r.QuizzesModule = angular
          .module("quizzes", [
            u.AuthModule.name,
            l.AuthCoreModule.name,
            c.SecurityModule.name,
            d.UsersModule.name,
            h.UrlsModule.name,
          ])
          .service(i.QuizService.NAME, i.QuizService)
          .controller(s.QuizzesController.NAME, s.QuizzesController)
          .controller(o.QuizEditController.NAME, o.QuizEditController)
          .controller(n.QuizController.NAME, n.QuizController)
          .controller(a.QuizPassingController.NAME, a.QuizPassingController);
      },
      {
        "./../auth/AuthModule": 9,
        "./../authcore/AuthCoreModule": 17,
        "./../security/SecurityModule": 165,
        "./../urls/UrlsModule": 212,
        "./../users/UsersModule": 221,
        "./QuizController": 146,
        "./QuizEditController": 147,
        "./QuizPassingController": 148,
        "./QuizService": 149,
        "./QuizzesController": 150,
      },
    ],
    152: [
      function (e, t, r) {
        var i = e("./ReferenceUtils"),
          s = e("./ReferenceService"),
          o = e("./../IGridModel"),
          n = e("./../IHttpGridService"),
          a = e("./../utils/UrlService"),
          u = e("./../utils/MenuHelper"),
          l = e("./../utils/PageHeaderHelper"),
          c = e("./../security/PermissionsService"),
          d = e("./../security/SecurityService"),
          h = e("./../urls/ReferenceRouter"),
          p = e("./../utils/StringBuilder"),
          f = (function () {
            function e(e, t, r, i, s, a, c, d, p) {
              var f = this;
              (this.$http = e),
                (this.$routeParams = t),
                (this.$location = r),
                (this.url = i),
                (this.referenceRouter = s),
                (this.referenceUtils = a),
                (this.referenceApi = c),
                (this.permissionsApi = d),
                (this.securityService = p),
                this.securityService
                  .demandAuthentication()
                  .demandSystemPermissions(function (e) {
                    return e.viewReferenceData;
                  });
              var m = this.$routeParams[h.ReferenceRouter.REFERENCE_NAME_PARAM];
              u.MenuHelper.setCurrentMenuItem("administration_" + m),
                (this.referenceDefaultValues =
                  this.$location.search()[
                    h.ReferenceRouter.REFERENCE_DEFAULT_VALUES_PARAM
                  ]),
                (this.referenceFilter =
                  this.$location.search()[
                    h.ReferenceRouter.REFERENCE_FILTER_PARAM
                  ]),
                (this.referenceAssociationFilters =
                  this.$location.search()[
                    h.ReferenceRouter.REFERENCE_ASSOCIATION_FILTERS_PARAM
                  ]),
                (this.referenceEntitiesGridModel = new o.GridModel(
                  n.HttpGridHelper.createLoader(
                    this.$http,
                    this.url
                      .base("/api/reference/:name/entities")
                      .param(":name", m)
                      .service()
                  )
                )),
                (this.referenceEntitiesGridModel.filter.referenceFilter =
                  this.referenceFilter),
                (this.referenceEntitiesGridModel.filter.referenceSearchString =
                  ""),
                (this.referenceEntitiesGridModel.filter.referenceSplitParam =
                  !1),
                this.permissionsApi.getSystemPermissions().then(function (e) {
                  (f.systemPermissions = e),
                    f.referenceApi.getReferenceMetadata(m).then(function (e) {
                      (f.referenceMetadata = e),
                        l.PageHeader.set()
                          .addActionLinkIf(
                            f.systemPermissions.addReferenceData &&
                              !f.referenceMetadata.isInternal,
                            "+ New",
                            f.getReferenceEditUrl("new")
                          )
                          .update();
                    });
                });
            }
            return (
              (e.prototype.getReferenceEditUrl = function (e) {
                return this.referenceMetadata
                  ? p.StringBuilder.interpolate(
                      this.referenceRouter.editUrl(
                        this.referenceMetadata.key,
                        e
                      )
                    )
                      .add("?")
                      .addIf(
                        null != this.referenceDefaultValues,
                        h.ReferenceRouter.REFERENCE_DEFAULT_VALUES_PARAM,
                        "=",
                        this.referenceUtils.getStringInBrowserFormat(
                          this.referenceDefaultValues
                        ),
                        "&"
                      )
                      .addIf(
                        null != this.referenceFilter,
                        h.ReferenceRouter.REFERENCE_FILTER_PARAM,
                        "=",
                        this.referenceUtils.getStringInBrowserFormat(
                          this.referenceFilter
                        ),
                        "&"
                      )
                      .addIf(
                        null != this.referenceAssociationFilters,
                        h.ReferenceRouter.REFERENCE_ASSOCIATION_FILTERS_PARAM,
                        "=",
                        this.referenceUtils.getStringInBrowserFormat(
                          this.referenceAssociationFilters
                        ),
                        "&"
                      )
                      .build()
                  : null;
              }),
              (e.prototype.activateEntity = function (e, t) {
                var r = this,
                  s = this.referenceMetadata.key,
                  o = t[i.ReferenceUtils.entityIdProperty],
                  n = t[i.ReferenceUtils.entityVersionProperty];
                this.referenceApi
                  .setActiveReferenceEntity(s, o, n, !0)
                  .then(function (t) {
                    r.referenceEntitiesGridModel.entries[e] = t;
                  });
              }),
              (e.NAME = "reference.ReferenceController"),
              (e.$inject = [
                "$http",
                "$routeParams",
                "$location",
                a.UrlService.NAME,
                h.ReferenceRouter.NAME,
                i.ReferenceUtils.NAME,
                s.ReferenceService.NAME,
                c.PermissionsService.NAME,
                d.SecurityService.NAME,
              ]),
              e
            );
          })();
        r.ReferenceController = f;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../security/PermissionsService": 164,
        "./../security/SecurityService": 166,
        "./../urls/ReferenceRouter": 208,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/StringBuilder": 233,
        "./../utils/UrlService": 236,
        "./ReferenceService": 156,
        "./ReferenceUtils": 157,
      },
    ],
    153: [
      function (e, t, r) {
        var i = e("./ReferenceUtils"),
          s = e("./ReferenceService"),
          o = e("./ReferenceRedirect"),
          n = e("./validators/ReferenceIsRequiredValidator"),
          a = e("./validators/ReferenceMaxLengthValidator"),
          u = e("./validators/ReferenceRequiredAttributesGroupValidator"),
          l = e("./../utils/PageHeaderHelper"),
          c = e("./../utils/MenuHelper"),
          d = e("./../urls/ReferenceRouter"),
          h = e("./../security/PermissionsService"),
          p = e("./../security/SecurityService"),
          f = (function () {
            function e(e, t, r, i, s, o, n, a) {
              var u = this;
              (this.$routeParams = e),
                (this.$location = t),
                (this.referenceRouter = r),
                (this.referenceUtils = i),
                (this.referenceApi = s),
                (this.referenceRedirect = o),
                (this.permissionsApi = n),
                (this.securityService = a),
                (this.disableSaveButton = !1);
              var h = parseInt(
                  this.$routeParams[d.ReferenceRouter.REFERENCE_ID_PARAM],
                  10
                ),
                p = this.$routeParams[d.ReferenceRouter.REFERENCE_NAME_PARAM],
                f = !isNaN(h);
              this.securityService
                .demandAuthentication()
                .demandSystemPermissionsIf(f, function (e) {
                  return e.editReferenceData;
                })
                .demandSystemPermissionsIf(!f, function (e) {
                  return e.addReferenceData;
                }),
                c.MenuHelper.setCurrentMenuItem("administration_" + p),
                this.permissionsApi.getSystemPermissions().then(function (e) {
                  u.systemPermissions = e;
                }),
                (this.referenceDefaultValues =
                  this.$location.search()[
                    d.ReferenceRouter.REFERENCE_DEFAULT_VALUES_PARAM
                  ]),
                (this.referenceFilter =
                  this.$location.search()[
                    d.ReferenceRouter.REFERENCE_FILTER_PARAM
                  ]),
                (this.referenceAssociationFilters =
                  this.$location.search()[
                    d.ReferenceRouter.REFERENCE_ASSOCIATION_FILTERS_PARAM
                  ]),
                (this.referenceDefaultValuesMap =
                  this.getReferenceDefaultValuesMap(
                    this.referenceDefaultValues
                  )),
                (this.referenceAssociationFiltersMap =
                  this.getReferenceAssociationFiltersMap(
                    this.referenceAssociationFilters
                  )),
                (this.referenceValidationErrorsMap = new Map()),
                (this.redirectStorageUrl =
                  this.referenceRedirect.getAndRemoveStorageUrl()),
                f
                  ? this.referenceApi
                      .getReferenceEntity(p, h)
                      .then(function (e) {
                        (u.referenceEntity = e.entity),
                          (u.referenceMetadata = e.metadata),
                          u.referenceUtils.fixInputReferenceEntityAttributes(
                            u.referenceEntity,
                            u.referenceMetadata
                          ),
                          l.PageHeader.set()
                            .header(
                              u.referenceEntity[
                                u.referenceMetadata.selectorAttribute.systemName
                              ]
                            )
                            .update();
                      })
                  : this.referenceApi
                      .getEmptyReferenceEntity(p)
                      .then(function (e) {
                        (u.referenceEntity = e.entity),
                          (u.referenceMetadata = e.metadata),
                          u.referenceUtils.fixInputReferenceEntityAttributes(
                            u.referenceEntity,
                            u.referenceMetadata
                          ),
                          u.setDefaultReferenceEntityAttributesValues(),
                          l.PageHeader.set()
                            .header("New referenced data entry")
                            .update();
                      });
            }
            return (
              (e.prototype.redirectToBack = function () {
                if (this.redirectStorageUrl)
                  this.$location.url(this.redirectStorageUrl);
                else {
                  var e = this.referenceMetadata.key;
                  this.$location
                    .url(this.referenceRouter.indexUrl(e))
                    .search(
                      d.ReferenceRouter.REFERENCE_DEFAULT_VALUES_PARAM,
                      this.referenceUtils.getStringInBrowserFormat(
                        this.referenceDefaultValues
                      )
                    )
                    .search(
                      d.ReferenceRouter.REFERENCE_FILTER_PARAM,
                      this.referenceUtils.getStringInBrowserFormat(
                        this.referenceFilter
                      )
                    )
                    .search(
                      d.ReferenceRouter.REFERENCE_ASSOCIATION_FILTERS_PARAM,
                      this.referenceUtils.getStringInBrowserFormat(
                        this.referenceAssociationFilters
                      )
                    );
                }
              }),
              (e.prototype.saveEntity = function () {
                var e = this;
                this.disableSaveButton = !0;
                var t = this.referenceMetadata.key,
                  r = this.referenceEntity[i.ReferenceUtils.entityIdProperty],
                  s =
                    null != r
                      ? this.referenceApi.updateReferenceEntity(
                          t,
                          r,
                          this.referenceEntity
                        )
                      : this.referenceApi.createReferenceEntity(
                          t,
                          this.referenceEntity
                        );
                s.then(function (t) {
                  e.redirectToBack();
                })["finally"](function () {
                  e.disableSaveButton = !1;
                });
              }),
              (e.prototype.deactivateEntity = function () {
                var e = this,
                  t = this.referenceMetadata.key,
                  r = this.referenceEntity[i.ReferenceUtils.entityIdProperty],
                  s =
                    this.referenceEntity[
                      i.ReferenceUtils.entityVersionProperty
                    ];
                this.referenceApi
                  .setActiveReferenceEntity(t, r, s, !1)
                  .then(function (t) {
                    e.redirectToBack();
                  });
              }),
              (e.prototype.entityValid = function () {
                return (
                  this.referenceValidationErrorsMap.clear(),
                  new a.ReferenceMaxLengthValidator(
                    this.referenceUtils,
                    this.referenceEntity,
                    this.referenceMetadata,
                    this.referenceValidationErrorsMap
                  ).valid() &&
                    (this.referenceMetadata.requiredAttributesGroup
                      ? new u.ReferenceRequiredAttributesGroupValidator(
                          this.referenceUtils,
                          this.referenceEntity,
                          this.referenceMetadata,
                          this.referenceValidationErrorsMap
                        ).valid()
                      : new n.ReferenceIsRequiredValidator(
                          this.referenceUtils,
                          this.referenceEntity,
                          this.referenceMetadata,
                          this.referenceValidationErrorsMap
                        ).valid())
                );
              }),
              (e.prototype.getReferenceDefaultValuesMap = function (e) {
                var t = new Map();
                if (e && e.length > 0) {
                  var r = e.split(";");
                  r.forEach(function (e) {
                    var r = e.split("="),
                      i = r[0],
                      s = r[1];
                    t.set(i, s);
                  });
                }
                return t;
              }),
              (e.prototype.getReferenceAssociationFiltersMap = function (e) {
                var t = new Map();
                if (e && e.length > 0) {
                  var r = e.split("|");
                  r.forEach(function (e) {
                    var r = e.split("=>"),
                      i = r[0],
                      s = r[1];
                    t.set(i, s);
                  });
                }
                return t;
              }),
              (e.prototype.setDefaultReferenceEntityAttributesValues =
                function () {
                  var e = this;
                  this.referenceMetadata.defaultAttributes.forEach(function (
                    t
                  ) {
                    var r = t.type,
                      i = t.systemName,
                      s = e.referenceDefaultValuesMap.get(i);
                    e.referenceUtils.isTextAttributeType(r)
                      ? (e.referenceEntity[i] =
                          e.referenceUtils.convertStringDefaultValue(s))
                      : e.referenceUtils.isBooleanAttributeType(r)
                      ? (e.referenceEntity[i] =
                          e.referenceUtils.convertBooleanDefaultValue(s))
                      : e.referenceUtils.isDateAttributeType(r)
                      ? (e.referenceEntity[i] =
                          e.referenceUtils.convertDateDefaultValue(s))
                      : e.referenceUtils.isMoneyAttributeType(r)
                      ? (e.referenceEntity[i] =
                          e.referenceUtils.convertMoneyDefaultValue(s))
                      : e.referenceUtils.isOneAssociationAttributeType(r)
                      ? (e.referenceEntity[i] =
                          e.referenceUtils.convertOneAssociationDefaultValue(s))
                      : e.referenceUtils.isManyAssociationAttributeType(r) &&
                        (e.referenceEntity[i] =
                          e.referenceUtils.convertManyAssociationDefaultValue(
                            s
                          ));
                  });
                }),
              (e.NAME = "reference.ReferenceEditController"),
              (e.$inject = [
                "$routeParams",
                "$location",
                d.ReferenceRouter.NAME,
                i.ReferenceUtils.NAME,
                s.ReferenceService.NAME,
                o.ReferenceRedirect.NAME,
                h.PermissionsService.NAME,
                p.SecurityService.NAME,
              ]),
              e
            );
          })();
        r.ReferenceEditController = f;
      },
      {
        "./../security/PermissionsService": 164,
        "./../security/SecurityService": 166,
        "./../urls/ReferenceRouter": 208,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./ReferenceRedirect": 155,
        "./ReferenceService": 156,
        "./ReferenceUtils": 157,
        "./validators/ReferenceIsRequiredValidator": 159,
        "./validators/ReferenceMaxLengthValidator": 160,
        "./validators/ReferenceRequiredAttributesGroupValidator": 161,
      },
    ],
    154: [
      function (e, t, r) {
        var i = e("./ReferenceUtils"),
          s = e("./ReferenceService"),
          o = e("./ReferenceRedirect"),
          n = e("./ReferenceController"),
          a = e("./ReferenceEditController"),
          u = e("./../security/SecurityModule"),
          l = e("./../urls/UrlsModule"),
          c = e("./../infrastructure/InfrastructureModule");
        r.ReferenceModule = angular
          .module("reference", [
            u.SecurityModule.name,
            l.UrlsModule.name,
            c.InfrastructureModule.name,
          ])
          .service(i.ReferenceUtils.NAME, i.ReferenceUtils)
          .service(s.ReferenceService.NAME, s.ReferenceService)
          .service(o.ReferenceRedirect.NAME, o.ReferenceRedirect)
          .controller(n.ReferenceController.NAME, n.ReferenceController)
          .controller(
            a.ReferenceEditController.NAME,
            a.ReferenceEditController
          );
      },
      {
        "./../infrastructure/InfrastructureModule": 104,
        "./../security/SecurityModule": 165,
        "./../urls/UrlsModule": 212,
        "./ReferenceController": 152,
        "./ReferenceEditController": 153,
        "./ReferenceRedirect": 155,
        "./ReferenceService": 156,
        "./ReferenceUtils": 157,
      },
    ],
    155: [
      function (e, t, r) {
        var i = e("./ReferenceUtils"),
          s = e("./../infrastructure/Storage"),
          o = e("./../urls/ReferenceRouter"),
          n = (function () {
            function e(t, r, i, s) {
              (this.$location = t),
                (this.sessionStorage = r),
                (this.referenceRouter = i),
                (this.referenceUtils = s),
                this.sessionStorage.remove(e.KEY);
            }
            return (
              (e.prototype.redirectToEditReferenceItem = function (
                t,
                r,
                i,
                s,
                n
              ) {
                var a = this.$location.path();
                this.sessionStorage.contains(e.KEY) ||
                  this.sessionStorage.put(e.KEY, a),
                  this.$location
                    .url(this.referenceRouter.editUrl(t, r))
                    .search(
                      o.ReferenceRouter.REFERENCE_DEFAULT_VALUES_PARAM,
                      this.referenceUtils.getStringInBrowserFormat(i)
                    )
                    .search(
                      o.ReferenceRouter.REFERENCE_FILTER_PARAM,
                      this.referenceUtils.getStringInBrowserFormat(s)
                    )
                    .search(
                      o.ReferenceRouter.REFERENCE_ASSOCIATION_FILTERS_PARAM,
                      this.referenceUtils.getStringInBrowserFormat(n)
                    );
              }),
              (e.prototype.getAndRemoveStorageUrl = function () {
                var t = this.sessionStorage.get(e.KEY);
                return this.sessionStorage.remove(e.KEY), t;
              }),
              (e.NAME = "reference.ReferenceRedirect"),
              (e.KEY = "reference-redirect"),
              (e.$inject = [
                "$location",
                s.Storages.SESSION_NAME,
                o.ReferenceRouter.NAME,
                i.ReferenceUtils.NAME,
              ]),
              e
            );
          })();
        r.ReferenceRedirect = n;
      },
      {
        "./../infrastructure/Storage": 105,
        "./../urls/ReferenceRouter": 208,
        "./ReferenceUtils": 157,
      },
    ],
    156: [
      function (e, t, r) {
        var i = e("./models/IReferenceEntitiesParams"),
          s = e("./../utils/UrlService"),
          o = (function () {
            function e(e, t, r) {
              (this.$http = e), (this.$q = t), (this.url = r);
            }
            return (
              (e.prototype.getActiveReferenceEntities = function (e, t) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/reference/:name/entities/active")
                      .param(":name", e)
                      .service(),
                    this.createReferenceFilterParams(t)
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getActiveReferenceEntitiesForSelector = function (
                e,
                t,
                r
              ) {
                var i = this.createReferenceFilterParams(t);
                return (
                  r && r.length > 0 && (i.params.includedIds = r),
                  this.$http
                    .get(
                      this.url
                        .base("/api/reference/:name/entities/forSelector")
                        .param(":name", e)
                        .service(),
                      i
                    )
                    .then(function (e) {
                      return e.data;
                    })
                );
              }),
              (e.prototype.getActiveReferenceEntitiesForSelectorWithoutParams =
                function (e, t) {
                  var r = this.createReferenceFilterParams(
                    new i.ReferenceEntitiesParams(
                      void 0,
                      void 0,
                      void 0,
                      void 0
                    )
                  );
                  return (
                    t && t.length > 0 && (r.params.includedIds = t),
                    this.$http
                      .get(
                        this.url
                          .base("/api/reference/:name/entities/forSelector")
                          .param(":name", e)
                          .service(),
                        r
                      )
                      .then(function (e) {
                        return e.data;
                      })
                  );
                }),
              (e.prototype.getHierarchicalReferenceEntities = function (e, t) {
                return this.$http
                  .get(
                    this.url
                      .base(
                        "/api/reference/:name/entities/hierarchical/:hierarchy"
                      )
                      .param(":name", e)
                      .param(":hierarchy", t)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getReferenceEntity = function (e, t) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/reference/:name/entity/:id")
                      .param(":name", e)
                      .param(":id", t)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getEmptyReferenceEntity = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/reference/:name/entity/empty")
                      .param(":name", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getEmptyReferenceEntityNoMetadata = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/reference/:name/entity/empty/no/metadata")
                      .param(":name", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getReferenceMetadata = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/reference/:name/metadata")
                      .param(":name", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getAssociationReferencesMetadata = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/reference/:name/metadata/association")
                      .param(":name", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.createReferenceEntity = function (e, t) {
                return this.$http
                  .post(
                    this.url
                      .base("/api/reference/:name/entity/create")
                      .param(":name", e)
                      .service(),
                    t
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.updateReferenceEntity = function (e, t, r) {
                return this.$http
                  .put(
                    this.url
                      .base("/api/reference/:name/entity/update/:id")
                      .param(":name", e)
                      .param(":id", t)
                      .service(),
                    r
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.setActiveReferenceEntity = function (e, t, r, i) {
                return this.$http
                  .put(
                    this.url
                      .base(
                        "/api/reference/:referenceName/entity/:id?isActive=:isActive&version=:version"
                      )
                      .param(":referenceName", e)
                      .param(":id", t)
                      .param(":version", r)
                      .param(":isActive", i)
                      .service(),
                    null
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.createReferenceFilterParams = function (e) {
                return {
                  params: {
                    referenceFilter: e.referenceFilter,
                    referenceSorting: e.referenceSorting,
                    referenceSearchString: e.referenceSearchString,
                    referenceSplitParam: e.referenceSplitParam,
                  },
                };
              }),
              (e.NAME = "reference.ReferenceService"),
              (e.$inject = ["$http", "$q", s.UrlService.NAME]),
              e
            );
          })();
        r.ReferenceService = o;
      },
      {
        "./../utils/UrlService": 236,
        "./models/IReferenceEntitiesParams": 158,
      },
    ],
    157: [
      function (e, t, r) {
        var i = (function () {
          function e() {}
          return (
            (e.prototype.getEntityIdProperty = function () {
              return e.entityIdProperty;
            }),
            (e.prototype.getEntityIsActiveProperty = function () {
              return e.entityIsActiveProperty;
            }),
            (e.prototype.getIsActiveGridStyle = function (e) {
              return e ? {} : { color: "#999999" };
            }),
            (e.prototype.getReferenceName = function (e) {
              return e ? e.title : null;
            }),
            (e.prototype.convertStringAttribute = function (e) {
              return e;
            }),
            (e.prototype.convertNumberAttribute = function (e) {
              return e.toString();
            }),
            (e.prototype.convertBooleanAttribute = function (e) {
              return void 0 != e ? (e ? "Yes" : "No") : void 0;
            }),
            (e.prototype.convertDateAttribute = function (e) {
              return void 0 != e ? moment(e).format("M/D/YYYY") : void 0;
            }),
            (e.prototype.convertMoneyAttribute = function (e) {
              return new String(e).toString();
            }),
            (e.prototype.convertGroupAttribute = function (e, t, r) {
              for (
                var i = "", s = t.split("|"), o = 0, n = 0;
                o < s.length || n < r.length;
                ++o
              ) {
                var a = s[o];
                if (0 == a.indexOf("?", 0)) {
                  var u,
                    l = r[n],
                    c = l.type,
                    d = l.systemName;
                  this.isTextAttributeType(c)
                    ? (u = this.convertStringAttribute(e[d]))
                    : this.isBooleanAttributeType(c)
                    ? (u = this.convertBooleanAttribute(e[d]))
                    : this.isDateAttributeType(c)
                    ? (u = this.convertDateAttribute(e[d]))
                    : this.isMoneyAttributeType(c) &&
                      (u = this.convertMoneyAttribute(e[d])),
                    u &&
                      u.length > 0 &&
                      ((a = a.substr(1, a.length).replace("%1", u)), (i += a)),
                    ++n;
                } else i += a;
              }
              return i;
            }),
            (e.prototype.convertOneAssociationAttribute = function (e, t) {
              return this.getEntityNameByAttribute(e, t.selectorAttribute);
            }),
            (e.prototype.convertOneAssociationAttributeForGrid = function (
              e,
              t
            ) {
              return e[
                t.systemName + "_" + t.association.selectorAttribute.systemName
              ];
            }),
            (e.prototype.convertOneAssociationAttributeToNumber = function (e) {
              return void 0 != e ? e.id : void 0;
            }),
            (e.prototype.convertManyAssociationAttributeToNumbers = function (
              e
            ) {
              var t = [];
              if (e && e.length > 0)
                for (var r = 0; r < e.length; ++r) {
                  var i = e[r];
                  t.push(this.convertOneAssociationAttributeToNumber(i));
                }
              return t;
            }),
            (e.prototype.convertStringDefaultValue = function (e) {
              return e;
            }),
            (e.prototype.convertBooleanDefaultValue = function (e) {
              return e && "true" == e ? !0 : !1;
            }),
            (e.prototype.convertDateDefaultValue = function (e) {
              return e;
            }),
            (e.prototype.convertMoneyDefaultValue = function (e) {
              return e;
            }),
            (e.prototype.convertOneAssociationDefaultValue = function (e) {
              return parseInt(e, 10);
            }),
            (e.prototype.convertManyAssociationDefaultValue = function (e) {
              for (var t = [], r = e.split(","), i = 0; i < r.length; ++i)
                t.push(this.convertOneAssociationDefaultValue(r[i]));
              return t;
            }),
            (e.prototype.validStringAttribute = function (e) {
              return e && e.length > 0;
            }),
            (e.prototype.validBooleanAttribute = function (e) {
              return void 0 != e;
            }),
            (e.prototype.validDateAttribute = function (e) {
              return e && e.length > 0;
            }),
            (e.prototype.validMoneyAttribute = function (e) {
              return e && e.length > 0;
            }),
            (e.prototype.validOneAssociationAttribute = function (e) {
              return e && e > 0;
            }),
            (e.prototype.validManyAssociationAttribute = function (e) {
              return e && e.length > 0;
            }),
            (e.prototype.validAttribute = function (e, t) {
              return this.isTextAttributeType(e)
                ? this.validStringAttribute(t)
                : this.isBooleanAttributeType(e)
                ? this.validBooleanAttribute(t)
                : this.isDateAttributeType(e)
                ? this.validDateAttribute(t)
                : this.isMoneyAttributeType(e)
                ? this.validMoneyAttribute(t)
                : this.isOneAssociationAttributeType(e)
                ? this.validOneAssociationAttribute(t)
                : this.isManyAssociationAttributeType(e)
                ? this.validManyAssociationAttribute(t)
                : !0;
            }),
            (e.prototype.isTextAttributeType = function (e) {
              return "TEXT" == e;
            }),
            (e.prototype.isNumberAttributeType = function (e) {
              return "NUMBER" == e;
            }),
            (e.prototype.isBooleanAttributeType = function (e) {
              return "BOOLEAN" == e;
            }),
            (e.prototype.isDateAttributeType = function (e) {
              return "DATE" == e;
            }),
            (e.prototype.isMoneyAttributeType = function (e) {
              return "MONEY" == e;
            }),
            (e.prototype.isGroupAttributeType = function (e) {
              return "GROUP" == e;
            }),
            (e.prototype.isOneAssociationAttributeType = function (e) {
              return "ONE_ASSOCIATION" == e;
            }),
            (e.prototype.isManyAssociationAttributeType = function (e) {
              return "MANY_ASSOCIATION" == e;
            }),
            (e.prototype.isAndLogicalOperatorType = function (e) {
              return "AND" == e;
            }),
            (e.prototype.isOrLogicalOperatorType = function (e) {
              return "OR" == e;
            }),
            (e.prototype.getEntityNameByAttribute = function (e, t) {
              if (!e || !t) return "";
              var r = t.type,
                i = t.systemName;
              return this.isTextAttributeType(r)
                ? this.convertStringAttribute(e[i])
                : this.isBooleanAttributeType(r)
                ? this.convertBooleanAttribute(e[i])
                : this.isDateAttributeType(r)
                ? this.convertDateAttribute(e[i])
                : this.isMoneyAttributeType(r)
                ? this.convertMoneyAttribute(e[i])
                : this.isGroupAttributeType(r)
                ? this.convertGroupAttribute(
                    e,
                    t.groupTemplate,
                    t.childAttributes
                  )
                : void 0;
            }),
            (e.prototype.fixInputReferenceEntityAttributes = function (e, t) {
              for (var r = 0; r < t.defaultAttributes.length; ++r) {
                var i = t.defaultAttributes[r],
                  s = i.type,
                  o = i.systemName;
                this.isTextAttributeType(s)
                  ? (e[o] = this.convertStringAttribute(e[o]))
                  : this.isDateAttributeType(s)
                  ? (e[o] = this.convertDateAttribute(e[o]))
                  : this.isMoneyAttributeType(s)
                  ? (e[o] = this.convertMoneyAttribute(e[o]))
                  : this.isOneAssociationAttributeType(s)
                  ? (e[o] = this.convertOneAssociationAttributeToNumber(e[o]))
                  : this.isManyAssociationAttributeType(s) &&
                    (e[o] = this.convertManyAssociationAttributeToNumbers(
                      e[o]
                    ));
              }
            }),
            (e.prototype.getStringInBrowserFormat = function (e) {
              var t = "";
              return (
                angular.forEach(e, function (e) {
                  switch (e) {
                    case "=":
                      t = t.concat("%3D");
                      break;
                    default:
                      t = t.concat(e);
                  }
                }),
                t
              );
            }),
            (e.NAME = "reference.ReferenceUtils"),
            (e.entityIdProperty = "id"),
            (e.entityVersionProperty = "version"),
            (e.entityIsActiveProperty = "isActive"),
            e
          );
        })();
        r.ReferenceUtils = i;
      },
      {},
    ],
    158: [
      function (e, t, r) {
        var i = (function () {
          function e(e, t, r, i) {
            (this.referenceFilter = e),
              (this.referenceSorting = t),
              (this.referenceSearchString = r),
              (this.referenceSplitParam = i);
          }
          return e;
        })();
        r.ReferenceEntitiesParams = i;
      },
      {},
    ],
    159: [
      function (e, t, r) {
        var i = (function () {
          function e(e, t, r, i) {
            (this.utils = e),
              (this.entity = t),
              (this.metadata = r),
              (this.validationErrorsMap = i);
          }
          return (
            (e.prototype.valid = function () {
              if (
                !(
                  this.utils &&
                  this.entity &&
                  this.metadata &&
                  this.validationErrorsMap
                )
              )
                return !1;
              for (
                var e = !0, t = 0;
                t < this.metadata.editableAttributes.length;
                ++t
              ) {
                var r = this.metadata.editableAttributes[t],
                  i = r.systemName,
                  s = r.isRequired;
                s &&
                  (this.utils.validAttribute(r.type, this.entity[i]) ||
                    (this.validationErrorsMap.set(
                      i,
                      this.buildErrorMessage(r.title)
                    ),
                    (e = !1)));
              }
              return e;
            }),
            (e.prototype.buildErrorMessage = function (e) {
              return 'Please specify a value for the field "%1"'.replace(
                "%1",
                e
              );
            }),
            e
          );
        })();
        r.ReferenceIsRequiredValidator = i;
      },
      {},
    ],
    160: [
      function (e, t, r) {
        var i = (function () {
          function e(e, t, r, i) {
            (this.utils = e),
              (this.entity = t),
              (this.metadata = r),
              (this.validationErrorsMap = i);
          }
          return (
            (e.prototype.valid = function () {
              if (
                !(
                  this.utils &&
                  this.entity &&
                  this.metadata &&
                  this.validationErrorsMap
                )
              )
                return !1;
              for (
                var e = !0, t = 0;
                t < this.metadata.editableAttributes.length;
                ++t
              ) {
                var r = this.metadata.editableAttributes[t],
                  i = r.systemName,
                  s = r.maxLength;
                this.utils.isTextAttributeType(r.type) &&
                  s &&
                  this.entity[i] &&
                  this.entity[i].length > s &&
                  (this.validationErrorsMap.set(
                    i,
                    this.buildErrorMessage(r.title, s)
                  ),
                  (e = !1));
              }
              return e;
            }),
            (e.prototype.buildErrorMessage = function (e, t) {
              return 'Field length "%1" cannot exceed %1 symbols'
                .replace("%1", e)
                .replace("%1", t);
            }),
            e
          );
        })();
        r.ReferenceMaxLengthValidator = i;
      },
      {},
    ],
    161: [
      function (e, t, r) {
        var i = (function () {
          function e(e, t, r, i) {
            (this.utils = e),
              (this.entity = t),
              (this.metadata = r),
              (this.validationErrorsMap = i);
          }
          return (
            (e.prototype.valid = function () {
              return this.utils &&
                this.entity &&
                this.metadata &&
                this.validationErrorsMap
                ? this.metadata.requiredAttributesGroup
                  ? this.entityByRequiredAttributesGroupValid(
                      this.entity,
                      this.metadata.requiredAttributesGroup
                    )
                  : !0
                : !1;
            }),
            (e.prototype.entityByRequiredAttributesGroupValid = function (
              e,
              t
            ) {
              for (
                var r = t.logicalOperatorType,
                  i = this.entityByRequiredAttributesValid(e, t),
                  s = 0;
                s < t.requiredAttributesGroups.length;
                ++s
              ) {
                var o = t.requiredAttributesGroups[s];
                this.utils.isAndLogicalOperatorType(r)
                  ? (i = i && this.entityByRequiredAttributesGroupValid(e, o))
                  : this.utils.isOrLogicalOperatorType(r) &&
                    (i = i || this.entityByRequiredAttributesGroupValid(e, o));
              }
              return i;
            }),
            (e.prototype.entityByRequiredAttributesValid = function (e, t) {
              var r = t.attributes,
                i = t.logicalOperatorType;
              if (!r || 0 == r.length)
                return this.utils.isAndLogicalOperatorType(i);
              for (
                var s = r[0],
                  o = this.utils.validAttribute(s.type, e[s.systemName]),
                  n = 1;
                n < r.length;
                ++n
              ) {
                var a = r[n];
                this.utils.isAndLogicalOperatorType(i)
                  ? (o =
                      o && this.utils.validAttribute(a.type, e[a.systemName]))
                  : this.utils.isOrLogicalOperatorType(i) &&
                    (o =
                      o || this.utils.validAttribute(a.type, e[a.systemName]));
              }
              return o;
            }),
            e
          );
        })();
        r.ReferenceRequiredAttributesGroupValidator = i;
      },
      {},
    ],
    162: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.LOCAL = 1)] = "LOCAL"),
            (e[(e.AD_LOCAL = 2)] = "AD_LOCAL"),
            (e[(e.AD_SSO = 3)] = "AD_SSO"),
            (e[(e.PERSONIFY_SSO = 101)] = "PERSONIFY_SSO"),
            (e[(e.PERSONIFY_USERPASSWORD = 102)] = "PERSONIFY_USERPASSWORD"),
            (e[(e.LOCAL_OR_PERSONIFY = 103)] = "LOCAL_OR_PERSONIFY");
        })(r.LogonProviderEnum || (r.LogonProviderEnum = {}));
        r.LogonProviderEnum;
      },
      {},
    ],
    163: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = e("./../authcore/Event"),
          o = (function () {
            function e(t, r, i, o, n) {
              var a = this;
              (this.$interval = r),
                (this.$http = i),
                (this.$q = o),
                (this.url = n),
                (this.permissionsCache = new Map()),
                (this.expirationCache = new Map()),
                t.$on(s.Event.LOGGED_ON, function () {
                  a.clearCache(!0);
                }),
                t.$on(s.Event.LOGGED_OFF, function () {
                  a.clearCache(!0);
                }),
                (this.timer = this.$interval(
                  function () {
                    a.clearCache(!1);
                  },
                  e.CACHE_CLEAR_INTERVAL,
                  0,
                  !1
                )),
                t.$on("$destroy", function () {
                  a.$interval.cancel(a.timer);
                });
            }
            return (
              (e.prototype.getPermissionsForObject = function (e, t) {
                var r = this,
                  i = e.key + "_" + t,
                  s = this.permissionsCache.get(i);
                if (s) {
                  var o = this.$q.defer();
                  return o.resolve(s), o.promise;
                }
                return this.$http
                  .get(
                    this.url
                      .base("/api/permissions/:objectType/:id")
                      .param(":objectType", e.name)
                      .param(":id", t)
                      .service()
                  )
                  .then(function (e) {
                    return (
                      r.permissionsCache.set(i, e.data),
                      r.expirationCache.set(i, new Date().getTime()),
                      e.data
                    );
                  });
              }),
              (e.prototype.clearCache = function (t) {
                if (t)
                  this.permissionsCache.clear(), this.expirationCache.clear();
                else {
                  var r = [],
                    i = new Date().getTime() - e.CACHE_EXPIRATION_TIME;
                  this.expirationCache.forEach(function (e, t, s) {
                    i > e && r.push(t);
                  });
                  for (var s = 0; s < r.length; s++) {
                    var o = r[s];
                    this.permissionsCache["delete"](o),
                      this.expirationCache["delete"](o);
                  }
                }
              }),
              (e.NAME = "security.PermissionsRepository"),
              (e.CACHE_EXPIRATION_TIME = 3e5),
              (e.CACHE_CLEAR_INTERVAL = 5e3),
              (e.$inject = [
                "$rootScope",
                "$interval",
                "$http",
                "$q",
                i.UrlService.NAME,
              ]),
              e
            );
          })();
        r.PermissionsRepository = o;
      },
      { "./../authcore/Event": 20, "./../utils/UrlService": 236 },
    ],
    164: [
      function (e, t, r) {
        var i = e("./PermissionsRepository"),
          s = e("./permissions/SecuredObjectType"),
          o = e("./../auth/AuthService"),
          n = e("./../utils/UrlService"),
          a = (function () {
            function e(e, t, r, i) {
              (this.authApi = e),
                (this.permissionsRepository = t),
                (this.$http = r),
                (this.url = i);
            }
            return (
              (e.prototype.getSystemPermissions = function () {
                return this.authApi.getCurrentUser().then(function (e) {
                  return e.permissions;
                });
              }),
              (e.prototype.getSecuredObjectPermissions = function (e, t) {
                return this.permissionsRepository.getPermissionsForObject(e, t);
              }),
              (e.prototype.getMaterialPermissions = function (e) {
                return this.permissionsRepository.getPermissionsForObject(
                  s.SecuredObjectType.MATERIAL,
                  e
                );
              }),
              (e.prototype.getPlaylistPermissions = function (e) {
                return this.permissionsRepository.getPermissionsForObject(
                  s.SecuredObjectType.PLAYLIST,
                  e
                );
              }),
              (e.prototype.getCoursePermissions = function (e) {
                return this.permissionsRepository.getPermissionsForObject(
                  s.SecuredObjectType.COURSE,
                  e
                );
              }),
              (e.prototype.getQuizPermissions = function (e) {
                return this.permissionsRepository.getPermissionsForObject(
                  s.SecuredObjectType.QUIZ,
                  e
                );
              }),
              (e.prototype.getNewsPermissions = function (e) {
                return this.permissionsRepository.getPermissionsForObject(
                  s.SecuredObjectType.NEWS,
                  e
                );
              }),
              (e.prototype.getAllObjectPermissionsWithUsersAndGroups =
                function (e, t) {
                  var r = "/api/permissions/usersAndGroups/:objectType";
                  null != t && (r += "?id=:id");
                  var i = this.url.base(r).param(":objectType", e.name);
                  return (
                    null != t && i.param(":id", t),
                    this.$http.get(i.service()).then(function (e) {
                      return e.data;
                    })
                  );
                }),
              (e.NAME = "security.PermissionsService"),
              (e.$inject = [
                o.AuthService.NAME,
                i.PermissionsRepository.NAME,
                "$http",
                n.UrlService.NAME,
              ]),
              e
            );
          })();
        r.PermissionsService = a;
      },
      {
        "./../auth/AuthService": 10,
        "./../utils/UrlService": 236,
        "./PermissionsRepository": 163,
        "./permissions/SecuredObjectType": 168,
      },
    ],
    165: [
      function (e, t, r) {
        var i = e("./PermissionsRepository"),
          s = e("./PermissionsService"),
          o = e("./SecurityService"),
          n = e("./../urls/UrlsModule"),
          a = e("./../auth/AuthModule"),
          u = e("./../authcore/AuthCoreModule");
        r.SecurityModule = angular
          .module("security", [
            n.UrlsModule.name,
            a.AuthModule.name,
            u.AuthCoreModule.name,
          ])
          .service(i.PermissionsRepository.NAME, i.PermissionsRepository)
          .service(s.PermissionsService.NAME, s.PermissionsService)
          .service(o.SecurityService.NAME, o.SecurityService);
      },
      {
        "./../auth/AuthModule": 9,
        "./../authcore/AuthCoreModule": 17,
        "./../urls/UrlsModule": 212,
        "./PermissionsRepository": 163,
        "./PermissionsService": 164,
        "./SecurityService": 166,
      },
    ],
    166: [
      function (e, t, r) {
        var i = e("./PermissionsService"),
          s = e("./../authcore/AuthManager"),
          o = e("./../authcore/AuthRedirect"),
          n = e("./../authcore/RedirectReason"),
          a = e("./../urls/AuthRouter"),
          u = (function () {
            function e(e, t, r, i, s) {
              (this.$location = e),
                (this.authManager = t),
                (this.authRedirect = r),
                (this.permissionsApi = i),
                (this.authRouter = s);
            }
            return (
              (e.prototype.demandAuthentication = function () {
                return (
                  this.authManager.hasToken()
                    ? this.authManager.isAuthenticated() ||
                      this.authRedirect.redirectToLogOn(
                        n.RedirectReason.TOKEN_EXPIRED
                      )
                    : this.authRedirect.redirectToLogOn(
                        n.RedirectReason.ACCESS_DENIED
                      ),
                  this
                );
              }),
              (e.prototype.isAuthenticated = function () {
                return this.authManager.hasToken() &&
                  this.authManager.isAuthenticated()
                  ? !0
                  : !1;
              }),
              (e.prototype.demandNotAuthenticated = function () {
                return (
                  this.authManager.isAuthenticated() &&
                    this.authRedirect.forwardToAccessDenied(),
                  this
                );
              }),
              (e.prototype.demandSystemPermissions = function (e) {
                return this.demandSystemPermissionsIf(!0, e);
              }),
              (e.prototype.demandSystemPermissionsIf = function (e, t) {
                var r = this;
                return (
                  e &&
                    this.permissionsApi
                      .getSystemPermissions()
                      .then(function (e) {
                        t(e) || r.forwardToAccessDeniedOrRedirectLogOn();
                      }),
                  this
                );
              }),
              (e.prototype.demandMaterialPermissions = function (e, t) {
                return this.demandMaterialPermissionsIf(!0, e, t);
              }),
              (e.prototype.demandMaterialPermissionsIf = function (e, t, r) {
                var i = this;
                return (
                  e &&
                    this.permissionsApi
                      .getMaterialPermissions(t)
                      .then(function (e) {
                        r(e) || i.forwardToAccessDeniedOrRedirectLogOn();
                      }),
                  this
                );
              }),
              (e.prototype.demandPlaylistPermissions = function (e, t) {
                return this.demandPlaylistPermissionsIf(!0, e, t);
              }),
              (e.prototype.demandPlaylistPermissionsIf = function (e, t, r) {
                var i = this;
                return (
                  e &&
                    this.permissionsApi
                      .getPlaylistPermissions(t)
                      .then(function (e) {
                        r(e) || i.forwardToAccessDeniedOrRedirectLogOn();
                      }),
                  this
                );
              }),
              (e.prototype.demandCoursePermissions = function (e, t) {
                return this.demandCoursePermissionsIf(!0, e, t);
              }),
              (e.prototype.demandCoursePermissionsIf = function (e, t, r) {
                var i = this;
                return (
                  e &&
                    this.permissionsApi
                      .getCoursePermissions(t)
                      .then(function (e) {
                        r(e) || i.forwardToAccessDeniedOrRedirectLogOn();
                      }),
                  this
                );
              }),
              (e.prototype.demandQuizPermissions = function (e, t) {
                return this.demandQuizPermissionsIf(!0, e, t);
              }),
              (e.prototype.demandQuizPermissionsIf = function (e, t, r) {
                var i = this;
                return (
                  e &&
                    this.permissionsApi
                      .getQuizPermissions(t)
                      .then(function (e) {
                        r(e) || i.forwardToAccessDeniedOrRedirectLogOn();
                      }),
                  this
                );
              }),
              (e.prototype.demandNewsPermissions = function (e, t) {
                return this.demandMaterialPermissionsIf(!0, e, t);
              }),
              (e.prototype.demandNewsPermissionsIf = function (e, t, r) {
                var i = this;
                return (
                  e &&
                    this.permissionsApi
                      .getNewsPermissions(t)
                      .then(function (e) {
                        r(e) || i.forwardToAccessDeniedOrRedirectLogOn();
                      }),
                  this
                );
              }),
              (e.prototype.forwardToAccessDeniedOrRedirectLogOn = function () {
                this.authManager.isAuthenticated()
                  ? this.authRedirect.forwardToAccessDenied()
                  : this.authManager.hasToken()
                  ? (this.authManager.logOff(),
                    this.authManager.eraseToken(),
                    this.authRedirect.redirectToLogOn(
                      n.RedirectReason.TOKEN_EXPIRED
                    ))
                  : (this.authManager.eraseToken(),
                    this.authRedirect.redirectToLogOn(
                      n.RedirectReason.ACCESS_DENIED
                    ));
              }),
              (e.NAME = "security.SecurityService"),
              (e.$inject = [
                "$location",
                s.AuthManager.NAME,
                o.AuthRedirect.NAME,
                i.PermissionsService.NAME,
                a.AuthRouter.NAME,
              ]),
              e
            );
          })();
        r.SecurityService = u;
      },
      {
        "./../authcore/AuthManager": 18,
        "./../authcore/AuthRedirect": 19,
        "./../authcore/RedirectReason": 21,
        "./../urls/AuthRouter": 194,
        "./PermissionsService": 164,
      },
    ],
    167: [
      function (e, t, r) {
        var i = (function () {
          function e() {}
          return (
            (e.VIEW_MATERIAL = 201),
            (e.DOWNLOAD_MATERIAL = 204),
            (e.VIEW_COURSE = 210),
            (e.VIEW_QUIZ = 221),
            (e.VIEW_PLAYLIST = 230),
            (e.PERMISSIONS_IDS = [
              e.VIEW_MATERIAL,
              e.DOWNLOAD_MATERIAL,
              e.VIEW_COURSE,
              e.VIEW_QUIZ,
              e.VIEW_PLAYLIST,
            ]),
            e
          );
        })();
        r.AllUsersPermissions = i;
      },
      {},
    ],
    168: [
      function (e, t, r) {
        var i = (function () {
          function e(e, t) {
            (this.key = e), (this.name = t);
          }
          return (
            (e.MATERIAL = new e(1, "material")),
            (e.COURSE = new e(2, "course")),
            (e.QUIZ = new e(3, "quiz")),
            (e.PLAYLIST = new e(4, "playlist")),
            (e.NEWS = new e(5, "news")),
            e
          );
        })();
        r.SecuredObjectType = i;
      },
      {},
    ],
    169: [
      function (e, t, r) {
        var i = e("./SettingsService"),
          s = e("./../security/PermissionsService"),
          o = e("./../utils/UrlService"),
          n = e("./../utils/PageHeaderHelper"),
          a = e("./../utils/MenuHelper"),
          u = e("./../INotifier"),
          l = e("./../urls/SystemSettingsRouter"),
          c = (function () {
            function e(e, t, r, i, s) {
              var o = this;
              (this.url = e),
                (this.$http = t),
                (this.settingsApi = r),
                (this.systemSettingsRouter = s),
                (this.settings = {}),
                a.MenuHelper.setCurrentMenuItem(
                  a.MenuHelper.ADMINISTRATION_COMMON_SETTINGS_MENU_KEY
                ),
                n.PageHeader.set().header("General system settings").update(),
                i.getSystemPermissions().then(function (e) {
                  o.systemPermissions = e;
                }),
                this.loadSettings(),
                this.loadAvailableLocales();
            }
            return (
              (e.prototype.loadSettings = function () {
                var e = this;
                this.settingsApi.getSystemCommonSettings().then(function (t) {
                  angular.copy(t, e.settings);
                });
              }),
              (e.prototype.saveSettings = function () {
                var e = this;
                this.settingsApi
                  .update(this.settings)
                  .then(function (t) {
                    u.notifier.success("Settings have been saved"),
                      angular.copy(t, e.settings);
                  })
                  ["catch"](function (e) {
                    u.notifier.error(e.data.message);
                  });
              }),
              (e.prototype.loadAvailableLocales = function () {
                var e = this;
                this.settingsApi.getAvailableLocales().then(function (t) {
                  e.availableLocales = t;
                });
              }),
              (e.NAME = "settings.CommonSettingsController"),
              (e.$inject = [
                o.UrlService.NAME,
                "$http",
                i.SettingsService.NAME,
                s.PermissionsService.NAME,
                l.SystemSettingsRouter.NAME,
              ]),
              e
            );
          })();
        r.CommonSettingsController = c;
      },
      {
        "./../INotifier": 4,
        "./../security/PermissionsService": 164,
        "./../urls/SystemSettingsRouter": 210,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./SettingsService": 171,
      },
    ],
    170: [
      function (e, t, r) {
        var i = e("./SettingsService"),
          s = e("./CommonSettingsController"),
          o = e("./StoragePlacesRegistryController"),
          n = e("./StoragePlaceEditController"),
          a = e("./../security/SecurityModule"),
          u = e("./../urls/UrlsModule");
        r.SettingsModule = angular
          .module("settings", [a.SecurityModule.name, u.UrlsModule.name])
          .service(i.SettingsService.NAME, i.SettingsService)
          .controller(
            s.CommonSettingsController.NAME,
            s.CommonSettingsController
          )
          .controller(
            o.StoragePlacesRegistryController.NAME,
            o.StoragePlacesRegistryController
          )
          .controller(
            n.StoragePlaceEditController.NAME,
            n.StoragePlaceEditController
          );
      },
      {
        "./../security/SecurityModule": 165,
        "./../urls/UrlsModule": 212,
        "./CommonSettingsController": 169,
        "./SettingsService": 171,
        "./StoragePlaceEditController": 172,
        "./StoragePlacesRegistryController": 173,
      },
    ],
    171: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = (function () {
            function e(e, t, r, i) {
              (this.$http = e),
                (this.$q = t),
                (this.$timeout = r),
                (this.url = i);
            }
            return (
              (e.prototype.getSystemCommonSettings = function () {
                return this.$http
                  .get(this.url.service("/api/settings/common"))
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getAvailableLocales = function () {
                return this.$http
                  .get(this.url.service("/api/settings/common/locales"))
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.update = function (e) {
                return this.$http
                  .put(this.url.service("/api/settings/common"), e)
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getStoragePlaces = function () {
                return this.$http
                  .get(this.url.service("/api/settings/storagePlaces"))
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getStoragePlace = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/settings/storagePlaces/:id")
                      .param(":id", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.createStoragePlace = function (e) {
                return this.$http
                  .post(this.url.service("/api/settings/storagePlaces"), e)
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.updateStoragePlace = function (e) {
                return this.$http
                  .put(this.url.service("/api/settings/storagePlaces"), e)
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.setStoragePlaceActive = function (e, t) {
                return this.$http
                  .put(
                    this.url
                      .base(
                        "/api/settings/storagePlaces/:id/setActive/:isActive"
                      )
                      .param(":id", e)
                      .param(":isActive", t)
                      .service(),
                    void 0
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getCurrentDate = function () {
                var t = this;
                return this.currentDate
                  ? this.$q.when(this.currentDate)
                  : this.$http
                      .get(this.url.service("/api/settings/common/currentDate"))
                      .then(function (r) {
                        return (
                          (t.currentDate = r.data),
                          t.$timeout(function () {
                            t.currentDate = null;
                          }, e.RESET_CURRENT_DATE_TIMEOUT_MS),
                          r.data
                        );
                      });
              }),
              (e.NAME = "settings.SettingsService"),
              (e.RESET_CURRENT_DATE_TIMEOUT_MS = 3e5),
              (e.$inject = ["$http", "$q", "$timeout", i.UrlService.NAME]),
              e
            );
          })();
        r.SettingsService = s;
      },
      { "./../utils/UrlService": 236 },
    ],
    172: [
      function (e, t, r) {
        var i = e("./models/StorageTypeEnum"),
          s = e("./SettingsService"),
          o = e("./../urls/SystemSettingsRouter"),
          n = e("./../utils/MenuHelper"),
          a = e("./../utils/PageHeaderHelper"),
          u = e("./../INotifier"),
          l = (function () {
            function e(e, t, r, s, o) {
              (this.$http = e),
                (this.$routeParams = t),
                (this.$location = r),
                (this.settingsApi = s),
                (this.systemSettingsRouter = o),
                (this.storagePlace = {
                  id: null,
                  version: null,
                  name: "",
                  externalUrl: null,
                  connectionString: null,
                  login: null,
                  password: null,
                  type: null,
                  capacity: null,
                  usedSpace: null,
                  secured: !0,
                  active: !0,
                }),
                (this.disableSaveButton = !1),
                (this.availableStorageTypes = []),
                n.MenuHelper.setCurrentMenuItem(
                  n.MenuHelper.ADMINISTRATION_STORAGE_PLACES_MENU_KEY
                ),
                (this.storagePlaceId = this.$routeParams.storagePlaceId),
                this.storagePlaceId
                  ? this.load()
                  : a.PageHeader.set().header("New storage").update();
              for (var u in i.StorageTypeEnum)
                isNaN(u) && this.availableStorageTypes.push(u);
            }
            return (
              (e.prototype.load = function () {
                var e = this;
                this.settingsApi
                  .getStoragePlace(this.storagePlaceId)
                  .then(function (t) {
                    a.PageHeader.set().header(t.name).update(),
                      (e.storagePlace = t),
                      (e.confirmPassword = t.password);
                  });
              }),
              (e.prototype.save = function () {
                var e = this;
                this.disableSaveButton = !0;
                var t = this.storagePlaceId
                  ? this.settingsApi.updateStoragePlace(this.storagePlace)
                  : this.settingsApi.createStoragePlace(this.storagePlace);
                t.then(function (t) {
                  (e.disableSaveButton = !1),
                    u.notifier.success(
                      "Storage ‘" + t.name + "’ has been saved"
                    ),
                    e.storagePlaceId
                      ? e.load()
                      : e.$location.url(
                          e.systemSettingsRouter.storagePlaceEditUrl(t.id)
                        );
                });
              }),
              (e.prototype.deactivate = function () {
                var e = this;
                this.settingsApi
                  .setStoragePlaceActive(this.storagePlace.id, !1)
                  .then(function (t) {
                    e.$location.url(
                      e.systemSettingsRouter.storagePlacesIndexUrl()
                    ),
                      u.notifier.success(
                        "Storage ‘" + t.name + "’ has been deactivated"
                      );
                  });
              }),
              (e.NAME = "settings.StoragePlaceEditController"),
              (e.$inject = [
                "$http",
                "$routeParams",
                "$location",
                s.SettingsService.NAME,
                o.SystemSettingsRouter.NAME,
              ]),
              e
            );
          })();
        r.StoragePlaceEditController = l;
      },
      {
        "./../INotifier": 4,
        "./../urls/SystemSettingsRouter": 210,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./SettingsService": 171,
        "./models/StorageTypeEnum": 174,
      },
    ],
    173: [
      function (e, t, r) {
        var i = e("./SettingsService"),
          s = e("./../urls/SystemSettingsRouter"),
          o = e("./../IGridModel"),
          n = e("./../IHttpGridService"),
          a = e("./../security/PermissionsService"),
          u = e("./../utils/UrlService"),
          l = e("./../utils/MenuHelper"),
          c = e("./../utils/PageHeaderHelper"),
          d = e("./../INotifier"),
          h = (function () {
            function e(e, t, r, i, s) {
              var a = this;
              (this.settingsApi = t),
                (this.permissionsApi = r),
                (this.systemSettingsRouter = i),
                (this.url = s),
                l.MenuHelper.setCurrentMenuItem(
                  l.MenuHelper.ADMINISTRATION_STORAGE_PLACES_MENU_KEY
                ),
                c.PageHeader.set().header("Storages").update(),
                r.getSystemPermissions().then(function (e) {
                  c.PageHeader.set()
                    .preserveHeader()
                    .addActionLinkIf(
                      e.editStoragePlaces,
                      "+&nbsp;New",
                      a.systemSettingsRouter.storagePlaceCreateUrl()
                    )
                    .update(),
                    (a.systemPermissions = e);
                }),
                (this.storagePlacesGridModel = new o.GridModel(
                  n.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/settings/storagePlaces")
                  )
                ));
            }
            return (
              (e.prototype.getIsActiveGridStyle = function (e) {
                return e ? {} : { color: "#999999" };
              }),
              (e.prototype.convertIsActive = function (e) {
                return void 0 != e ? (e ? "Yes" : "No") : void 0;
              }),
              (e.prototype.activate = function (e, t) {
                var r = this,
                  i = this.settingsApi.setStoragePlaceActive(t, !0);
                i.then(function (t) {
                  (r.storagePlacesGridModel.entries[e] = t),
                    d.notifier.success(
                      "Storage ‘" + t.name + "’ has been activated"
                    );
                });
              }),
              (e.NAME = "settings.StoragePlacesRegistryController"),
              (e.$inject = [
                "$http",
                i.SettingsService.NAME,
                a.PermissionsService.NAME,
                s.SystemSettingsRouter.NAME,
                u.UrlService.NAME,
              ]),
              e
            );
          })();
        r.StoragePlacesRegistryController = h;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../INotifier": 4,
        "./../security/PermissionsService": 164,
        "./../urls/SystemSettingsRouter": 210,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./SettingsService": 171,
      },
    ],
    174: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.LOCAL = 0)] = "LOCAL"),
            (e[(e.SMB = 1)] = "SMB"),
            (e[(e.AZURE = 2)] = "AZURE");
        })(r.StorageTypeEnum || (r.StorageTypeEnum = {}));
        r.StorageTypeEnum;
      },
      {},
    ],
    175: [
      function (e, t, r) {
        var i = e("./SocialService");
        r.SocialModule = angular
          .module("social", [])
          .service(i.SocialService.NAME, i.SocialService);
      },
      { "./SocialService": 176 },
    ],
    176: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = e("./../ReferencedObjectType"),
          o = (function () {
            function e(e, t) {
              (this.$http = e), (this.url = t);
            }
            return (
              (e.prototype.changeObjectRating = function (e, t, r) {
                return this.$http
                  .post(
                    this.url
                      .base(
                        "/api/social/rating?objectId=:objectId&objectType=:objectType&isLike=:isLike"
                      )
                      .param(":objectId", e)
                      .param(":objectType", s.ReferencedObjectType[t])
                      .param(":isLike", r)
                      .service(),
                    null
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.addComment = function (e, t, r) {
                return this.$http
                  .post(
                    this.url
                      .base(
                        "/api/social/comments?objectId=:objectId&objectType=:objectType"
                      )
                      .param(":objectId", e)
                      .param(":objectType", s.ReferencedObjectType[t])
                      .service(),
                    r
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getCommentsCount = function (e, t) {
                return this.$http
                  .get(
                    this.url
                      .base(
                        "/api/social/comments/count?objectId=:objectId&objectType=:objectType"
                      )
                      .param(":objectId", e)
                      .param(":objectType", s.ReferencedObjectType[t])
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.NAME = "social.SocialService"),
              (e.$inject = ["$http", i.UrlService.NAME]),
              e
            );
          })();
        r.SocialService = o;
      },
      { "./../ReferencedObjectType": 6, "./../utils/UrlService": 236 },
    ],
    177: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = (function () {
            function e(e, t, r) {
              (this.$http = e), (this.$q = t), (this.url = r);
            }
            return (
              (e.prototype.create = function (e, t, r) {
                var i = this.$q.defer();
                return i.resolve(null), i.promise;
              }),
              (e.NAME = "statistics.ActionLogService"),
              (e.$inject = ["$http", "$q", i.UrlService.NAME]),
              e
            );
          })();
        r.ActionLogService = s;
      },
      { "./../utils/UrlService": 236 },
    ],
    178: [
      function (e, t, r) {
        var i = (function () {
          function e() {
            $(document).ready(function () {
              ($.jsDate.regional.ru = {
                monthNames: [
                  "Январь",
                  "Февраль",
                  "Март",
                  "Апрель",
                  "Май",
                  "Июнь",
                  "Июль",
                  "Август",
                  "Сентябрь",
                  "Октябрь",
                  "Ноябрь",
                  "Декабрь",
                ],
                monthNamesShort: [
                  "Янв",
                  "Фев",
                  "Мар",
                  "Апр",
                  "Май",
                  "Июн",
                  "Июл",
                  "Авг",
                  "Сен",
                  "Окт",
                  "Ноя",
                  "Дек",
                ],
                dayNames: [
                  "Воскресенье",
                  "Понедельник",
                  "Вторник",
                  "Среда",
                  "Четверг",
                  "Пятница",
                  "Суббота",
                ],
                dayNamesShort: ["Вс", "Пн", "Вт", "Ср", "Чт", "Пт", "Сб"],
                formatString: "%d-%m-%Y %H:%M:%S",
              }),
                document.documentElement.setAttribute("lang", "en");
            });
          }
          return e;
        })();
        r.BaseReportController = i;
      },
      {},
    ],
    179: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./BaseReportController"),
          o = e("./models/MaterialReportTarget"),
          n = e("./models/ReportGroupType"),
          a = e("./StatisticReportsService"),
          u = e("./utils/ReportWriters"),
          l = e("./utils/ReportOptions"),
          c = e("./utils/ReportTargetNamesMaker"),
          d = e("./../security/SecurityService"),
          h = e("./../security/PermissionsService"),
          p = e("./../users/UserService"),
          f = e("./../utils/Moment"),
          m = e("./../utils/MenuHelper"),
          S = e("./../utils/PageHeaderHelper"),
          v = (function (e) {
            function t(t, r, i, s) {
              var n = this;
              e.call(this),
                (this.statisticReportsService = t),
                (this.userService = r),
                (this.permissionsApi = i),
                (this.securityService = s),
                (this.lineDiagramsReportWriter =
                  new u.LineDiagramsReportWriter()),
                (this.owners = []),
                (this.ownerIds = []),
                (this.materialTypeIds = []),
                (this.subjectIds = []),
                (this.lineDiagramsReportData = null),
                (this.lineDiagramsReportOptions =
                  l.getLineDiagramsReportOptions(
                    "The report on download of materials"
                  )),
                this.securityService.demandAuthentication(),
                m.MenuHelper.setCurrentMenuItem(
                  m.MenuHelper.ANALYTICS_MATERIAL_DOWNLOAD_REPORT_MENU_KEY
                ),
                S.PageHeader.set()
                  .header("The report on download of materials")
                  .update(),
                this.permissionsApi.getSystemPermissions().then(function (e) {
                  (n.systemPermissions = e),
                    n.systemPermissions.viewAnalytics
                      ? (n.userService
                          .getUsersWithoutExcludedUsersForSelector()
                          .then(function (e) {
                            n.owners = angular.copy(e);
                          }),
                        (n.reportTarget = o.MaterialReportTarget.OWNERS),
                        (n.reportTargetNamesMaker = new c.OwnerNamesMaker()))
                      : ((n.reportTarget =
                          o.MaterialReportTarget.MATERIAL_TYPES),
                        (n.reportTargetNamesMaker =
                          new c.MaterialTypeNamesMaker())),
                    n.viewReportGroupByDays();
                });
            }
            return (
              i(t, e),
              (t.prototype.viewReportGroupByDays = function () {
                this.viewReportGroupBy(n.ReportGroupType.DAYS);
              }),
              (t.prototype.viewReportGroupByWeeks = function () {
                this.viewReportGroupBy(n.ReportGroupType.WEEKS);
              }),
              (t.prototype.viewReportGroupByMonths = function () {
                this.viewReportGroupBy(n.ReportGroupType.MONTHS);
              }),
              (t.prototype.viewReportGroupByYears = function () {
                this.viewReportGroupBy(n.ReportGroupType.YEARS);
              }),
              (t.prototype.viewReportGroupBy = function (e) {
                var t = this;
                (this.groupType = e),
                  (this.lineDiagramsReportData = null),
                  this.statisticReportsService
                    .viewMaterialDownloadReport(
                      this.reportTarget,
                      this.groupType,
                      this.ownerIds,
                      this.materialTypeIds,
                      this.subjectIds,
                      f.Moment.textToJavaDate(this.dateFromText),
                      f.Moment.textToJavaDate(this.dateToText)
                    )
                    .then(function (e) {
                      (t.report = e),
                        (t.lineDiagramsReportOptions.series =
                          t.reportTargetNamesMaker.make(t.report, function (e) {
                            return { label: e };
                          })),
                        (t.lineDiagramsReportData =
                          t.lineDiagramsReportWriter.reporting(
                            t.report,
                            function (e) {
                              return [moment(e[0]).format("YYYY-MM-DD"), e[1]];
                            }
                          ));
                    });
              }),
              (t.prototype.isCurrentOwnersReportTarget = function () {
                return this.reportTarget == o.MaterialReportTarget.OWNERS;
              }),
              (t.prototype.isCurrentMaterialTypesReportTarget = function () {
                return (
                  this.reportTarget == o.MaterialReportTarget.MATERIAL_TYPES
                );
              }),
              (t.prototype.isCurrentSubjectsReportTarget = function () {
                return this.reportTarget == o.MaterialReportTarget.SUBJECTS;
              }),
              (t.prototype.setCurrentOwnersReportTarget = function () {
                this.setCurrentReportTarget(
                  o.MaterialReportTarget.OWNERS,
                  new c.OwnerNamesMaker()
                );
              }),
              (t.prototype.setCurrentMaterialTypesReportTarget = function () {
                this.setCurrentReportTarget(
                  o.MaterialReportTarget.MATERIAL_TYPES,
                  new c.MaterialTypeNamesMaker()
                );
              }),
              (t.prototype.setCurrentSubjectsReportTarget = function () {
                this.setCurrentReportTarget(
                  o.MaterialReportTarget.SUBJECTS,
                  new c.SubjectNamesMaker()
                );
              }),
              (t.prototype.setCurrentReportTarget = function (e, t) {
                (this.ownerIds = []),
                  (this.materialTypeIds = []),
                  (this.subjectIds = []),
                  (this.reportTarget = e),
                  (this.reportTargetNamesMaker = t);
              }),
              (t.NAME = "statistics.MaterialDownloadReportController"),
              (t.$inject = [
                a.StatisticReportsService.NAME,
                p.UserService.NAME,
                h.PermissionsService.NAME,
                d.SecurityService.NAME,
              ]),
              t
            );
          })(s.BaseReportController);
        r.MaterialDownloadReportController = v;
      },
      {
        "./../security/PermissionsService": 164,
        "./../security/SecurityService": 166,
        "./../users/UserService": 218,
        "./../utils/MenuHelper": 227,
        "./../utils/Moment": 228,
        "./../utils/PageHeaderHelper": 231,
        "./BaseReportController": 178,
        "./StatisticReportsService": 182,
        "./models/MaterialReportTarget": 185,
        "./models/ReportGroupType": 186,
        "./utils/ReportOptions": 187,
        "./utils/ReportTargetNamesMaker": 188,
        "./utils/ReportWriters": 189,
      },
    ],
    180: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./BaseReportController"),
          o = e("./models/MaterialReportTarget"),
          n = e("./models/ReportGroupType"),
          a = e("./StatisticReportsService"),
          u = e("./utils/ReportWriters"),
          l = e("./utils/ReportOptions"),
          c = e("./utils/ReportTargetNamesMaker"),
          d = e("./../security/SecurityService"),
          h = e("./../security/PermissionsService"),
          p = e("./../users/UserService"),
          f = e("./../utils/Moment"),
          m = e("./../utils/MenuHelper"),
          S = e("./../utils/PageHeaderHelper"),
          v = (function (e) {
            function t(t, r, i, s) {
              var n = this;
              e.call(this),
                (this.statisticReportsService = t),
                (this.userService = r),
                (this.permissionsApi = i),
                (this.securityService = s),
                (this.lineDiagramsReportWriter =
                  new u.LineDiagramsReportWriter()),
                (this.owners = []),
                (this.ownerIds = []),
                (this.materialTypeIds = []),
                (this.subjectIds = []),
                (this.lineDiagramsReportData = null),
                (this.lineDiagramsReportOptions =
                  l.getLineDiagramsReportOptions(
                    "The report on upload of materials"
                  )),
                this.securityService.demandAuthentication(),
                m.MenuHelper.setCurrentMenuItem(
                  m.MenuHelper.ANALYTICS_MATERIAL_UPLOAD_REPORT_MENU_KEY
                ),
                S.PageHeader.set()
                  .header("The report on upload of materials")
                  .update(),
                this.permissionsApi.getSystemPermissions().then(function (e) {
                  (n.systemPermissions = e),
                    n.systemPermissions.viewAnalytics
                      ? (n.userService
                          .getUsersWithoutExcludedUsersForSelector()
                          .then(function (e) {
                            n.owners = angular.copy(e);
                          }),
                        (n.reportTarget = o.MaterialReportTarget.OWNERS),
                        (n.reportTargetNamesMaker = new c.OwnerNamesMaker()))
                      : ((n.reportTarget =
                          o.MaterialReportTarget.MATERIAL_TYPES),
                        (n.reportTargetNamesMaker =
                          new c.MaterialTypeNamesMaker())),
                    n.viewReportGroupByDays();
                });
            }
            return (
              i(t, e),
              (t.prototype.viewReportGroupByDays = function () {
                this.viewReportGroupBy(n.ReportGroupType.DAYS);
              }),
              (t.prototype.viewReportGroupByWeeks = function () {
                this.viewReportGroupBy(n.ReportGroupType.WEEKS);
              }),
              (t.prototype.viewReportGroupByMonths = function () {
                this.viewReportGroupBy(n.ReportGroupType.MONTHS);
              }),
              (t.prototype.viewReportGroupByYears = function () {
                this.viewReportGroupBy(n.ReportGroupType.YEARS);
              }),
              (t.prototype.viewReportGroupBy = function (e) {
                var t = this;
                (this.groupType = e),
                  (this.lineDiagramsReportData = null),
                  this.statisticReportsService
                    .viewMaterialUploadReport(
                      this.reportTarget,
                      this.groupType,
                      this.ownerIds,
                      this.materialTypeIds,
                      this.subjectIds,
                      f.Moment.textToJavaDate(this.dateFromText),
                      f.Moment.textToJavaDate(this.dateToText)
                    )
                    .then(function (e) {
                      (t.report = e),
                        (t.lineDiagramsReportOptions.series =
                          t.reportTargetNamesMaker.make(t.report, function (e) {
                            return { label: e };
                          })),
                        (t.lineDiagramsReportData =
                          t.lineDiagramsReportWriter.reporting(
                            t.report,
                            function (e) {
                              return [moment(e[0]).format("YYYY-MM-DD"), e[1]];
                            }
                          ));
                    });
              }),
              (t.prototype.isCurrentOwnersReportTarget = function () {
                return this.reportTarget == o.MaterialReportTarget.OWNERS;
              }),
              (t.prototype.isCurrentMaterialTypesReportTarget = function () {
                return (
                  this.reportTarget == o.MaterialReportTarget.MATERIAL_TYPES
                );
              }),
              (t.prototype.isCurrentSubjectsReportTarget = function () {
                return this.reportTarget == o.MaterialReportTarget.SUBJECTS;
              }),
              (t.prototype.setCurrentOwnersReportTarget = function () {
                this.setCurrentReportTarget(
                  o.MaterialReportTarget.OWNERS,
                  new c.OwnerNamesMaker()
                );
              }),
              (t.prototype.setCurrentMaterialTypesReportTarget = function () {
                this.setCurrentReportTarget(
                  o.MaterialReportTarget.MATERIAL_TYPES,
                  new c.MaterialTypeNamesMaker()
                );
              }),
              (t.prototype.setCurrentSubjectsReportTarget = function () {
                this.setCurrentReportTarget(
                  o.MaterialReportTarget.SUBJECTS,
                  new c.SubjectNamesMaker()
                );
              }),
              (t.prototype.setCurrentReportTarget = function (e, t) {
                (this.ownerIds = []),
                  (this.materialTypeIds = []),
                  (this.subjectIds = []),
                  (this.reportTarget = e),
                  (this.reportTargetNamesMaker = t);
              }),
              (t.NAME = "statistics.MaterialUploadReportController"),
              (t.$inject = [
                a.StatisticReportsService.NAME,
                p.UserService.NAME,
                h.PermissionsService.NAME,
                d.SecurityService.NAME,
              ]),
              t
            );
          })(s.BaseReportController);
        r.MaterialUploadReportController = v;
      },
      {
        "./../security/PermissionsService": 164,
        "./../security/SecurityService": 166,
        "./../users/UserService": 218,
        "./../utils/MenuHelper": 227,
        "./../utils/Moment": 228,
        "./../utils/PageHeaderHelper": 231,
        "./BaseReportController": 178,
        "./StatisticReportsService": 182,
        "./models/MaterialReportTarget": 185,
        "./models/ReportGroupType": 186,
        "./utils/ReportOptions": 187,
        "./utils/ReportTargetNamesMaker": 188,
        "./utils/ReportWriters": 189,
      },
    ],
    181: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./BaseReportController"),
          o = e("./models/MaterialReportTarget"),
          n = e("./models/ReportGroupType"),
          a = e("./StatisticReportsService"),
          u = e("./utils/ReportWriters"),
          l = e("./utils/ReportOptions"),
          c = e("./utils/ReportTargetNamesMaker"),
          d = e("./../security/SecurityService"),
          h = e("./../security/PermissionsService"),
          p = e("./../users/UserService"),
          f = e("./../utils/Moment"),
          m = e("./../utils/MenuHelper"),
          S = e("./../utils/PageHeaderHelper"),
          v = (function (e) {
            function t(t, r, i, s) {
              var n = this;
              e.call(this),
                (this.statisticReportsService = t),
                (this.userService = r),
                (this.permissionsApi = i),
                (this.securityService = s),
                (this.lineDiagramsReportWriter =
                  new u.LineDiagramsReportWriter()),
                (this.owners = []),
                (this.ownerIds = []),
                (this.materialTypeIds = []),
                (this.subjectIds = []),
                (this.lineDiagramsReportData = null),
                (this.lineDiagramsReportOptions =
                  l.getLineDiagramsReportOptions(
                    "The report on view of materials"
                  )),
                this.securityService.demandAuthentication(),
                m.MenuHelper.setCurrentMenuItem(
                  m.MenuHelper.ANALYTICS_MATERIAL_VIEW_REPORT_MENU_KEY
                ),
                S.PageHeader.set()
                  .header("The report on view of materials")
                  .update(),
                this.permissionsApi.getSystemPermissions().then(function (e) {
                  (n.systemPermissions = e),
                    n.systemPermissions.viewAnalytics
                      ? (n.userService
                          .getUsersWithoutExcludedUsersForSelector()
                          .then(function (e) {
                            n.owners = angular.copy(e);
                          }),
                        (n.reportTarget = o.MaterialReportTarget.OWNERS),
                        (n.reportTargetNamesMaker = new c.OwnerNamesMaker()))
                      : ((n.reportTarget =
                          o.MaterialReportTarget.MATERIAL_TYPES),
                        (n.reportTargetNamesMaker =
                          new c.MaterialTypeNamesMaker())),
                    n.viewReportGroupByDays();
                });
            }
            return (
              i(t, e),
              (t.prototype.viewReportGroupByDays = function () {
                this.viewReportGroupBy(n.ReportGroupType.DAYS);
              }),
              (t.prototype.viewReportGroupByWeeks = function () {
                this.viewReportGroupBy(n.ReportGroupType.WEEKS);
              }),
              (t.prototype.viewReportGroupByMonths = function () {
                this.viewReportGroupBy(n.ReportGroupType.MONTHS);
              }),
              (t.prototype.viewReportGroupByYears = function () {
                this.viewReportGroupBy(n.ReportGroupType.YEARS);
              }),
              (t.prototype.viewReportGroupBy = function (e) {
                var t = this;
                (this.groupType = e),
                  (this.lineDiagramsReportData = null),
                  this.statisticReportsService
                    .viewMaterialViewReport(
                      this.reportTarget,
                      this.groupType,
                      this.ownerIds,
                      this.materialTypeIds,
                      this.subjectIds,
                      f.Moment.textToJavaDate(this.dateFromText),
                      f.Moment.textToJavaDate(this.dateToText)
                    )
                    .then(function (e) {
                      (t.report = e),
                        (t.lineDiagramsReportOptions.series =
                          t.reportTargetNamesMaker.make(t.report, function (e) {
                            return { label: e };
                          })),
                        (t.lineDiagramsReportData =
                          t.lineDiagramsReportWriter.reporting(
                            t.report,
                            function (e) {
                              return [moment(e[0]).format("YYYY-MM-DD"), e[1]];
                            }
                          ));
                    });
              }),
              (t.prototype.isCurrentOwnersReportTarget = function () {
                return this.reportTarget == o.MaterialReportTarget.OWNERS;
              }),
              (t.prototype.isCurrentMaterialTypesReportTarget = function () {
                return (
                  this.reportTarget == o.MaterialReportTarget.MATERIAL_TYPES
                );
              }),
              (t.prototype.isCurrentSubjectsReportTarget = function () {
                return this.reportTarget == o.MaterialReportTarget.SUBJECTS;
              }),
              (t.prototype.setCurrentOwnersReportTarget = function () {
                this.setCurrentReportTarget(
                  o.MaterialReportTarget.OWNERS,
                  new c.OwnerNamesMaker()
                );
              }),
              (t.prototype.setCurrentMaterialTypesReportTarget = function () {
                this.setCurrentReportTarget(
                  o.MaterialReportTarget.MATERIAL_TYPES,
                  new c.MaterialTypeNamesMaker()
                );
              }),
              (t.prototype.setCurrentSubjectsReportTarget = function () {
                this.setCurrentReportTarget(
                  o.MaterialReportTarget.SUBJECTS,
                  new c.SubjectNamesMaker()
                );
              }),
              (t.prototype.setCurrentReportTarget = function (e, t) {
                (this.ownerIds = []),
                  (this.materialTypeIds = []),
                  (this.subjectIds = []),
                  (this.reportTarget = e),
                  (this.reportTargetNamesMaker = t);
              }),
              (t.NAME = "statistics.MaterialViewReportController"),
              (t.$inject = [
                a.StatisticReportsService.NAME,
                p.UserService.NAME,
                h.PermissionsService.NAME,
                d.SecurityService.NAME,
              ]),
              t
            );
          })(s.BaseReportController);
        r.MaterialViewReportController = v;
      },
      {
        "./../security/PermissionsService": 164,
        "./../security/SecurityService": 166,
        "./../users/UserService": 218,
        "./../utils/MenuHelper": 227,
        "./../utils/Moment": 228,
        "./../utils/PageHeaderHelper": 231,
        "./BaseReportController": 178,
        "./StatisticReportsService": 182,
        "./models/MaterialReportTarget": 185,
        "./models/ReportGroupType": 186,
        "./utils/ReportOptions": 187,
        "./utils/ReportTargetNamesMaker": 188,
        "./utils/ReportWriters": 189,
      },
    ],
    182: [
      function (e, t, r) {
        var i = e("./models/MaterialReportTarget"),
          s = e("./models/ReportGroupType"),
          o = e("./../utils/UrlService"),
          n = (function () {
            function e(e, t) {
              (this.$http = e), (this.url = t);
            }
            return (
              (e.prototype.viewMaterialViewReport = function (
                e,
                t,
                r,
                o,
                n,
                a,
                u
              ) {
                var l = this;
                return this.$http
                  .post(
                    this.url
                      .base(
                        "/api/statistics/reports/materials/views/by/:reportTarget/groupBy/:groupType"
                      )
                      .param(":reportTarget", i.MaterialReportTarget[e])
                      .param(":groupType", s.ReportGroupType[t])
                      .service(),
                    {
                      ownerIds: r,
                      materialTypeIds: o,
                      subjectIds: n,
                      dateFrom: a,
                      dateTo: u,
                    }
                  )
                  .then(function (e) {
                    return l.fillMissingDate(e.data, a, u, t);
                  });
              }),
              (e.prototype.viewMaterialDownloadReport = function (
                e,
                t,
                r,
                o,
                n,
                a,
                u
              ) {
                var l = this;
                return this.$http
                  .post(
                    this.url
                      .base(
                        "/api/statistics/reports/materials/downloads/by/:reportTarget/groupBy/:groupType"
                      )
                      .param(":reportTarget", i.MaterialReportTarget[e])
                      .param(":groupType", s.ReportGroupType[t])
                      .service(),
                    {
                      ownerIds: r,
                      materialTypeIds: o,
                      subjectIds: n,
                      dateFrom: a,
                      dateTo: u,
                    }
                  )
                  .then(function (e) {
                    return l.fillMissingDate(e.data, a, u, t);
                  });
              }),
              (e.prototype.viewMaterialUploadReport = function (
                e,
                t,
                r,
                o,
                n,
                a,
                u
              ) {
                var l = this;
                return this.$http
                  .post(
                    this.url
                      .base(
                        "/api/statistics/reports/materials/uploads/by/:reportTarget/groupBy/:groupType"
                      )
                      .param(":reportTarget", i.MaterialReportTarget[e])
                      .param(":groupType", s.ReportGroupType[t])
                      .service(),
                    {
                      ownerIds: r,
                      materialTypeIds: o,
                      subjectIds: n,
                      dateFrom: a,
                      dateTo: u,
                    }
                  )
                  .then(function (e) {
                    return l.fillMissingDate(e.data, a, u, t);
                  });
              }),
              (e.prototype.fillMissingDate = function (e, t, r, i) {
                var s = this;
                return (
                  (t = null != t ? t : e.groupedValues[0]),
                  (r =
                    null != r
                      ? r
                      : e.groupedValues[e.groupedValues.length - 1]),
                  e.data.forEach(function (e) {
                    var o = new Map();
                    e.value.forEach(function (e) {
                      o.set(e[0], e[1]);
                    });
                    for (
                      var n = [],
                        a = moment(t),
                        u = moment(r).add(1, s.getUnitOfTime(i));
                      a.isBefore(u);

                    ) {
                      var l = a.valueOf();
                      n.push([l, o.has(l) ? o.get(l) : 0]),
                        (a = a.add(1, s.getUnitOfTime(i)));
                    }
                    e.value = n;
                  }),
                  e
                );
              }),
              (e.prototype.getUnitOfTime = function (e) {
                switch (e) {
                  case s.ReportGroupType.DAYS:
                    return "d";
                  case s.ReportGroupType.WEEKS:
                    return "w";
                  case s.ReportGroupType.MONTHS:
                    return "M";
                  case s.ReportGroupType.YEARS:
                    return "y";
                }
              }),
              (e.NAME = "statistics.StatisticReportsService"),
              (e.$inject = ["$http", o.UrlService.NAME]),
              e
            );
          })();
        r.StatisticReportsService = n;
      },
      {
        "./../utils/UrlService": 236,
        "./models/MaterialReportTarget": 185,
        "./models/ReportGroupType": 186,
      },
    ],
    183: [
      function (e, t, r) {
        var i = e("./StatisticReportsService"),
          s = e("./ActionLogService"),
          o = e("./MaterialViewReportController"),
          n = e("./MaterialDownloadReportController"),
          a = e("./MaterialUploadReportController"),
          u = e("./../common/CommonModule"),
          l = e("./../security/SecurityModule"),
          c = e("./../urls/UrlsModule");
        r.StatisticsModule = angular
          .module("statistics", [
            u.CommonModule.name,
            l.SecurityModule.name,
            c.UrlsModule.name,
          ])
          .service(i.StatisticReportsService.NAME, i.StatisticReportsService)
          .service(s.ActionLogService.NAME, s.ActionLogService)
          .controller(
            o.MaterialViewReportController.NAME,
            o.MaterialViewReportController
          )
          .controller(
            n.MaterialDownloadReportController.NAME,
            n.MaterialDownloadReportController
          )
          .controller(
            a.MaterialUploadReportController.NAME,
            a.MaterialUploadReportController
          );
      },
      {
        "./../common/CommonModule": 29,
        "./../security/SecurityModule": 165,
        "./../urls/UrlsModule": 212,
        "./ActionLogService": 177,
        "./MaterialDownloadReportController": 179,
        "./MaterialUploadReportController": 180,
        "./MaterialViewReportController": 181,
        "./StatisticReportsService": 182,
      },
    ],
    184: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.MATERIAL_VIEW = 0)] = "MATERIAL_VIEW"),
            (e[(e.MATERIAL_CREATION = 1)] = "MATERIAL_CREATION"),
            (e[(e.MATERIAL_DOWNLOAD = 2)] = "MATERIAL_DOWNLOAD"),
            (e[(e.MATERIAL_PURCHASE = 3)] = "MATERIAL_PURCHASE"),
            (e[(e.PLAYLIST_VIEW = 4)] = "PLAYLIST_VIEW"),
            (e[(e.COURSE_COMPLETION = 5)] = "COURSE_COMPLETION"),
            (e[(e.LOGIN = 6)] = "LOGIN");
        })(r.ActionType || (r.ActionType = {}));
        r.ActionType;
      },
      {},
    ],
    185: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.OWNERS = 0)] = "OWNERS"),
            (e[(e.MATERIAL_TYPES = 1)] = "MATERIAL_TYPES"),
            (e[(e.SUBJECTS = 2)] = "SUBJECTS");
        })(r.MaterialReportTarget || (r.MaterialReportTarget = {}));
        r.MaterialReportTarget;
      },
      {},
    ],
    186: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.DAYS = 0)] = "DAYS"),
            (e[(e.WEEKS = 1)] = "WEEKS"),
            (e[(e.MONTHS = 2)] = "MONTHS"),
            (e[(e.YEARS = 3)] = "YEARS");
        })(r.ReportGroupType || (r.ReportGroupType = {}));
        r.ReportGroupType;
      },
      {},
    ],
    187: [
      function (e, t, r) {
        function i(e) {
          return {
            title: e,
            legend: { show: !0 },
            highlighter: { show: !0 },
            axes: {
              xaxis: {
                renderer: $.jqplot.DateAxisRenderer,
                tickOptions: { formatString: "%b %d, %Y" },
              },
              yaxis: { tickOptions: { formatString: "%.0f" } },
            },
          };
        }
        r.getLineDiagramsReportOptions = i;
      },
      {},
    ],
    188: [
      function (e, t, r) {
        var i = (function () {
          function e() {}
          return (
            (e.prototype.make = function (e, t) {
              var r = [];
              return (
                e.data.forEach(function (e) {
                  r.push(t(e.key.fullName));
                }),
                r
              );
            }),
            e
          );
        })();
        r.OwnerNamesMaker = i;
        var s = (function () {
          function e() {}
          return (
            (e.prototype.make = function (e, t) {
              var r = [];
              return (
                e.data.forEach(function (e) {
                  r.push(t(e.key.name));
                }),
                r
              );
            }),
            e
          );
        })();
        r.MaterialTypeNamesMaker = s;
        var o = (function () {
          function e() {}
          return (
            (e.prototype.make = function (e, t) {
              var r = [];
              return (
                e.data.forEach(function (e) {
                  r.push(t(e.key.name));
                }),
                r
              );
            }),
            e
          );
        })();
        r.SubjectNamesMaker = o;
      },
      {},
    ],
    189: [
      function (e, t, r) {
        var i = (function () {
          function e() {}
          return (
            (e.prototype.reporting = function (e, t) {
              var r = [];
              return (
                e.data.forEach(function (e) {
                  var i = [];
                  e.value.forEach(function (e) {
                    i.push(t(e));
                  }),
                    r.push(i);
                }),
                r
              );
            }),
            e
          );
        })();
        r.LineDiagramsReportWriter = i;
      },
      {},
    ],
    190: [
      function (e, t, r) {
        var i = e("./UploadsService");
        r.StorageModule = angular
          .module("storage", [])
          .service(i.UploadsService.NAME, i.UploadsService);
      },
      { "./UploadsService": 191 },
    ],
    191: [
      function (e, t, r) {
        var i = (function () {
          function e() {
            var t = this;
            (this.queue = []),
              (this.currentlyUploadableFiles = Array.apply(
                null,
                Array(e.UPLOAD_PARALLEL_FILES)
              ).map(function () {
                return null;
              })),
              (this.currentlyUploadableFilesMap = {}),
              (this.fileProgressFunc = function (e, r, i, s) {
                (r.uploaded = e.loaded), (r.guid = s.data.guid);
                var o = t.currentlyUploadableFilesMap[r.name + r.guid];
                if (o) {
                  var n = o.index;
                  t.currentlyUploadableFiles[n] = r;
                }
              }),
              (this.fileCompleteFunc = function (e, r, i, s) {
                (i.guid = s.data.guid),
                  "abort" == e
                    ? t.currentlyUploadableFilesMap[i.name + i.guid].abortFunc(
                        i
                      )
                    : e === !1
                    ? t.currentlyUploadableFilesMap[
                        i.name + i.guid
                      ].successFunc(i)
                    : t.currentlyUploadableFilesMap[i.name + i.guid].errorFunc(
                        i
                      );
                var o = t.currentlyUploadableFilesMap[i.name + i.guid].index;
                (t.currentlyUploadableFiles[o] = null),
                  (t.currentlyUploadableFilesMap[i.name + i.guid] = null),
                  t.uploadParallelFiles();
              }),
              (FileAPI.cors = !0);
          }
          return (
            (e.prototype.getCurrentlyUploadableFiles = function () {
              var e = [];
              return (
                this.currentlyUploadableFiles.forEach(function (t) {
                  null != t && e.push(t);
                }),
                this.queue.forEach(function (t) {
                  e.push(t);
                }),
                e
              );
            }),
            (e.prototype.cancel = function (e) {
              var t = this.currentlyUploadableFilesMap[e.name + e.guid].xhr;
              t.abort();
            }),
            (e.prototype.cancelByKey = function (e) {
              var t,
                r = this;
              this.currentlyUploadableFiles.forEach(function (i) {
                null != i &&
                  ((t = r.currentlyUploadableFilesMap[i.name + i.guid].key),
                  t == e && r.cancel(i));
              });
            }),
            (e.prototype.upload = function (e, t, r, i, s, o, n) {
              var a = this;
              FileAPI.filterFiles(
                [e],
                function () {
                  return !0;
                },
                function (e) {
                  e.length &&
                    (e.forEach(function (e) {
                      (e.guid = moment().valueOf()),
                        a.queue.push(e),
                        (a.currentlyUploadableFilesMap[e.name + e.guid] = {
                          index: null,
                          url: r,
                          method: i,
                          successFunc: s,
                          abortFunc: o,
                          errorFunc: n,
                          xhr: null,
                          key: t,
                        });
                    }),
                    a.uploadParallelFiles());
                }
              );
            }),
            (e.prototype.uploadParallelFiles = function () {
              var e = this;
              this.currentlyUploadableFiles.forEach(function (t, r) {
                if (e.queue.length > 0 && null == t) {
                  var i = e.queue.shift();
                  (e.currentlyUploadableFiles[r] = i),
                    (e.currentlyUploadableFilesMap[i.name + i.guid].index = r),
                    e.uploadOneFile(i);
                }
              });
            }),
            (e.prototype.uploadOneFile = function (e) {
              var t = this.currentlyUploadableFilesMap[e.name + e.guid],
                r = FileAPI.upload({
                  url: t.url,
                  method: t.method,
                  data: { guid: e.guid },
                  files: { file: e },
                  chunkSize: 100 * FileAPI.KB,
                  chunkUploadRetry: 3,
                  fileprogress: this.fileProgressFunc,
                  filecomplete: this.fileCompleteFunc,
                });
              t.xhr = r;
            }),
            (e.NAME = "storage.UploadsService"),
            (e.MATERIAL_KEY = "material"),
            (e.COURSE_KEY = "course"),
            (e.PREVIEW_UPLOAD_URL_KEY = "previewUploadUrl"),
            (e.PREVIEW_UPLOAD_METHOD_KEY = "previewUploadMethod"),
            (e.FILE_UPLOAD_URL_KEY = "fileUploadUrl"),
            (e.FILE_UPLOAD_METHOD_KEY = "fileUploadMethod"),
            (e.UPLOAD_PARALLEL_FILES = 3),
            e
          );
        })();
        r.UploadsService = i;
      },
      {},
    ],
    192: [
      function (e, t, r) {
        var i = e("./models/TreeElementState"),
          s = (function () {
            function e() {}
            return (
              (e.fillHierarchyInfo = function (t) {
                e.fillHierarchyInfoWithMaxLevel(t, e.MAX_VISIBLE_LEVEL);
              }),
              (e.fillHierarchyInfoWithMaxLevel = function (e, t) {
                for (var r = 0; r < e.length; r++) {
                  var i = e[r];
                  this.initHierarchyElement(i, t);
                }
                for (
                  var s = new Map(), o = new Map(), n = -1, r = 0;
                  r < e.length;
                  r++
                ) {
                  var i = e[r],
                    a = i.level;
                  if (
                    (a > this.FIRST_LEVEL && s.get(a - 1).push(i),
                    s.set(a, i.children),
                    o.set(a, i),
                    n > a)
                  )
                    for (var u = n; u > a; u--) o.get(u).isLastChild = !0;
                  n = a;
                }
                if (n >= this.FIRST_LEVEL)
                  for (var u = n; u >= this.FIRST_LEVEL; u--)
                    o.get(u).isLastChild = !0;
              }),
              (e.initHierarchyElement = function (e, t) {
                e &&
                  (void 0 == e.level && (e.level = 0),
                  (e.children = []),
                  (e.isLastChild = !1),
                  (e.state =
                    e.level < t
                      ? i.TreeElementState[i.TreeElementState.EXPANDED]
                      : i.TreeElementState[i.TreeElementState.COLLAPSED]),
                  (e.visible = e.level <= t),
                  (e.show = function () {
                    e.visible = !0;
                  }),
                  (e.hide = function () {
                    e.visible &&
                      ((e.visible = !1),
                      angular.forEach(e.children, function (e) {
                        return e.hide();
                      }));
                  }),
                  (e.expand = function () {
                    (e.state = i.TreeElementState[i.TreeElementState.EXPANDED]),
                      angular.forEach(e.children, function (e) {
                        return e.show();
                      });
                  }),
                  (e.expandAll = function () {
                    (e.state = i.TreeElementState[i.TreeElementState.EXPANDED]),
                      angular.forEach(e.children, function (e) {
                        return e.expand();
                      }),
                      angular.forEach(e.children, function (e) {
                        return e.show();
                      });
                  }),
                  (e.collapse = function () {
                    angular.forEach(e.children, function (e) {
                      return e.collapse();
                    }),
                      angular.forEach(e.children, function (e) {
                        return e.hide();
                      }),
                      (e.state =
                        i.TreeElementState[i.TreeElementState.COLLAPSED]);
                  }));
              }),
              (e.MAX_VISIBLE_LEVEL = 2),
              (e.FIRST_LEVEL = 1),
              e
            );
          })();
        r.TreeElementsInfoFiller = s;
      },
      { "./models/TreeElementState": 193 },
    ],
    193: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.COLLAPSED = 0)] = "COLLAPSED"),
            (e[(e.EXPANDED = 1)] = "EXPANDED");
        })(r.TreeElementState || (r.TreeElementState = {}));
        r.TreeElementState;
      },
      {},
    ],
    194: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("../utils/StringBuilder"),
          o = e("./BaseRouter"),
          n = (function (e) {
            function t(t) {
              e.call(this, t);
            }
            return (
              i(t, e),
              (t.prototype.logonUrl = function () {
                return this.url(t.logonRoute);
              }),
              (t.prototype.logoutUrl = function () {
                return this.url(t.logoutRoute);
              }),
              (t.prototype.accessDeniedUrl = function () {
                return this.url(t.accessDeniedRoute);
              }),
              (t.prototype.restorePassword = function () {
                return this.url(t.restorePasswordRoute);
              }),
              (t.prototype.checkValidCode = function () {
                return this.url(t.checkValidCodeRoute);
              }),
              (t.prototype.createNewPassword = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.createNewPasswordRoute)
                    ["with"](":" + t.PASSWORD_TOKEN_PARAM_NAME, e)
                    .build()
                );
              }),
              (t.prototype.createNewPasswordByCode = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.createNewPasswordByCodeRoute)
                    ["with"](":" + t.PASSWORD_CODE_PARAM_NAME, e)
                    .build()
                );
              }),
              (t.NAME = "urls.AuthRouter"),
              (t.ACCESS_DENIED_PARAM_NAME = "accessDenied"),
              (t.TOKEN_EXPIRED_PARAM_NAME = "tokenExpired"),
              (t.LOGON_REQUIRED_PARAM_NAME = "logonRequired"),
              (t.LOGON_PARAM_NAME = "logonName"),
              (t.PASSWORD_TOKEN_PARAM_NAME = "token"),
              (t.PASSWORD_CODE_PARAM_NAME = "code"),
              (t.RENEWAL_TYPE_PARAM_NAME = "renewalType"),
              (t.logonRoute = "/auth/logon"),
              (t.logoutRoute = "/auth/logout"),
              (t.accessDeniedRoute = "/auth/accessDenied"),
              (t.restorePasswordRoute = "/auth/restore/password"),
              (t.checkValidCodeRoute = "/auth/check/code"),
              (t.createNewPasswordRoute =
                "/auth/create/new/password/token/:" +
                t.PASSWORD_TOKEN_PARAM_NAME),
              (t.createNewPasswordByCodeRoute =
                "/auth/create/new/password/code/:" +
                t.PASSWORD_CODE_PARAM_NAME),
              (t.$inject = ["$location"]),
              t
            );
          })(o.BaseRouter);
        r.AuthRouter = n;
      },
      { "../utils/StringBuilder": 233, "./BaseRouter": 195 },
    ],
    195: [
      function (e, t, r) {
        var i = e("./../utils/LocationUtils"),
          s = (function () {
            function e(e) {
              this.$location = e;
            }
            return (
              (e.prototype.url = function (e) {
                return i.LocationUtils.preserveFullScreenUrl(e, this.$location);
              }),
              (e.$inject = ["$location"]),
              e
            );
          })();
        r.BaseRouter = s;
      },
      { "./../utils/LocationUtils": 226 },
    ],
    196: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./BaseRouter"),
          o = (function (e) {
            function t(t) {
              e.call(this, t);
            }
            return (
              i(t, e),
              (t.prototype.studentUrl = function () {
                return this.url(t.studentRoute);
              }),
              (t.prototype.teacherUrl = function () {
                return this.url(t.teacherRoute);
              }),
              (t.NAME = "urls.BroadcastsRouter"),
              (t.studentRoute = "/broadcasts/student"),
              (t.teacherRoute = "/broadcasts/teacher"),
              (t.$inject = ["$location"]),
              t
            );
          })(s.BaseRouter);
        r.BroadcastsRouter = o;
      },
      { "./BaseRouter": 195 },
    ],
    197: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./BaseRouter"),
          o = (function (e) {
            function t(t) {
              e.call(this, t);
            }
            return (
              i(t, e),
              (t.prototype.notFoundUrl = function () {
                return this.url(t.notFoundRoute);
              }),
              (t.NAME = "urls.CommonRouter"),
              (t.notFoundRoute = "/notFound"),
              (t.$inject = ["$location"]),
              t
            );
          })(s.BaseRouter);
        r.CommonRouter = o;
      },
      { "./BaseRouter": 195 },
    ],
    198: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./../ReferencedObjectType"),
          o = e("./../urls/MaterialsRouter"),
          n = e("./../urls/CoursesRouter"),
          a = e("./../urls/CommonRouter"),
          u = e("./../urls/BaseRouter"),
          l = (function (e) {
            function t(t, r, i, s) {
              e.call(this, t),
                (this.materialsRouter = r),
                (this.courseRouter = i),
                (this.commonRouter = s);
            }
            return (
              i(t, e),
              (t.prototype.detailsUrl = function (e, t) {
                var r =
                  "string" == typeof t
                    ? s.ReferencedObjectType[t]
                    : "number" == typeof t
                    ? t
                    : void 0;
                switch (r) {
                  case s.ReferencedObjectType.MATERIAL:
                    return this.materialsRouter.watchUrl(e);
                  case s.ReferencedObjectType.COURSE:
                    return this.courseRouter.detailsUrl(e);
                  case s.ReferencedObjectType.PLAYLIST:
                    return this.materialsRouter.playlistDetailsUrl(e);
                  default:
                    return this.commonRouter.notFoundUrl();
                }
              }),
              (t.NAME = "urls.ContentRouter"),
              (t.$inject = [
                "$location",
                o.MaterialsRouter.NAME,
                n.CoursesRouter.NAME,
                a.CommonRouter.NAME,
              ]),
              t
            );
          })(u.BaseRouter);
        r.ContentRouter = l;
      },
      {
        "./../ReferencedObjectType": 6,
        "./../urls/BaseRouter": 195,
        "./../urls/CommonRouter": 197,
        "./../urls/CoursesRouter": 199,
        "./../urls/MaterialsRouter": 204,
      },
    ],
    199: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./../utils/StringBuilder"),
          o = e("./BaseRouter"),
          n = (function (e) {
            function t(t) {
              e.call(this, t);
            }
            return (
              i(t, e),
              (t.prototype.indexUrl = function () {
                return this.url(t.indexRoute);
              }),
              (t.prototype.createUrl = function () {
                return this.url(t.createRoute);
              }),
              (t.prototype.detailsUrl = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.detailsRoute)
                    ["with"](":" + t.COURSE_ID_PARAM, e.toString())
                    .build()
                );
              }),
              (t.prototype.quizDetailsUrl = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.quizDetailsRoute)
                    ["with"](":" + t.COURSE_QUIZ_ID_PARAM, e.toString())
                    .build()
                );
              }),
              (t.prototype.updateUrl = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.updateRoute)
                    ["with"](":" + t.COURSE_ID_PARAM, e.toString())
                    .build()
                );
              }),
              (t.prototype.progressUrl = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.progressRoute)
                    ["with"](":" + t.COURSE_ID_PARAM, e.toString())
                    .build()
                );
              }),
              (t.prototype.infoUrl = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.infoRoute)
                    ["with"](":" + t.COURSE_ID_PARAM, e.toString())
                    .build()
                );
              }),
              (t.NAME = "urls.CoursesRouter"),
              (t.COURSE_ID_PARAM = "courseId"),
              (t.COURSE_QUIZ_ID_PARAM = "quizId"),
              (t.indexRoute = "/courses"),
              (t.detailsRoute = "/courses/:" + t.COURSE_ID_PARAM),
              (t.quizDetailsRoute =
                "/courses/quizzes/:" + t.COURSE_QUIZ_ID_PARAM),
              (t.updateRoute = "/courses/update/:" + t.COURSE_ID_PARAM),
              (t.createRoute = "/courses/create"),
              (t.progressRoute =
                "/courses/:" + t.COURSE_ID_PARAM + "/progress"),
              (t.infoRoute = "/courses/:" + t.COURSE_ID_PARAM + "/info"),
              (t.$inject = ["$location"]),
              t
            );
          })(o.BaseRouter);
        r.CoursesRouter = n;
      },
      { "./../utils/StringBuilder": 233, "./BaseRouter": 195 },
    ],
    200: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./../utils/StringBuilder"),
          o = e("./../utils/ObjectTypeUtils"),
          n = e("./BaseRouter"),
          a = (function (e) {
            function t(t) {
              e.call(this, t);
            }
            return (
              i(t, e),
              (t.prototype.balanceUrl = function () {
                return this.url(t.balanceRoute);
              }),
              (t.prototype.purchaseHistoryUrl = function () {
                return this.url(t.purchaseHistoryRoute);
              }),
              (t.prototype.accountManagementUrl = function () {
                return this.url(t.accountManagementRoute);
              }),
              (t.prototype.purchaseUrl = function (e, r) {
                return this.url(
                  s.StringBuilder.interpolate(t.purchaseRoute)
                    ["with"](":" + t.OBJECT_ID_PARAM, e)
                    ["with"](
                      ":" + t.OBJECT_TYPE_PARAM,
                      o.ObjectTypeUtils.getReferencedObjectTypeAsString(
                        r
                      ).toLowerCase()
                    )
                    .build()
                );
              }),
              (t.NAME = "urls.FinancesRouter"),
              (t.OBJECT_ID_PARAM = "objectId"),
              (t.OBJECT_TYPE_PARAM = "objectType"),
              (t.balanceRoute = "/finances/balance"),
              (t.purchaseHistoryRoute = "/finances/purchaseHistory"),
              (t.accountManagementRoute = "/finances/accountManagement"),
              (t.purchaseRoute =
                "/purchase/:" + t.OBJECT_TYPE_PARAM + "/:" + t.OBJECT_ID_PARAM),
              (t.$inject = ["$location"]),
              t
            );
          })(n.BaseRouter);
        r.FinancesRouter = a;
      },
      {
        "./../utils/ObjectTypeUtils": 230,
        "./../utils/StringBuilder": 233,
        "./BaseRouter": 195,
      },
    ],
    201: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./BaseRouter"),
          o = (function (e) {
            function t(t) {
              e.call(this, t);
            }
            return (
              i(t, e),
              (t.prototype.aboutProjectUrl = function () {
                return this.url(t.aboutProjectRoute);
              }),
              (t.prototype.aboutCompanyUrl = function () {
                return this.url(t.aboutCompanyRoute);
              }),
                (t.prototype.welcomeUrl = function () {
                return this.url(t.welcomeRoute);
              }),
              (t.prototype.renewalUrl = function () {
                return this.url(t.renewalRoute);
              }),
              (t.prototype.eligibilityUrl = function () {
                return this.url(t.eligibilityRoute);
              }),
              (t.prototype.guideUrl = function () {
                return this.url(t.guideRoute);
              }),
              (t.prototype.faqUrl = function () {
                return this.url(t.faqRoute);
              }),
              (t.prototype.contactsUrl = function () {
                return this.url(t.contactsRoute);
              }),
              (t.NAME = "urls.InfoRouter"),
              (t.aboutProjectRoute = "/info/about/project"),
              (t.aboutCompanyRoute = "/info/about/company"),
              (t.faqRoute = "/info/faq"),
              (t.welcomeRoute = "/info/welcome"),
              (t.renewalRoute = "/info/renewal"),
              (t.eligibilityRoute = "/info/eligibility"),
              (t.guideRoute = "/info/guide"),
              (t.contactsRoute = "/info/contacts"),
              (t.$inject = ["$location"]),
              t
            );
          })(s.BaseRouter);
        r.InfoRouter = o;
      },
      { "./BaseRouter": 195 },
    ],
    202: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./BaseRouter"),
          o = (function (e) {
            function t(t) {
              e.call(this, t);
            }
            return (
              i(t, e),
              (t.prototype.systemLogsUrl = function () {
                return this.url(t.systemLogsRoute);
              }),
              (t.prototype.securityLogsUrl = function () {
                return this.url(t.securityLogsRoute);
              }),
              (t.NAME = "urls.LogsRouter"),
              (t.securityLogsRoute = "/logs/security"),
              (t.systemLogsRoute = "/logs/system"),
              (t.$inject = ["$location"]),
              t
            );
          })(s.BaseRouter);
        r.LogsRouter = o;
      },
      { "./BaseRouter": 195 },
    ],
    203: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./BaseRouter"),
          o = (function (e) {
            function t(t) {
              e.call(this, t);
            }
            return (
              i(t, e),
              (t.prototype.mainUrl = function () {
                return this.url(t.mainRoute);
              }),
              (t.NAME = "urls.MainRouter"),
              (t.mainRoute = "/"),
              (t.$inject = ["$location"]),
              t
            );
          })(s.BaseRouter);
        r.MainRouter = o;
      },
      { "./BaseRouter": 195 },
    ],
    204: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./../utils/StringBuilder"),
          o = e("./BaseRouter"),
          n = (function (e) {
            function t(t) {
              e.call(this, t);
            }
            return (
              i(t, e),
              (t.prototype.searchUrl = function () {
                return this.url(t.searchRoute);
              }),
              (t.prototype.watchUrl = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.materialRoute)
                    ["with"](":" + t.MATERIAL_ID_PARAM, e.toString())
                    .build()
                );
              }),
              (t.prototype.myDownloadsUrl = function () {
                return this.url(t.myDownloadsRoute);
              }),
              (t.prototype.createUrl = function () {
                return this.url(t.createRoute);
              }),
              (t.prototype.playlistsUrl = function () {
                return this.url(t.playlistsRoute);
              }),
              (t.prototype.playlistDetailsUrl = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.playlistDetailsRoute)
                    ["with"](":" + t.PLAYLIST_ID_PARAM, e.toString())
                    .build()
                );
              }),
              (t.prototype.playlistEditUrl = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.playlistEditRoute)
                    ["with"](":" + t.PLAYLIST_ID_PARAM, e.toString())
                    .build()
                );
              }),
              (t.prototype.playlistCreateUrl = function () {
                return this.url(t.playlistCreateRoute);
              }),
              (t.prototype.updateUrl = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.updateRoute)
                    ["with"](":" + t.MATERIAL_ID_PARAM, e.toString())
                    .build()
                );
              }),
              (t.NAME = "urls.MaterialsRouter"),
              (t.MATERIAL_ID_PARAM = "materialId"),
              (t.PLAYLIST_ID_PARAM = "playlistId"),
              (t.searchRoute = "/materials/search"),
              (t.materialRoute = "/materials/:" + t.MATERIAL_ID_PARAM),
              (t.myDownloadsRoute = "/materials/my/downloads"),
              (t.createRoute = "/materials/create"),
              (t.playlistsRoute = "/materials/playlists"),
              (t.playlistCreateRoute = "/materials/playlists/create"),
              (t.playlistDetailsRoute =
                "/materials/playlists/:" + t.PLAYLIST_ID_PARAM),
              (t.playlistEditRoute =
                "/materials/playlists/:" + t.PLAYLIST_ID_PARAM + "/edit"),
              (t.updateRoute = "/materials/update/:" + t.MATERIAL_ID_PARAM),
              (t.$inject = ["$location"]),
              t
            );
          })(o.BaseRouter);
        r.MaterialsRouter = n;
      },
      { "./../utils/StringBuilder": 233, "./BaseRouter": 195 },
    ],
    205: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./../utils/StringBuilder"),
          o = e("./BaseRouter"),
          n = (function (e) {
            function t(t) {
              e.call(this, t);
            }
            return (
              i(t, e),
              (t.prototype.newsSearchUrl = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.newsSearchRoute)
                    ["with"](":" + t.NEWS_TYPE_PARAM, e.toLowerCase())
                    .build()
                );
              }),
              (t.prototype.oneNewsUrl = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.oneNewsRoute)
                    ["with"](":" + t.ONE_NEWS_ID_PARAM, e)
                    .build()
                );
              }),
              (t.prototype.oneNewsEditUrl = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.oneNewsEditRoute)
                    ["with"](":" + t.ONE_NEWS_ID_PARAM, e)
                    .build()
                );
              }),
              (t.prototype.oneNewsCreateUrl = function () {
                return this.url(t.oneNewsCreateRoute);
              }),
              (t.NAME = "urls.NewsRouter"),
              (t.ONE_NEWS_ID_PARAM = "newsId"),
              (t.NEWS_TYPE_PARAM = "newsType"),
              (t.newsSearchRoute = "/news/search/:" + t.NEWS_TYPE_PARAM),
              (t.oneNewsCreateRoute = "/news/create"),
              (t.oneNewsRoute = "/news/:" + t.ONE_NEWS_ID_PARAM),
              (t.oneNewsEditRoute = "/news/:" + t.ONE_NEWS_ID_PARAM + "/edit"),
              (t.$inject = ["$location"]),
              t
            );
          })(o.BaseRouter);
        r.NewsRouter = n;
      },
      { "./../utils/StringBuilder": 233, "./BaseRouter": 195 },
    ],
    206: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./BaseRouter"),
          o = (function (e) {
            function t(t) {
              e.call(this, t);
            }
            return (
              i(t, e),
              (t.prototype.profileUrl = function () {
                return this.url(t.profileRoute);
              }),
              (t.prototype.favoritesUrl = function () {
                return this.url(t.favoritesRoute);
              }),
              (t.prototype.uploadsUrl = function () {
                return this.url(t.uploadsRoute);
              }),
              (t.prototype.coursesUrl = function () {
                return this.url(t.coursesRoute);
              }),
              (t.prototype.quizzesUrl = function () {
                return this.url(t.quizzesRoute);
              }),
              (t.prototype.playlistsUrl = function () {
                return this.url(t.playlistsRoute);
              }),
              (t.prototype.subscriptionsUrl = function () {
                return this.url(t.subscriptionsRoute);
              }),
              (t.prototype.newCommentsUrl = function () {
                return this.url(t.newCommentsRoute);
              }),
              (t.prototype.supportUrl = function () {
                return this.url(t.supportRoute);
              }),
              (t.prototype.couponsUrl = function () {
                return this.url(t.couponsRoute);
              }),
              (t.prototype.purchasesHistoryUrl = function () {
                return this.url(t.purchasesHistoryRoute);
              }),
              (t.prototype.balanceUrl = function () {
                return this.url(t.balanceRoute);
              }),
              (t.prototype.settingsUrl = function () {
                return this.url(t.settingsRoute);
              }),
              (t.prototype.settingsAopaUrl = function () {
                return this.url(t.settingsAopaRoute);
              }),
              (t.NAME = "urls.PersonalRouter"),
              (t.profileRoute = "/personal/profile"),
              (t.favoritesRoute = "/personal/favorites"),
              (t.uploadsRoute = "/personal/uploads"),
              (t.coursesRoute = "/personal/courses"),
              (t.quizzesRoute = "/personal/quizzes"),
              (t.playlistsRoute = "/personal/playlists"),
              (t.subscriptionsRoute = "/personal/subscriptions"),
              (t.newCommentsRoute = "/personal/comments/news"),
              (t.supportRoute = "/personal/support"),
              (t.couponsRoute = "/personal/coupons"),
              (t.purchasesHistoryRoute = "/personal/purchases/history"),
              (t.balanceRoute = "/personal/balance"),
              (t.settingsRoute = "/personal/settings"),
              (t.settingsAopaRoute = "/personal/settings/password"),
              (t.$inject = ["$location"]),
              t
            );
          })(s.BaseRouter);
        r.PersonalRouter = o;
      },
      { "./BaseRouter": 195 },
    ],
    207: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./../utils/StringBuilder"),
          o = e("./BaseRouter"),
          n = (function (e) {
            function t(t) {
              e.call(this, t);
            }
            return (
              i(t, e),
              (t.prototype.indexUrl = function () {
                return this.url(t.indexRoute);
              }),
              (t.prototype.createUrl = function () {
                return this.url(t.createRoute);
              }),
              (t.prototype.detailsUrl = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.detailsRoute)
                    ["with"](":" + t.QUIZ_ID_PARAM, e.toString())
                    .build()
                );
              }),
              (t.prototype.updateUrl = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.updateRoute)
                    ["with"](":" + t.QUIZ_ID_PARAM, e.toString())
                    .build()
                );
              }),
              (t.prototype.passingUrl = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.passingRoute)
                    ["with"](":" + t.QUIZ_ID_PARAM, e.toString())
                    .build()
                );
              }),
              (t.NAME = "urls.QuizzesRouter"),
              (t.QUIZ_ID_PARAM = "quizId"),
              (t.indexRoute = "/quizzes"),
              (t.detailsRoute = "/quizzes/:" + t.QUIZ_ID_PARAM),
              (t.passingRoute = "/quizzes/passing/:" + t.QUIZ_ID_PARAM),
              (t.updateRoute = "/quizzes/update/:" + t.QUIZ_ID_PARAM),
              (t.createRoute = "/quizzes/create"),
              (t.$inject = ["$location"]),
              t
            );
          })(o.BaseRouter);
        r.QuizzesRouter = n;
      },
      { "./../utils/StringBuilder": 233, "./BaseRouter": 195 },
    ],
    208: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./../utils/StringBuilder"),
          o = e("./BaseRouter"),
          n = (function (e) {
            function t(t) {
              e.call(this, t);
            }
            return (
              i(t, e),
              (t.prototype.indexUrl = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.indexRoute)
                    ["with"](":" + t.REFERENCE_NAME_PARAM, e)
                    .build()
                );
              }),
              (t.prototype.editUrl = function (e, r) {
                return this.url(
                  s.StringBuilder.interpolate(t.editRoute)
                    ["with"](":" + t.REFERENCE_NAME_PARAM, e)
                    ["with"](":" + t.REFERENCE_ID_PARAM, null == r ? "new" : r)
                    .build()
                );
              }),
              (t.NAME = "urls.ReferenceRouter"),
              (t.REFERENCE_DEFAULT_VALUES_PARAM = "defaultValues"),
              (t.REFERENCE_FILTER_PARAM = "filter"),
              (t.REFERENCE_ASSOCIATION_FILTERS_PARAM = "associationFilters"),
              (t.REFERENCE_NAME_PARAM = "name"),
              (t.REFERENCE_ID_PARAM = "id"),
              (t.indexRoute = "/reference/:" + t.REFERENCE_NAME_PARAM),
              (t.editRoute =
                "/reference/:" +
                t.REFERENCE_NAME_PARAM +
                "/:" +
                t.REFERENCE_ID_PARAM),
              (t.$inject = ["$location"]),
              t
            );
          })(o.BaseRouter);
        r.ReferenceRouter = n;
      },
      { "./../utils/StringBuilder": 233, "./BaseRouter": 195 },
    ],
    209: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./BaseRouter"),
          o = (function (e) {
            function t(t) {
              e.call(this, t);
            }
            return (
              i(t, e),
              (t.prototype.materialViewReportUrl = function () {
                return this.url(t.materialViewReportRoute);
              }),
              (t.prototype.materialDownloadReportUrl = function () {
                return this.url(t.materialDownloadReportRoute);
              }),
              (t.prototype.materialUploadReportUrl = function () {
                return this.url(t.materialUploadReportRoute);
              }),
              (t.NAME = "urls.StatisticsRouter"),
              (t.materialViewReportRoute =
                "/statistics/analytics/material/view/report"),
              (t.materialDownloadReportRoute =
                "/statistics/analytics/material/download/report"),
              (t.materialUploadReportRoute =
                "/statistics/analytics/material/upload/report"),
              (t.$inject = ["$location"]),
              t
            );
          })(s.BaseRouter);
        r.StatisticsRouter = o;
      },
      { "./BaseRouter": 195 },
    ],
    210: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./../utils/StringBuilder"),
          o = e("./BaseRouter"),
          n = (function (e) {
            function t(t) {
              e.call(this, t);
            }
            return (
              i(t, e),
              (t.prototype.commonSettingsUrl = function () {
                return this.url(t.commonSettingsRoute);
              }),
              (t.prototype.storagePlacesIndexUrl = function () {
                return this.url(t.storagePlacesIndexRoute);
              }),
              (t.prototype.storagePlaceCreateUrl = function () {
                return this.url(t.storagePlaceCreateRoute);
              }),
              (t.prototype.storagePlaceEditUrl = function (e) {
                var r = s.StringBuilder.interpolate(t.storagePlaceEditRoute)
                  ["with"](":" + t.STORAGE_PLACE_ID_PARAM, e)
                  .build();
                return this.url(r);
              }),
              (t.NAME = "urls.SystemSettingsRouter"),
              (t.commonSettingsRoute = "/settings/common"),
              (t.STORAGE_PLACE_ID_PARAM = "storagePlaceId"),
              (t.storagePlacesIndexRoute = "/settings/storagePlaces"),
              (t.storagePlaceCreateRoute = "/settings/storagePlaces/create"),
              (t.storagePlaceEditRoute =
                "/settings/storagePlaces/:" +
                t.STORAGE_PLACE_ID_PARAM +
                "/edit"),
              (t.$inject = ["$location"]),
              t
            );
          })(o.BaseRouter);
        r.SystemSettingsRouter = n;
      },
      { "./../utils/StringBuilder": 233, "./BaseRouter": 195 },
    ],
    211: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = (function () {
            function e() {
              (this.serviceRoot = "/"),
                (this.buildVersion = "/"),
                (this.currentLocale = "en_US");
            }
            return (
              (e.prototype.setServiceRoot = function (e) {
                return (this.serviceRoot = e), this;
              }),
              (e.prototype.setBuildVersion = function (e) {
                return (this.buildVersion = e), this;
              }),
              (e.prototype.$get = function () {
                return new i.UrlService(
                  this.serviceRoot,
                  this.buildVersion,
                  this.currentLocale
                );
              }),
              (e.NAME = "urls.UrlServiceProvider"),
              e
            );
          })();
        r.UrlServiceProvider = s;
      },
      { "./../utils/UrlService": 236 },
    ],
    212: [
      function (e, t, r) {
        var i = e("./MainRouter"),
          s = e("./NewsRouter"),
          o = e("./InfoRouter"),
          n = e("./AuthRouter"),
          a = e("./ReferenceRouter"),
          u = e("./SystemSettingsRouter"),
          l = e("./UsersRouter"),
          c = e("./CoursesRouter"),
          d = e("./BroadcastsRouter"),
          h = e("./StatisticsRouter"),
          p = e("./MaterialsRouter"),
          f = e("./FinancesRouter"),
          m = e("./PersonalRouter"),
          S = e("./CommonRouter"),
          v = e("./ContentRouter"),
          y = e("./QuizzesRouter"),
          g = e("./LogsRouter"),
          M = e("./UrlServiceProvider"),
          E = e("./../utils/UrlService");
        r.UrlsModule = angular
          .module("urls", [])
          .service(i.MainRouter.NAME, i.MainRouter)
          .service(s.NewsRouter.NAME, s.NewsRouter)
          .service(o.InfoRouter.NAME, o.InfoRouter)
          .service(n.AuthRouter.NAME, n.AuthRouter)
          .service(a.ReferenceRouter.NAME, a.ReferenceRouter)
          .service(u.SystemSettingsRouter.NAME, u.SystemSettingsRouter)
          .service(l.UsersRouter.NAME, l.UsersRouter)
          .service(c.CoursesRouter.NAME, c.CoursesRouter)
          .service(d.BroadcastsRouter.NAME, d.BroadcastsRouter)
          .service(h.StatisticsRouter.NAME, h.StatisticsRouter)
          .service(p.MaterialsRouter.NAME, p.MaterialsRouter)
          .service(f.FinancesRouter.NAME, f.FinancesRouter)
          .service(m.PersonalRouter.NAME, m.PersonalRouter)
          .service(S.CommonRouter.NAME, S.CommonRouter)
          .service(v.ContentRouter.NAME, v.ContentRouter)
          .service(y.QuizzesRouter.NAME, y.QuizzesRouter)
          .service(g.LogsRouter.NAME, g.LogsRouter)
          .provider(E.UrlService.NAME, M.UrlServiceProvider);
      },
      {
        "./../utils/UrlService": 236,
        "./AuthRouter": 194,
        "./BroadcastsRouter": 196,
        "./CommonRouter": 197,
        "./ContentRouter": 198,
        "./CoursesRouter": 199,
        "./FinancesRouter": 200,
        "./InfoRouter": 201,
        "./LogsRouter": 202,
        "./MainRouter": 203,
        "./MaterialsRouter": 204,
        "./NewsRouter": 205,
        "./PersonalRouter": 206,
        "./QuizzesRouter": 207,
        "./ReferenceRouter": 208,
        "./StatisticsRouter": 209,
        "./SystemSettingsRouter": 210,
        "./UrlServiceProvider": 211,
        "./UsersRouter": 213,
      },
    ],
    213: [
      function (e, t, r) {
        var i =
            (this && this.__extends) ||
            function (e, t) {
              function r() {
                this.constructor = e;
              }
              for (var i in t) t.hasOwnProperty(i) && (e[i] = t[i]);
              (r.prototype = t.prototype), (e.prototype = new r());
            },
          s = e("./../utils/StringBuilder"),
          o = e("./BaseRouter"),
          n = (function (e) {
            function t(t) {
              e.call(this, t);
            }
            return (
              i(t, e),
              (t.prototype.indexUrl = function () {
                return this.url(t.indexRoute);
              }),
              (t.prototype.addUrl = function () {
                return this.url(t.addRoute);
              }),
              (t.prototype.signupUrl = function () {
                return this.url(t.signupRoute);
              }),
              (t.prototype.editUrl = function (e) {
                return this.url(
                  e ? t.editRoute.replace(":userId", e.toString()) : void 0
                );
              }),
              (t.prototype.currentProfileUrl = function (e) {
                return this.url(
                  e
                    ? t.currentProfileRoute.replace(":userProfileId", e)
                    : void 0
                );
              }),
              (t.prototype.groupsIndexUrl = function () {
                return this.url(t.groupIndexRoute);
              }),
              (t.prototype.groupsAddUrl = function () {
                return this.url(t.groupAddRoute);
              }),
              (t.prototype.groupEditUrl = function (e) {
                return this.url(
                  s.StringBuilder.interpolate(t.groupEditRoute)
                    ["with"](":" + t.GROUP_ID_PARAM, e.toString())
                    .build()
                );
              }),
              (t.prototype.fullScreenUrl = function (e) {
                return this.url(e);
              }),
              (t.NAME = "urls.UsersRouter"),
              (t.GROUP_ID_PARAM = "groupId"),
              (t.indexRoute = "/users/"),
              (t.addRoute = "/users/create"),
              (t.signupRoute = "/users/signup"),
              (t.editRoute = "/users/:userId/edit"),
              (t.currentProfileRoute = "/users/:userProfileId/profile"),
              (t.groupIndexRoute = "/users/groups"),
              (t.groupAddRoute = "/users/groups/create"),
              (t.groupEditRoute = "/users/groups/:groupId"),
              (t.$inject = ["$location"]),
              t
            );
          })(o.BaseRouter);
        r.UsersRouter = n;
      },
      { "./../utils/StringBuilder": 233, "./BaseRouter": 195 },
    ],
    214: [
      function (e, t, r) {
        var i = e("./UserService"),
          s = e("./models/IUser"),
          o = e("./../urls/UsersRouter"),
          n = e("./../utils/UrlService"),
          a = e("./../settings/SettingsService"),
          u = e("./../utils/MenuHelper"),
          l = e("./../utils/PageHeaderHelper"),
          c = e("./../INotifier"),
          d = (function () {
            function e(e, t, r, i, s, o, n, a, l, c) {
              (this.$timeout = e),
                (this.$log = t),
                (this.$http = r),
                (this.$q = i),
                (this.$routeParams = s),
                (this.$location = o),
                (this.usersApi = n),
                (this.settingsApi = a),
                (this.userRouter = l),
                (this.url = c),
                (this.disableSaveButton = !1),
                u.MenuHelper.setCurrentMenuItem(
                  u.MenuHelper.USER_PROFILE_MENU_KEY
                ),
                (this.user = { fullName: "", locale: null }),
                (this.userLogon = { name: "", password: "" }),
                this.loadUser(),
                this.loadUserLogon(),
                this.loadAvailableLocales();
            }
            return (
              (e.prototype.loadUser = function () {
                var e = this;
                this.usersApi.getCurrentUserProfile().then(function (t) {
                  l.PageHeader.set().header(t.fullName).update(),
                    angular.copy(t, e.user),
                    (e.isEverythingDisabled =
                      e.user.id == s.PredefinedUsersEnum.GUEST);
                });
              }),
              (e.prototype.loadUserLogon = function () {
                var e = this;
                this.usersApi.getCurrentUserLocalLogon().then(function (t) {
                  t && angular.copy(t, e.userLogon);
                });
              }),
              (e.prototype.loadAvailableLocales = function () {
                var e = this;
                this.settingsApi.getAvailableLocales().then(function (t) {
                  for (var r = 0; r < t.length; r++) {
                    var i = t[r];
                    i.defaultLocale && (e.user.locale = i.locale);
                  }
                  e.availableLocales = t;
                });
              }),
              (e.prototype.save = function () {
                var e = this;
                (this.disableSaveButton = !0), (this.confirmPassword = null);
                var t = this.usersApi.updateCurrentUserProfile(
                  this.user,
                  this.userLogon.password
                );
                t.then(function (t) {
                  (e.disableSaveButton = !1),
                    c.notifier.success(
                      "User '" + e.user.fullName + "' has been saved"
                    ),
                    e.loadUser();
                })["catch"](function (t) {
                  (e.disableSaveButton = !1),
                    "error.try.update.another.user" == t.data.error &&
                      c.notifier.error(
                        "You can change only your own profile settings"
                      );
                });
              }),
              (e.prototype.cancel = function () {
                this.loadUser(), this.loadUserLogon();
              }),
              (e.NAME = "users.CurrentUserProfileController"),
              (e.$inject = [
                "$timeout",
                "$log",
                "$http",
                "$q",
                "$routeParams",
                "$location",
                i.UserService.NAME,
                a.SettingsService.NAME,
                o.UsersRouter.NAME,
                n.UrlService.NAME,
              ]),
              e
            );
          })();
        r.CurrentUserProfileController = d;
      },
      {
        "./../INotifier": 4,
        "./../settings/SettingsService": 171,
        "./../urls/UsersRouter": 213,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./UserService": 218,
        "./models/IUser": 223,
      },
    ],
    215: [
      function (e, t, r) {
        var i = e("./UserService"),
          s = e("./../urls/UsersRouter"),
          o = e("./../utils/MenuHelper"),
          n = e("./../utils/PageHeaderHelper"),
          a = e("./../INotifier"),
          u = e("./../security/PermissionsService"),
          l = (function () {
            function e(e, t, r, i, a) {
              var u = this;
              (this.$routeParams = e),
                (this.$location = t),
                (this.usersService = r),
                (this.permissionsService = i),
                (this.usersRouter = a),
                (this.group = {
                  name: "",
                  isActive: !0,
                  parentId: null,
                  permissionsIds: [],
                }),
                (this.disableSaveButton = !1),
                o.MenuHelper.setCurrentMenuItem(
                  o.MenuHelper.ADMINISTRATION_GROUPS_MENU_KEY
                ),
                (this.groupId =
                  this.$routeParams[s.UsersRouter.GROUP_ID_PARAM]),
                i.getSystemPermissions().then(function (e) {
                  u.systemPermissions = e;
                }),
                this.groupId
                  ? this.loadGroup()
                  : n.PageHeader.set().header("New user group").update(),
                this.getActiveGroupsEntities();
            }
            return (
              (e.prototype.loadGroup = function () {
                var e = this;
                this.usersService.getGroup(this.groupId).then(function (t) {
                  angular.copy(t, e.group),
                    n.PageHeader.set().header(e.group.name).update();
                });
              }),
              (e.prototype.getActiveGroupsEntities = function () {
                var e = this,
                  t = this.groupId
                    ? this.usersService.getActiveGroupsNoChildren(this.groupId)
                    : this.usersService.getActiveGroups();
                t.then(function (t) {
                  e.groupsEntities = t;
                });
              }),
              (e.prototype.save = function () {
                var e = this;
                this.disableSaveButton = !0;
                var t = this.groupId
                  ? this.usersService.updateGroup(this.group)
                  : this.usersService.createGroup(this.group);
                t.then(function (t) {
                  (e.disableSaveButton = !1),
                    a.notifier.success(
                      "Group '" + e.group.name + "' has been saved"
                    ),
                    null == e.groupId
                      ? e.systemPermissions.editGroup
                        ? e.$location.path(e.usersRouter.groupEditUrl(t.id))
                        : e.$location.path(e.usersRouter.groupsIndexUrl())
                      : e.loadGroup();
                })["catch"](function (t) {
                  e.disableSaveButton = !1;
                });
              }),
              (e.prototype.deactivate = function () {
                var e = this,
                  t = this.usersService.setActiveGroupWithChildren(
                    !1,
                    this.group.id
                  );
                t.then(function (t) {
                  e.$location.url(e.usersRouter.groupsIndexUrl());
                });
              }),
              (e.NAME = "users.GroupEditController"),
              (e.$inject = [
                "$routeParams",
                "$location",
                i.UserService.NAME,
                u.PermissionsService.NAME,
                s.UsersRouter.NAME,
              ]),
              e
            );
          })();
        r.GroupEditController = l;
      },
      {
        "./../INotifier": 4,
        "./../security/PermissionsService": 164,
        "./../urls/UsersRouter": 213,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./UserService": 218,
      },
    ],
    216: [
      function (e, t, r) {
        var i = e("./../security/PermissionsService"),
          s = e("./../utils/UrlService"),
          o = e("./UserService"),
          n = e("./../urls/UsersRouter"),
          a = e("./../utils/MenuHelper"),
          u = e("./../utils/PageHeaderHelper"),
          l = e("./../IGridModel"),
          c = e("./../IHttpGridService"),
          d = e("./../tree/TreeElementsInfoFiller"),
          h = (function () {
            function e(e, t, r, i, s) {
              var o = this;
              (this.url = t),
                (this.usersService = r),
                (this.permissionsService = i),
                (this.usersRouter = s),
                a.MenuHelper.setCurrentMenuItem(
                  a.MenuHelper.ADMINISTRATION_GROUPS_MENU_KEY
                ),
                u.PageHeader.set().header("User Groups").update(),
                i.getSystemPermissions().then(function (e) {
                  u.PageHeader.set()
                    .preserveHeader()
                    .addActionLinkIf(
                      e.createGroup,
                      "+&nbsp;New",
                      o.usersRouter.groupsAddUrl()
                    )
                    .update(),
                    (o.systemPermissions = e);
                }),
                (this.groupsGridModel = new l.GridModel(
                  c.HttpGridHelper.createLoader(
                    e,
                    this.url.service("/api/users/groups/all")
                  )
                )),
                this.groupsGridModel.addLoadingListener(this);
            }
            return (
              (e.prototype.getGroupEditUrl = function (e) {
                return this.usersRouter.groupEditUrl(e);
              }),
              (e.prototype.activateGroup = function (e) {
                var t = this;
                this.usersService
                  .setActiveGroupWithChildren(!0, e)
                  .then(function (e) {
                    t.groupsGridModel.loadCurrentPage();
                  });
              }),
              (e.prototype.getIsActiveGridStyle = function (e) {
                return e ? {} : { color: "#999999" };
              }),
              (e.prototype.convertIsActive = function (e) {
                return void 0 != e ? (e ? "Yes" : "No") : void 0;
              }),
              (e.prototype.startLoading = function () {}),
              (e.prototype.endLoading = function () {
                d.TreeElementsInfoFiller.fillHierarchyInfoWithMaxLevel(
                  this.groupsGridModel.entries,
                  Number.MAX_VALUE
                );
              }),
              (e.NAME = "users.GroupsController"),
              (e.$inject = [
                "$http",
                s.UrlService.NAME,
                o.UserService.NAME,
                i.PermissionsService.NAME,
                n.UsersRouter.NAME,
              ]),
              e
            );
          })();
        r.GroupsController = h;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../security/PermissionsService": 164,
        "./../tree/TreeElementsInfoFiller": 192,
        "./../urls/UsersRouter": 213,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./UserService": 218,
      },
    ],
    217: [
      function (e, t, r) {
        var i = e("./models/IGroup"),
          s = e("./models/IUser"),
          o = e("./UserService"),
          n = e("./../urls/UsersRouter"),
          a = e("./../settings/SettingsService"),
          u = e("./../security/PermissionsService"),
          l = e("./../utils/UrlService"),
          c = e("./../auth/AuthService"),
          d = e("./../utils/MenuHelper"),
          h = e("./../utils/PageHeaderHelper"),
          p = e("./../INotifier"),
          f = (function () {
            function e(e, t, r, i, s, o, n, a, u, l, c, p) {
              var f = this;
              (this.$timeout = e),
                (this.$log = t),
                (this.$http = r),
                (this.$q = i),
                (this.$routeParams = s),
                (this.$location = o),
                (this.usersApi = n),
                (this.settingsApi = a),
                (this.permissionsApi = u),
                (this.usersRouter = l),
                (this.url = c),
                (this.authApi = p),
                (this.user = {
                  fullName: "",
                  isActive: !0,
                  newGroups: [],
                  locale: null,
                  userLogons: [],
                }),
                (this.activeGroup = !1),
                (this.logonProviders = []),
                (this.logonProvidersForAdd = []),
                (this.disableSaveButton = !1),
                d.MenuHelper.setCurrentMenuItem(
                  d.MenuHelper.ADMINISTRATION_USERS_MENU_KEY
                ),
                (this.userId = this.$routeParams.userId),
                u.getSystemPermissions().then(function (e) {
                  h.PageHeader.set()
                    .preserveHeader()
                    .addActionLinkIf(
                      e.createUser,
                      "+&nbsp;New",
                      f.usersRouter.addUrl()
                    )
                    .update(),
                    (f.systemPermissions = e);
                }),
                this.loadGroups(),
                this.loadLogonProviders(),
                this.loadAvailableLocales(),
                this.userId
                  ? this.loadUser()
                  : h.PageHeader.set().header("New User").update();
            }
            return (
              (e.prototype.loadUser = function () {
                var e = this;
                (this.isDeactivationAllowed = !(
                  this.userId in s.PredefinedUsersEnum
                )),
                  (this.isEverythingDisabled =
                    this.userId == s.PredefinedUsersEnum.GUEST),
                  this.usersApi.get(this.userId).then(function (t) {
                    (t.firstName = t.fullName.split(" ")[0]),
                      (t.lastName =
                        t.fullName.split(" ").length > 1
                          ? t.fullName.split(" ")[1]
                          : ""),
                      h.PageHeader.set().header(t.fullName).update(),
                      angular.copy(t, e.user),
                      (e.user.newGroups = []),
                      (e.user.userLogons = []),
                      e.loadUserGroups(),
                      e.loadUserLogons();
                  });
              }),
              (e.prototype.loadGroups = function () {
                var e = this;
                this.usersApi.getGroups().then(function (t) {
                  (e.groups = angular.copy(t)), e.loadUserGroups();
                });
              }),
              (e.prototype.loadLogonProviders = function () {
                var e = this;
                this.authApi.getProviders().then(function (t) {
                  (e.logonProviders = t),
                    e.recalculateAvailableLogonProviders();
                });
              }),
              (e.prototype.loadUserGroups = function () {
                var e = this;
                this.groups &&
                  this.groups.forEach(function (t) {
                    (t.selected = !1),
                      (t.canBeRemoved = !(
                        e.user.id == s.PredefinedUsersEnum.ADMIN &&
                        t.id == i.GroupEnum.SYS_ADMINS &&
                        e.user.id
                      )),
                      e.user.groupsList &&
                        e.user.groupsList.forEach(function (e) {
                          t.id == e.id && (t.selected = !0);
                        });
                  });
              }),
              (e.prototype.loadUserLogons = function () {
                var e = this;
                this.usersApi.getUserLogons(this.user.id).then(function (t) {
                  e.user.userLogons.splice(0, e.user.userLogons.length),
                    t.forEach(function (t) {
                      return e.user.userLogons.push(t);
                    }),
                    e.recalculateAvailableLogonProviders();
                });
              }),
              (e.prototype.loadAvailableLocales = function () {
                var e = this;
                this.settingsApi.getAvailableLocales().then(function (t) {
                  if (!e.userId)
                    for (var r = 0; r < t.length; r++) {
                      var i = t[r];
                      i.defaultLocale && (e.user.locale = i.locale);
                    }
                  e.availableLocales = t;
                });
              }),
              (e.prototype.save = function () {
                var e = this;
                (this.disableSaveButton = !0),
                  (this.confirmPassword = null),
                  this.user.groupsList &&
                    this.user.groupsList.forEach(function (t) {
                      e.user.newGroups.push(t.id);
                    }),
                  (this.user.fullName =
                    this.user.firstName + " " + this.user.lastName);
                var t = this.userId
                  ? this.usersApi.update(this.user)
                  : this.usersApi.create(this.user);
                t.then(function (t) {
                  (e.disableSaveButton = !1),
                    p.notifier.success(
                      "User '" + e.user.fullName + "' has been saved"
                    ),
                    null == e.userId
                      ? e.systemPermissions.editUser
                        ? e.$location.path(e.usersRouter.editUrl(t.id))
                        : e.$location.path(e.usersRouter.indexUrl())
                      : e.loadUser();
                })["catch"](function (t) {
                  if (
                    ((e.disableSaveButton = !1),
                    409 == t.status && t.data.error)
                  )
                    switch (t.data.error) {
                      case "error.user.duplicate.name":
                        e.error =
                          "Full name " + e.user.fullName + " already exists";
                        break;
                      case "error.user.duplicate.email":
                        e.error = "Email " + e.user.email + " already exists";
                        break;
                      case "error.duplicate.logon.provider":
                        e.error = "Only one logon for each type is allowed";
                        break;
                      default:
                        if (
                          0 ==
                          t.data.error.indexOf(
                            "error.duplicate.login.for.provider."
                          )
                        ) {
                          for (
                            var r = t.data.error.substring(
                                "error.duplicate.login.for.provider.".length
                              ),
                              i = null,
                              s = 0;
                            s < e.user.userLogons.length;
                            s++
                          )
                            if (e.user.userLogons[s].providerKey == r) {
                              i = e.user.userLogons[s].name;
                              break;
                            }
                          i
                            ? (e.error = "Username " + i + " already exists")
                            : (e.error =
                                "Query has failed: please contact your system administrator or help desk");
                        } else
                          e.error =
                            "Query has failed: please contact your system administrator or help desk";
                    }
                  p.notifier.error(e.error);
                });
              }),
              (e.prototype.deactivate = function () {
                var e = this,
                  t = this.usersApi.setActive(this.user.id, !1);
                t.then(function (t) {
                  e.$location.url(e.usersRouter.indexUrl());
                });
              }),
              (e.prototype.requestPasswordRestore = function () {
                var e = this;
                this.usersApi
                  .requestPasswordRestoreForUser(this.user.id)
                  .then(function (t) {
                    (e.resetPasswordLink = t),
                      $("#resetPasswordLinkDialog").modal({
                        backdrop: "static",
                        keyboard: !1,
                        show: !0,
                      });
                  })
                  ["catch"](function (e) {
                    "error.password.restore.impossible" === e.data.error
                      ? p.notifier.error(
                          "Password restore link can't be created. User do not have active Local logon."
                        )
                      : p.notifier.error(
                          "Query has failed: please contact your system administrator or help desk"
                        );
                  });
              }),
              (e.prototype.showGroups = function () {
                this.activeGroup = !0;
              }),
              (e.prototype.closeGroups = function () {
                this.activeGroup = !1;
              }),
              (e.prototype.selectGroup = function (e) {
                var t = this.groups[e];
                t.selected = !0;
              }),
              (e.prototype.unselectGroup = function (e) {
                var t = this.groups[e];
                t.selected = !1;
              }),
              (e.prototype.clearSelection = function () {
                this.loadUserGroups();
              }),
              (e.prototype.addGroups = function () {
                var e = this;
                (this.user.groupsList = []),
                  this.groups.forEach(function (t) {
                    t.selected && e.user.groupsList.push(t);
                  }),
                  this.closeGroups();
              }),
              (e.prototype.deleteGroup = function (e) {
                var t = this;
                this.groups.forEach(function (t) {
                  t.id == e && (t.selected = !1);
                }),
                  (this.user.groupsList = []),
                  this.groups.forEach(function (e) {
                    e.selected && t.user.groupsList.push(e);
                  });
              }),
              (e.prototype.recalculateAvailableLogonProviders = function () {
                var e = this;
                this.logonProvidersForAdd.splice(
                  0,
                  this.logonProvidersForAdd.length
                ),
                  this.logonProviders.forEach(function (t) {
                    for (var r = !1, i = 0; i < e.user.userLogons.length; i++)
                      if (e.user.userLogons[i].providerKey == t.key) {
                        r = !0;
                        break;
                      }
                    r || e.logonProvidersForAdd.push(t);
                  });
              }),
              (e.prototype.getLogonProviderName = function (e) {
                for (var t = 0; t < this.logonProviders.length; t++)
                  if (e == this.logonProviders[t].key)
                    return this.logonProviders[t].name;
                return void 0;
              }),
              (e.prototype.addUserLogon = function (e) {
                var t = {
                  id: null,
                  userId: this.user.id,
                  providerKey: e,
                  name: null,
                  password: null,
                  isActive: !0,
                };
                this.user.userLogons.push(t),
                  this.recalculateAvailableLogonProviders();
              }),
              (e.prototype.removeUserLogon = function (e) {
                for (var t = -1, r = 0; r < this.user.userLogons.length; r++)
                  if (this.user.userLogons[r].providerKey == e) {
                    t = r;
                    break;
                  }
                -1 != t &&
                  (this.user.userLogons.splice(t, 1),
                  this.recalculateAvailableLogonProviders());
              }),
              (e.NAME = "users.UserEditController"),
              (e.$inject = [
                "$timeout",
                "$log",
                "$http",
                "$q",
                "$routeParams",
                "$location",
                o.UserService.NAME,
                a.SettingsService.NAME,
                u.PermissionsService.NAME,
                n.UsersRouter.NAME,
                l.UrlService.NAME,
                c.AuthService.NAME,
              ]),
              e
            );
          })();
        r.UserEditController = f;
      },
      {
        "./../INotifier": 4,
        "./../auth/AuthService": 10,
        "./../security/PermissionsService": 164,
        "./../settings/SettingsService": 171,
        "./../urls/UsersRouter": 213,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./UserService": 218,
        "./models/IGroup": 222,
        "./models/IUser": 223,
      },
    ],
    218: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = (function () {
            function e(e, t) {
              (this.$http = e), (this.url = t);
            }
            return (
              (e.prototype.get = function (e) {
                return this.$http
                  .get(
                    this.url.base("/api/users/:id").param(":id", e).service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.create = function (e) {
                return this.$http
                  .post(this.url.service("/api/users"), e)
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.selfSignup = function (e) {
                return this.$http
                  .post(this.url.service("/api/users/selfSignup"), e)
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.update = function (e) {
                return this.$http
                  .put(this.url.service("/api/users"), e)
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.setActive = function (e, t) {
                return this.$http
                  .put(
                    this.url
                      .base("/api/users/:id/setActive/:isActive")
                      .param(":id", e)
                      .param(":isActive", t)
                      .service(),
                    void 0
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.requestPasswordRestoreForUser = function (e) {
                return this.$http
                  .post(
                    this.url.service(
                      "/api/users/" + e + "/localLogon/restorePassword"
                    ),
                    {}
                  )
                  .then(function (e) {
                    return e.data.link;
                  });
              }),
              (e.prototype.getGroups = function () {
                return this.$http
                  .get(this.url.service("/api/users/groups"))
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getUserLogons = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/users/:userId/logons")
                      .param(":userId", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getCurrentUserProfile = function () {
                return this.$http
                  .get(this.url.service("/api/users/currentProfile"))
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getCurrentUserLocalLogon = function () {
                return this.$http
                  .get(this.url.service("/api/users/current/localLogon"))
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.updateCurrentUserProfile = function (e, t) {
                var r = angular.copy(e);
                return (
                  (r.password = t),
                  this.$http
                    .put(this.url.service("/api/users/currentProfile"), r)
                    .then(function (e) {
                      return e.data;
                    })
                );
              }),
              (e.prototype.getUsersWithoutExcludedUsersForSelector = function (
                e
              ) {
                var t = { excludedUserIds: e };
                return this.$http
                  .get(this.url.service("/api/userSelector/users"), {
                    params: t,
                  })
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getGroupsWithoutExcludedGroupsForSelector =
                function (e) {
                  var t = { excludedGroupIds: e };
                  return this.$http
                    .get(this.url.service("/api/userSelector/groups"), {
                      params: t,
                    })
                    .then(function (e) {
                      return e.data;
                    });
                }),
              (e.prototype.setActiveGroupWithChildren = function (e, t) {
                return this.$http
                  .put(
                    this.url
                      .base(
                        "/api/users/groups/setActive/:isActive/with/children/:parentId"
                      )
                      .param(":isActive", e)
                      .param(":parentId", t)
                      .service(),
                    void 0
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getGroup = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/users/groups/:groupId")
                      .param(":groupId", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.createGroup = function (e) {
                return this.$http
                  .post(this.url.service("/api/users/groups"), e)
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.updateGroup = function (e) {
                return this.$http
                  .put(this.url.service("/api/users/groups"), e)
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getActiveGroupsNoChildren = function (e) {
                return this.$http
                  .get(
                    this.url
                      .base("/api/users/groups/active/no/children/:parentId")
                      .param(":parentId", e)
                      .service()
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.getActiveGroups = function () {
                return this.$http
                  .get(this.url.service("/api/users/groups/active"))
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.changeUserNotificationFrequency = function (e) {
                return this.$http
                  .post(
                    this.url.service("/api/users/notifications/frequency"),
                    e ? JSON.stringify(e) : null
                  )
                  .then(function (e) {
                    return e.data;
                  });
              }),
              (e.prototype.downloadCertificate = function (e) {
                var t = this,
                  r = "COURSE_CERTIFICATE";
                return this.$http
                  .post(
                    this.url
                      .base("/api/reports/downloadToken/:reportType")
                      .param(":reportType", r)
                      .service(),
                    { parameters: JSON.stringify(e) }
                  )
                  .then(function (e) {
                    return t.url
                      .base("/api/reports/download/:token")
                      .param(":token", e.data.token)
                      .service();
                  });
              }),
              (e.NAME = "users.UserService"),
              (e.$inject = ["$http", i.UrlService.NAME]),
              e
            );
          })();
        r.UserService = s;
      },
      { "./../utils/UrlService": 236 },
    ],
    219: [
      function (e, t, r) {
        var i = e("./models/IGroup"),
          s = e("./UserService"),
          o = e("./../settings/SettingsService"),
          n = e("./../auth/AuthService"),
          a = e("./../urls/AuthRouter"),
          u = e("./../authcore/AuthRedirect"),
          l = e("./../utils/MenuHelper"),
          c = e("./../utils/PageHeaderHelper"),
          d = e("./../INotifier"),
          h = e("./../urls/MainRouter"),
          p = e("./../security/SecurityService"),
          f = e("./../security/LogonProviderEnum"),
          m = e("./../infrastructure/Storage"),
          S = e("../utils/UrlService"),
          v = (function () {
            function e(e, t, r, s, o, n, a, u, d, h, p) {
              (this.$location = e),
                (this.$window = t),
                (this.userApi = r),
                (this.settingsApi = s),
                (this.authApi = o),
                (this.authRouter = n),
                (this.authRedirect = a),
                (this.mainRouter = u),
                (this.securityService = d),
                (this.localStorage = h),
                (this.url = p),
                (this.LAST_USED_PROVIDER_STORAGE_KEY =
                  "vhs.application.logon.last.used.provider"),
                (this.PROVIDER_STORAGE_KEY_LOCAL = "LOCAL"),
                (this.EN_US_LOCALE = "en_US"),
                (this.userLogon = {
                  name: "",
                  password: "",
                  providerKey: f.LogonProviderEnum[f.LogonProviderEnum.LOCAL],
                  isActive: !0,
                }),
                (this.user = {
                  fullName: "",
                  isActive: !0,
                  newGroups: [i.GroupEnum.REGISTERED_USERS],
                  locale: null,
                  userLogons: [this.userLogon],
                }),
                (this.disableSaveButton = !1),
                d.isAuthenticated() &&
                  this.$location.url(this.mainRouter.mainUrl()),
                l.MenuHelper.setCurrentMenuItem(l.MenuHelper.MAIN_MENU_KEY),
                c.PageHeader.set().header("Self sign-up").update(),
                $("#confirmMailField").bind("paste", function () {
                  return !1;
                });
            }
            return (
              (e.prototype.save = function () {
                var e = this;
                (this.disableSaveButton = !0),
                  (this.confirmEmail = null),
                  (this.confirmPassword = null),
                  (this.userLogon.name = this.user.email),
                  (this.user.fullName =
                    this.user.firstName + " " + this.user.lastName);
                var t = this.userApi.selfSignup(this.user);
                t.then(function () {
                  (e.disableSaveButton = !1),
                    d.notifier.success(
                      "User '" + e.user.fullName + "' has been saved"
                    ),
                    e.logOn();
                })["catch"](function (t) {
                  if (
                    ((e.disableSaveButton = !1),
                    409 == t.status && t.data.error)
                  )
                    switch (t.data.error) {
                      case "error.user.duplicate.name":
                        e.error =
                          "Full name " + e.user.fullName + " already exists";
                        break;
                      case "error.user.duplicate.email":
                        e.error = "Email " + e.user.email + " already exists";
                        break;
                      case "error.duplicate.logon.provider":
                        e.error = "Only one logon for each type is allowed";
                        break;
                      default:
                        if (
                          0 ===
                          t.data.error.indexOf(
                            "error.duplicate.login.for.provider."
                          )
                        ) {
                          for (
                            var r = t.data.error.substring(
                                "error.duplicate.login.for.provider.".length
                              ),
                              i = null,
                              s = 0;
                            s < e.user.userLogons.length;
                            s++
                          )
                            if (e.user.userLogons[s].providerKey == r) {
                              i = e.user.userLogons[s].name;
                              break;
                            }
                          i
                            ? (e.error = "Username " + i + " already exists")
                            : (e.error =
                                "Query has failed: please contact your system administrator or help desk");
                        } else
                          e.error =
                            "Query has failed: please contact your system administrator or help desk";
                    }
                  d.notifier.error(e.error);
                });
              }),
              (e.prototype.logOn = function () {
                var e = this;
                this.localStorage.put(
                  this.LAST_USED_PROVIDER_STORAGE_KEY,
                  this.PROVIDER_STORAGE_KEY_LOCAL
                ),
                  this.authApi
                    .logOn(
                      this.PROVIDER_STORAGE_KEY_LOCAL +
                        ":" +
                        this.userLogon.name,
                      this.userLogon.password
                    )
                    .then(function (t) {
                      e.authRedirect.returnAfterLogOn(!1);
                    });
              }),
              (e.prototype.doCancel = function () {
                this.$window.history.length > 1
                  ? this.$window.history.back()
                  : this.$location.url(this.mainRouter.mainUrl());
              }),
              (e.NAME = "users.UserSignupController"),
              (e.$inject = [
                "$location",
                "$window",
                s.UserService.NAME,
                o.SettingsService.NAME,
                n.AuthService.NAME,
                a.AuthRouter.NAME,
                u.AuthRedirect.NAME,
                h.MainRouter.NAME,
                p.SecurityService.NAME,
                m.Storages.LOCAL_NAME,
                S.UrlService.NAME,
              ]),
              e
            );
          })();
        r.UserSignupController = v;
      },
      {
        "../utils/UrlService": 236,
        "./../INotifier": 4,
        "./../auth/AuthService": 10,
        "./../authcore/AuthRedirect": 19,
        "./../infrastructure/Storage": 105,
        "./../security/LogonProviderEnum": 162,
        "./../security/SecurityService": 166,
        "./../settings/SettingsService": 171,
        "./../urls/AuthRouter": 194,
        "./../urls/MainRouter": 203,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./UserService": 218,
        "./models/IGroup": 222,
      },
    ],
    220: [
      function (e, t, r) {
        var i = e("./UserService"),
          s = e("./../urls/UsersRouter"),
          o = e("./../IGridModel"),
          n = e("./../IHttpGridService"),
          a = e("./../security/PermissionsService"),
          u = e("./../utils/UrlService"),
          l = e("./../utils/MenuHelper"),
          c = e("./../utils/PageHeaderHelper"),
          d = e("./../INotifier"),
          h = (function () {
            function e(e, t, r, i, s, a, u, d) {
              var h = this;
              (this.$timeout = e),
                (this.$window = t),
                (this.$log = r),
                (this.usersApi = s),
                (this.permissionsApi = a),
                (this.usersRouter = u),
                (this.url = d),
                l.MenuHelper.setCurrentMenuItem(
                  l.MenuHelper.ADMINISTRATION_USERS_MENU_KEY
                ),
                c.PageHeader.set().header("Users").update(),
                a.getSystemPermissions().then(function (e) {
                  c.PageHeader.set()
                    .preserveHeader()
                    .addActionLinkIf(
                      e.createUser,
                      "+&nbsp;New",
                      h.usersRouter.addUrl()
                    )
                    .update(),
                    (h.systemPermissions = e);
                }),
                (this.usersGridModel = new o.GridModel(
                  n.HttpGridHelper.createLoader(
                    i,
                    this.url.service("/api/users")
                  )
                ));
            }
            return (
              (e.prototype.getIsActiveGridStyle = function (e) {
                return e ? {} : { color: "#999999" };
              }),
              (e.prototype.convertIsActive = function (e) {
                return void 0 != e ? (e ? "Yes" : "No") : void 0;
              }),
              (e.prototype.activate = function (e, t) {
                var r = this,
                  i = this.usersApi.setActive(t, !0);
                i.then(function (t) {
                  d.notifier.success(
                    "User '" + t.fullName + "' has been activated"
                  ),
                    (r.usersGridModel.entries[e] = t);
                });
              }),
              (e.prototype.downloadUserCertificate = function (e) {
                var t = this,
                  r = {
                    courseId: e.courseId,
                    userId: e.id,
                    progressId: e.courseProgressId,
                    certificateId: null,
                    format: "pdf",
                  };
                this.usersApi.downloadCertificate(r).then(function (e) {
                  t.$window.open(e);
                });
              }),
              (e.NAME = "users.UsersListController"),
              (e.$inject = [
                "$timeout",
                "$window",
                "$log",
                "$http",
                i.UserService.NAME,
                a.PermissionsService.NAME,
                s.UsersRouter.NAME,
                u.UrlService.NAME,
              ]),
              e
            );
          })();
        r.UsersListController = h;
      },
      {
        "./../IGridModel": 2,
        "./../IHttpGridService": 3,
        "./../INotifier": 4,
        "./../security/PermissionsService": 164,
        "./../urls/UsersRouter": 213,
        "./../utils/MenuHelper": 227,
        "./../utils/PageHeaderHelper": 231,
        "./../utils/UrlService": 236,
        "./UserService": 218,
      },
    ],
    221: [
      function (e, t, r) {
        var i = e("./UserService"),
          s = e("./CurrentUserProfileController"),
          o = e("./UserEditController"),
          n = e("./UserSignupController"),
          a = e("./UsersController"),
          u = e("./GroupsController"),
          l = e("./GroupEditController"),
          c = e("./../settings/SettingsModule"),
          d = e("./../security/SecurityModule"),
          h = e("./../urls/UrlsModule");
        r.UsersModule = angular
          .module("users", [
            c.SettingsModule.name,
            d.SecurityModule.name,
            h.UrlsModule.name,
          ])
          .service(i.UserService.NAME, i.UserService)
          .controller(
            s.CurrentUserProfileController.NAME,
            s.CurrentUserProfileController
          )
          .controller(n.UserSignupController.NAME, n.UserSignupController)
          .controller(o.UserEditController.NAME, o.UserEditController)
          .controller(a.UsersListController.NAME, a.UsersListController)
          .controller(u.GroupsController.NAME, u.GroupsController)
          .controller(l.GroupEditController.NAME, l.GroupEditController);
      },
      {
        "./../security/SecurityModule": 165,
        "./../settings/SettingsModule": 170,
        "./../urls/UrlsModule": 212,
        "./CurrentUserProfileController": 214,
        "./GroupEditController": 215,
        "./GroupsController": 216,
        "./UserEditController": 217,
        "./UserService": 218,
        "./UserSignupController": 219,
        "./UsersController": 220,
      },
    ],
    222: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.EVERYONE = 1)] = "EVERYONE"),
            (e[(e.SYS_ADMINS = 2)] = "SYS_ADMINS"),
            (e[(e.MODERATORS = 3)] = "MODERATORS"),
            (e[(e.REGISTERED_USERS = 4)] = "REGISTERED_USERS");
        })(r.GroupEnum || (r.GroupEnum = {}));
        r.GroupEnum;
      },
      {},
    ],
    223: [
      function (e, t, r) {
        !(function (e) {
          (e[(e.ADMIN = 1)] = "ADMIN"), (e[(e.GUEST = 2)] = "GUEST");
        })(r.PredefinedUsersEnum || (r.PredefinedUsersEnum = {}));
        r.PredefinedUsersEnum;
      },
      {},
    ],
    224: [
      function (e, t, r) {
        var i = e("./../materials/models/MaterialType"),
          s = (function () {
            function e() {}
            return (
              (e.getFileExt = function (e) {
                return e.substr((~-e.lastIndexOf(".") >>> 0) + 2);
              }),
              (e.checkFileExt = function (t, r) {
                return e.MAP_FILE_EXTENSIONS_TO_MATERIAL_TYPES[r] === t;
              }),
              (e.findMaterialTypeByFileExtension = function (t) {
                return e.MAP_FILE_EXTENSIONS_TO_MATERIAL_TYPES[t];
              }),
              (e.MAP_FILE_EXTENSIONS_TO_MATERIAL_TYPES = {
                mp3: i.MaterialTypeEnum.AUDIO,
                mp4: i.MaterialTypeEnum.VIDEO,
                jpg: i.MaterialTypeEnum.PHOTO,
                png: i.MaterialTypeEnum.PHOTO,
                txt: i.MaterialTypeEnum.DOCUMENTS,
                doc: i.MaterialTypeEnum.DOCUMENTS,
                docx: i.MaterialTypeEnum.DOCUMENTS,
                ppt: i.MaterialTypeEnum.DOCUMENTS,
                pptx: i.MaterialTypeEnum.DOCUMENTS,
                pdf: i.MaterialTypeEnum.DOCUMENTS,
                xls: i.MaterialTypeEnum.DOCUMENTS,
                xlsx: i.MaterialTypeEnum.DOCUMENTS,
              }),
              e
            );
          })();
        r.ContentUtils = s;
      },
      { "./../materials/models/MaterialType": 124 },
    ],
    225: [
      function (e, t, r) {
        var i = (function () {
          function e() {}
          return (
            (e.findParentWithClass = function (e, t) {
              for (var r = e.parent(); r; ) {
                if (r.hasClass(t)) return $(r[0]);
                r = r.parent();
              }
              return null;
            }),
            (e.findParentWithAttr = function (e, t) {
              for (var r = e.parent(); r && r.length > 0; ) {
                if (r.length > 0 && void 0 != r.attr(t)) return $(r[0]);
                r = r.parent();
              }
              return null;
            }),
            e
          );
        })();
        r.DomUtils = i;
      },
      {},
    ],
    226: [
      function (e, t, r) {
        var i = (function () {
          function e() {}
          return (
            (e.isFullScreen = function (t) {
              return e.isFullScreenBySearch(t.search());
            }),
            (e.isFullScreenBySearch = function (t) {
              if (void 0 != t[e.FULL_SCREEN_LOCATION_PARAM]) {
                var r = t[e.FULL_SCREEN_LOCATION_PARAM];
                return "false" !== r;
              }
              return !0;
            }),
            (e.preserveFullScreenUrl = function (t, r) {
              return t
                ? e.isFullScreen(r)
                  ? t
                  : t + "?" + e.FULL_SCREEN_LOCATION_PARAM + "=false"
                : t;
            }),
            (e.FULL_SCREEN_LOCATION_PARAM = "fullScreen"),
            e
          );
        })();
        r.LocationUtils = i;
      },
      {},
    ],
    227: [
      function (e, t, r) {
        var i = (function () {
          function e() {}
          return (
            (e.setCurrentMenuItem = function (e) {
              var t = this.currentMenuItemKey;
              this.currentMenuItemKey = e;
              for (var r = 0; r < this.updateMenuListeners.length; r++)
                this.updateMenuListeners[r].onMenuItemUpdate(
                  this.currentMenuItemKey,
                  t
                );
            }),
            (e.addMenuUpdateListener = function (e) {
              -1 == this.updateMenuListeners.indexOf(e) &&
                this.updateMenuListeners.push(e);
            }),
            (e.removeMenuUpdateListener = function (e) {
              var t = this.updateMenuListeners.indexOf(e);
              t > -1 && this.updateMenuListeners.splice(t, 1);
            }),
            (e.getCurrentMenuItemKey = function () {
              return this.currentMenuItemKey;
            }),
            (e.ADMINISTRATION_MENU_KEY = "administration"),
            (e.ADMINISTRATION_USERS_MENU_KEY = "administration_users"),
            (e.ADMINISTRATION_GROUPS_MENU_KEY = "administration_groups"),
            (e.ADMINISTRATION_COMMON_SETTINGS_MENU_KEY =
              "administration_commonSettings"),
            (e.ADMINISTRATION_STORAGE_PLACES_MENU_KEY =
              "administration_storagePlaces"),
            (e.ADMINISTRATION_SUBJECTS_MENU_KEY = "administration_subjects"),
            (e.ADMINISTRATION_LANGUAGES_MENU_KEY = "administration_languages"),
            (e.ADMINISTRATION_COURSE_TYPES_MENU_KEY =
              "administration_courseTypes"),
            (e.ADMINISTRATION_SOURCES_MENU_KEY = "administration_sources"),
            (e.ADMINISTRATION_SOURCE_TYPES_MENU_KEY =
              "administration_sourceTypes"),
            (e.ADMINISTRATION_COMPLEXITY_LEVELS_MENU_KEY =
              "administration_complexityLevels"),
            (e.ADMINISTRATION_SYSTEM_LOGS_KEY = "administration__systemLogs"),
            (e.ADMINISTRATION_SECURITY_LOGS_KEY =
              "administration_securityLogs"),
            (e.USER_PROFILE_MENU_KEY = "user_profile"),
            (e.SEARCH_MENU_KEY = "search"),
            (e.MAIN_MENU_KEY = "mainpage"),
            (e.PROFILE_MENU_KEY = "profile"),
            (e.EDUCATION_MENU_KEY = "education"),
            (e.EDUCATION_STUDENT_BROADCASTS_MENU_KEY = "student_broadcasts"),
            (e.EDUCATION_TEACHER_BROADCASTS_MENU_KEY = "teacher_broadcasts"),
            (e.EDUCATION_COURSES_MENU_KEY = "courses"),
            (e.EDUCATION_PLAYLISTS_MENU_KEY = "playlists"),
            (e.EDUCATION_QUIZZES_MENU_KEY = "quizzes"),
            (e.FAVORITES_MENU_KEY = "favorites"),
            (e.OPERATIONS_MENU_KEY = "operations"),
            (e.OPERATIONS_UPLOADS_MENU_KEY = "operations_uploads"),
            (e.ANALYTICS_MENU_KEY = "analytics"),
            (e.ANALYTICS_MATERIAL_VIEW_REPORT_MENU_KEY =
              "analytics_material_view_report"),
            (e.ANALYTICS_MATERIAL_DOWNLOAD_REPORT_MENU_KEY =
              "analytics_material_download_report"),
            (e.ANALYTICS_MATERIAL_UPLOAD_REPORT_MENU_KEY =
              "analytics_material_upload_report"),
            (e.OPERATIONS_ACCOUNT_MANAGEMENT_MENU_KEY =
              "operations_accountManagement"),
            (e.NEWS_MENU_KEY = "news"),
            (e.ALL_NEWS_MENU_KEY = "all_news"),
            (e.STUDENTS_OFFERS_MENU_KEY = "students_offers"),
            (e.INFO_MENU_KEY = "info"),
            (e.ABOUT_PROJECT_MENU_KEY = "about_project"),
            (e.ABOUT_COMPANY_MENU_KEY = "about_company"),
            (e.FAQ_MENU_KEY = "faq"),
            (e.WELCOME_MENU_KEY = "welcome"),
            (e.RENEWAL_MENU_KEY = "renewal"),
            (e.ELIGIBILITY_MENU_KEY = "eligibility"),
            (e.GUIDE_MENU_KEY = "guide"),
            (e.CONTACTS_MENU_KEY = "contacts"),
            (e.PERSONAL_ACCOUNT_MENU_KEY = "personal_account"),
            (e.PERSONAL_ACCOUNT_UPLOADS_MENU_KEY = "personal_account_uploads"),
            (e.PERSONAL_ACCOUNT_COURSES_MENU_KEY = "personal_account_courses"),
            (e.PERSONAL_ACCOUNT_QUIZZES_MENU_KEY = "personal_account_quizzes"),
            (e.PERSONAL_ACCOUNT_PLAYLISTS_MENU_KEY =
              "personal_account_playlists"),
            (e.PERSONAL_ACCOUNT_SUBSCRIPTIONS_MENU_KEY =
              "personal_account_subscriptions"),
            (e.PERSONAL_ACCOUNT_NEW_COMMENTS_MENU_KEY =
              "personal_account_new_comments"),
            (e.PERSONAL_ACCOUNT_SUPPORT_MENU_KEY = "personal_account_support"),
            (e.PERSONAL_ACCOUNT_COUPONS_MENU_KEY = "personal_account_coupons"),
            (e.PERSONAL_ACCOUNT_PURCHASES_HISTORY_MENU_KEY =
              "personal_account_purchasesHistory"),
            (e.PERSONAL_ACCOUNT_BALANCE_MENU_KEY = "personal_account_balance"),
            (e.PERSONAL_ACCOUNT_SETTINGS_MENU_KEY =
              "personal_account_settings"),
            (e.currentMenuItemKey = ""),
            (e.updateMenuListeners = []),
            e
          );
        })();
        r.MenuHelper = i;
      },
      {},
    ],
    228: [
      function (e, t, r) {
        var i = (function () {
          function e() {}
          return (
            (e.parse = function (t) {
              return moment(t, e.DEFAULT_FORMAT);
            }),
            (e.textToJavaDate = function (t, r) {
              return null == t || "" == t
                ? null
                : ((r = r || e.DEFAULT_FORMAT), 1e3 * moment(t, r).unix());
            }),
            (e.isValidDate = function (t) {
              return null == t ? null : moment(t).format(e.DEFAULT_FORMAT);
            }),
            (e.DEFAULT_FORMAT = "M/D/YYYY"),
            e
          );
        })();
        r.Moment = i;
      },
      {},
    ],
    229: [
      function (e, t, r) {
        var i = (function () {
          function e() {}
          return (
            (e.findForPath = function (e, t) {
              for (var r = e, i = t.split("."), s = 0; s < i.length; s++) {
                var t = i[s];
                r = r[t];
              }
              return r;
            }),
            e
          );
        })();
        r.ObjectFieldResolver = i;
      },
      {},
    ],
    230: [
      function (e, t, r) {
        var i = e("./../materials/models/MaterialType"),
          s = e("./../materials/models/MaterialType"),
          o = e("./../ReferencedObjectType"),
          n = (function () {
            function e() {}
            return (
              (e.getMaterialTypeTitle = function (e) {
                switch (e) {
                  case i.MaterialType.AUDIO:
                    return "Audio";
                  case i.MaterialType.VIDEO:
                    return "Video";
                  case i.MaterialType.LINK:
                    return "Link";
                  case i.MaterialType.PHOTO:
                    return "Image";
                  case i.MaterialType.DOCUMENTS:
                    return "Other documents";
                }
              }),
              (e.getMaterialGlyphiconClass = function (e) {
                switch (e) {
                  case i.MaterialType.AUDIO:
                    return "glyphicon glyphicon-headphones";
                  case i.MaterialType.VIDEO:
                    return "glyphicon glyphicon-play";
                  case i.MaterialType.LINK:
                    return "glyphicon glyphicon-link";
                  case i.MaterialType.PHOTO:
                    return "glyphicon glyphicon-picture";
                  case i.MaterialType.DOCUMENTS:
                    return "glyphicon glyphicon-file";
                }
              }),
              (e.getMaterialGlyphiconClassFromKey = function (e) {
                switch (e) {
                  case s.MaterialTypeKeyEnum[s.MaterialTypeKeyEnum.AUDIO]:
                    return "glyphicon glyphicon-headphones";
                  case s.MaterialTypeKeyEnum[s.MaterialTypeKeyEnum.VIDEO]:
                    return "glyphicon glyphicon-play";
                  case s.MaterialTypeKeyEnum[s.MaterialTypeKeyEnum.LINK]:
                    return "glyphicon glyphicon-link";
                  case s.MaterialTypeKeyEnum[s.MaterialTypeKeyEnum.PHOTO]:
                    return "glyphicon glyphicon-picture";
                  case s.MaterialTypeKeyEnum[s.MaterialTypeKeyEnum.DOCUMENTS]:
                    return "glyphicon glyphicon-file";
                }
              }),
              (e.getNewsGlyphiconClass = function () {
                return "glyphicon glyphicon-info-sign";
              }),
              (e.getReferenceObjectTypeTitle = function (e) {
                switch (e) {
                  case o.ReferencedObjectType[o.ReferencedObjectType.MATERIAL]:
                    return "Material";
                  case o.ReferencedObjectType[o.ReferencedObjectType.COURSE]:
                    return "Course";
                  case o.ReferencedObjectType[o.ReferencedObjectType.PLAYLIST]:
                    return "Playlist";
                  case o.ReferencedObjectType[o.ReferencedObjectType.NEWS]:
                    return "News";
                }
              }),
              (e.getReferenceObjectTypeFromString = function (e) {
                switch (e) {
                  case o.ReferencedObjectType[o.ReferencedObjectType.MATERIAL]:
                    return o.ReferencedObjectType.MATERIAL;
                  case o.ReferencedObjectType[o.ReferencedObjectType.COURSE]:
                    return o.ReferencedObjectType.COURSE;
                  case o.ReferencedObjectType[o.ReferencedObjectType.PLAYLIST]:
                    return o.ReferencedObjectType.PLAYLIST;
                  case o.ReferencedObjectType[o.ReferencedObjectType.NEWS]:
                    return o.ReferencedObjectType.NEWS;
                }
              }),
              (e.getContentTypeTitle = function (e) {
                switch (e) {
                  case s.MaterialTypeKeyEnum[s.MaterialTypeKeyEnum.AUDIO]:
                    return "Audio";
                  case s.MaterialTypeKeyEnum[s.MaterialTypeKeyEnum.VIDEO]:
                    return "Video";
                  case s.MaterialTypeKeyEnum[s.MaterialTypeKeyEnum.LINK]:
                    return "Link";
                  case s.MaterialTypeKeyEnum[s.MaterialTypeKeyEnum.PHOTO]:
                    return "Image";
                  case s.MaterialTypeKeyEnum[s.MaterialTypeKeyEnum.DOCUMENTS]:
                    return "Other documents";
                  case o.ReferencedObjectType[o.ReferencedObjectType.PLAYLIST]:
                    return "Playlist";
                  case o.ReferencedObjectType[o.ReferencedObjectType.COURSE]:
                    return "Course";
                }
              }),
              (e.isMaterialObject = function (e) {
                return (
                  e == o.ReferencedObjectType[o.ReferencedObjectType.MATERIAL]
                );
              }),
              (e.isPlaylistObject = function (e) {
                return (
                  e == o.ReferencedObjectType[o.ReferencedObjectType.PLAYLIST]
                );
              }),
              (e.isCourseObject = function (e) {
                return (
                  e == o.ReferencedObjectType[o.ReferencedObjectType.COURSE]
                );
              }),
              (e.isNewObject = function (e) {
                return e == o.ReferencedObjectType[o.ReferencedObjectType.NEWS];
              }),
              (e.getReferencedObjectTypeAsString = function (e) {
                return e in o.ReferencedObjectType
                  ? "string" == typeof e
                    ? e
                    : "number" == typeof e
                    ? o.ReferencedObjectType[e]
                    : void 0
                  : void 0;
              }),
              (e.getReferencedObjectTypeAsNumber = function (e) {
                return e in o.ReferencedObjectType
                  ? "number" == typeof e
                    ? e
                    : "string" == typeof e
                    ? o.ReferencedObjectType[e]
                    : void 0
                  : void 0;
              }),
              (e.isYoutubeUrl = function (e) {
                return (
                  e &&
                  (0 == e.indexOf("https://www.youtube.com") ||
                    0 == e.indexOf("http://www.youtube.com") ||
                    0 == e.indexOf("https://youtu.be") ||
                    0 == e.indexOf("http://youtu.be"))
                );
              }),
              e
            );
          })();
        r.ObjectTypeUtils = n;
      },
      {
        "./../ReferencedObjectType": 6,
        "./../materials/models/MaterialType": 124,
      },
    ],
    231: [
      function (e, t, r) {
        var i = (function () {
          function e() {
            (this.actions = []),
              (this.preserveStatusPanel = !1),
              (this.preserveActionsPanel = !1),
              (this.preservePageName = !1);
          }
          return (
            (e.set = function () {
              return new e();
            }),
            (e.prototype.header = function (e) {
              return (this.pageName = e), (this.preservePageName = !1), this;
            }),
            (e.prototype.preserveHeader = function () {
              return (this.preservePageName = !0), this;
            }),
            (e.prototype.addActionLink = function (t, r) {
              var i = e.format(e.LINK_TEMPLATE, [r, t]);
              return (
                this.actions.push(i), (this.preserveActionsPanel = !1), this
              );
            }),
            (e.prototype.addActionLinkIf = function (e, t, r) {
              return e ? this.addActionLink(t, r) : this;
            }),
            (e.prototype.preserveLinks = function () {
              return (this.preserveActionsPanel = !0), this;
            }),
            (e.prototype.update = function () {
              s.updateHeader(this);
            }),
            (e.format = function (e, t) {
              for (var r = e, i = 0; /%s/.test(r); )
                r = r.replace("%s", t[i++]);
              return r;
            }),
            (e.STATUS_TEMPLATE =
              '%s <span class="%s-status-color-%s">%s&nbsp;</span><span class="%s-status-%s"></span>'),
            (e.STATUS_WITH_TOOLTIP_TEMPLATE =
              '%s <span class="%s-status-color-%s">%s&nbsp;</span><span class="%s-status-%s" data-toggle="tooltip" tooltip data-placement="top" title="%s"></span>'),
            (e.LINK_TEMPLATE = '<a role="button" href="#%s">%s</a>'),
            e
          );
        })();
        r.PageHeader = i;
        var s = (function () {
          function e() {}
          return (
            (e.updateHeader = function (e) {
              for (var t = 0; t < this.pageHeaderListeners.length; t++)
                this.pageHeaderListeners[t].onHeaderUpdate(e);
            }),
            (e.addPageHeaderUpdateListener = function (e) {
              -1 == this.pageHeaderListeners.indexOf(e) &&
                this.pageHeaderListeners.push(e);
            }),
            (e.removePageHeaderUpdateListener = function (e) {
              var t = this.pageHeaderListeners.indexOf(e);
              t > -1 && this.pageHeaderListeners.splice(t, 1);
            }),
            (e.pageHeaderListeners = []),
            e
          );
        })();
        r.PageHeaderHelper = s;
      },
      {},
    ],
    232: [
      function (e, t, r) {
        var i = (function () {
          function e() {}
          return (
            (e.generateRandomId = function (e) {
              return (
                "" +
                (e ? e : "") +
                String.fromCharCode(65 + Math.floor(26 * Math.random())) +
                Date.now()
              );
            }),
            e
          );
        })();
        r.RandomUtils = i;
      },
      {},
    ],
    233: [
      function (e, t, r) {
        var i = (function () {
          function e(e) {
            this.base = e;
          }
          return (
            (e.interpolate = function (t) {
              return new e(t);
            }),
            (e.prototype["with"] = function (e, t) {
              return (this.base = this.base.replace(e, t)), this;
            }),
            (e.prototype.add = function () {
              for (var e = this, t = [], r = 0; r < arguments.length; r++)
                t[r - 0] = arguments[r];
              return (
                t.forEach(function (t) {
                  return (e.base = e.base.concat(t));
                }),
                this
              );
            }),
            (e.prototype.addIf = function (e) {
              for (var t = this, r = [], i = 1; i < arguments.length; i++)
                r[i - 1] = arguments[i];
              return (
                e &&
                  r.forEach(function (e) {
                    return (t.base = t.base.concat(e));
                  }),
                this
              );
            }),
            (e.prototype.build = function () {
              return this.base;
            }),
            e
          );
        })();
        r.StringBuilder = i;
      },
      {},
    ],
    234: [
      function (e, t, r) {
        var i = (function () {
          function e() {
            this.semaphores = {};
          }
          return (
            (e.prototype.checkNew = function (e, t) {
              var r = this.getByUid(e);
              void 0 == r &&
                this.setByUid(e, { handler: t, hash: null, active: !1 });
            }),
            (e.prototype.getByUid = function (e) {
              return this.semaphores[e];
            }),
            (e.prototype.setByUid = function (e, t) {
              this.semaphores[e] = t;
            }),
            (e.prototype.processWithDelay = function (e, t, r) {
              this.checkNew(e, t);
              var i = new Date().getTime();
              this.setByUid(e, { handler: t, hash: i, active: !0 }),
                this.executeWithTimeout(t, r, e, i);
            }),
            (e.prototype.executeWithTimeout = function (e, t, r, i) {
              var s = this;
              setTimeout(function () {
                s.getByUid(r).hash === i && e();
              }, t);
            }),
            e
          );
        })();
        r.TimeoutUtils = i;
      },
      {},
    ],
    235: [
      function (e, t, r) {
        var i = e("./../utils/UrlService"),
          s = e("./../storage/UploadsService"),
          o = e("./../utils/StringBuilder"),
          n = e("./../INotifier"),
          a = (function () {
            function e(e, t, r) {
              (this.$http = e), (this.url = t), (this.uploadsService = r);
            }
            return (
              (e.prototype.uploadMaterialByChunks = function (t, r, i, s, a) {
                var u = this,
                  l = function (e) {
                    var t = u.url
                      .base(
                        "/api/materials/upload/completed?fileId=:fileId&materialId=:materialId"
                      )
                      .param(":fileId", r)
                      .param(":materialId", i)
                      .service();
                    u.$http.post(t, null).then(function () {
                      n.notifier.success(
                        o.StringBuilder.interpolate(
                          "The file (:fileName) has been successfully uploaded"
                        )
                          ["with"](":fileName", e.name)
                          .build()
                      );
                    });
                  },
                  c = function (e) {
                    var t = u.url
                      .base(
                        "/api/materials/upload/not/completed?fileId=:fileId&materialId=:materialId"
                      )
                      .param(":fileId", r)
                      .param(":materialId", i)
                      .service();
                    u.$http.post(t, null).then(function () {
                      n.notifier.error(
                        o.StringBuilder.interpolate(
                          "Uploading of the file (:fileName) has been canceled"
                        )
                          ["with"](":fileName", e.name)
                          .build()
                      );
                    });
                  },
                  d = function (e) {
                    var t = u.url
                      .base(
                        "/api/materials/upload/not/completed?fileId=:fileId&materialId=:materialId"
                      )
                      .param(":fileId", r)
                      .param(":materialId", i)
                      .service();
                    u.$http.post(t, null).then(function () {
                      n.notifier.error(
                        o.StringBuilder.interpolate(
                          "Uploading of the file (:fileName) has failed"
                        )
                          ["with"](":fileName", e.name)
                          .build()
                      );
                    });
                  };
                this.uploadsService.upload(
                  t,
                  e.MATERIAL_PREVIEW_KEY + i,
                  s,
                  a,
                  l,
                  c,
                  d
                );
              }),
              (e.prototype.uploadCourseByChunks = function (t, r, i, s, a) {
                var u = this,
                  l = function (e) {
                    var t = u.url
                      .base(
                        "/api/courses/upload/completed?fileId=:fileId&courseId=:courseId"
                      )
                      .param(":fileId", r)
                      .param(":courseId", i)
                      .service();
                    u.$http.post(t, null).then(function () {
                      n.notifier.success(
                        o.StringBuilder.interpolate(
                          "The file (:fileName) has been successfully uploaded"
                        )
                          ["with"](":fileName", e.name)
                          .build()
                      );
                    });
                  },
                  c = function (e) {
                    var t = u.url
                      .base(
                        "/api/courses/upload/not/completed?fileId=:fileId&courseId=:courseId"
                      )
                      .param(":fileId", r)
                      .param(":courseId", i)
                      .service();
                    u.$http.post(t, null).then(function () {
                      n.notifier.error(
                        o.StringBuilder.interpolate(
                          "Uploading of the file (:fileName) has been canceled"
                        )
                          ["with"](":fileName", e.name)
                          .build()
                      );
                    });
                  },
                  d = function (e) {
                    var t = u.url
                      .base(
                        "/api/courses/upload/not/completed?fileId=:fileId&courseId=:courseId"
                      )
                      .param(":fileId", r)
                      .param(":courseId", i)
                      .service();
                    u.$http.post(t, null).then(function () {
                      n.notifier.error(
                        o.StringBuilder.interpolate(
                          "Uploading of the file (:fileName) has failed"
                        )
                          ["with"](":fileName", e.name)
                          .build()
                      );
                    });
                  };
                this.uploadsService.upload(
                  t,
                  e.COURSE_PREVIEW_KEY + i,
                  s,
                  a,
                  l,
                  c,
                  d
                );
              }),
              (e.prototype.uploadBundleByChunks = function (t, r, i, s, a) {
                var u = this,
                  l = function (e) {
                    var t = u.url
                      .base(
                        "/api/bundles/upload/completed?fileId=:fileId&bundleId=:bundleId"
                      )
                      .param(":fileId", r)
                      .param(":bundleId", i)
                      .service();
                    u.$http.post(t, null).then(function () {
                      n.notifier.success(
                        o.StringBuilder.interpolate(
                          "The file (:fileName) has been successfully uploaded"
                        )
                          ["with"](":fileName", e.name)
                          .build()
                      );
                    });
                  },
                  c = function (e) {
                    var t = u.url
                      .base(
                        "/api/bundles/upload/not/completed?fileId=:fileId&bundleId=:bundleId"
                      )
                      .param(":fileId", r)
                      .param(":bundleId", i)
                      .service();
                    u.$http.post(t, null).then(function () {
                      n.notifier.error(
                        o.StringBuilder.interpolate(
                          "Uploading of the file (:fileName) has been canceled"
                        )
                          ["with"](":fileName", e.name)
                          .build()
                      );
                    });
                  },
                  d = function (e) {
                    var t = u.url
                      .base(
                        "/api/bundles/upload/not/completed?fileId=:fileId&bundleId=:bundleId"
                      )
                      .param(":fileId", r)
                      .param(":bundleId", i)
                      .service();
                    u.$http.post(t, null).then(function () {
                      n.notifier.error(
                        o.StringBuilder.interpolate(
                          "Uploading of the file (:fileName) has failed"
                        )
                          ["with"](":fileName", e.name)
                          .build()
                      );
                    });
                  };
                this.uploadsService.upload(
                  t,
                  e.BUNDLE_KEY + i + e.FILE_KEY + r,
                  s,
                  a,
                  l,
                  c,
                  d
                );
              }),
              (e.prototype.cancelMaterialPreviews = function (t) {
                this.uploadsService.cancelByKey(e.MATERIAL_PREVIEW_KEY + t);
              }),
              (e.prototype.cancelMaterialFiles = function (t) {
                this.uploadsService.cancelByKey(e.MATERIAL_FILE_KEY + t);
              }),
              (e.prototype.cancelCoursePreviews = function (t) {
                this.uploadsService.cancelByKey(e.COURSE_PREVIEW_KEY + t);
              }),
              (e.NAME = "utils.UploadUtils"),
              (e.MATERIAL_PREVIEW_KEY = "material_preview_"),
              (e.MATERIAL_FILE_KEY = "material_file_"),
              (e.COURSE_PREVIEW_KEY = "course_preview_"),
              (e.BUNDLE_KEY = "bundle_"),
              (e.FILE_KEY = "_file_"),
              (e.$inject = ["$http", i.UrlService.NAME, s.UploadsService.NAME]),
              e
            );
          })();
        r.UploadUtils = a;
      },
      {
        "./../INotifier": 4,
        "./../storage/UploadsService": 191,
        "./../utils/StringBuilder": 233,
        "./../utils/UrlService": 236,
      },
    ],
    236: [
      function (e, t, r) {
        function i(e, t, r) {
          return -1 != e.indexOf("?")
            ? e + "&" + t + "=" + r
            : e + "?" + t + "=" + r;
        }
        function s(e, t, s) {
          var o = e.replace(".html", "-" + s + ".html");
          return r.VIEWS_URL_PREFIX + i(o, "v", t);
        }
        function o(e, t) {
          var r = e;
          return i(r, "v", t);
        }
        function n(e, t, r) {
          return (
            r || (e = i(e, "no-cache", new Date().getTime().toString())),
            t + ("/" === e[0] ? e.substring(1) : e)
          );
        }
        var a = (function () {
          function e(e, t, r) {
            (this.serviceRoot = "/"),
              (this.appVersion = "/"),
              (this.defaultLocale = "ru_RU"),
              (this.id = new Date()),
              (this.serviceRoot = "/" != e[e.length - 1] ? e + "/" : e),
              (this.appVersion = t),
              (this.defaultLocale = r);
          }
          return (
            (e.prototype.service = function (e) {
              return n(e, this.serviceRoot, !1);
            }),
            (e.prototype.template = function (e) {
              return s(e, this.appVersion, this.defaultLocale);
            }),
            (e.prototype.base = function (e) {
              return new u(
                e,
                this.serviceRoot,
                this.appVersion,
                this.defaultLocale
              );
            }),
            (e.prototype.staticResourceUrl = function (e) {
              return o(e, this.appVersion);
            }),
            (e.NAME = "urls.UrlService"),
            e
          );
        })();
        r.UrlService = a;
        var u = (function () {
          function e(e, t, r, i) {
            (this.cache = !1),
              (this.base = e),
              (this.appVersion = r),
              (this.serviceRoot = t),
              (this.defaultLocale = i);
          }
          return (
            (e.prototype.param = function (e, t) {
              return (this.base = this.base.replace(e, t)), this;
            }),
            (e.prototype.cacheable = function () {
              return (this.cache = !0), this;
            }),
            (e.prototype.template = function () {
              return s(this.base, this.appVersion, this.defaultLocale);
            }),
            (e.prototype.service = function () {
              return n(this.base, this.serviceRoot, this.cache);
            }),
            e
          );
        })();
        r.VIEWS_URL_PREFIX = "views/";
      },
      {},
    ],
    237: [
      function (e, t, r) {
        var i = e("./UploadUtils");
        r.UtilsModule = angular
          .module("utils", [])
          .service(i.UploadUtils.NAME, i.UploadUtils);
      },
      { "./UploadUtils": 235 },
    ],
  },
  {},
  [8]
);
//# sourceMappingURL=app/en_US/app.js.map
