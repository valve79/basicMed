{"version":3,"sources":["../../../../../node_modules/browser-pack/_prelude.js","utils/src/main/build/app/en_US/utils/AppProperties.ts","app.js","../../../../../node_modules/moment/moment.js","src/main/build/app/en_US/IGridModel.ts","src/main/build/app/en_US/IHttpGridService.ts","src/main/build/app/en_US/INotifier.ts","src/main/build/app/en_US/PageMode.ts","src/main/build/app/en_US/ReferencedObjectType.ts","src/main/build/app/en_US/SortEntry.ts","src/main/build/app/en_US/app.ts","auth/src/main/build/app/en_US/auth/AuthModule.ts","auth/src/main/build/app/en_US/auth/AuthService.ts","auth/src/main/build/app/en_US/auth/CheckValidCodeController.ts","auth/src/main/build/app/en_US/auth/CreateNewPasswordController.ts","auth/src/main/build/app/en_US/auth/LogOnController.ts","auth/src/main/build/app/en_US/auth/LogOutController.ts","auth/src/main/build/app/en_US/auth/RenewalType.ts","auth/src/main/build/app/en_US/auth/RestorePasswordController.ts","authcore/src/main/build/app/en_US/authcore/AuthCoreModule.ts","authcore/src/main/build/app/en_US/authcore/AuthManager.ts","authcore/src/main/build/app/en_US/authcore/AuthRedirect.ts","authcore/src/main/build/app/en_US/authcore/Event.ts","authcore/src/main/build/app/en_US/authcore/RedirectReason.ts","authcore/src/main/build/app/en_US/authcore/TokenStorage.ts","broadcasts/src/main/build/app/en_US/broadcasts/BroadcastsModule.ts","broadcasts/src/main/build/app/en_US/broadcasts/StudentController.ts","broadcasts/src/main/build/app/en_US/broadcasts/TeacherController.ts","bundles/src/main/build/app/en_US/bundles/BundleService.ts","bundles/src/main/build/app/en_US/bundles/BundlesModule.ts","bundles/models/src/main/build/app/en_US/bundles/models/BundleFileType.ts","common/src/main/build/app/en_US/common/CommonModule.ts","common/src/main/build/app/en_US/common/CommonNavigation.ts","components/src/main/build/app/en_US/components/AutofocusDirective.ts","components/src/main/build/app/en_US/components/ComponentsModule.ts","components/src/main/build/app/en_US/components/CurrentYearDirective.ts","components/src/main/build/app/en_US/components/DateTimePickerDirective.ts","components/src/main/build/app/en_US/components/EntitiesSelect2SelectorDirective.ts","components/src/main/build/app/en_US/components/FullScreenDirective.ts","components/src/main/build/app/en_US/components/GridConfigurationDirective.ts","components/src/main/build/app/en_US/components/GridDirective.ts","components/src/main/build/app/en_US/components/GridEmptyDirective.ts","components/src/main/build/app/en_US/components/GridExternalConfiguration.ts","components/src/main/build/app/en_US/components/GridPaginationDirective.ts","components/src/main/build/app/en_US/components/LoadBundleFileDirective.ts","components/src/main/build/app/en_US/components/LoginDirective.ts","components/src/main/build/app/en_US/components/MultipleCheckboxSelectorDirective.ts","components/src/main/build/app/en_US/components/PageFooterDirective.ts","components/src/main/build/app/en_US/components/PageHeaderDirective.ts","components/src/main/build/app/en_US/components/PageTitleDirective.ts","components/src/main/build/app/en_US/components/PersonalMenuDirective.ts","components/src/main/build/app/en_US/components/ReferenceCheckboxSelectorDirective.ts","components/src/main/build/app/en_US/components/ReferenceDropdownSelectorDirective.ts","components/src/main/build/app/en_US/components/ReferenceMultipleSelectorDirective.ts","components/src/main/build/app/en_US/components/SelectOptionsDisabledDirective.ts","components/src/main/build/app/en_US/components/SelectPlaceholderDirective.ts","components/src/main/build/app/en_US/components/SuffixValidatorDirective.ts","components/src/main/build/app/en_US/components/TooltipDirective.ts","components/src/main/build/app/en_US/components/UploadsStatusDirective.ts","components/src/main/build/app/en_US/components/UsersAndGroupsSelectorDirective.ts","components/src/main/build/app/en_US/components/VhsEmbeddedMaterialDirective.ts","components/src/main/build/app/en_US/components/VhsMaterialEditingDirective.ts","components/src/main/build/app/en_US/components/VhsSearchDirective.ts","components/src/main/build/app/en_US/components/VhsSelectAllDirective.ts","components/src/main/build/app/en_US/components/VhsThumbnailDirective.ts","components/src/main/build/app/en_US/components/VhsVideoAudioDirective.ts","components/models/src/main/build/app/en_US/components/models/Event.ts","components/richText/src/main/build/app/en_US/components/richText/VhsSelectEmbeddedBundleDirective.ts","components/richtext/src/main/build/app/en_US/components/richtext/RichTextBindDirective.ts","components/richtext/src/main/build/app/en_US/components/richtext/RichTextContentLoadingSynchronizer.ts","components/richtext/src/main/build/app/en_US/components/richtext/RichTextEditorDirective.ts","components/richtext/src/main/build/app/en_US/components/richtext/VhsDownloadBundleDirective.ts","components/richtext/src/main/build/app/en_US/components/richtext/VhsEmbeddedBundleDirective.ts","components/richtext/src/main/build/app/en_US/components/richtext/VhsSandboxDirective.ts","components/richtext/src/main/build/app/en_US/components/richtext/VhsSelectEmbeddedBundleDirective.ts","components/richtext/src/main/build/app/en_US/components/richtext/VhsSelectMaterialDirective.ts","components/richtext/src/main/build/app/en_US/components/richtext/VhsSelectSandboxDirective.ts","content/src/main/build/app/en_US/content/ContentModule.ts","content/src/main/build/app/en_US/content/ContentService.ts","courses/src/main/build/app/en_US/courses/CourseDetailsController.ts","courses/src/main/build/app/en_US/courses/CourseEditController.ts","courses/src/main/build/app/en_US/courses/CourseInfoController.ts","courses/src/main/build/app/en_US/courses/CourseProgressController.ts","courses/src/main/build/app/en_US/courses/CourseService.ts","courses/src/main/build/app/en_US/courses/CoursesController.ts","courses/src/main/build/app/en_US/courses/CoursesModule.ts","courses/src/main/build/app/en_US/courses/ProgressService.ts","courses/src/main/build/app/en_US/courses/QuizDetailsController.ts","courses/models/src/main/build/app/en_US/courses/models/CourseProgressStatus.ts","courses/models/src/main/build/app/en_US/courses/models/SectionProgressStatus.ts","courses/models/src/main/build/app/en_US/courses/models/SectionResultStatistic.ts","courses/models/src/main/build/app/en_US/courses/models/SectionType.ts","finances/src/main/build/app/en_US/finances/AccountManagementController.ts","finances/src/main/build/app/en_US/finances/BalanceController.ts","finances/src/main/build/app/en_US/finances/FinancesModule.ts","finances/src/main/build/app/en_US/finances/PurchaseController.ts","finances/src/main/build/app/en_US/finances/PurchaseHistoryController.ts","finances/src/main/build/app/en_US/finances/PurchaseService.ts","http/src/main/build/app/en_US/http/HttpInterceptor.ts","http/src/main/build/app/en_US/http/HttpModule.ts","info/src/main/build/app/en_US/info/AboutCompanyController.ts","info/src/main/build/app/en_US/info/AboutProjectController.ts","info/src/main/build/app/en_US/info/ContactsController.ts","info/src/main/build/app/en_US/info/FAQController.ts","info/src/main/build/app/en_US/info/InfoModule.ts","infrastructure/src/main/build/app/en_US/infrastructure/EventService.ts","infrastructure/src/main/build/app/en_US/infrastructure/InfrastructureModule.ts","infrastructure/src/main/build/app/en_US/infrastructure/Storage.ts","logs/src/main/build/app/en_US/logs/ISecurityLog.ts","logs/src/main/build/app/en_US/logs/ISystemLog.ts","logs/src/main/build/app/en_US/logs/LogsModule.ts","logs/src/main/build/app/en_US/logs/SecurityLogController.ts","logs/src/main/build/app/en_US/logs/SystemLogController.ts","main/src/main/build/app/en_US/main/MainController.ts","main/src/main/build/app/en_US/main/MainModule.ts","main/src/main/build/app/en_US/main/MainService.ts","materials/src/main/build/app/en_US/materials/EditMaterialController.ts","materials/src/main/build/app/en_US/materials/MaterialController.ts","materials/src/main/build/app/en_US/materials/MaterialService.ts","materials/src/main/build/app/en_US/materials/MaterialsModule.ts","materials/src/main/build/app/en_US/materials/MyDownloadsController.ts","materials/src/main/build/app/en_US/materials/PlaylistDetailsController.ts","materials/src/main/build/app/en_US/materials/PlaylistEditController.ts","materials/src/main/build/app/en_US/materials/PlaylistService.ts","materials/src/main/build/app/en_US/materials/PlaylistsController.ts","materials/src/main/build/app/en_US/materials/SearchController.ts","materials/models/src/main/build/app/en_US/materials/models/MaterialType.ts","news/src/main/build/app/en_US/news/NewsEditController.ts","news/src/main/build/app/en_US/news/NewsModule.ts","news/src/main/build/app/en_US/news/NewsSearchController.ts","news/src/main/build/app/en_US/news/NewsService.ts","news/src/main/build/app/en_US/news/OneNewsController.ts","personal/src/main/build/app/en_US/personal/BalanceController.ts","personal/src/main/build/app/en_US/personal/CouponsController.ts","personal/src/main/build/app/en_US/personal/CoursesController.ts","personal/src/main/build/app/en_US/personal/FavoritesController.ts","personal/src/main/build/app/en_US/personal/NewCommentsController.ts","personal/src/main/build/app/en_US/personal/PersonalModule.ts","personal/src/main/build/app/en_US/personal/PersonalService.ts","personal/src/main/build/app/en_US/personal/PlaylistsController.ts","personal/src/main/build/app/en_US/personal/ProfileController.ts","personal/src/main/build/app/en_US/personal/ProfileMenuItemsKey.ts","personal/src/main/build/app/en_US/personal/PurchasesHistoryController.ts","personal/src/main/build/app/en_US/personal/QuizzesController.ts","personal/src/main/build/app/en_US/personal/SettingsController.ts","personal/src/main/build/app/en_US/personal/SubscriptionsController.ts","personal/src/main/build/app/en_US/personal/SupportController.ts","personal/src/main/build/app/en_US/personal/UploadsController.ts","quizzes/src/main/build/app/en_US/quizzes/QuizController.ts","quizzes/src/main/build/app/en_US/quizzes/QuizEditController.ts","quizzes/src/main/build/app/en_US/quizzes/QuizPassingController.ts","quizzes/src/main/build/app/en_US/quizzes/QuizService.ts","quizzes/src/main/build/app/en_US/quizzes/QuizzesController.ts","quizzes/src/main/build/app/en_US/quizzes/QuizzesModule.ts","reference/src/main/build/app/en_US/reference/ReferenceController.ts","reference/src/main/build/app/en_US/reference/ReferenceEditController.ts","reference/src/main/build/app/en_US/reference/ReferenceModule.ts","reference/src/main/build/app/en_US/reference/ReferenceRedirect.ts","reference/src/main/build/app/en_US/reference/ReferenceService.ts","reference/src/main/build/app/en_US/reference/ReferenceUtils.ts","reference/models/src/main/build/app/en_US/reference/models/IReferenceEntitiesParams.ts","reference/validators/src/main/build/app/en_US/reference/validators/ReferenceIsRequiredValidator.ts","reference/validators/src/main/build/app/en_US/reference/validators/ReferenceMaxLengthValidator.ts","reference/validators/src/main/build/app/en_US/reference/validators/ReferenceRequiredAttributesGroupValidator.ts","security/src/main/build/app/en_US/security/LogonProviderEnum.ts","security/src/main/build/app/en_US/security/PermissionsRepository.ts","security/src/main/build/app/en_US/security/PermissionsService.ts","security/src/main/build/app/en_US/security/SecurityModule.ts","security/src/main/build/app/en_US/security/SecurityService.ts","security/permissions/src/main/build/app/en_US/security/permissions/IPermission.ts","security/permissions/src/main/build/app/en_US/security/permissions/SecuredObjectType.ts","settings/src/main/build/app/en_US/settings/CommonSettingsController.ts","settings/src/main/build/app/en_US/settings/SettingsModule.ts","settings/src/main/build/app/en_US/settings/SettingsService.ts","settings/src/main/build/app/en_US/settings/StoragePlaceEditController.ts","settings/src/main/build/app/en_US/settings/StoragePlacesRegistryController.ts","settings/models/src/main/build/app/en_US/settings/models/StorageTypeEnum.ts","social/src/main/build/app/en_US/social/SocialModule.ts","social/src/main/build/app/en_US/social/SocialService.ts","statistics/src/main/build/app/en_US/statistics/ActionLogService.ts","statistics/src/main/build/app/en_US/statistics/BaseReportController.ts","statistics/src/main/build/app/en_US/statistics/MaterialDownloadReportController.ts","statistics/src/main/build/app/en_US/statistics/MaterialUploadReportController.ts","statistics/src/main/build/app/en_US/statistics/MaterialViewReportController.ts","statistics/src/main/build/app/en_US/statistics/StatisticReportsService.ts","statistics/src/main/build/app/en_US/statistics/StatisticsModule.ts","statistics/models/src/main/build/app/en_US/statistics/models/ActionType.ts","statistics/models/src/main/build/app/en_US/statistics/models/MaterialReportTarget.ts","statistics/models/src/main/build/app/en_US/statistics/models/ReportGroupType.ts","statistics/utils/src/main/build/app/en_US/statistics/utils/ReportOptions.ts","statistics/utils/src/main/build/app/en_US/statistics/utils/ReportTargetNamesMaker.ts","statistics/utils/src/main/build/app/en_US/statistics/utils/ReportWriters.ts","storage/src/main/build/app/en_US/storage/StorageModule.ts","storage/src/main/build/app/en_US/storage/UploadsService.ts","tree/src/main/build/app/en_US/tree/TreeElementsInfoFiller.ts","tree/models/src/main/build/app/en_US/tree/models/TreeElementState.ts","urls/src/main/build/app/en_US/urls/AuthRouter.ts","urls/src/main/build/app/en_US/urls/BaseRouter.ts","urls/src/main/build/app/en_US/urls/BroadcastsRouter.ts","urls/src/main/build/app/en_US/urls/CommonRouter.ts","urls/src/main/build/app/en_US/urls/ContentRouter.ts","urls/src/main/build/app/en_US/urls/CoursesRouter.ts","urls/src/main/build/app/en_US/urls/FinancesRouter.ts","urls/src/main/build/app/en_US/urls/InfoRouter.ts","urls/src/main/build/app/en_US/urls/LogsRouter.ts","urls/src/main/build/app/en_US/urls/MainRouter.ts","urls/src/main/build/app/en_US/urls/MaterialsRouter.ts","urls/src/main/build/app/en_US/urls/NewsRouter.ts","urls/src/main/build/app/en_US/urls/PersonalRouter.ts","urls/src/main/build/app/en_US/urls/QuizzesRouter.ts","urls/src/main/build/app/en_US/urls/ReferenceRouter.ts","urls/src/main/build/app/en_US/urls/StatisticsRouter.ts","urls/src/main/build/app/en_US/urls/SystemSettingsRouter.ts","urls/src/main/build/app/en_US/urls/UrlServiceProvider.ts","urls/src/main/build/app/en_US/urls/UrlsModule.ts","urls/src/main/build/app/en_US/urls/UsersRouter.ts","users/src/main/build/app/en_US/users/CurrentUserProfileController.ts","users/src/main/build/app/en_US/users/GroupEditController.ts","users/src/main/build/app/en_US/users/GroupsController.ts","users/src/main/build/app/en_US/users/UserEditController.ts","users/src/main/build/app/en_US/users/UserService.ts","users/src/main/build/app/en_US/users/UserSignupController.ts","users/src/main/build/app/en_US/users/UsersController.ts","users/src/main/build/app/en_US/users/UsersModule.ts","users/models/src/main/build/app/en_US/users/models/IGroup.ts","users/models/src/main/build/app/en_US/users/models/IUser.ts","utils/src/main/build/app/en_US/utils/ContentUtils.ts","utils/src/main/build/app/en_US/utils/DomUtils.ts","utils/src/main/build/app/en_US/utils/LocationUtils.ts","utils/src/main/build/app/en_US/utils/MenuHelper.ts","utils/src/main/build/app/en_US/utils/Moment.ts","utils/src/main/build/app/en_US/utils/ObjectFieldResolver.ts","utils/src/main/build/app/en_US/utils/ObjectTypeUtils.ts","utils/src/main/build/app/en_US/utils/PageHeaderHelper.ts","utils/src/main/build/app/en_US/utils/RandomUtils.ts","utils/src/main/build/app/en_US/utils/StringBuilder.ts","utils/src/main/build/app/en_US/utils/TimeoutUtils.ts","utils/src/main/build/app/en_US/utils/UploadUtils.ts","utils/src/main/build/app/en_US/utils/UrlService.ts","utils/src/main/build/app/en_US/utils/UtilsModule.ts"],"names":["require","e","t","n","r","s","o","u","a","i","f","Error","code","l","exports","call","length","AppProperties","module","defaultLocale","serviceRoot","appVersion","svnRevision","buildDate","authProvider","currentLocale","appTitle","buildVersion","1","global","factory","define","amd","moment","this","utils_hooks__hooks","hookCallback","apply","arguments","setHookCallback","callback","isArray","input","Object","prototype","toString","isDate","Date","map","arr","fn","res","push","hasOwnProp","b","hasOwnProperty","extend","valueOf","create_utc__createUTC","format","locale","strict","createLocalOrUTC","utc","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","getParsingFlags","m","_pf","valid__isValid","_isValid","flags","isNaN","_d","getTime","invalidWeekday","_strict","undefined","bigHour","valid__createInvalid","NaN","copyConfig","to","from","prop","val","_isAMomentObject","_i","_f","_l","_tzm","_isUTC","_offset","_locale","momentProperties","Moment","config","updateInProgress","updateOffset","isMoment","obj","absFloor","number","Math","ceil","floor","toInt","argumentForCoercion","coercedNumber","value","isFinite","compareArrays","array1","array2","dontConvert","len","min","lengthDiff","abs","diffs","Locale","normalizeLocale","key","toLowerCase","replace","chooseLocale","names","j","next","split","loadLocale","slice","join","name","oldLocale","locales","globalLocale","_abbr","locale_locales__getSetGlobalLocale","values","data","locale_locales__getLocale","defineLocale","abbr","set","addUnitAlias","unit","shorthand","lowerCase","aliases","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","makeGetSet","keepTime","get_set__set","get_set__get","mom","getSet","zeroFill","targetLength","forceSign","absNumber","zerosToFill","sign","pow","max","substr","addFormatToken","token","padded","ordinal","func","formatTokenFunctions","localeData","removeFormattingTokens","match","makeFormatFunction","array","formattingTokens","output","Function","formatMoment","isValid","expandFormat","formatFunctions","invalidDate","replaceLongDateFormatTokens","longDateFormat","localFormattingTokens","lastIndex","test","isFunction","sth","addRegexToken","regex","strictRegex","regexes","isStrict","getParseRegexForToken","RegExp","unescapeFormat","matched","p1","p2","p3","p4","addParseToken","tokens","addWeekParseToken","_w","addTimeToArrayFromToken","_a","daysInMonth","year","month","UTC","getUTCDate","localeMonths","_months","localeMonthsShort","_monthsShort","localeMonthsParse","monthName","_monthsParse","_longMonthsParse","_shortMonthsParse","months","monthsShort","setMonth","dayOfMonth","monthsParse","date","getSetMonth","getDaysInMonth","checkOverflow","MONTH","DATE","YEAR","HOUR","MINUTE","SECOND","MILLISECOND","_overflowDayOfYear","warn","msg","suppressDeprecationWarnings","console","deprecate","firstTime","stack","deprecateSimple","deprecations","configFromISO","string","from_string__isoRegex","exec","isoDates","isoTimes","matchOffset","configFromStringAndFormat","configFromString","aspNetJsonRegex","createFromInputFallback","createDate","y","d","h","M","ms","setFullYear","createUTCDate","setUTCFullYear","daysInYear","isLeapYear","getIsLeapYear","weekOfYear","firstDayOfWeek","firstDayOfWeekOfYear","adjustedMoment","end","daysToDayOfWeek","day","local__createLocal","add","week","dayOfYear","localeWeek","_week","dow","doy","localeFirstDayOfWeek","localeFirstDayOfYear","getSetWeek","getSetISOWeek","dayOfYearFromWeeks","weekday","week1Jan","janX","getUTCDay","getSetDayOfYear","round","clone","startOf","defaults","c","currentDateArray","now","_useUTC","getUTCFullYear","getUTCMonth","getFullYear","getMonth","getDate","configFromArray","currentDate","yearToUse","dayOfYearFromWeekInfo","_dayOfYear","_nextDay","setUTCMinutes","getUTCMinutes","w","weekYear","temp","GG","W","E","gg","ISO_8601","parsedInput","skipped","stringLength","totalParsedInputLength","indexOf","meridiemFixWrap","_meridiem","hour","meridiem","isPm","meridiemHour","isPM","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","minute","second","millisecond","createFromConfig","prepareConfig","preparse","configFromInput","parseInt","isUTC","pickBy","moments","args","Duration","duration","years","quarters","quarter","weeks","days","hours","minutes","seconds","milliseconds","_milliseconds","_days","_data","_bubble","isDuration","offset","separator","utcOffset","offsetFromString","matches","chunk","parts","chunkOffset","cloneWithOffset","model","diff","setTime","local","getDateOffset","getTimezoneOffset","getSetOffset","keepLocalTime","localAdjust","_changeInProgress","add_subtract__addSubtract","create__createDuration","getSetZone","setOffsetToUTC","setOffsetToLocal","subtract","setOffsetToParsedOffset","hasAlignedHourOffset","isDaylightSavingTime","isDaylightSavingTimeShifted","_isDSTShifted","other","toArray","isLocal","isUtcOffset","isUtc","ret","diffRes","aspNetRegex","create__isoRegex","parseIso","momentsDifference","inp","parseFloat","positiveMomentsDifference","base","isAfter","isBefore","createAdder","direction","period","dur","tmp","isAdding","moment_calendar__calendar","time","formats","sod","calendar","inputMs","endOf","isBetween","isSame","asFloat","delta","that","zoneDelta","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","moment_format__toISOString","toISOString","toDate","inputString","defaultFormat","postformat","withoutSuffix","humanize","fromNow","toNow","newLocaleData","isoWeekday","to_type__valueOf","unix","toObject","moment_valid__isValid","parsingFlags","invalidAt","addWeekYearFormatToken","getter","weeksInYear","getSetWeekYear","getSetISOWeekYear","getISOWeeksInYear","getWeeksInYear","weekInfo","getSetQuarter","parseWeekday","weekdaysParse","localeWeekdays","_weekdays","localeWeekdaysShort","_weekdaysShort","localeWeekdaysMin","_weekdaysMin","localeWeekdaysParse","weekdayName","_weekdaysParse","weekdays","weekdaysShort","weekdaysMin","getSetDayOfWeek","getDay","getSetLocaleDayOfWeek","getSetISODayOfWeek","lowercase","matchMeridiem","_meridiemParse","localeIsPM","charAt","localeMeridiem","isLower","parseMs","getZoneAbbr","getZoneName","moment__createUnix","moment__createInZone","parseZone","locale_calendar__calendar","_calendar","_longDateFormat","formatUpper","toUpperCase","_invalidDate","_ordinal","preParsePostFormat","relative__relativeTime","isFuture","_relativeTime","pastFuture","locale_set__set","_ordinalParseLenient","_ordinalParse","source","lists__get","index","field","setter","list","count","out","lists__listMonths","lists__listMonthsShort","lists__listWeekdays","lists__listWeekdaysShort","lists__listWeekdaysMin","duration_abs__abs","mathAbs","duration_add_subtract__addSubtract","duration_add_subtract__add","duration_add_subtract__subtract","absCeil","bubble","monthsFromDays","monthsToDays","daysToMonths","as","duration_as__valueOf","makeAs","alias","duration_get__get","makeGetter","substituteTimeAgo","relativeTime","duration_humanize__relativeTime","posNegDuration","thresholds","duration_humanize__getSetRelativeTimeThreshold","threshold","limit","withSuffix","iso_string__toISOString","iso_string__abs","Y","D","total","asSeconds","match1","match2","match3","match4","match6","match1to2","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchTimestamp","matchWord","defaultLocaleMonths","defaultLocaleMonthsShort","parseTwoDigitYear","getSetYear","defaultLocaleWeek","prototypeMin","prototypeMax","add_subtract__add","add_subtract__subtract","lang","isoWeekYear","getSetDayOfMonth","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","_isPm","defaultLocaleMeridiemParse","getSetHour","getSetMinute","getSetSecond","getSetMillisecond","momentPrototype__proto","get","toJSON","isoWeek","isoWeeks","isoWeeksInYear","isDST","isDSTShifted","zoneAbbr","zoneName","dates","zone","momentPrototype","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultInvalidDate","defaultOrdinal","defaultOrdinalParse","defaultRelativeTime","future","past","mm","hh","dd","MM","yy","prototype__proto","firstDayOfYear","ordinalParse","langData","asMilliseconds","asMinutes","asHours","asDays","asWeeks","asMonths","asYears","duration_prototype__proto","toIsoString","version","invalid","relativeTimeThreshold","_moment","2","PageMode_1","PersistedGridModelConfiguration","fromGridModel","gridModel","persisted","pageSize","gridColumns","sortEntries","sorting","filter","fieldName","nonPersistedFilterFields","angular","copy","GridColumn","visible","alwaysVisible","fixedColumn","reverseVisibility","GridModel","loadEntitiesApi","entries","totalCount","totalCountRevised","requestsPageMode","PageMode","ENTRIES_AND_TOTAL_ESTIMATES","totalPageCount","currentPage","selectedPage","DEFAULT_PAGE_SIZE","isLoading","isTotalLoading","loadListeners","columnsListeners","pageSizeListeners","loadEntitiesFunction","setDefaultPageSize","setMaxPageSize","MAX_PAGE_SIZE","addSortEntry","sortEntry","addLoadingListener","listener","clearLoadListeners","splice","addColumnVisibilityListener","addPageSizeListener","loadPage","pageNumber","loadPageForFilter","loadWithDelay","timeoutUtils","uuid","_this","processWithDelay","loadCurrentPage","pageMode","startLoading","initialRequestsMode","then","result","latestRevisedTotalFilter","equals","calculateTotalPages","listener_1","endLoading","loadRecordsCount","getPageSize","recalculateVisibleColumnsCount","column","visibleColumnsCount","changeColumnVisibility","columnIndex","onColumnVisibilityChange","onChangePageSize","knownToUsTotalCount","totalPages","MAX_USER_PAGE_SIZE","./PageMode","3","HttpGridService","$http","apiUrl","params","enableCache","getItems","page","size","mode","addNoCache","sortBy","sortDir","cache","grid","HttpGridHelper","createLoader","httpGridService","createLoaderWithCallback","4","Notifier","success","getNotifierDisplayMethod","toastr","error","warning","toastrDisplayMethod","message","title","overrides","escapeHTML","notifier","5","6","ReferencedObjectType","7","SortOrder","SortEntry","sortOrder","reverseOrder","ASC","DESC","asc","desc","8","configuration","$routeProvider","$logProvider","$httpProvider","urlServiceProvider","debugEnabled","setServiceRoot","AppProperties_1","setBuildVersion","url","$get","when","CommonRouter_1","CommonRouter","notFoundRoute","templateUrl","template","MainRouter_1","MainRouter","mainRoute","redirectTo","routeParams","path","search","fullScreen","LocationUtils_1","LocationUtils","isFullScreenBySearch","StringBuilder_1","StringBuilder","interpolate","CoursesRouter_1","CoursesRouter","detailsRoute","COURSE_ID_PARAM","build","AuthRouter_1","AuthRouter","logonRoute","logoutRoute","accessDeniedRoute","restorePasswordRoute","checkValidCodeRoute","createNewPasswordRoute","createNewPasswordByCodeRoute","MaterialsRouter_1","MaterialsRouter","searchRoute","myDownloadsRoute","createRoute","playlistsRoute","playlistCreateRoute","playlistDetailsRoute","playlistEditRoute","materialRoute","updateRoute","BroadcastsRouter_1","BroadcastsRouter","studentRoute","teacherRoute","StatisticsRouter_1","StatisticsRouter","materialViewReportRoute","materialDownloadReportRoute","materialUploadReportRoute","PersonalRouter_1","PersonalRouter","profileRoute","favoritesRoute","uploadsRoute","coursesRoute","quizzesRoute","subscriptionsRoute","newCommentsRoute","supportRoute","couponsRoute","purchasesHistoryRoute","balanceRoute","settingsRoute","settingsAopaRoute","FinancesRouter_1","FinancesRouter","purchaseHistoryRoute","accountManagementRoute","purchaseRoute","NewsRouter_1","NewsRouter","newsSearchRoute","oneNewsCreateRoute","oneNewsRoute","oneNewsEditRoute","InfoRouter_1","InfoRouter","aboutProjectRoute","aboutCompanyRoute","contactsRoute","faqRoute","ReferenceRouter_1","ReferenceRouter","indexRoute","editRoute","UsersRouter_1","UsersRouter","addRoute","signupRoute","currentProfileRoute","groupIndexRoute","groupAddRoute","groupEditRoute","SystemSettingsRouter_1","SystemSettingsRouter","commonSettingsRoute","storagePlacesIndexRoute","storagePlaceCreateRoute","storagePlaceEditRoute","LogsRouter_1","LogsRouter","systemLogsRoute","securityLogsRoute","progressRoute","infoRoute","reloadOnSearch","quizDetailsRoute","QuizzesRouter_1","QuizzesRouter","passingRoute","otherwise","interceptors","HttpInterceptor_1","HttpInterceptor","NAME","thirdPartyConfiguration","$provide","decorator","taRegisterTool","$rootScope","taOptions","callExternalTaToolFunction","textAngular","deferred","event","restoreSelection","eventData","eventSourceButton","$","$element","callbackFunction","html","$editor","displayElements","text","trigger","wrapSelection","resolve","$broadcast","RichTextEditorDirective_1","RichTextEditorController","TA_EMBEDDED_MATERIAL_BUTTON","iconclass","tooltiptext","action","Event_1","Event","TA_SELECT_EMBEDDED_MATERIAL","TA_EMBEDDED_BUNDLE_BUTTON","TA_SELECT_EMBEDDED_BUNDLE","TA_SANDBOX_BUTTON","TA_SELECT_SANDBOX","toolbar","taCustomRenderers","$compile","$timeout","selector","VhsEmbeddedMaterialDirective_1","VhsEmbeddedMaterialController","TA_ELEMENT_SELECTOR","customAttribute","renderLogic","element","TA_RENDER_FUNCTION","VhsEmbeddedBundleDirective_1","VhsEmbeddedBundleController","VhsSandboxDirective_1","VhsSandboxController","VhsDownloadBundleDirective_1","VhsDownloadBundleController","run","$log","authApi","authManager","authRedirect","localStorage","urlService","appVersionNumber","buildVersionNumber","completedSso","completePersonifySsoExchange","isAuthenticated","getToken","LogOnController_1","LogOnController","reloadApplicationForLocaleIfNeeded","restartAutoRefresh","restoreAvailable","tryPersonifySsoIfAllowed","VERSION_STORAGE_KEY","contains","INotifier_1","put","parsed","AuthModule_1","AuthService_1","AuthCoreModule_1","AuthManager_1","AuthRedirect_1","BroadcastsModule_1","ComponentsModule_1","HttpModule_1","InfrastructureModule_1","Storage_1","MainModule_1","NewsModule_1","InfoModule_1","PersonalModule_1","StatisticsModule_1","MaterialsModule_1","ReferenceModule_1","SecurityModule_1","SettingsModule_1","UrlsModule_1","UrlServiceProvider_1","UsersModule_1","BundlesModule_1","CoursesModule_1","FinancesModule_1","CommonModule_1","StorageModule_1","QuizzesModule_1","LogsModule_1","UtilsModule_1","UrlService_1","CommonModule","AuthModule","AuthCoreModule","UrlsModule","SecurityModule","InfrastructureModule","HttpModule","ComponentsModule","StatisticsModule","ReferenceModule","UsersModule","SettingsModule","LogsModule","MainModule","MaterialsModule","NewsModule","InfoModule","BroadcastsModule","PersonalModule","BundlesModule","CoursesModule","FinancesModule","StorageModule","QuizzesModule","UtilsModule","UrlServiceProvider","AuthService","AuthManager","AuthRedirect","Storages","LOCAL_NAME","UrlService","window","onbeforeunload","returnValue","./INotifier","./auth/AuthModule","./auth/AuthService","./auth/LogOnController","./authcore/AuthCoreModule","./authcore/AuthManager","./authcore/AuthRedirect","./broadcasts/BroadcastsModule","./bundles/BundlesModule","./common/CommonModule","./components/ComponentsModule","./components/VhsEmbeddedMaterialDirective","./components/models/Event","./components/richtext/RichTextEditorDirective","./components/richtext/VhsDownloadBundleDirective","./components/richtext/VhsEmbeddedBundleDirective","./components/richtext/VhsSandboxDirective","./courses/CoursesModule","./finances/FinancesModule","./http/HttpInterceptor","./http/HttpModule","./info/InfoModule","./infrastructure/InfrastructureModule","./infrastructure/Storage","./logs/LogsModule","./main/MainModule","./materials/MaterialsModule","./news/NewsModule","./personal/PersonalModule","./quizzes/QuizzesModule","./reference/ReferenceModule","./security/SecurityModule","./settings/SettingsModule","./statistics/StatisticsModule","./storage/StorageModule","./urls/AuthRouter","./urls/BroadcastsRouter","./urls/CommonRouter","./urls/CoursesRouter","./urls/FinancesRouter","./urls/InfoRouter","./urls/LogsRouter","./urls/MainRouter","./urls/MaterialsRouter","./urls/NewsRouter","./urls/PersonalRouter","./urls/QuizzesRouter","./urls/ReferenceRouter","./urls/StatisticsRouter","./urls/SystemSettingsRouter","./urls/UrlServiceProvider","./urls/UrlsModule","./urls/UsersRouter","./users/UsersModule","./utils/AppProperties","./utils/LocationUtils","./utils/StringBuilder","./utils/UrlService","./utils/UtilsModule","9","LogOutController_1","RestorePasswordController_1","CreateNewPasswordController_1","CheckValidCodeController_1","service","controller","LogOutController","RestorePasswordController","CreateNewPasswordController","CheckValidCodeController","./../authcore/AuthCoreModule","./../infrastructure/InfrastructureModule","./../urls/UrlsModule","./AuthService","./CheckValidCodeController","./CreateNewPasswordController","./LogOnController","./LogOutController","./RestorePasswordController","10","$q","restoreSessionPromisesMap","Map","providers","type","getProviders","promise","defer","theResult","getProvidersForLogon","getCurrentUser","logOn","username","password","authenticate","grant_type","restoreSession","has","refresh_token","method","headers","Content-Type","transformRequest","param","tokenResult","logOff","saveToken","accessToken","refreshToken","tokenType","expiresIn","issuedAt","startAutoRefresh","disableSpnego","post","expirationDate","timeInterval","currentToken","eraseRefreshToken","restorePassword","logonName","createNewPassword","checkValidCodeFromEmail","$inject","./../authcore/AuthManager","./../utils/UrlService","11","MenuHelper_1","$routeParams","$location","$scope","authService","authRouter","disableButton","shortEmail","MenuHelper","setCurrentMenuItem","$logonName","getShortEmail","createNewPasswordByCode","response","cancel","logonUrl","emailParts","codeValid","regexp","../INotifier","../urls/AuthRouter","../utils/MenuHelper","../utils/UrlService","12","PageHeaderHelper_1","confirmPassword","PASSWORD_TOKEN_PARAM_NAME","PASSWORD_CODE_PARAM_NAME","PageHeader","header","update","showPassword","attr","addClass","removeClass","checkHidePassword","../utils/PageHeaderHelper","13","LogonProviderEnum_1","RenewalType_1","$route","$sce","usersRouter","infoRouter","LAST_USED_PROVIDER_STORAGE_KEY","inProgress","restore","renewalType","RENEWAL_TYPE_PARAM_NAME","RenewalType","NEW","accessDenied","ACCESS_DENIED_PARAM_NAME","tokenExpired","TOKEN_EXPIRED_PARAM_NAME","logonRequired","LOGON_REQUIRED_PARAM_NAME","noSpnego","spnegoLoginFailed","spnegoLoginNotSupported","remove","loadProviders","initProviders","internalProviders","localProviderAvailable","activeDirectoryLocalProviderAvailable","activeDirectorySsoProviderAvailable","forEach","provider","LogonProviderEnum","LOCAL","AD_LOCAL","AD_SSO","PERSONIFY_USERPASSWORD","LOCAL_OR_PERSONIFY","providerKey","previousProvider","previousProviderExists","tryToNegotiate","forwardToSpnego","forceNegotiation","enableSpnego","isPersonifyOrLocalEnabled","user","returnAfterLogOn","getTrustedHtml","buildRestorePasswordLinkWithUserNameParam","LOGON_PARAM_NAME","changeRenewalType","renewalsType","userLocale","./../authcore/AuthRedirect","./../infrastructure/Storage","./../security/LogonProviderEnum","./../urls/AuthRouter","./../urls/InfoRouter","./../urls/UsersRouter","./../utils/AppProperties","./../utils/MenuHelper","./../utils/PageHeaderHelper","./RenewalType","14","mainRouter","./../urls/MainRouter","15","16","hasError","popup","showPopup","checkValidCode","onClosePopup","hidePopup","17","TokenStorage_1","TokenStorage","./AuthManager","./AuthRedirect","./TokenStorage","18","tokenStorage","userInfo","hasToken","eraseToken","id","GUEST_ID","LOGGED_ON","userId","LOGGED_OFF","completeSpnegoExchange","tokenInfo","getUrlVars","forwardToLogOn","isPersonifySsoEnabled","forwardToStartPersonifySSO","PERSONIFY_SSO","clearTokenInfoFromUrl","hash","vars","hashes","location","href","../utils/AppProperties","./Event","19","RedirectReason_1","$window","sessionStorage","redirectToLogOn","reason","storeUrlBeforeAuthRedirect","currentUrl","KEY","native","baseUrl","isFullScreen","RedirectReason","ACCESS_DENIED","TOKEN_EXPIRED","LOGON_REQUIRED","forwardToAccessDenied","accessDeniedUrl","redirect","clearRedirection","mainUrl","SESSION_NAME","./../utils/LocationUtils","./RedirectReason","20","21","22","storage","TOKEN_KEY","23","StudentController_1","TeacherController_1","StudentController","TeacherController","./../security/SecurityModule","./StudentController","./TeacherController","24","SecurityService_1","securityService","demandAuthentication","demandSystemPermissions","systemPermissions","participateBroadcasts","EDUCATION_STUDENT_BROADCASTS_MENU_KEY","broadcastMode","handUp","isHandUp","setBroadcastMode","SecurityService","./../security/SecurityService","25","organizationBroadcasts","EDUCATION_TEACHER_BROADCASTS_MENU_KEY","26","BundleService","getBundle","bundleId","bundle","createFilesMap","updateBundleFromFiles","bundleInput","filesMap","files","file","27","BundleService_1","./BundleService","28","BundleFileTypeEnum","BUNDLE_FILE_TYPE_ENUM_VALUES","JS","CSS","IMAGE","HTML","29","CommonNavigation_1","CommonNavigation","../common/CommonNavigation","30","commonRouter","$on","newUrl","oldUrl","defaultPrevented","preventNavigationFromUrl","preventDefault","allowNavigation","bind","preventNavigation","_url","redirectToNotFound","notFoundUrl","./../INotifier","./../urls/CommonRouter","31","AutoFocusDirectiveFactory","link","focus","restrict","32","AutofocusDirective_1","DateTimePickerDirective_1","GridConfigurationDirective_1","GridDirective_1","GridEmptyDirective_1","GridExternalConfiguration_1","GridPaginationDirective_1","LoginDirective_1","MultipleCheckboxSelectorDirective_1","PageFooterDirective_1","PageHeaderDirective_1","VhsSelectAllDirective_1","ReferenceCheckboxSelectorDirective_1","ReferenceDropdownSelectorDirective_1","ReferenceMultipleSelectorDirective_1","TooltipDirective_1","VhsSearchDirective_1","PersonalMenuDirective_1","VhsVideoAudioDirective_1","UsersAndGroupsSelectorDirective_1","SelectOptionsDisabledDirective_1","SelectPlaceholderDirective_1","UploadsStatusDirective_1","VhsThumbnailDirective_1","VhsMaterialEditingDirective_1","VhsSelectMaterialDirective_1","VhsSelectEmbeddedBundleDirective_1","VhsSelectSandboxDirective_1","RichTextBindDirective_1","LoadBundleFileDirective_1","FullScreenDirective_1","PageTitleDirective_1","EntitiesSelect2SelectorDirective_1","RichTextContentLoadingSynchronizer_1","CurrentYearDirective_1","SuffixValidatorDirective_1","RichTextContentLoadingSynchronizer","directive","DateTimePickerDirectiveFactory","GridConfigurationDirectiveFactory","GridDirectiveFactory","GridEmptyDirectiveFactory","GridExternalConfigurationFactory","GridPaginationDirectiveFactory","LoginDirectiveFactory","MultipleCheckboxSelectorDirectiveFactory","PageFooterDirectiveFactory","PageHeaderDirectiveFactory","VhsSelectAllDirectiveFactory","ReferenceCheckboxSelectorDirectiveFactory","ReferenceDropdownSelectorDirectiveFactory","ReferenceMultipleSelectorDirectiveFactory","TooltipDirectiveFactory","VhsSearchDirectiveFactory","PersonalMenuDirectiveFactory","NavigationPersonalMenuDirectiveFactory","LeftPersonalMenuDirectiveFactory","VhsBreadcrumbsDirectiveFactory","VhsVideoDirectiveFactory","VhsYoutubeVideoDirectiveFactory","VhsAudioDirectiveFactory","UsersAndGroupsSelectorDirectiveFactory","SelectOptionsDisabledDirectiveFactory","SelectPlaceholderDirectiveFactory","UploadsStatusDirectiveFactory","VhsThumbnailDirectiveFactory","VhsMaterialEditingDirectiveFactory","VhsEmbeddedMaterialDirectiveFactory","VhsSelectMaterialDirectiveFactory","RichTextEditorDirectiveFactory","RichTextBindDirectiveFactory","VhsEmbeddedBundleDirectiveFactory","VhsSelectEmbeddedBundleDirectiveFactory","VhsSelectSandboxDirectiveFactory","VhsSandboxDirectiveFactory","VhsDownloadBundleDirectiveFactory","LoadBundleFileDirectiveFactory","FullScreenDirectiveFactory","PageTitleDirectiveFactory","CurrentYearDirectiveFactory","EntitiesSelect2SelectorDirectiveFactory","SuffixValidatorDirectiveFactory","../settings/SettingsModule","./../auth/AuthModule","./../broadcasts/BroadcastsModule","./../info/InfoModule","./../logs/LogsModule","./../main/MainModule","./../materials/MaterialsModule","./../news/NewsModule","./../reference/ReferenceModule","./../storage/StorageModule","./AutofocusDirective","./CurrentYearDirective","./DateTimePickerDirective","./EntitiesSelect2SelectorDirective","./FullScreenDirective","./GridConfigurationDirective","./GridDirective","./GridEmptyDirective","./GridExternalConfiguration","./GridPaginationDirective","./LoadBundleFileDirective","./LoginDirective","./MultipleCheckboxSelectorDirective","./PageFooterDirective","./PageHeaderDirective","./PageTitleDirective","./PersonalMenuDirective","./ReferenceCheckboxSelectorDirective","./ReferenceDropdownSelectorDirective","./ReferenceMultipleSelectorDirective","./SelectOptionsDisabledDirective","./SelectPlaceholderDirective","./SuffixValidatorDirective","./TooltipDirective","./UploadsStatusDirective","./UsersAndGroupsSelectorDirective","./VhsEmbeddedMaterialDirective","./VhsMaterialEditingDirective","./VhsSearchDirective","./VhsSelectAllDirective","./VhsThumbnailDirective","./VhsVideoAudioDirective","./richtext/RichTextBindDirective","./richtext/RichTextContentLoadingSynchronizer","./richtext/RichTextEditorDirective","./richtext/VhsDownloadBundleDirective","./richtext/VhsEmbeddedBundleDirective","./richtext/VhsSandboxDirective","./richtext/VhsSelectEmbeddedBundleDirective","./richtext/VhsSelectMaterialDirective","./richtext/VhsSelectSandboxDirective","33","settingsService","attributes","transclude","getCurrentDate","scope","SettingsService_1","SettingsService","../settings/SettingsService","34","ngModel","datetimepicker","pickTime","language","collapse","keyboardNavigation","navigation","maxDate","maxDateValidation","$watch","destroy","$validators","modelValue","viewValue","Moment_1","parse","$validate","minDateValidation","minDate","../utils/Moment","35","EntitiesSelect2SelectorController","urlString","referenceKey","modelProperty","multiple","disabled","nullable","activeEntities","placeholder","onSelectorChange","ReferenceService_1","IReferenceEntitiesParams_1","referenceApi","modelId","selectedItems","vm","DEFAULT_PLACEHOLDER","modelIds","loadEntitiesForSelector","newValue","oldValue","setValues","getActiveReferenceEntitiesForSelector","ReferenceEntitiesParams","items","item","onSelectCallback","select","selected","onRemoveCallback","ReferenceService","./../reference/ReferenceService","./../reference/models/IReferenceEntitiesParams","36","applyFullScreenFunction","FULL_SCREEN_CLASS","$locationEvent","37","setIsConfigurable","38","init","gridModelPath","vhsGridUuid","tableTemplate","vhsHasConfiguration","compile","templateAttributes","find","GridController","TABLE_SELECTOR","pre","trunsclude","SortEntry_1","TimeoutUtils_1","ObjectFieldResolver_1","IGridModel_1","ElementSortingInfo","order","mandatory","fromString","str","info","strParts","sortPath","gridUuid","hasConfiguration","hasChangesForTemplateReload","SORTABLE_HEADERS_CLASSES","SEARCH_ELEMENTS_SELECTOR","MAX_SORT_INDEX","gridVm","parentScope","$parent","directiveScope","TimeoutUtils","modelPathInController","gridContainer","tableContainer","ObjectFieldResolver","findForPath","collectGridColumns","loadColumnsConfigurationFromStorage","loadFilterFromStorage","addPredefinedSorting","addAutoSearchListeners","initDomElementsHandlers","processTemplate","addHeadersSortingHandlers","updateHeaderClasses","applyFilter","addSorting","findSortEntryInfo","resetSorting","foundIndex","goToPage","getPagesForPagination","pages","reverse","upColumnPosition","position","doUpdateColumnPosition","downColumnPosition","newPosition","currentColumnInPosition","findColumnByPosition","targetPosition","findColumnByIndex","fixColumnPositions","orderedColumns","sort","o1","o2","persistedModel","persistedColumn","saveGridConfiguration","setHeaderClass","targetClasses","elClass","self","SORTABLE_HEADERS_SELECTOR","each","el","jQueryElement","sortString","TABLE_HEADERS_SELECTOR","th","columnExcluded","columnName","sortingInfo","click","sortIndex","dblclick","predefinedSorting","sortFields","persistedSorting","predefinedSortingInfo","persistedIndex","addPredefinedSortingToModel","inputElement","keyup","change","cellsPositionsMap","processTableCellsInTemplate","TABLE_CELLS_IN_TEMPLATE_SELECTOR","TABLE_CELLS_IN_TEMPLATE_SELECTOR_FOR_REPEAT_START","TABLE_CELLS_IN_TEMPLATE_SELECTOR_FOR_REPEAT_END","contents","cells","positionsMap","hideColumnFunc","td","cellsPositions","positionIndex","cellInPosition","eq","previousCell","insertAfter","./../IGridModel","./../SortEntry","./../utils/ObjectFieldResolver","./../utils/TimeoutUtils","39","vhsEmptyMessage","40","hidePageSizeSelector","41","42","VhsLoadBundleFileController","bundleFile","BundleFileType_1","processBundleFile","getHttpConfig","content","processFileContent","replaceWith","is","fileContent","globalEval","withoutAuthorization","ignore404","../bundles/models/BundleFileType","43","LoginController","personalRouter","authenticated","updatePermissions","permissions","./../auth/AuthService","./../authcore/Event","./../urls/PersonalRouter","44","MultipleCheckboxSelectorController","entities","pushDataModel","entity","itemSelection","45","46","PageHeaderController","currentPageName","multipleActionsOnPanel","hasHistory","history","addMenuUpdateListener","PageHeaderHelper","addPageHeaderUpdateListener","saveHistory","VHS_SESSION_HISTORY_KEY","storedHistory","goBack","pop","target","onMenuItemUpdate","newMenuItemKey","oldMenuItemKey","actionsPanelHtml","statusPanelHtml","MAX_HISTORY_DEPTH","onHeaderUpdate","pageHeader","preservePageName","pageName","preserveActionsPanel","actions","MULTIPLE_ACTIONS_LINK_TEMPLATE_START","MULTIPLE_ACTIONS_LINK_TEMPLATE_END","preserveStatusPanel","statusPanel","47","PageTitleController","document","48","PersonalMenuController","PermissionsService_1","permissionsApi","materialsRouter","broadcastsRouter","statisticsRouter","financesRouter","newsRouter","coursesRouter","quizzesRouter","systemSettingsRouter","logsRouter","referenceRouter","menu","currentTopMenu","currentMenuItemKey","currentMenuGroupKey","menuMap","menuItemMap","parentMap","breadcrumbs","menuVM","loadMenu","changeBodyCss","menuByPermissions","SEARCH_MENU_KEY","allowed","searchUrl","EDUCATION_MENU_KEY","dynamicUrl","EDUCATION_COURSES_MENU_KEY","indexUrl","EDUCATION_QUIZZES_MENU_KEY","OPERATIONS_MENU_KEY","addMaterial","viewAnalytics","viewMyAnalytics","OPERATIONS_UPLOADS_MENU_KEY","createUrl","ADMINISTRATION_MENU_KEY","viewUsers","viewGroups","editStoragePlaces","viewReferenceData","viewSystemLog","viewSecurityLog","ADMINISTRATION_USERS_MENU_KEY","ADMINISTRATION_GROUPS_MENU_KEY","groupsIndexUrl","ADMINISTRATION_STORAGE_PLACES_MENU_KEY","storagePlacesIndexUrl","ADMINISTRATION_SUBJECTS_MENU_KEY","ADMINISTRATION_LANGUAGES_MENU_KEY","ADMINISTRATION_COURSE_TYPES_MENU_KEY","ADMINISTRATION_SOURCES_MENU_KEY","ADMINISTRATION_SOURCE_TYPES_MENU_KEY","ADMINISTRATION_COMPLEXITY_LEVELS_MENU_KEY","ADMINISTRATION_SECURITY_LOGS_KEY","securityLogsUrl","ADMINISTRATION_SYSTEM_LOGS_KEY","systemLogsUrl","personalAccount","PERSONAL_ACCOUNT_MENU_KEY","uploadsUrl","coursesUrl","PERSONAL_ACCOUNT_UPLOADS_MENU_KEY","PERSONAL_ACCOUNT_COURSES_MENU_KEY","PERSONAL_ACCOUNT_QUIZZES_MENU_KEY","quizzesUrl","PERSONAL_ACCOUNT_PLAYLISTS_MENU_KEY","playlistsUrl","PERSONAL_ACCOUNT_SUBSCRIPTIONS_MENU_KEY","subscriptionsUrl","PERSONAL_ACCOUNT_NEW_COMMENTS_MENU_KEY","newCommentsUrl","PERSONAL_ACCOUNT_SUPPORT_MENU_KEY","supportUrl","PERSONAL_ACCOUNT_COUPONS_MENU_KEY","couponsUrl","PERSONAL_ACCOUNT_PURCHASES_HISTORY_MENU_KEY","purchasesHistoryUrl","viewPurchaseHistory","PERSONAL_ACCOUNT_BALANCE_MENU_KEY","balanceUrl","rechargeAccount","PERSONAL_ACCOUNT_SETTINGS_MENU_KEY","settingsUrl","clear","menuGroup","menuItem","k","menuItem2","getCurrentMenuItemKey","getCurrentMenuGroupKey","breadcrumbsPageName","recalculateBreadcrumbs","currentMenuItem","previousUrl","PermissionsService","./../security/PermissionsService","./../urls/BroadcastsRouter","./../urls/CoursesRouter","./../urls/FinancesRouter","./../urls/LogsRouter","./../urls/MaterialsRouter","./../urls/NewsRouter","./../urls/QuizzesRouter","./../urls/ReferenceRouter","./../urls/StatisticsRouter","./../urls/SystemSettingsRouter","49","ReferenceCheckboxSelectorController","referenceName","referenceFilter","referenceSorting","ReferenceUtils_1","referenceUtils","referenceEntities","initSelectAll","countSelected","selectAll","clickSelectAll","ReferenceUtils","./../reference/ReferenceUtils","50","ReferenceDropdownSelectorController","required","elementName","editable","style","ReferenceRedirect_1","referenceRedirect","changeCallback","referenceEntitiesMap","getSystemPermissions","p","redirectToNewReferenceItem","redirectToEditReferenceItem","referenceId","ReferenceRedirect","./../reference/ReferenceRedirect","51","ReferenceMultipleSelectorController","selectedIds","setModelIds","52","$parse","disableOptions","attribute","fnDisableIfTrue","options","pos","elem","locals","expElements","selectOptionsDisabled","attrToWatch","disOptions","priority","53","setPlaceholder","elem_1","54","suffix","trim","prefixes","55","makeTooltip","TooltipController","tooltip","56","UploadsStatusController","UploadsService_1","$interval","uploadsService","currentlyUploadableFiles","showFiles","currentlyUploadableFilesFunc","getCurrentlyUploadableFiles","CURRENTLY_UPLOADABLE_FILES_DELAY","toggleFiles","UploadsService","./../storage/UploadsService","57","UsersAndGroupsSelectorController","objectModel","objectModelProperty","currentUserIdModel","currentUserIdModelProperty","currentUserNameModel","currentUserNameModelProperty","permissionsWithUsersAndGroupsModel","businessUnitFilter","isPermissionsDelegation","UserService_1","SecuredObjectType_1","IPermission_1","userService","permissionsWithUsersAndGroups","isLoaded","usersCompareFn","first","groupsCompareFn","permissionsWithUsersAndGroup","isEditing","isUsersShowed","isGroupsShowed","currentAvailableUserIds","currentAvailableGroupIds","currentAvailableUsers","currentAvailableGroups","currentSelectedUsers","currentSelectedGroups","currentUser","isFound","users","currentExtUser","userIds","groupIds","groups","group","currentAvailableUsersChangeCallback","currentAvailableUser","currentAvailableGroupsChangeCallback","currentAvailableGroup","getCurrentUserId","moveItems","moveItemIds","setTimeout","editing","edited","selectUsers","unselectUsers","selectGroups","unselectGroups","disableUser","permission","SecuredObjectType","MATERIAL","material","ownerId","PLAYLIST","playlist","COURSE","course","ownerIds","QUIZ","quiz","getAvailableUsersUrl","businessUnit","excludedUserIds","getAvailableGroupsUrl","excludedGroupIds","permissionId","excludedAllUsersGroup","ALL_USERS_GROUP_ID","AllUsersPermissions","PERMISSIONS_IDS","getCurrentUserName","destination","destinationIds","destinationItem","UserService","./../security/permissions/IPermission","./../security/permissions/SecuredObjectType","./../users/UserService","58","CourseService_1","RandomUtils_1","MaterialType_1","ObjectTypeUtils_1","courseApi","materialId","loadMaterial","multimediaErrorCallback","getEmbeddedMaterial","multimediaSources","src","isMaterialYoutubeLink","downloadUrl","contentType","dataRes","isInlineView","materialType","typeKey","MaterialTypeKeyEnum","VIDEO","AUDIO","isMaterialEmpty","LINK","fileStatus","isMaterialNotReady","isViewAllowed","view","ObjectTypeUtils","isYoutubeUrl","TA_DIRECTIVE_HTML","RandomUtils","generateRandomId","endIdIndex","substring","TA_COMPILE_AND_REPLACE_ELEMENT_FUNCTION","elementSelector","CourseService","../utils/RandomUtils","../utils/StringBuilder","./../courses/CourseService","./../materials/models/MaterialType","./../utils/ObjectTypeUtils","59","VhsMaterialEditingController","callbackWhenFinished","UploadUtils_1","ContentUtils_1","ActionLogService_1","ActionType_1","ReferencedObjectType_1","MaterialService_1","$uploader","permissionsService","actionLogService","uploadUtils","materialService","owners","attachFormat","disabledSaveButton","disabledUploadButton","initializeMaterial","getUsersWithoutExcludedUsersForSelector","ownersMap","owner","saveOrUpdateMaterial","preview","validity","textToJavaDate","validityText","MaterialTypeEnum","typeId","fileExt","ContentUtils","getFileExt","checkFileExt","create","MATERIAL_KEY","previewUploadUrl","PREVIEW_UPLOAD_URL_KEY","previewUploadMethod","PREVIEW_UPLOAD_METHOD_KEY","uploadMaterialByChunks","previewId","fileUploadUrl","FILE_UPLOAD_URL_KEY","fileUploadMethod","FILE_UPLOAD_METHOD_KEY","fileId","processSuccessCallback","enableButton","setFileOrLinkType","uploadContentType","showUploadButton","setMaterialType","findMaterialTypeByFileExtension","enableButtonForLinkUpload","upload","fileType","urlBuilder","reupload","fileName","ActionType","MATERIAL_CREATION","loadPermissionsWithUsersAndGroups","securedObjectType","objectId","getAllObjectPermissionsWithUsersAndGroups","isValidDate","materialIdStr","String","hasMaterialId","demandSystemPermissionsIf","demandMaterialPermissionsIf","materialPermissions","edit","subjectId","subjectName","author","topic","languageId","languageName","summary","ownerName","typeName","uploaderId","ActionLogService","UploadUtils","MaterialService","./../ReferencedObjectType","./../materials/MaterialService","./../statistics/ActionLogService","./../statistics/models/ActionType","./../utils/ContentUtils","./../utils/Moment","./../utils/UploadUtils","60","removeMenuUpdateListener","controllable","showFileFormat","VhsSearchController","searchVisible","fileFormat","searchString","doSubmit","FILE_FORMAT_PARAMETER","SEARCH_STRING_PARAMETER","MAIN_MENU_KEY","61","makeSelectAll","VhsSelectAllController","isDisabled","targetElement","thisElement","getCurrentState","refreshState","ready","TIMER_MILLISECONDS","on","isDefaultPrevented","previousState","blur","62","vhsThumbnailModel","previewUrl","materialTypeId","contentTypeKey","63","VhsVideoAudioController","vhsId","vhsSources","vhsWidth","vhsHeight","vhsPoster","vhsErrorCallback","errorCount","defineProperty","_playerIsPlaying","enumerable","configurable","_playerCurrentTime","isVideoOrAudio","isYoutube","_self","playerVideoTag","videoJsPlayerId","videojsOptions","autoplay","controls","flash","swf","loop","poster","preload","techOrder","youtubeOptions","sources","youtube","ytControls","enablejsapi","width","height","videojs","player","playerPosterTag","isAudio","exitFullscreen","currentTime","hasStarted","paused","playerCurrentTime","GIVE_UP_AFTER_SO_MANY_ERRORS","off","canPlayType","MediaError","MEDIA_ERR_SRC_NOT_SUPPORTED","techName","setPlayerSources","reloadPlayer","setPlayerPoster","getAttribute","RETRY_TIME_INTERVAL","setAttribute","posterImage","setSrc","one","playerIsPlaying","play","load","64","TA_FIND_RICH_TEXT_BIND_CONTROLLER","65","VhsSelectEmbeddedBundleMaterialController","IHttpGridService_1","DomUtils_1","bundleApi","loadPopupContent","isEventProcessable","lastEventData","modal","backdrop","keyboard","show","bundleFilesGridModel","richEditorParent","DomUtils","findParentWithClass","onBundleFileSelect","EMBEDDED_IMG_TA_HTML","EMBEDDED_BUNDLE_TA_HTML","parent","../../IGridModel","../../IHttpGridService","../../bundles/BundleService","../../bundles/models/BundleFileType","../../utils/DomUtils","../../utils/StringBuilder","../../utils/UrlService","../models/Event","66","RichTextBindController","loadingSynchronizer","loadingContent","elementId","onRichTextChange","loadBundlePromise","richTextBindController","richTextElementId","stopPropagation","loadContent","waitContentLoadingDeferred","getBundleFile","bundleFileKey","loadContentSynchronized","loadDataPromise","waitForContentLoaded","reject","../../utils/RandomUtils","./../../bundles/BundleService","./RichTextContentLoadingSynchronizer","67","richTextLoadersMap","forcedLoading","dataLoader","loadingData","loaderFunction","performLoadContent","promises","callbacks","all","68","allowEmbedMaterials","allowBundles","allowSandbox","hideEditorButtons","hide","69","fileKey","findRichTextElementId","loadBundle","richEditor","findParentWithAttr","append","70","mobileString","lastIndexOf","ex","basePath","replaceImagePaths","htmlContent","EMBEDDED_MATERIALS_IN_CONTENT_SELECTOR","DOWNLOAD_BUNDLES_LINKS_SELECTOR","imageAttributes","./../VhsEmbeddedMaterialDirective","71","css","border","endKeyIndex","72","73","VhsSelectMaterialController","materialsGridModel","onMaterialSelect","materialName","EMBEDDED_MATERIAL_TA_HTML","74","VhsSelectSandboxController","bundleFileType","staticResourceUrl","SANDBOX_TA_IMG_PATH","75","ContentService_1","ContentModule","ContentService","./../common/CommonModule","./ContentService","76","getContentView","objectType","myObjectType","77","ProgressService_1","SectionType_1","QuizService_1","CourseProgressStatus_1","SectionProgressStatus_1","CourseDetailsController","commonNavigation","courseService","bundleService","progressService","quizService","sessionStorageWrapper","DEFAULT_TOP_MENU_ITEM","DEFAULT_LEFT_MENU_MODULE","DEFAULT_INNER_MENU_ITEM","ERROR_INTERNET_DISCONNECTED","SUBMIT_SECTION_PROGRESS_RETRY_INTERVAL","sectionsList","isCourseLoaded","isSlideLoading","slideLoadingCounter","isSlideRemoving","isSlideBack","showSectionNotAllowedMessage","showRePrintParameters","modules","selectedModule","selectedSection","sectionMaterials","sectionQuiz","sectionQuizResults","sectionQuizCurrentResult","sectionQuizPassing","sectionQuizCurrentQuestion","sectionQuizQuestionAnswered","disableCompleteQuizButton","currentUserInOwners","nextSection","prevSection","showSplashPageForStartedCourse","disableParticipationForm","agreeReleaseDriverHistory","certificateParameters","certificateId","materialLoaded","isCourseMenuVisible","isCourseShareMenuVisible","showQuizInfoSection","showQuizResultsSection","showQuizStartSection","showLandingPageStartCourseButton","showReturnUserPage","lmsQuizCompleteListeners","isCourseStartInProgress","sectionStatusUpdatePromise","minExamDateText","minExamDate","fourYearsMilliseconds","clearAll","courseId","baseApplicationUrl","absUrl","courseLink","detailsUrl","courseShareLink","searchModuleId","MODULE_PARAMETER","searchSectionId","SECTION_PARAMETER","courseIdStr","demandCoursePermissions","coursePermissions","fullName","menuItemKey","getCourseProgress","progress","courseExpired","courseArchived","courseCompleted","courseProgress","participantInfoSaved","courseStarted","loadCourse","loadDataPromises","loadModules","loadSections","SectionType","loadSectionQuiz","loadLandingPage","loadCourseParticipantInfo","submittedToFaa","loadCourseProgressHistory","checkCourseStartDate","minBirthDate","maxBirthDate","getModules","setMenuItem","getCourseSections","courseProgressId","modulesProgress","sectionsMap","section","moduleId","setModuleProgress","allowedSections","status","SectionProgressStatus","ALLOWED","STARTED","FAILED","lastViewedSection","setMenuItems","getNextSection","courseBundle","composeRichTextFromLoadAtStartBundles","courseLoadAtStartBundlesText","getRichTextLoadedPromise","COURSE_LOAD_AT_START_BUNDLES_RICH_TEXT_ID","loadAtStart","completedSectionsCount","INFORMATION","OPENED","COMPLETED","startDateText","startDate","isCurrentUserInOwners","showStartButton","NOT_ALLOWED","setLeftMenuModule","getModuleById","setLeftMenuItem","leftModule","menuKey","leftMenuModuleExpanded","checkQuizPassing","goToTheModule","showParticipationForm","isCourseShouldBeRestarted","goToTheModuleInternal","lockUntilPreviousSectionsRead","startCourse","sections","showHideCourseMenu","newSection","SLIDE_CHANGE_DELAY","scrollPageTop","setLeftMenuItemInternal","beforeSectionChangePromises","sectionChangeDeferred","sectionChangePromise","sectionStatusUpdateDeferred","sectionViewAllowed","isSectionViewAllowed","quizPassing","lastViewedSectionOnLoad","clearSectionQuizParameters","leftMenuItem","leftMenuItemType","leftMenuModule","resetLMSState","getPrevSection","onSectionChangePromises","isSelectedSectionTypeInfo","loadSectionMaterials","richTextReadyPromise","SECTION_SUMMARY_RICH_TEXT_ID","openedSectionId","openedModuleId","setSectionStatusOpened","setStatusOpenedRetry","LANDING_PAGE_RICH_TEXT_ID","runSectionStatusUpdateDeferred","statusUpdatedPromise","newPromise","richTextId","findRichTextController","waitForContentLoad","resolveDeferredInAnyCase","unbindWatcher","sectionId","setSectionProgress","recalculateLockSectionsStatuses","getSectionProgress","lockedSections","firstLockedSection","lockedSectionIndex","completedSections","currentModuleId","lastSectionInModuleId","nextModuleId","getNextModuleId","redirectToNextSection","firstSectionInModuleId","prevModuleId","getPrevModuleId","prevModuleSections","redirectToPrevSection","isTopMenuActive","topMenuKey","isShowProgressTab","isLeftMenuModuleActive","isLeftMenuItemActive","isSelectedSectionTypeQuiz","isSelectedSectionTypeProblemSolution","PROBLEM_SOLUTION","materialsCount","getSectionUploadedOrLinkMaterials","showMaterial","selectedMaterialId","isYoutubeLink","getMaterialTypeClass","materialTypeKey","getMaterialGlyphiconClassFromKey","getSectionQuiz","loadSectionQuizResults","quizId","getUserQuizResults","startSectionQuiz","startQuizByUser","questions","sectionQuizCurrentQuestionIndex","answers","sectionQuizDuration","startTime","completeSectionQuiz","selectSectionQuizCurrentAnswer","question","answer","getSectionQuizNextQuestion","submitSectionQuizCurrentQuestionAnswer","getIsAnsweredQuestionCorrect","questionAnswers","isCorrect","quizResultId","questionId","answerIds","completeQuizByUser","q","isQuizPassed","progressId","COURSE_PROGRESS_ID_STORAGE_KEY","initializeCourseProgress","getCourseProgressHistory","progressHistory","lastFinishedCourseProgress","innerItem","skipSetMenu","reTakeCourse","reTakeQuiz","isRetakeQuizAllowed","findFirstQuizSection","courseJustStarted","reEnterParticipationFormData","startEditCourseParticipationForm","applyForBasicMed","continueWithCourse","_b","CourseProgressStatus","NOT_STARTED","coursePassed","PASSED","EXPIRED","ARCHIVED","redirectToProgress","progressUrl","redirectToInfo","infoUrl","editCourse","updateUrl","redirectToSection","$event","keyCode","reprintForOptedOutUser","isParticipationFormAllowed","isApplyForBasicMed","infoForEdit","getParticipantInfoForApply","getParticipantInfoForEdit","maxExamDate","startWithParticipationForm","isCompletedCourseInfoExists","saveParticipationForm","participationForm","confirmation","$valid","participationFormData","updateCourseParticipantInfo","getCourseParticipationInfo","participationInfo","modifyParticipationFormDataFields","dob","dobDateString","formatDateForSaving","examDate","examDateString","phone","physicianPhone","country","state","printCertificate","courseProgressIdForUpdate","updateCourseParticipationInfo","getCertificate","cancelParticipationForm","initializeParticipationForm","agreeFourMandatoryAgreements","agreeSendReminder","agreeSendSurvey","agreeSendOtherCommunications","formatDateForDisplay","email","userInfo_1","firstName","lastName","physicianState","loadCourseCertificates","courseCertificates","isLastSectionInCourse","passedResults","passed","download","parameters","participationData","JSON","stringify","downloadCertificate","open","certificateDownloadLink","certificateContent","showRePrintCertificateParams","getLandingPage","landingPage","isShareMenuVisible","courseContentContainer","top","bot","outerHeight","animate","scrollTop","getCourseCertificateExpirationDate","archivingDate","isCourseCertificateExpired","getActualParticipantInfo","goToFullScreenMode","goToHome","reload","getModulePreviewImageBundle","MODULE_PREVIEW_IMAGE_BUNLE_FILE_TEMPLATE","getTemplateForInclude","templateName","pickerDate","courseStoredDate","DEFAULT_FORMAT","showExamDateValidationDetails","showWarningMessageToFaaSubmissionForm","LMSInitialize","LMSFinish","LMSGetValue","maxScore","correctAnswersPercentage","correctAnswersCount","LMSSetValue","LMSCommit","startOrContinueCourse","LMSGetLastError","LMSGetErrorString","LMSGetDiagnostic","ProgressService","QuizService","../auth/AuthService","../components/models/Event","../components/richText/VhsSelectEmbeddedBundleDirective","../courses/models/CourseProgressStatus","../materials/models/MaterialType","../urls/PersonalRouter","../utils/ObjectTypeUtils","./../bundles/BundleService","./../quizzes/QuizService","./../settings/SettingsService","./CourseService","./ProgressService","./models/SectionProgressStatus","./models/SectionType","78","TreeElementsInfoFiller_1","CourseEditController","MODULE","SECTION","hasPreviewUrlCanceled","formIsDirty","isModuleEditing","editingModule","isSectionEditing","editingSection","hasCertificates","uploadCourseCertificates","addedFile","addedBundleFiles","removedBundleFiles","loadOnStartFileIdsChanged","bundleFilesSaving","archiveUploading","disabledRemoveModuleButton","disabledRemoveSectionButton","removeCurrentUserSectionProgress","savingInProgress","hasCourseId","addCourses","demandCoursePermissionsIf","isValidityInPerpetuity","topMenu","availableSectionParent","setTopMenu","currentUserId","currentUserName","newLocation","isCourseHasSections","landingPageForm","$dirty","confirm","uploadMaterialsGridModel","$watchCollection","loadSectionsForModule","getModuleSections","TreeElementsInfoFiller","fillHierarchyInfoWithMaxLevel","Number","MAX_VALUE","loadAvailableSectionParent","parentSections","level","endDateText","endDate","getCourseCertificates","certificates","extendedCertificateInfo","removed","getDefaultModuleForCourse","getDefaultSectionForModule","parentId","save","COURSE_KEY","cancelCoursePreviews","uploadCourseByChunks","uploadCertificates","updateCourseCertificates","createModule","createSection","courseCertificatesRemoved","certIds","removeCourseCertificates","updateSuccessCallback","cleanValidity","updateSection","updatedSection","saveSection","loadAvailableQuizzesForSection","showCreationModal","creationKey","createModuleOrSection","allowResit","blockingNextSections","setSectionSortIndex","children","getSectionAllMaterials","hideCurrentMaterial","materialIds","addMaterialToSection","removeMaterialFromSection","moveUp","objectToMove","moveDown","isMoveUp","isMoveDown","updateSectionName","setFormIsDirty","showRemovalModal","removeModule","deleteSelectedModule","deleteModule","removeSection","deleteSelectedSection","deleteSection","toggleMaterialCreationForm","showMaterialCreationForm","callbackWhenMaterialCreated","reloadSection","availableQuizzesGridModel","addQuizToSection","removeQuizFromSection","cleanCreationModal","loadBundleForm","excludedBundleFileIds","archive","$setPristine","richText","saveLandingPage","updateLandingPage","createLandingPage","startModuleInlineEdit","updateEditedModule","updateModule","startSectionInlineEdit","updateEditedSection","saveModulesHierarchy","updateModuleHierarchy","saveSectionsHierarchy","newModuleId","oldModuleId","recalculateSectionWithParentIndex","updateSectionHierarchy","parentIndex","showEditingModal","availableCurrentSectionParent","getAvailableSectionsNoChildren","cleanEditingModal","editSectionParent","attachCertificate","$error","newCertificate","removeCertificate","resetPreview","restorePreviewUrl","cancelAddedBundleFile","removeBundleFile","getRemovedBundleFileIds","restoreBundleFile","changeBundleFileLoadAtStartValue","removedBundleFileIds","relativePath","addedFiles","deletedFileIds","loadOnStartFilesChangedIds","fileUploadInfos","fileUploadInfo","uploadBundleByChunks","updateBundleFromArchive","saveBundleFiles","createCourseBundle","saveBundleArchive","fileExtension","refreshBundleFiles","getDownloadBundleToArchiveUrl","../bundles/BundleService","../storage/UploadsService","../tree/TreeElementsInfoFiller","../utils/UploadUtils","./../IHttpGridService","79","CourseInfoController","loadOwners","getCourseOwners","redirectToDetails","../authcore/AuthManager","../security/SecurityService","../urls/CoursesRouter","./models/CourseProgressStatus","80","SectionResultStatistic_1","CourseProgressController","userProgress","courseUsers","courseGroups","sectionsStatistics","selectedUserIds","selectedGroupIds","selectedQuizProgress","isSectionSelected","selectedSectionStatistic","searchType","loadProgressForCurrentUser","loadProgress","getUsers","getGroups","getUserProgress","getCourseUsers","extendedUserInfo","getCourseGroups","g","extendedGroupInfo","getSectionsStatistics","extendedSectionStatisticsInfo","getSectionResultStatus","sectionStatistics","SUBMITTED","SOS","SectionResultStatistic","getProgressForUser","getProgressForGroup","cleanSelectedSection","getUserProgressForQuiz","isLoadingNeeded","sectionProgressGridModel","getUserInSectionProgressStatus","changeFilter","../IGridModel","../IHttpGridService","./models/SectionResultStatistic","81","findCoursesByMaterial","courseVersion","isResetPreview","moduleVersion","sectionVersion","reportType","viewCertificate","certificatesIds","82","PersonalService_1","CoursesController","personalService","SUBJECT_MODULE","COMPLEXITY_LEVEL_MODULE","LANGUAGE_MODULE","SOURCE_MODULE","STUDENT_MODULE","selectedItemInModule","rowShow","viewType","coursesGridModel","setSearch","searchCourse","isSearchItemActive","searchItem","isSearchItemHide","showDetails","addToFavorites","favorite","removeFromFavorites","PersonalService","./../personal/PersonalService","83","CoursesController_1","CourseDetailsController_1","QuizDetailsController_1","CourseEditController_1","CourseProgressController_1","CourseInfoController_1","QuizDetailsController","./../quizzes/QuizzesModule","./CourseDetailsController","./CourseEditController","./CourseInfoController","./CourseProgressController","./CoursesController","./QuizDetailsController","84","getProgressForQuiz","requestConfig","userIdsFilter","groupIdsFilter","85","quizNumber","COURSE_QUIZ_ID_PARAM","isQuizNumberOdd","86","87","88","89","90","AccountManagementController","managementAccount","OPERATIONS_ACCOUNT_MANAGEMENT_MENU_KEY","91","BalanceController","92","BalanceController_1","PurchaseHistoryController_1","AccountManagementController_1","PurchaseController_1","PurchaseService_1","ContentModule_1","PurchaseHistoryController","PurchaseController","PurchaseService","./../content/ContentModule","./AccountManagementController","./BalanceController","./PurchaseController","./PurchaseHistoryController","./PurchaseService","93","ContentRouter_1","purchaseApi","contentRouter","contentApi","OBJECT_TYPE_PARAM","OBJECT_ID_PARAM","purchase","getPurchaseActionType","doCancel","back","MATERIAL_PURCHASE","ContentRouter","./../authcore/RedirectReason","./../content/ContentService","./../urls/ContentRouter","94","purchaseHistoryGridModel","95","referencedObjectType","referencedObjectId","purchasedObject","96","request","VIEWS_URL_PREFIX","Authorization","responseError","rejection","Factory","97","./HttpInterceptor","98","AboutCompanyController","ABOUT_COMPANY_MENU_KEY","99","AboutProjectController","ABOUT_PROJECT_MENU_KEY","100","ContactsController","CONTACTS_MENU_KEY","101","FAQController","FAQ_MENU_KEY","102","AboutProjectController_1","AboutCompanyController_1","FAQController_1","ContactsController_1","./AboutCompanyController","./AboutProjectController","./ContactsController","./FAQController","103","EventService","listeners","registerListener","unregisterListener","notify","104","EventService_1","constant","SESSION","./EventService","./Storage","105","StorageWrapper","stringified","setItem","getItem","parseJSON","removeItem","106","SecurityLogStatusEnum","SECURITY_LOG_STATUS_ENUM_VALUES","SUCCESS","FAILED_INVALID_CREDENTIALS","FAILED_UNKNOWN_CREDENTIALS","FAILED_ACCESS_DENIED","SecurityLogActionEnum","SECURITY_LOG_ACTION_ENUM_VALUES","AUTHENTICATION","LOGOUT","AUTHORIZATION","107","SystemLogSourceEnum","SYSTEM_LOG_SOURCE_ENUM_VALUES","SERVER","CLIENT","USER_REPORT","SystemLogLevelEnum","SYSTEM_LOG_LEVEL_ENUM_VALUES","ERROR","WARN","INFO","DEBUG","108","SecurityLogController_1","SystemLogController_1","SecurityLogController","SystemLogController","./SecurityLogController","./SystemLogController","109","ISecurityLog_1","securityActionTypes","securityLogStatuses","actionsFilter","statusesFilter","securityLogsGridModel","fillSecurityActionTypes","fillSecurityLogStatuses","dateValue","forDateFilter","statuses","actionTypes","./ISecurityLog","110","ISystemLog_1","systemLogLevels","systemLogSources","levelsFilter","sourcesFilter","systemLogsGridModel","fillSystemActionTypes","fillSystemLogStatuses","levels","./ISystemLog","111","MainController","112","MainService_1","MainController_1","MainService","./MainController","./MainService","113","114","EditMaterialController","materialSubjectChangeCallback","materialLanguageChangeCallback","materialOwnerChangeCallback","MATERIAL_ID_PARAM","MaterialType","cancelMaterialPreviews","cancelMaterialFiles","redirectOrClearFields","watchUrl","cleanFields","showPreview","hasFile","isMaterialFileStatusReady","isAudioOrVideo","isPhoto","youtubeMultimediaSources","stopVideoAndAudioOnHidePreview","getMaterialValidity","./MaterialService","./models/MaterialType","115","SocialService_1","PlaylistService_1","MaterialController","$anchorScroll","financeRouter","socialService","playlistService","disabledRemoveButton","anchorComplete","getRelatedMaterials","resultRelated","relatedMaterials","commentsGridModel","loadCommentsCount","scrollAnchor","getFileTypeName","newComment","newReplyComment","MATERIAL_VIEW","savedUrl","getCommentsCount","commentsCount","changeMaterialRating","isLike","changeObjectRating","likesCount","dislikesCount","liked","disliked","addComment","reply","cleanComment","replyComment","commentId","editMaterial","deleteMaterial","courses","isMaterialPurchased","purchased","findPlaylistsByMaterial","playlists","formattedFunc","getItemsFormattedString","createMaterialDownloadActionLog","MATERIAL_DOWNLOAD","changeAuthorSubscription","subscribe","SocialService","PlaylistService","./../social/SocialService","./../tree/TreeElementsInfoFiller","./PlaylistService","116","getPublicInfo","117","SearchController_1","MaterialController_1","MyDownloadsController_1","EditMaterialController_1","PlaylistsController_1","PlaylistDetailsController_1","PlaylistEditController_1","SocialModule_1","SocialModule","SearchController","MyDownloadsController","PlaylistsController","PlaylistDetailsController","PlaylistEditController","./../courses/CoursesModule","./../personal/PersonalModule","./../social/SocialModule","./../users/UsersModule","./EditMaterialController","./MaterialController","./MyDownloadsController","./PlaylistDetailsController","./PlaylistEditController","./PlaylistsController","./SearchController","118","watch","119","playlistId","PLAYLIST_ID_PARAM","EDUCATION_PLAYLISTS_MENU_KEY","loadPlaylist","PLAYLIST_VIEW","getMaterialGlyphiconClass","loadMaterialPage","available","120","playlistMaterials","playlistIdStr","hasPlaylistId","addPlaylists","demandPlaylistPermissionsIf","playlistPermissions","loadPlaylistMaterials","ownerFullName","userMaterialsGridModel","getMaterials","getValidity","err","playlistDetailsUrl","addMaterialToPlaylist","removeMaterialFromPlaylist","121","122","playlistsGridModel","getLanguages","languages","languagesStr","searchPlaylists","123","searchQuery","searchViewType","searchMaterial","dateFrom","dateFromText","dateTo","dateToText","filterMaterialViewType","clearSearch","doPurchase","purchaseUrl","showPuchaseHint","popover","getMaterialTypeTitle","shown","./../components/VhsSearchDirective","124","PHOTO","DOCUMENTS","125","NewsService_1","NewsEditController","newsService","news","newsId","ONE_NEWS_ID_PARAM","addNews","demandNewsPermissionsIf","newsPermissions","loadNews","getNews","oneNewsUrl","NewsService","./NewsService","126","NewsSearchController_1","OneNewsController_1","NewsEditController_1","NewsSearchController","OneNewsController","./NewsEditController","./NewsSearchController","./OneNewsController","127","newsType","NEWS_TYPE_PARAM","ALL_NEWS_MENU_KEY","STUDENTS_OFFERS_MENU_KEY","preserveHeader","addActionLinkIf","oneNewsCreateUrl","newsGridModel","checkSubscription","openOneNews","oneNewsId","clearFilter","tags","authorName","checkNewsSubscription","changeNewsSubscription","128","129","NEWS","../security/PermissionsService","130","loadUserProfile","getCurrentUserProfile","userProfile","131","CouponsController","132","addCourseToFavorites","removeCourseFromFavorites","./PersonalService","133","FavoritesController","disableRemoveButton","FAVORITES_MENU_KEY","favoritesGridModel","loadFavoritePage","isMaterialObject","referenceObjectType","isPlaylistObject","isCourseObject","getContentTypeTitle","favoriteId","favoriteType","getReferenceObjectTypeFromString","getRemoveMessage","134","NewCommentsController","objectComments","disableGetCommentsButton","objectsWithCommentsGridModel","showComments","getUserCommentsForObject","getObjectRoute","object","getGlyphiconClass","getNewsGlyphiconClass","getTypeTitle","getReferenceObjectTypeTitle","getObjectRouteForComment","135","ProfileController_1","FavoritesController_1","UploadsController_1","QuizzesController_1","SubscriptionsController_1","NewCommentsController_1","SupportController_1","CouponsController_1","PurchasesHistoryController_1","SettingsController_1","ProfileController","UploadsController","QuizzesController","SubscriptionsController","SupportController","PurchasesHistoryController","SettingsController","./../settings/SettingsModule","./CouponsController","./FavoritesController","./NewCommentsController","./ProfileController","./PurchasesHistoryController","./QuizzesController","./SettingsController","./SubscriptionsController","./SupportController","./UploadsController","136","authorId","loadSubscriptions","changeSubscriptions","subscriptions","sendMessageToSupport","messageToSupport","137","playlistViewType","setPlaylistViewType","searchGridModelObjects","addPlaylistToFavorites","removePlaylistFromFavorites","138","ProfileMenuItemsKey_1","IUser_1","quizResults","disableSaveButton","hasCreatedQuizzes","disableGetQuizResultsButton","loadLeftMenu","PROFILE_MENU_KEY","newUserProfile","userLogon","loadUserLogon","uploadsGridModel","createdQuizzesGridModel","passedQuizzesGridModel","quizViewType","authorsIds","subjectsIds","allNewsSubscription","studentsNewsSubscription","commentsSubscription","loadNotificationsFrequency","getUserHasCreatedQuizzes","leftMenu","ProfileMenuItemsKey","MY_COURSES","MY_QUIZZES","MY_PLAYLISTS","SUBSCRIPTIONS","NEW_COMMENTS","SUPPORT","COUPONS","SETTINGS","MY_UPLOADS","BALANCE","HISTORY","isEverythingDisabled","PredefinedUsersEnum","GUEST","loadAvailableLocales","getCurrentUserLocalLogon","logon","getAvailableLocales","availableLocales","getActiveReferenceEntitiesForSelectorWithoutParams","frequency","notificationsFrequency","hasUserCreatedQuizzes","saveProfileSettings","updateCurrentUserProfile","cancelProfileSettings","showQuizResults","sourceType","loadQuiz","setQuizViewType","loadUsers","changeSubscriptionsSettings","changeUserNotificationFrequency","notificationFrequencyId","cancelSubscriptionsSettings","./../users/models/IUser","./ProfileMenuItemsKey","139","ACCOUNT_MANAGEMENT","140","141","142","../urls/MainRouter","143","144","145","146","QuizController","QUIZ_ID_PARAM","loadUserQuizResult","startQuiz","passingUrl","./QuizService","147","QuizEditController","quizQuestions","currentQuestion","currentAnswers","isEditQuestion","quizIdStr","hasQuizId","addQuizzes","demandQuizPermissionsIf","quizPermissions","correctAnswersType","isMultiple","quiz_form","PERCENTAGE_TYPE","percentageNumber","correctAnswersNumber","pointsNumber","hasProgress","writeIndexes","clearCurrentQuestionFields","editQuestionIndex","currentQuestionValid","every","checkCurrentCorrectAnswer","toggleQuestionMultiple","editQuestion","addAnswerToQuestion","removeAnswerFromQuestion","addQuestionToQuiz","points","removeQuestionFromQuiz","indexNumber","getQuizPointsSum","sum","objectArray","148","QuizPassingController","quizResult","disableCompleteButton","getUserQuizCurrentResult","attempt","completeQuiz","selectCurrentAnswer","149","150","quizzesGridModel","searchQuiz","loadQuizDetails","151","QuizEditController_1","QuizController_1","QuizPassingController_1","./QuizController","./QuizEditController","./QuizPassingController","152","ReferenceController","REFERENCE_NAME_PARAM","referenceDefaultValues","REFERENCE_DEFAULT_VALUES_PARAM","REFERENCE_FILTER_PARAM","referenceAssociationFilters","REFERENCE_ASSOCIATION_FILTERS_PARAM","referenceEntitiesGridModel","referenceSearchString","referenceSplitParam","getReferenceMetadata","referenceMetadata","addReferenceData","isInternal","getReferenceEditUrl","editUrl","addIf","getStringInBrowserFormat","activateEntity","entityIdProperty","entityVersionProperty","setActiveReferenceEntity","./../utils/StringBuilder","./ReferenceService","./ReferenceUtils","153","ReferenceIsRequiredValidator_1","ReferenceMaxLengthValidator_1","ReferenceRequiredAttributesGroupValidator_1","ReferenceEditController","REFERENCE_ID_PARAM","hasReferenceId","editReferenceData","referenceDefaultValuesMap","getReferenceDefaultValuesMap","referenceAssociationFiltersMap","getReferenceAssociationFiltersMap","referenceValidationErrorsMap","redirectStorageUrl","getAndRemoveStorageUrl","getReferenceEntity","referenceEntity","metadata","fixInputReferenceEntityAttributes","selectorAttribute","systemName","getEmptyReferenceEntity","setDefaultReferenceEntityAttributesValues","redirectToBack","saveEntity","updateReferenceEntity","createReferenceEntity","deactivateEntity","entityValid","ReferenceMaxLengthValidator","valid","requiredAttributesGroup","ReferenceRequiredAttributesGroupValidator","ReferenceIsRequiredValidator","defaultValues","defaultValue","defaultValueParts","property","associationFilters","associationFilter","associationFilterParts","association","defaultAttributes","attrType","attrSysName","isTextAttributeType","convertStringDefaultValue","isBooleanAttributeType","convertBooleanDefaultValue","isDateAttributeType","convertDateDefaultValue","isMoneyAttributeType","convertMoneyDefaultValue","isOneAssociationAttributeType","convertOneAssociationDefaultValue","isManyAssociationAttributeType","convertManyAssociationDefaultValue","./ReferenceRedirect","./validators/ReferenceIsRequiredValidator","./validators/ReferenceMaxLengthValidator","./validators/ReferenceRequiredAttributesGroupValidator","154","ReferenceController_1","ReferenceEditController_1","./ReferenceController","./ReferenceEditController","155","156","getActiveReferenceEntities","referenceParams","createReferenceFilterParams","includedIds","getHierarchicalReferenceEntities","referenceHierarchicalProperty","getEmptyReferenceEntityNoMetadata","getAssociationReferencesMetadata","isActive","./models/IReferenceEntitiesParams","157","getEntityIdProperty","getEntityIsActiveProperty","entityIsActiveProperty","getIsActiveGridStyle","color","getReferenceName","meta","convertStringAttribute","convertNumberAttribute","convertBooleanAttribute","convertDateAttribute","convertMoneyAttribute","convertGroupAttribute","groupTemplate","childAttributes","templateParts","part","convertOneAssociationAttribute","associationEntity","getEntityNameByAttribute","convertOneAssociationAttributeForGrid","associationAttribute","convertOneAssociationAttributeToNumber","convertManyAssociationAttributeToNumbers","ids","validStringAttribute","validBooleanAttribute","validDateAttribute","validMoneyAttribute","validOneAssociationAttribute","validManyAssociationAttribute","validAttribute","attributeType","isNumberAttributeType","isGroupAttributeType","isAndLogicalOperatorType","logicalOperatorType","isOrLogicalOperatorType","ch","concat","158","159","utils","validationErrorsMap","editableAttributes","attrIsRequired","isRequired","buildErrorMessage","160","attrMaxLength","maxLength","161","entityByRequiredAttributesGroupValid","entityByRequiredAttributesValid","requiredAttributesGroups","requiredAttrsGroup","firstAttr","162","163","PermissionsRepository","permissionsCache","expirationCache","clearCache","timer","CACHE_CLEAR_INTERVAL","getPermissionsForObject","force","expired","expiredFromTime","CACHE_EXPIRATION_TIME","164","PermissionsRepository_1","permissionsRepository","getSecuredObjectPermissions","entityId","getMaterialPermissions","getPlaylistPermissions","getCoursePermissions","getQuizPermissions","getNewsPermissions","./PermissionsRepository","./permissions/SecuredObjectType","165","./PermissionsService","./SecurityService","166","demandNotAuthenticated","condition","forwardToAccessDeniedOrRedirectLogOn","demandMaterialPermissions","demandPlaylistPermissions","demandQuizPermissions","demandNewsPermissions","167","VIEW_MATERIAL","DOWNLOAD_MATERIAL","VIEW_COURSE","VIEW_QUIZ","VIEW_PLAYLIST","168","169","CommonSettingsController","settingsApi","settings","ADMINISTRATION_COMMON_SETTINGS_MENU_KEY","loadSettings","getSystemCommonSettings","saveSettings","./SettingsService","170","CommonSettingsController_1","StoragePlacesRegistryController_1","StoragePlaceEditController_1","StoragePlacesRegistryController","StoragePlaceEditController","./CommonSettingsController","./StoragePlaceEditController","./StoragePlacesRegistryController","171","getStoragePlaces","getStoragePlace","createStoragePlace","storagePlace","updateStoragePlace","setStoragePlaceActive","RESET_CURRENT_DATE_TIMEOUT_MS","172","StorageTypeEnum_1","externalUrl","connectionString","login","capacity","usedSpace","secured","active","availableStorageTypes","storagePlaceId","s_1","StorageTypeEnum","storagePlaceEditUrl","deactivate","./models/StorageTypeEnum","173","storagePlaceCreateUrl","storagePlacesGridModel","convertIsActive","activate","174","175","./SocialService","176","comment","177","actionType","178","BaseReportController","regional","monthNames","monthNamesShort","dayNames","dayNamesShort","formatString","documentElement","179","__extends","__","constructor","BaseReportController_1","MaterialReportTarget_1","ReportGroupType_1","StatisticReportsService_1","ReportWriters_1","ReportOptions_1","ReportTargetNamesMaker_1","MaterialDownloadReportController","_super","statisticReportsService","lineDiagramsReportWriter","LineDiagramsReportWriter","materialTypeIds","subjectIds","lineDiagramsReportData","lineDiagramsReportOptions","getLineDiagramsReportOptions","ANALYTICS_MATERIAL_DOWNLOAD_REPORT_MENU_KEY","reportTarget","MaterialReportTarget","OWNERS","reportTargetNamesMaker","OwnerNamesMaker","MATERIAL_TYPES","MaterialTypeNamesMaker","viewReportGroupByDays","viewReportGroupBy","ReportGroupType","DAYS","viewReportGroupByWeeks","WEEKS","viewReportGroupByMonths","MONTHS","viewReportGroupByYears","YEARS","groupType","viewMaterialDownloadReport","report","series","make","label","reporting","isCurrentOwnersReportTarget","isCurrentMaterialTypesReportTarget","isCurrentSubjectsReportTarget","SUBJECTS","setCurrentOwnersReportTarget","setCurrentReportTarget","setCurrentMaterialTypesReportTarget","setCurrentSubjectsReportTarget","SubjectNamesMaker","StatisticReportsService","./BaseReportController","./StatisticReportsService","./models/MaterialReportTarget","./models/ReportGroupType","./utils/ReportOptions","./utils/ReportTargetNamesMaker","./utils/ReportWriters","180","MaterialUploadReportController","ANALYTICS_MATERIAL_UPLOAD_REPORT_MENU_KEY","viewMaterialUploadReport","181","MaterialViewReportController","ANALYTICS_MATERIAL_VIEW_REPORT_MENU_KEY","viewMaterialViewReport","182","fillMissingDate","groupedValues","valueMap","v","newValues","getUnitOfTime","unixTime","183","MaterialViewReportController_1","MaterialDownloadReportController_1","MaterialUploadReportController_1","./ActionLogService","./MaterialDownloadReportController","./MaterialUploadReportController","./MaterialViewReportController","184","185","186","187","reportName","legend","highlighter","axes","xaxis","renderer","tickOptions","yaxis","188","189","190","./UploadsService","191","queue","Array","UPLOAD_PARALLEL_FILES","currentlyUploadableFilesMap","fileProgressFunc","evt","xhr","uploaded","loaded","guid","cup","fileCompleteFunc","abortFunc","successFunc","errorFunc","uploadParallelFiles","FileAPI","cors","abort","cancelByKey","filterFiles","shift","uploadOneFile","cuf","chunkSize","KB","chunkUploadRetry","fileprogress","filecomplete","192","TreeElementState_1","fillHierarchyInfo","gridTreeElements","MAX_VISIBLE_LEVEL","maxVisibleLevel","initHierarchyElement","childrenOnLevels","lastElementsOnLevels","previousLevel","currentLevel","FIRST_LEVEL","lvl","isLastChild","TreeElementState","EXPANDED","COLLAPSED","child","expand","expandAll","./models/TreeElementState","193","194","BaseRouter_1","logoutUrl","BaseRouter","./BaseRouter","195","preserveFullScreenUrl","196","studentUrl","teacherUrl","197","198","courseRouter","./../urls/BaseRouter","199","quizDetailsUrl","200","purchaseHistoryUrl","accountManagementUrl","getReferencedObjectTypeAsString","201","aboutProjectUrl","aboutCompanyUrl","faqUrl","contactsUrl","202","203","204","myDownloadsUrl","playlistEditUrl","playlistCreateUrl","205","newsSearchUrl","oneNewsEditUrl","206","profileUrl","favoritesUrl","settingsAopaUrl","207","208","209","materialViewReportUrl","materialDownloadReportUrl","materialUploadReportUrl","210","commonSettingsUrl","STORAGE_PLACE_ID_PARAM","211","212","./AuthRouter","./BroadcastsRouter","./CommonRouter","./ContentRouter","./CoursesRouter","./FinancesRouter","./InfoRouter","./LogsRouter","./MainRouter","./MaterialsRouter","./NewsRouter","./PersonalRouter","./QuizzesRouter","./ReferenceRouter","./StatisticsRouter","./SystemSettingsRouter","./UrlServiceProvider","./UsersRouter","213","addUrl","signupUrl","currentProfileUrl","profileId","groupsAddUrl","groupEditUrl","groupId","GROUP_ID_PARAM","fullScreenUrl","214","CurrentUserProfileController","usersApi","userRouter","USER_PROFILE_MENU_KEY","loadUser","localeInfo","./UserService","./models/IUser","215","GroupEditController","usersService","permissionsIds","loadGroup","getActiveGroupsEntities","getGroup","getActiveGroupsNoChildren","getActiveGroups","groupsEntities","updateGroup","createGroup","editGroup","setActiveGroupWithChildren","216","GroupsController","groupsGridModel","getGroupEditUrl","activateGroup","217","IGroup_1","UserEditController","newGroups","userLogons","activeGroup","logonProviders","logonProvidersForAdd","createUser","loadGroups","loadLogonProviders","isDeactivationAllowed","loadUserGroups","loadUserLogons","recalculateAvailableLogonProviders","canBeRemoved","ADMIN","GroupEnum","SYS_ADMINS","groupsList","userGroup","getUserLogons","editUser","logonFound","setActive","requestPasswordRestore","requestPasswordRestoreForUser","resetPasswordLink","showGroups","closeGroups","selectGroup","unselectGroup","clearSelection","addGroups","deleteGroup","found","getLogonProviderName","addUserLogon","removeUserLogon","logonIndex","./models/IGroup","218","selfSignup","userUpdateInput","getGroupsWithoutExcludedGroupsForSelector","frequencyId","219","UserSignupController","userApi","PROVIDER_STORAGE_KEY_LOCAL","EN_US_LOCALE","REGISTERED_USERS","confirmEmail","220","UsersListController","usersGridModel","downloadUserCertificate","221","CurrentUserProfileController_1","UserEditController_1","UserSignupController_1","UsersController_1","GroupsController_1","GroupEditController_1","./CurrentUserProfileController","./GroupEditController","./GroupsController","./UserEditController","./UserSignupController","./UsersController","222","223","224","MAP_FILE_EXTENSIONS_TO_MATERIAL_TYPES","mp3","mp4","jpg","png","txt","doc","docx","ppt","pptx","pdf","xls","xlsx","225","sourceElement","targetClass","hasClass","attrName","226","FULL_SCREEN_LOCATION_PARAM","fullScreenParam","227","updateMenuListeners","ANALYTICS_MENU_KEY","NEWS_MENU_KEY","INFO_MENU_KEY","228","229","paths","230","MaterialType_2","isNewObject","getReferencedObjectTypeAsNumber","231","addActionLink","LINK_TEMPLATE","preserveLinks","updateHeader","newStr","STATUS_TEMPLATE","STATUS_WITH_TOOLTIP_TEMPLATE","headerInfo","pageHeaderListeners","removePageHeaderUpdateListener","232","prefix","fromCharCode","random","233","strings","234","semaphores","checkNew","uid","handler","semaphore","getByUid","setByUid","delay","executeWithTimeout","timeout","$self","235","successUrl","abortUrl","errorUrl","MATERIAL_PREVIEW_KEY","COURSE_PREVIEW_KEY","BUNDLE_KEY","FILE_KEY","MATERIAL_FILE_KEY","236","appendQueryParam","serviceUrl","UrlBuilder","replacement","cacheable","237","./UploadUtils"],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export class AppProperties {\r\n    public static defaultLocale: string = \"en_US\";\r\n    public static serviceRoot: string = \"https://aopa-basicmed-qa-as.azurewebsites.net/\";\r\n    public static appVersion: string = \"1.2.0\";\r\n    public static svnRevision: string = \"bca790cdef_HEAD\";\r\n    public static buildDate: string = \"202501131837\";\r\n    public static authProvider: string = \"LOCAL\";\r\n\r\n    public static currentLocale: string = \"en_US\";\r\n    public static appTitle: string = \"AOPA Learning Management System\";\r\n\r\n    public static buildVersion: string = \"1.2.0.bca790cdef_HEAD.202501131837\";\r\n}",null,"//! moment.js\n//! version : 2.10.6\n//! authors : Tim Wood, Iskren Chernev, Moment.js contributors\n//! license : MIT\n//! momentjs.com\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    global.moment = factory()\n}(this, function () { 'use strict';\n\n    var hookCallback;\n\n    function utils_hooks__hooks () {\n        return hookCallback.apply(null, arguments);\n    }\n\n    // This is done to register the method called with moment()\n    // without creating circular dependencies.\n    function setHookCallback (callback) {\n        hookCallback = callback;\n    }\n\n    function isArray(input) {\n        return Object.prototype.toString.call(input) === '[object Array]';\n    }\n\n    function isDate(input) {\n        return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n    }\n\n    function map(arr, fn) {\n        var res = [], i;\n        for (i = 0; i < arr.length; ++i) {\n            res.push(fn(arr[i], i));\n        }\n        return res;\n    }\n\n    function hasOwnProp(a, b) {\n        return Object.prototype.hasOwnProperty.call(a, b);\n    }\n\n    function extend(a, b) {\n        for (var i in b) {\n            if (hasOwnProp(b, i)) {\n                a[i] = b[i];\n            }\n        }\n\n        if (hasOwnProp(b, 'toString')) {\n            a.toString = b.toString;\n        }\n\n        if (hasOwnProp(b, 'valueOf')) {\n            a.valueOf = b.valueOf;\n        }\n\n        return a;\n    }\n\n    function create_utc__createUTC (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, true).utc();\n    }\n\n    function defaultParsingFlags() {\n        // We need to deep clone this object.\n        return {\n            empty           : false,\n            unusedTokens    : [],\n            unusedInput     : [],\n            overflow        : -2,\n            charsLeftOver   : 0,\n            nullInput       : false,\n            invalidMonth    : null,\n            invalidFormat   : false,\n            userInvalidated : false,\n            iso             : false\n        };\n    }\n\n    function getParsingFlags(m) {\n        if (m._pf == null) {\n            m._pf = defaultParsingFlags();\n        }\n        return m._pf;\n    }\n\n    function valid__isValid(m) {\n        if (m._isValid == null) {\n            var flags = getParsingFlags(m);\n            m._isValid = !isNaN(m._d.getTime()) &&\n                flags.overflow < 0 &&\n                !flags.empty &&\n                !flags.invalidMonth &&\n                !flags.invalidWeekday &&\n                !flags.nullInput &&\n                !flags.invalidFormat &&\n                !flags.userInvalidated;\n\n            if (m._strict) {\n                m._isValid = m._isValid &&\n                    flags.charsLeftOver === 0 &&\n                    flags.unusedTokens.length === 0 &&\n                    flags.bigHour === undefined;\n            }\n        }\n        return m._isValid;\n    }\n\n    function valid__createInvalid (flags) {\n        var m = create_utc__createUTC(NaN);\n        if (flags != null) {\n            extend(getParsingFlags(m), flags);\n        }\n        else {\n            getParsingFlags(m).userInvalidated = true;\n        }\n\n        return m;\n    }\n\n    var momentProperties = utils_hooks__hooks.momentProperties = [];\n\n    function copyConfig(to, from) {\n        var i, prop, val;\n\n        if (typeof from._isAMomentObject !== 'undefined') {\n            to._isAMomentObject = from._isAMomentObject;\n        }\n        if (typeof from._i !== 'undefined') {\n            to._i = from._i;\n        }\n        if (typeof from._f !== 'undefined') {\n            to._f = from._f;\n        }\n        if (typeof from._l !== 'undefined') {\n            to._l = from._l;\n        }\n        if (typeof from._strict !== 'undefined') {\n            to._strict = from._strict;\n        }\n        if (typeof from._tzm !== 'undefined') {\n            to._tzm = from._tzm;\n        }\n        if (typeof from._isUTC !== 'undefined') {\n            to._isUTC = from._isUTC;\n        }\n        if (typeof from._offset !== 'undefined') {\n            to._offset = from._offset;\n        }\n        if (typeof from._pf !== 'undefined') {\n            to._pf = getParsingFlags(from);\n        }\n        if (typeof from._locale !== 'undefined') {\n            to._locale = from._locale;\n        }\n\n        if (momentProperties.length > 0) {\n            for (i in momentProperties) {\n                prop = momentProperties[i];\n                val = from[prop];\n                if (typeof val !== 'undefined') {\n                    to[prop] = val;\n                }\n            }\n        }\n\n        return to;\n    }\n\n    var updateInProgress = false;\n\n    // Moment prototype object\n    function Moment(config) {\n        copyConfig(this, config);\n        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n        // Prevent infinite loop in case updateOffset creates new moment\n        // objects.\n        if (updateInProgress === false) {\n            updateInProgress = true;\n            utils_hooks__hooks.updateOffset(this);\n            updateInProgress = false;\n        }\n    }\n\n    function isMoment (obj) {\n        return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);\n    }\n\n    function absFloor (number) {\n        if (number < 0) {\n            return Math.ceil(number);\n        } else {\n            return Math.floor(number);\n        }\n    }\n\n    function toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            value = absFloor(coercedNumber);\n        }\n\n        return value;\n    }\n\n    function compareArrays(array1, array2, dontConvert) {\n        var len = Math.min(array1.length, array2.length),\n            lengthDiff = Math.abs(array1.length - array2.length),\n            diffs = 0,\n            i;\n        for (i = 0; i < len; i++) {\n            if ((dontConvert && array1[i] !== array2[i]) ||\n                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n                diffs++;\n            }\n        }\n        return diffs + lengthDiff;\n    }\n\n    function Locale() {\n    }\n\n    var locales = {};\n    var globalLocale;\n\n    function normalizeLocale(key) {\n        return key ? key.toLowerCase().replace('_', '-') : key;\n    }\n\n    // pick the locale from the array\n    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n    function chooseLocale(names) {\n        var i = 0, j, next, locale, split;\n\n        while (i < names.length) {\n            split = normalizeLocale(names[i]).split('-');\n            j = split.length;\n            next = normalizeLocale(names[i + 1]);\n            next = next ? next.split('-') : null;\n            while (j > 0) {\n                locale = loadLocale(split.slice(0, j).join('-'));\n                if (locale) {\n                    return locale;\n                }\n                if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                    //the next array item is better than a shallower substring of this one\n                    break;\n                }\n                j--;\n            }\n            i++;\n        }\n        return null;\n    }\n\n    function loadLocale(name) {\n        var oldLocale = null;\n        // TODO: Find a better way to register and load all the locales in Node\n        if (!locales[name] && typeof module !== 'undefined' &&\n                module && module.exports) {\n            try {\n                oldLocale = globalLocale._abbr;\n                require('./locale/' + name);\n                // because defineLocale currently also sets the global locale, we\n                // want to undo that for lazy loaded locales\n                locale_locales__getSetGlobalLocale(oldLocale);\n            } catch (e) { }\n        }\n        return locales[name];\n    }\n\n    // This function will load locale and then set the global locale.  If\n    // no arguments are passed in, it will simply return the current global\n    // locale key.\n    function locale_locales__getSetGlobalLocale (key, values) {\n        var data;\n        if (key) {\n            if (typeof values === 'undefined') {\n                data = locale_locales__getLocale(key);\n            }\n            else {\n                data = defineLocale(key, values);\n            }\n\n            if (data) {\n                // moment.duration._locale = moment._locale = data;\n                globalLocale = data;\n            }\n        }\n\n        return globalLocale._abbr;\n    }\n\n    function defineLocale (name, values) {\n        if (values !== null) {\n            values.abbr = name;\n            locales[name] = locales[name] || new Locale();\n            locales[name].set(values);\n\n            // backwards compat for now: also set the locale\n            locale_locales__getSetGlobalLocale(name);\n\n            return locales[name];\n        } else {\n            // useful for testing\n            delete locales[name];\n            return null;\n        }\n    }\n\n    // returns locale data\n    function locale_locales__getLocale (key) {\n        var locale;\n\n        if (key && key._locale && key._locale._abbr) {\n            key = key._locale._abbr;\n        }\n\n        if (!key) {\n            return globalLocale;\n        }\n\n        if (!isArray(key)) {\n            //short-circuit everything else\n            locale = loadLocale(key);\n            if (locale) {\n                return locale;\n            }\n            key = [key];\n        }\n\n        return chooseLocale(key);\n    }\n\n    var aliases = {};\n\n    function addUnitAlias (unit, shorthand) {\n        var lowerCase = unit.toLowerCase();\n        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n    }\n\n    function normalizeUnits(units) {\n        return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n    }\n\n    function normalizeObjectUnits(inputObject) {\n        var normalizedInput = {},\n            normalizedProp,\n            prop;\n\n        for (prop in inputObject) {\n            if (hasOwnProp(inputObject, prop)) {\n                normalizedProp = normalizeUnits(prop);\n                if (normalizedProp) {\n                    normalizedInput[normalizedProp] = inputObject[prop];\n                }\n            }\n        }\n\n        return normalizedInput;\n    }\n\n    function makeGetSet (unit, keepTime) {\n        return function (value) {\n            if (value != null) {\n                get_set__set(this, unit, value);\n                utils_hooks__hooks.updateOffset(this, keepTime);\n                return this;\n            } else {\n                return get_set__get(this, unit);\n            }\n        };\n    }\n\n    function get_set__get (mom, unit) {\n        return mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]();\n    }\n\n    function get_set__set (mom, unit, value) {\n        return mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n    }\n\n    // MOMENTS\n\n    function getSet (units, value) {\n        var unit;\n        if (typeof units === 'object') {\n            for (unit in units) {\n                this.set(unit, units[unit]);\n            }\n        } else {\n            units = normalizeUnits(units);\n            if (typeof this[units] === 'function') {\n                return this[units](value);\n            }\n        }\n        return this;\n    }\n\n    function zeroFill(number, targetLength, forceSign) {\n        var absNumber = '' + Math.abs(number),\n            zerosToFill = targetLength - absNumber.length,\n            sign = number >= 0;\n        return (sign ? (forceSign ? '+' : '') : '-') +\n            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n    }\n\n    var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n\n    var formatFunctions = {};\n\n    var formatTokenFunctions = {};\n\n    // token:    'M'\n    // padded:   ['MM', 2]\n    // ordinal:  'Mo'\n    // callback: function () { this.month() + 1 }\n    function addFormatToken (token, padded, ordinal, callback) {\n        var func = callback;\n        if (typeof callback === 'string') {\n            func = function () {\n                return this[callback]();\n            };\n        }\n        if (token) {\n            formatTokenFunctions[token] = func;\n        }\n        if (padded) {\n            formatTokenFunctions[padded[0]] = function () {\n                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n            };\n        }\n        if (ordinal) {\n            formatTokenFunctions[ordinal] = function () {\n                return this.localeData().ordinal(func.apply(this, arguments), token);\n            };\n        }\n    }\n\n    function removeFormattingTokens(input) {\n        if (input.match(/\\[[\\s\\S]/)) {\n            return input.replace(/^\\[|\\]$/g, '');\n        }\n        return input.replace(/\\\\/g, '');\n    }\n\n    function makeFormatFunction(format) {\n        var array = format.match(formattingTokens), i, length;\n\n        for (i = 0, length = array.length; i < length; i++) {\n            if (formatTokenFunctions[array[i]]) {\n                array[i] = formatTokenFunctions[array[i]];\n            } else {\n                array[i] = removeFormattingTokens(array[i]);\n            }\n        }\n\n        return function (mom) {\n            var output = '';\n            for (i = 0; i < length; i++) {\n                output += array[i] instanceof Function ? array[i].call(mom, format) : array[i];\n            }\n            return output;\n        };\n    }\n\n    // format date using native date object\n    function formatMoment(m, format) {\n        if (!m.isValid()) {\n            return m.localeData().invalidDate();\n        }\n\n        format = expandFormat(format, m.localeData());\n        formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n\n        return formatFunctions[format](m);\n    }\n\n    function expandFormat(format, locale) {\n        var i = 5;\n\n        function replaceLongDateFormatTokens(input) {\n            return locale.longDateFormat(input) || input;\n        }\n\n        localFormattingTokens.lastIndex = 0;\n        while (i >= 0 && localFormattingTokens.test(format)) {\n            format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n            localFormattingTokens.lastIndex = 0;\n            i -= 1;\n        }\n\n        return format;\n    }\n\n    var match1         = /\\d/;            //       0 - 9\n    var match2         = /\\d\\d/;          //      00 - 99\n    var match3         = /\\d{3}/;         //     000 - 999\n    var match4         = /\\d{4}/;         //    0000 - 9999\n    var match6         = /[+-]?\\d{6}/;    // -999999 - 999999\n    var match1to2      = /\\d\\d?/;         //       0 - 99\n    var match1to3      = /\\d{1,3}/;       //       0 - 999\n    var match1to4      = /\\d{1,4}/;       //       0 - 9999\n    var match1to6      = /[+-]?\\d{1,6}/;  // -999999 - 999999\n\n    var matchUnsigned  = /\\d+/;           //       0 - inf\n    var matchSigned    = /[+-]?\\d+/;      //    -inf - inf\n\n    var matchOffset    = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n    var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n\n    // any word (or two) characters or numbers including two/three word month in arabic.\n    var matchWord = /[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i;\n\n    var regexes = {};\n\n    function isFunction (sth) {\n        // https://github.com/moment/moment/issues/2325\n        return typeof sth === 'function' &&\n            Object.prototype.toString.call(sth) === '[object Function]';\n    }\n\n\n    function addRegexToken (token, regex, strictRegex) {\n        regexes[token] = isFunction(regex) ? regex : function (isStrict) {\n            return (isStrict && strictRegex) ? strictRegex : regex;\n        };\n    }\n\n    function getParseRegexForToken (token, config) {\n        if (!hasOwnProp(regexes, token)) {\n            return new RegExp(unescapeFormat(token));\n        }\n\n        return regexes[token](config._strict, config._locale);\n    }\n\n    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n    function unescapeFormat(s) {\n        return s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n            return p1 || p2 || p3 || p4;\n        }).replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    }\n\n    var tokens = {};\n\n    function addParseToken (token, callback) {\n        var i, func = callback;\n        if (typeof token === 'string') {\n            token = [token];\n        }\n        if (typeof callback === 'number') {\n            func = function (input, array) {\n                array[callback] = toInt(input);\n            };\n        }\n        for (i = 0; i < token.length; i++) {\n            tokens[token[i]] = func;\n        }\n    }\n\n    function addWeekParseToken (token, callback) {\n        addParseToken(token, function (input, array, config, token) {\n            config._w = config._w || {};\n            callback(input, config._w, config, token);\n        });\n    }\n\n    function addTimeToArrayFromToken(token, input, config) {\n        if (input != null && hasOwnProp(tokens, token)) {\n            tokens[token](input, config._a, config, token);\n        }\n    }\n\n    var YEAR = 0;\n    var MONTH = 1;\n    var DATE = 2;\n    var HOUR = 3;\n    var MINUTE = 4;\n    var SECOND = 5;\n    var MILLISECOND = 6;\n\n    function daysInMonth(year, month) {\n        return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n    }\n\n    // FORMATTING\n\n    addFormatToken('M', ['MM', 2], 'Mo', function () {\n        return this.month() + 1;\n    });\n\n    addFormatToken('MMM', 0, 0, function (format) {\n        return this.localeData().monthsShort(this, format);\n    });\n\n    addFormatToken('MMMM', 0, 0, function (format) {\n        return this.localeData().months(this, format);\n    });\n\n    // ALIASES\n\n    addUnitAlias('month', 'M');\n\n    // PARSING\n\n    addRegexToken('M',    match1to2);\n    addRegexToken('MM',   match1to2, match2);\n    addRegexToken('MMM',  matchWord);\n    addRegexToken('MMMM', matchWord);\n\n    addParseToken(['M', 'MM'], function (input, array) {\n        array[MONTH] = toInt(input) - 1;\n    });\n\n    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n        var month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        } else {\n            getParsingFlags(config).invalidMonth = input;\n        }\n    });\n\n    // LOCALES\n\n    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n    function localeMonths (m) {\n        return this._months[m.month()];\n    }\n\n    var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n    function localeMonthsShort (m) {\n        return this._monthsShort[m.month()];\n    }\n\n    function localeMonthsParse (monthName, format, strict) {\n        var i, mom, regex;\n\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            mom = create_utc__createUTC([2000, i]);\n            if (strict && !this._longMonthsParse[i]) {\n                this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n                this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n                return i;\n            } else if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function setMonth (mom, value) {\n        var dayOfMonth;\n\n        // TODO: Move this out of here!\n        if (typeof value === 'string') {\n            value = mom.localeData().monthsParse(value);\n            // TODO: Another silent failure?\n            if (typeof value !== 'number') {\n                return mom;\n            }\n        }\n\n        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n        return mom;\n    }\n\n    function getSetMonth (value) {\n        if (value != null) {\n            setMonth(this, value);\n            utils_hooks__hooks.updateOffset(this, true);\n            return this;\n        } else {\n            return get_set__get(this, 'Month');\n        }\n    }\n\n    function getDaysInMonth () {\n        return daysInMonth(this.year(), this.month());\n    }\n\n    function checkOverflow (m) {\n        var overflow;\n        var a = m._a;\n\n        if (a && getParsingFlags(m).overflow === -2) {\n            overflow =\n                a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :\n                a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :\n                a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :\n                a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :\n                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                -1;\n\n            if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n                overflow = DATE;\n            }\n\n            getParsingFlags(m).overflow = overflow;\n        }\n\n        return m;\n    }\n\n    function warn(msg) {\n        if (utils_hooks__hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n            console.warn('Deprecation warning: ' + msg);\n        }\n    }\n\n    function deprecate(msg, fn) {\n        var firstTime = true;\n\n        return extend(function () {\n            if (firstTime) {\n                warn(msg + '\\n' + (new Error()).stack);\n                firstTime = false;\n            }\n            return fn.apply(this, arguments);\n        }, fn);\n    }\n\n    var deprecations = {};\n\n    function deprecateSimple(name, msg) {\n        if (!deprecations[name]) {\n            warn(msg);\n            deprecations[name] = true;\n        }\n    }\n\n    utils_hooks__hooks.suppressDeprecationWarnings = false;\n\n    var from_string__isoRegex = /^\\s*(?:[+-]\\d{6}|\\d{4})-(?:(\\d\\d-\\d\\d)|(W\\d\\d$)|(W\\d\\d-\\d)|(\\d\\d\\d))((T| )(\\d\\d(:\\d\\d(:\\d\\d(\\.\\d+)?)?)?)?([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\n    var isoDates = [\n        ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d{2}-\\d{2}/],\n        ['YYYY-MM-DD', /\\d{4}-\\d{2}-\\d{2}/],\n        ['GGGG-[W]WW-E', /\\d{4}-W\\d{2}-\\d/],\n        ['GGGG-[W]WW', /\\d{4}-W\\d{2}/],\n        ['YYYY-DDD', /\\d{4}-\\d{3}/]\n    ];\n\n    // iso time formats and regexes\n    var isoTimes = [\n        ['HH:mm:ss.SSSS', /(T| )\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n        ['HH:mm:ss', /(T| )\\d\\d:\\d\\d:\\d\\d/],\n        ['HH:mm', /(T| )\\d\\d:\\d\\d/],\n        ['HH', /(T| )\\d\\d/]\n    ];\n\n    var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n\n    // date from iso format\n    function configFromISO(config) {\n        var i, l,\n            string = config._i,\n            match = from_string__isoRegex.exec(string);\n\n        if (match) {\n            getParsingFlags(config).iso = true;\n            for (i = 0, l = isoDates.length; i < l; i++) {\n                if (isoDates[i][1].exec(string)) {\n                    config._f = isoDates[i][0];\n                    break;\n                }\n            }\n            for (i = 0, l = isoTimes.length; i < l; i++) {\n                if (isoTimes[i][1].exec(string)) {\n                    // match[6] should be 'T' or space\n                    config._f += (match[6] || ' ') + isoTimes[i][0];\n                    break;\n                }\n            }\n            if (string.match(matchOffset)) {\n                config._f += 'Z';\n            }\n            configFromStringAndFormat(config);\n        } else {\n            config._isValid = false;\n        }\n    }\n\n    // date from iso format or fallback\n    function configFromString(config) {\n        var matched = aspNetJsonRegex.exec(config._i);\n\n        if (matched !== null) {\n            config._d = new Date(+matched[1]);\n            return;\n        }\n\n        configFromISO(config);\n        if (config._isValid === false) {\n            delete config._isValid;\n            utils_hooks__hooks.createFromInputFallback(config);\n        }\n    }\n\n    utils_hooks__hooks.createFromInputFallback = deprecate(\n        'moment construction falls back to js Date. This is ' +\n        'discouraged and will be removed in upcoming major ' +\n        'release. Please refer to ' +\n        'https://github.com/moment/moment/issues/1407 for more info.',\n        function (config) {\n            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n        }\n    );\n\n    function createDate (y, m, d, h, M, s, ms) {\n        //can't just apply() to create a date:\n        //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n        var date = new Date(y, m, d, h, M, s, ms);\n\n        //the date constructor doesn't accept years < 1970\n        if (y < 1970) {\n            date.setFullYear(y);\n        }\n        return date;\n    }\n\n    function createUTCDate (y) {\n        var date = new Date(Date.UTC.apply(null, arguments));\n        if (y < 1970) {\n            date.setUTCFullYear(y);\n        }\n        return date;\n    }\n\n    addFormatToken(0, ['YY', 2], 0, function () {\n        return this.year() % 100;\n    });\n\n    addFormatToken(0, ['YYYY',   4],       0, 'year');\n    addFormatToken(0, ['YYYYY',  5],       0, 'year');\n    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n    // ALIASES\n\n    addUnitAlias('year', 'y');\n\n    // PARSING\n\n    addRegexToken('Y',      matchSigned);\n    addRegexToken('YY',     match1to2, match2);\n    addRegexToken('YYYY',   match1to4, match4);\n    addRegexToken('YYYYY',  match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', function (input, array) {\n        array[YEAR] = input.length === 2 ? utils_hooks__hooks.parseTwoDigitYear(input) : toInt(input);\n    });\n    addParseToken('YY', function (input, array) {\n        array[YEAR] = utils_hooks__hooks.parseTwoDigitYear(input);\n    });\n\n    // HELPERS\n\n    function daysInYear(year) {\n        return isLeapYear(year) ? 366 : 365;\n    }\n\n    function isLeapYear(year) {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    }\n\n    // HOOKS\n\n    utils_hooks__hooks.parseTwoDigitYear = function (input) {\n        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n    };\n\n    // MOMENTS\n\n    var getSetYear = makeGetSet('FullYear', false);\n\n    function getIsLeapYear () {\n        return isLeapYear(this.year());\n    }\n\n    addFormatToken('w', ['ww', 2], 'wo', 'week');\n    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n    // ALIASES\n\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n\n    // PARSING\n\n    addRegexToken('w',  match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W',  match1to2);\n    addRegexToken('WW', match1to2, match2);\n\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n    });\n\n    // HELPERS\n\n    // firstDayOfWeek       0 = sun, 6 = sat\n    //                      the day of the week that starts the week\n    //                      (usually sunday or monday)\n    // firstDayOfWeekOfYear 0 = sun, 6 = sat\n    //                      the first week is the week that contains the first\n    //                      of this day of the week\n    //                      (eg. ISO weeks use thursday (4))\n    function weekOfYear(mom, firstDayOfWeek, firstDayOfWeekOfYear) {\n        var end = firstDayOfWeekOfYear - firstDayOfWeek,\n            daysToDayOfWeek = firstDayOfWeekOfYear - mom.day(),\n            adjustedMoment;\n\n\n        if (daysToDayOfWeek > end) {\n            daysToDayOfWeek -= 7;\n        }\n\n        if (daysToDayOfWeek < end - 7) {\n            daysToDayOfWeek += 7;\n        }\n\n        adjustedMoment = local__createLocal(mom).add(daysToDayOfWeek, 'd');\n        return {\n            week: Math.ceil(adjustedMoment.dayOfYear() / 7),\n            year: adjustedMoment.year()\n        };\n    }\n\n    // LOCALES\n\n    function localeWeek (mom) {\n        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n    }\n\n    var defaultLocaleWeek = {\n        dow : 0, // Sunday is the first day of the week.\n        doy : 6  // The week that contains Jan 1st is the first week of the year.\n    };\n\n    function localeFirstDayOfWeek () {\n        return this._week.dow;\n    }\n\n    function localeFirstDayOfYear () {\n        return this._week.doy;\n    }\n\n    // MOMENTS\n\n    function getSetWeek (input) {\n        var week = this.localeData().week(this);\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    function getSetISOWeek (input) {\n        var week = weekOfYear(this, 1, 4).week;\n        return input == null ? week : this.add((input - week) * 7, 'd');\n    }\n\n    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n    // ALIASES\n\n    addUnitAlias('dayOfYear', 'DDD');\n\n    // PARSING\n\n    addRegexToken('DDD',  match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n        config._dayOfYear = toInt(input);\n    });\n\n    // HELPERS\n\n    //http://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n    function dayOfYearFromWeeks(year, week, weekday, firstDayOfWeekOfYear, firstDayOfWeek) {\n        var week1Jan = 6 + firstDayOfWeek - firstDayOfWeekOfYear, janX = createUTCDate(year, 0, 1 + week1Jan), d = janX.getUTCDay(), dayOfYear;\n        if (d < firstDayOfWeek) {\n            d += 7;\n        }\n\n        weekday = weekday != null ? 1 * weekday : firstDayOfWeek;\n\n        dayOfYear = 1 + week1Jan + 7 * (week - 1) - d + weekday;\n\n        return {\n            year: dayOfYear > 0 ? year : year - 1,\n            dayOfYear: dayOfYear > 0 ?  dayOfYear : daysInYear(year - 1) + dayOfYear\n        };\n    }\n\n    // MOMENTS\n\n    function getSetDayOfYear (input) {\n        var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n        return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');\n    }\n\n    // Pick the first defined of two or three arguments.\n    function defaults(a, b, c) {\n        if (a != null) {\n            return a;\n        }\n        if (b != null) {\n            return b;\n        }\n        return c;\n    }\n\n    function currentDateArray(config) {\n        var now = new Date();\n        if (config._useUTC) {\n            return [now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate()];\n        }\n        return [now.getFullYear(), now.getMonth(), now.getDate()];\n    }\n\n    // convert an array to a date.\n    // the array should mirror the parameters below\n    // note: all values past the year are optional and will default to the lowest possible value.\n    // [year, month, day , hour, minute, second, millisecond]\n    function configFromArray (config) {\n        var i, date, input = [], currentDate, yearToUse;\n\n        if (config._d) {\n            return;\n        }\n\n        currentDate = currentDateArray(config);\n\n        //compute day of the year from weeks and weekdays\n        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n            dayOfYearFromWeekInfo(config);\n        }\n\n        //if the day of the year is set, figure out what it is\n        if (config._dayOfYear) {\n            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n            if (config._dayOfYear > daysInYear(yearToUse)) {\n                getParsingFlags(config)._overflowDayOfYear = true;\n            }\n\n            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n            config._a[MONTH] = date.getUTCMonth();\n            config._a[DATE] = date.getUTCDate();\n        }\n\n        // Default to current date.\n        // * if no year, month, day of month are given, default to today\n        // * if day of month is given, default month and year\n        // * if month is given, default only year\n        // * if year is given, don't default anything\n        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n            config._a[i] = input[i] = currentDate[i];\n        }\n\n        // Zero out whatever was not defaulted, including time\n        for (; i < 7; i++) {\n            config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n        }\n\n        // Check for 24:00:00.000\n        if (config._a[HOUR] === 24 &&\n                config._a[MINUTE] === 0 &&\n                config._a[SECOND] === 0 &&\n                config._a[MILLISECOND] === 0) {\n            config._nextDay = true;\n            config._a[HOUR] = 0;\n        }\n\n        config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n        // Apply timezone offset from input. The actual utcOffset can be changed\n        // with parseZone.\n        if (config._tzm != null) {\n            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n        }\n\n        if (config._nextDay) {\n            config._a[HOUR] = 24;\n        }\n    }\n\n    function dayOfYearFromWeekInfo(config) {\n        var w, weekYear, week, weekday, dow, doy, temp;\n\n        w = config._w;\n        if (w.GG != null || w.W != null || w.E != null) {\n            dow = 1;\n            doy = 4;\n\n            // TODO: We need to take the current isoWeekYear, but that depends on\n            // how we interpret now (local, utc, fixed offset). So create\n            // a now version of current config (take local/utc/offset flags, and\n            // create now).\n            weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(local__createLocal(), 1, 4).year);\n            week = defaults(w.W, 1);\n            weekday = defaults(w.E, 1);\n        } else {\n            dow = config._locale._week.dow;\n            doy = config._locale._week.doy;\n\n            weekYear = defaults(w.gg, config._a[YEAR], weekOfYear(local__createLocal(), dow, doy).year);\n            week = defaults(w.w, 1);\n\n            if (w.d != null) {\n                // weekday -- low day numbers are considered next week\n                weekday = w.d;\n                if (weekday < dow) {\n                    ++week;\n                }\n            } else if (w.e != null) {\n                // local weekday -- counting starts from begining of week\n                weekday = w.e + dow;\n            } else {\n                // default to begining of week\n                weekday = dow;\n            }\n        }\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, doy, dow);\n\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n\n    utils_hooks__hooks.ISO_8601 = function () {};\n\n    // date from string and format string\n    function configFromStringAndFormat(config) {\n        // TODO: Move this to another part of the creation flow to prevent circular deps\n        if (config._f === utils_hooks__hooks.ISO_8601) {\n            configFromISO(config);\n            return;\n        }\n\n        config._a = [];\n        getParsingFlags(config).empty = true;\n\n        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n        var string = '' + config._i,\n            i, parsedInput, tokens, token, skipped,\n            stringLength = string.length,\n            totalParsedInputLength = 0;\n\n        tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n        for (i = 0; i < tokens.length; i++) {\n            token = tokens[i];\n            parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];\n            if (parsedInput) {\n                skipped = string.substr(0, string.indexOf(parsedInput));\n                if (skipped.length > 0) {\n                    getParsingFlags(config).unusedInput.push(skipped);\n                }\n                string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n                totalParsedInputLength += parsedInput.length;\n            }\n            // don't parse if it's not a known token\n            if (formatTokenFunctions[token]) {\n                if (parsedInput) {\n                    getParsingFlags(config).empty = false;\n                }\n                else {\n                    getParsingFlags(config).unusedTokens.push(token);\n                }\n                addTimeToArrayFromToken(token, parsedInput, config);\n            }\n            else if (config._strict && !parsedInput) {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n        }\n\n        // add remaining unparsed input length to the string\n        getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n        if (string.length > 0) {\n            getParsingFlags(config).unusedInput.push(string);\n        }\n\n        // clear _12h flag if hour is <= 12\n        if (getParsingFlags(config).bigHour === true &&\n                config._a[HOUR] <= 12 &&\n                config._a[HOUR] > 0) {\n            getParsingFlags(config).bigHour = undefined;\n        }\n        // handle meridiem\n        config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n\n        configFromArray(config);\n        checkOverflow(config);\n    }\n\n\n    function meridiemFixWrap (locale, hour, meridiem) {\n        var isPm;\n\n        if (meridiem == null) {\n            // nothing to do\n            return hour;\n        }\n        if (locale.meridiemHour != null) {\n            return locale.meridiemHour(hour, meridiem);\n        } else if (locale.isPM != null) {\n            // Fallback\n            isPm = locale.isPM(meridiem);\n            if (isPm && hour < 12) {\n                hour += 12;\n            }\n            if (!isPm && hour === 12) {\n                hour = 0;\n            }\n            return hour;\n        } else {\n            // this is not supposed to happen\n            return hour;\n        }\n    }\n\n    function configFromStringAndArray(config) {\n        var tempConfig,\n            bestMoment,\n\n            scoreToBeat,\n            i,\n            currentScore;\n\n        if (config._f.length === 0) {\n            getParsingFlags(config).invalidFormat = true;\n            config._d = new Date(NaN);\n            return;\n        }\n\n        for (i = 0; i < config._f.length; i++) {\n            currentScore = 0;\n            tempConfig = copyConfig({}, config);\n            if (config._useUTC != null) {\n                tempConfig._useUTC = config._useUTC;\n            }\n            tempConfig._f = config._f[i];\n            configFromStringAndFormat(tempConfig);\n\n            if (!valid__isValid(tempConfig)) {\n                continue;\n            }\n\n            // if there is any input that was not parsed add a penalty for that format\n            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n            //or tokens\n            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n            getParsingFlags(tempConfig).score = currentScore;\n\n            if (scoreToBeat == null || currentScore < scoreToBeat) {\n                scoreToBeat = currentScore;\n                bestMoment = tempConfig;\n            }\n        }\n\n        extend(config, bestMoment || tempConfig);\n    }\n\n    function configFromObject(config) {\n        if (config._d) {\n            return;\n        }\n\n        var i = normalizeObjectUnits(config._i);\n        config._a = [i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond];\n\n        configFromArray(config);\n    }\n\n    function createFromConfig (config) {\n        var res = new Moment(checkOverflow(prepareConfig(config)));\n        if (res._nextDay) {\n            // Adding is smart enough around DST\n            res.add(1, 'd');\n            res._nextDay = undefined;\n        }\n\n        return res;\n    }\n\n    function prepareConfig (config) {\n        var input = config._i,\n            format = config._f;\n\n        config._locale = config._locale || locale_locales__getLocale(config._l);\n\n        if (input === null || (format === undefined && input === '')) {\n            return valid__createInvalid({nullInput: true});\n        }\n\n        if (typeof input === 'string') {\n            config._i = input = config._locale.preparse(input);\n        }\n\n        if (isMoment(input)) {\n            return new Moment(checkOverflow(input));\n        } else if (isArray(format)) {\n            configFromStringAndArray(config);\n        } else if (format) {\n            configFromStringAndFormat(config);\n        } else if (isDate(input)) {\n            config._d = input;\n        } else {\n            configFromInput(config);\n        }\n\n        return config;\n    }\n\n    function configFromInput(config) {\n        var input = config._i;\n        if (input === undefined) {\n            config._d = new Date();\n        } else if (isDate(input)) {\n            config._d = new Date(+input);\n        } else if (typeof input === 'string') {\n            configFromString(config);\n        } else if (isArray(input)) {\n            config._a = map(input.slice(0), function (obj) {\n                return parseInt(obj, 10);\n            });\n            configFromArray(config);\n        } else if (typeof(input) === 'object') {\n            configFromObject(config);\n        } else if (typeof(input) === 'number') {\n            // from milliseconds\n            config._d = new Date(input);\n        } else {\n            utils_hooks__hooks.createFromInputFallback(config);\n        }\n    }\n\n    function createLocalOrUTC (input, format, locale, strict, isUTC) {\n        var c = {};\n\n        if (typeof(locale) === 'boolean') {\n            strict = locale;\n            locale = undefined;\n        }\n        // object construction must be done this way.\n        // https://github.com/moment/moment/issues/1423\n        c._isAMomentObject = true;\n        c._useUTC = c._isUTC = isUTC;\n        c._l = locale;\n        c._i = input;\n        c._f = format;\n        c._strict = strict;\n\n        return createFromConfig(c);\n    }\n\n    function local__createLocal (input, format, locale, strict) {\n        return createLocalOrUTC(input, format, locale, strict, false);\n    }\n\n    var prototypeMin = deprecate(\n         'moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548',\n         function () {\n             var other = local__createLocal.apply(null, arguments);\n             return other < this ? this : other;\n         }\n     );\n\n    var prototypeMax = deprecate(\n        'moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548',\n        function () {\n            var other = local__createLocal.apply(null, arguments);\n            return other > this ? this : other;\n        }\n    );\n\n    // Pick a moment m from moments so that m[fn](other) is true for all\n    // other. This relies on the function fn to be transitive.\n    //\n    // moments should either be an array of moment objects or an array, whose\n    // first element is an array of moment objects.\n    function pickBy(fn, moments) {\n        var res, i;\n        if (moments.length === 1 && isArray(moments[0])) {\n            moments = moments[0];\n        }\n        if (!moments.length) {\n            return local__createLocal();\n        }\n        res = moments[0];\n        for (i = 1; i < moments.length; ++i) {\n            if (!moments[i].isValid() || moments[i][fn](res)) {\n                res = moments[i];\n            }\n        }\n        return res;\n    }\n\n    // TODO: Use [].sort instead?\n    function min () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isBefore', args);\n    }\n\n    function max () {\n        var args = [].slice.call(arguments, 0);\n\n        return pickBy('isAfter', args);\n    }\n\n    function Duration (duration) {\n        var normalizedInput = normalizeObjectUnits(duration),\n            years = normalizedInput.year || 0,\n            quarters = normalizedInput.quarter || 0,\n            months = normalizedInput.month || 0,\n            weeks = normalizedInput.week || 0,\n            days = normalizedInput.day || 0,\n            hours = normalizedInput.hour || 0,\n            minutes = normalizedInput.minute || 0,\n            seconds = normalizedInput.second || 0,\n            milliseconds = normalizedInput.millisecond || 0;\n\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1e3 + // 1000\n            minutes * 6e4 + // 1000 * 60\n            hours * 36e5; // 1000 * 60 * 60\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n\n        this._data = {};\n\n        this._locale = locale_locales__getLocale();\n\n        this._bubble();\n    }\n\n    function isDuration (obj) {\n        return obj instanceof Duration;\n    }\n\n    function offset (token, separator) {\n        addFormatToken(token, 0, 0, function () {\n            var offset = this.utcOffset();\n            var sign = '+';\n            if (offset < 0) {\n                offset = -offset;\n                sign = '-';\n            }\n            return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n        });\n    }\n\n    offset('Z', ':');\n    offset('ZZ', '');\n\n    // PARSING\n\n    addRegexToken('Z',  matchOffset);\n    addRegexToken('ZZ', matchOffset);\n    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(input);\n    });\n\n    // HELPERS\n\n    // timezone chunker\n    // '+10:00' > ['10',  '00']\n    // '-1530'  > ['-15', '30']\n    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n    function offsetFromString(string) {\n        var matches = ((string || '').match(matchOffset) || []);\n        var chunk   = matches[matches.length - 1] || [];\n        var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n        var minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n        return parts[0] === '+' ? minutes : -minutes;\n    }\n\n    // Return a moment from input, that is local/utc/zone equivalent to model.\n    function cloneWithOffset(input, model) {\n        var res, diff;\n        if (model._isUTC) {\n            res = model.clone();\n            diff = (isMoment(input) || isDate(input) ? +input : +local__createLocal(input)) - (+res);\n            // Use low-level api, because this fn is low-level api.\n            res._d.setTime(+res._d + diff);\n            utils_hooks__hooks.updateOffset(res, false);\n            return res;\n        } else {\n            return local__createLocal(input).local();\n        }\n    }\n\n    function getDateOffset (m) {\n        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n        // https://github.com/moment/moment/pull/1871\n        return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n    }\n\n    // HOOKS\n\n    // This function will be called whenever a moment is mutated.\n    // It is intended to keep the offset in sync with the timezone.\n    utils_hooks__hooks.updateOffset = function () {};\n\n    // MOMENTS\n\n    // keepLocalTime = true means only change the timezone, without\n    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n    // +0200, so we adjust the time as needed, to be valid.\n    //\n    // Keeping the time actually adds/subtracts (one hour)\n    // from the actual represented time. That is why we call updateOffset\n    // a second time. In case it wants us to change the offset again\n    // _changeInProgress == true case, then we have to adjust, because\n    // there is no such time in the given timezone.\n    function getSetOffset (input, keepLocalTime) {\n        var offset = this._offset || 0,\n            localAdjust;\n        if (input != null) {\n            if (typeof input === 'string') {\n                input = offsetFromString(input);\n            }\n            if (Math.abs(input) < 16) {\n                input = input * 60;\n            }\n            if (!this._isUTC && keepLocalTime) {\n                localAdjust = getDateOffset(this);\n            }\n            this._offset = input;\n            this._isUTC = true;\n            if (localAdjust != null) {\n                this.add(localAdjust, 'm');\n            }\n            if (offset !== input) {\n                if (!keepLocalTime || this._changeInProgress) {\n                    add_subtract__addSubtract(this, create__createDuration(input - offset, 'm'), 1, false);\n                } else if (!this._changeInProgress) {\n                    this._changeInProgress = true;\n                    utils_hooks__hooks.updateOffset(this, true);\n                    this._changeInProgress = null;\n                }\n            }\n            return this;\n        } else {\n            return this._isUTC ? offset : getDateOffset(this);\n        }\n    }\n\n    function getSetZone (input, keepLocalTime) {\n        if (input != null) {\n            if (typeof input !== 'string') {\n                input = -input;\n            }\n\n            this.utcOffset(input, keepLocalTime);\n\n            return this;\n        } else {\n            return -this.utcOffset();\n        }\n    }\n\n    function setOffsetToUTC (keepLocalTime) {\n        return this.utcOffset(0, keepLocalTime);\n    }\n\n    function setOffsetToLocal (keepLocalTime) {\n        if (this._isUTC) {\n            this.utcOffset(0, keepLocalTime);\n            this._isUTC = false;\n\n            if (keepLocalTime) {\n                this.subtract(getDateOffset(this), 'm');\n            }\n        }\n        return this;\n    }\n\n    function setOffsetToParsedOffset () {\n        if (this._tzm) {\n            this.utcOffset(this._tzm);\n        } else if (typeof this._i === 'string') {\n            this.utcOffset(offsetFromString(this._i));\n        }\n        return this;\n    }\n\n    function hasAlignedHourOffset (input) {\n        input = input ? local__createLocal(input).utcOffset() : 0;\n\n        return (this.utcOffset() - input) % 60 === 0;\n    }\n\n    function isDaylightSavingTime () {\n        return (\n            this.utcOffset() > this.clone().month(0).utcOffset() ||\n            this.utcOffset() > this.clone().month(5).utcOffset()\n        );\n    }\n\n    function isDaylightSavingTimeShifted () {\n        if (typeof this._isDSTShifted !== 'undefined') {\n            return this._isDSTShifted;\n        }\n\n        var c = {};\n\n        copyConfig(c, this);\n        c = prepareConfig(c);\n\n        if (c._a) {\n            var other = c._isUTC ? create_utc__createUTC(c._a) : local__createLocal(c._a);\n            this._isDSTShifted = this.isValid() &&\n                compareArrays(c._a, other.toArray()) > 0;\n        } else {\n            this._isDSTShifted = false;\n        }\n\n        return this._isDSTShifted;\n    }\n\n    function isLocal () {\n        return !this._isUTC;\n    }\n\n    function isUtcOffset () {\n        return this._isUTC;\n    }\n\n    function isUtc () {\n        return this._isUTC && this._offset === 0;\n    }\n\n    var aspNetRegex = /(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/;\n\n    // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n    // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n    var create__isoRegex = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;\n\n    function create__createDuration (input, key) {\n        var duration = input,\n            // matching against regexp is expensive, do it on demand\n            match = null,\n            sign,\n            ret,\n            diffRes;\n\n        if (isDuration(input)) {\n            duration = {\n                ms : input._milliseconds,\n                d  : input._days,\n                M  : input._months\n            };\n        } else if (typeof input === 'number') {\n            duration = {};\n            if (key) {\n                duration[key] = input;\n            } else {\n                duration.milliseconds = input;\n            }\n        } else if (!!(match = aspNetRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y  : 0,\n                d  : toInt(match[DATE])        * sign,\n                h  : toInt(match[HOUR])        * sign,\n                m  : toInt(match[MINUTE])      * sign,\n                s  : toInt(match[SECOND])      * sign,\n                ms : toInt(match[MILLISECOND]) * sign\n            };\n        } else if (!!(match = create__isoRegex.exec(input))) {\n            sign = (match[1] === '-') ? -1 : 1;\n            duration = {\n                y : parseIso(match[2], sign),\n                M : parseIso(match[3], sign),\n                d : parseIso(match[4], sign),\n                h : parseIso(match[5], sign),\n                m : parseIso(match[6], sign),\n                s : parseIso(match[7], sign),\n                w : parseIso(match[8], sign)\n            };\n        } else if (duration == null) {// checks for null or undefined\n            duration = {};\n        } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n            diffRes = momentsDifference(local__createLocal(duration.from), local__createLocal(duration.to));\n\n            duration = {};\n            duration.ms = diffRes.milliseconds;\n            duration.M = diffRes.months;\n        }\n\n        ret = new Duration(duration);\n\n        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n            ret._locale = input._locale;\n        }\n\n        return ret;\n    }\n\n    create__createDuration.fn = Duration.prototype;\n\n    function parseIso (inp, sign) {\n        // We'd normally use ~~inp for this, but unfortunately it also\n        // converts floats to ints.\n        // inp may be undefined, so careful calling replace on it.\n        var res = inp && parseFloat(inp.replace(',', '.'));\n        // apply sign while we're at it\n        return (isNaN(res) ? 0 : res) * sign;\n    }\n\n    function positiveMomentsDifference(base, other) {\n        var res = {milliseconds: 0, months: 0};\n\n        res.months = other.month() - base.month() +\n            (other.year() - base.year()) * 12;\n        if (base.clone().add(res.months, 'M').isAfter(other)) {\n            --res.months;\n        }\n\n        res.milliseconds = +other - +(base.clone().add(res.months, 'M'));\n\n        return res;\n    }\n\n    function momentsDifference(base, other) {\n        var res;\n        other = cloneWithOffset(other, base);\n        if (base.isBefore(other)) {\n            res = positiveMomentsDifference(base, other);\n        } else {\n            res = positiveMomentsDifference(other, base);\n            res.milliseconds = -res.milliseconds;\n            res.months = -res.months;\n        }\n\n        return res;\n    }\n\n    function createAdder(direction, name) {\n        return function (val, period) {\n            var dur, tmp;\n            //invert the arguments, but complain about it\n            if (period !== null && !isNaN(+period)) {\n                deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period).');\n                tmp = val; val = period; period = tmp;\n            }\n\n            val = typeof val === 'string' ? +val : val;\n            dur = create__createDuration(val, period);\n            add_subtract__addSubtract(this, dur, direction);\n            return this;\n        };\n    }\n\n    function add_subtract__addSubtract (mom, duration, isAdding, updateOffset) {\n        var milliseconds = duration._milliseconds,\n            days = duration._days,\n            months = duration._months;\n        updateOffset = updateOffset == null ? true : updateOffset;\n\n        if (milliseconds) {\n            mom._d.setTime(+mom._d + milliseconds * isAdding);\n        }\n        if (days) {\n            get_set__set(mom, 'Date', get_set__get(mom, 'Date') + days * isAdding);\n        }\n        if (months) {\n            setMonth(mom, get_set__get(mom, 'Month') + months * isAdding);\n        }\n        if (updateOffset) {\n            utils_hooks__hooks.updateOffset(mom, days || months);\n        }\n    }\n\n    var add_subtract__add      = createAdder(1, 'add');\n    var add_subtract__subtract = createAdder(-1, 'subtract');\n\n    function moment_calendar__calendar (time, formats) {\n        // We want to compare the start of today, vs this.\n        // Getting start-of-today depends on whether we're local/utc/offset or not.\n        var now = time || local__createLocal(),\n            sod = cloneWithOffset(now, this).startOf('day'),\n            diff = this.diff(sod, 'days', true),\n            format = diff < -6 ? 'sameElse' :\n                diff < -1 ? 'lastWeek' :\n                diff < 0 ? 'lastDay' :\n                diff < 1 ? 'sameDay' :\n                diff < 2 ? 'nextDay' :\n                diff < 7 ? 'nextWeek' : 'sameElse';\n        return this.format(formats && formats[format] || this.localeData().calendar(format, this, local__createLocal(now)));\n    }\n\n    function clone () {\n        return new Moment(this);\n    }\n\n    function isAfter (input, units) {\n        var inputMs;\n        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n        if (units === 'millisecond') {\n            input = isMoment(input) ? input : local__createLocal(input);\n            return +this > +input;\n        } else {\n            inputMs = isMoment(input) ? +input : +local__createLocal(input);\n            return inputMs < +this.clone().startOf(units);\n        }\n    }\n\n    function isBefore (input, units) {\n        var inputMs;\n        units = normalizeUnits(typeof units !== 'undefined' ? units : 'millisecond');\n        if (units === 'millisecond') {\n            input = isMoment(input) ? input : local__createLocal(input);\n            return +this < +input;\n        } else {\n            inputMs = isMoment(input) ? +input : +local__createLocal(input);\n            return +this.clone().endOf(units) < inputMs;\n        }\n    }\n\n    function isBetween (from, to, units) {\n        return this.isAfter(from, units) && this.isBefore(to, units);\n    }\n\n    function isSame (input, units) {\n        var inputMs;\n        units = normalizeUnits(units || 'millisecond');\n        if (units === 'millisecond') {\n            input = isMoment(input) ? input : local__createLocal(input);\n            return +this === +input;\n        } else {\n            inputMs = +local__createLocal(input);\n            return +(this.clone().startOf(units)) <= inputMs && inputMs <= +(this.clone().endOf(units));\n        }\n    }\n\n    function diff (input, units, asFloat) {\n        var that = cloneWithOffset(input, this),\n            zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4,\n            delta, output;\n\n        units = normalizeUnits(units);\n\n        if (units === 'year' || units === 'month' || units === 'quarter') {\n            output = monthDiff(this, that);\n            if (units === 'quarter') {\n                output = output / 3;\n            } else if (units === 'year') {\n                output = output / 12;\n            }\n        } else {\n            delta = this - that;\n            output = units === 'second' ? delta / 1e3 : // 1000\n                units === 'minute' ? delta / 6e4 : // 1000 * 60\n                units === 'hour' ? delta / 36e5 : // 1000 * 60 * 60\n                units === 'day' ? (delta - zoneDelta) / 864e5 : // 1000 * 60 * 60 * 24, negate dst\n                units === 'week' ? (delta - zoneDelta) / 6048e5 : // 1000 * 60 * 60 * 24 * 7, negate dst\n                delta;\n        }\n        return asFloat ? output : absFloor(output);\n    }\n\n    function monthDiff (a, b) {\n        // difference in months\n        var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),\n            // b is in (anchor - 1 month, anchor + 1 month)\n            anchor = a.clone().add(wholeMonthDiff, 'months'),\n            anchor2, adjust;\n\n        if (b - anchor < 0) {\n            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor - anchor2);\n        } else {\n            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n            // linear across the month\n            adjust = (b - anchor) / (anchor2 - anchor);\n        }\n\n        return -(wholeMonthDiff + adjust);\n    }\n\n    utils_hooks__hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\n    function toString () {\n        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n    }\n\n    function moment_format__toISOString () {\n        var m = this.clone().utc();\n        if (0 < m.year() && m.year() <= 9999) {\n            if ('function' === typeof Date.prototype.toISOString) {\n                // native implementation is ~50x faster, use it when we can\n                return this.toDate().toISOString();\n            } else {\n                return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n            }\n        } else {\n            return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');\n        }\n    }\n\n    function format (inputString) {\n        var output = formatMoment(this, inputString || utils_hooks__hooks.defaultFormat);\n        return this.localeData().postformat(output);\n    }\n\n    function from (time, withoutSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n        return create__createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);\n    }\n\n    function fromNow (withoutSuffix) {\n        return this.from(local__createLocal(), withoutSuffix);\n    }\n\n    function to (time, withoutSuffix) {\n        if (!this.isValid()) {\n            return this.localeData().invalidDate();\n        }\n        return create__createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);\n    }\n\n    function toNow (withoutSuffix) {\n        return this.to(local__createLocal(), withoutSuffix);\n    }\n\n    function locale (key) {\n        var newLocaleData;\n\n        if (key === undefined) {\n            return this._locale._abbr;\n        } else {\n            newLocaleData = locale_locales__getLocale(key);\n            if (newLocaleData != null) {\n                this._locale = newLocaleData;\n            }\n            return this;\n        }\n    }\n\n    var lang = deprecate(\n        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n        function (key) {\n            if (key === undefined) {\n                return this.localeData();\n            } else {\n                return this.locale(key);\n            }\n        }\n    );\n\n    function localeData () {\n        return this._locale;\n    }\n\n    function startOf (units) {\n        units = normalizeUnits(units);\n        // the following switch intentionally omits break keywords\n        // to utilize falling through the cases.\n        switch (units) {\n        case 'year':\n            this.month(0);\n            /* falls through */\n        case 'quarter':\n        case 'month':\n            this.date(1);\n            /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n            this.hours(0);\n            /* falls through */\n        case 'hour':\n            this.minutes(0);\n            /* falls through */\n        case 'minute':\n            this.seconds(0);\n            /* falls through */\n        case 'second':\n            this.milliseconds(0);\n        }\n\n        // weeks are a special case\n        if (units === 'week') {\n            this.weekday(0);\n        }\n        if (units === 'isoWeek') {\n            this.isoWeekday(1);\n        }\n\n        // quarters are also special\n        if (units === 'quarter') {\n            this.month(Math.floor(this.month() / 3) * 3);\n        }\n\n        return this;\n    }\n\n    function endOf (units) {\n        units = normalizeUnits(units);\n        if (units === undefined || units === 'millisecond') {\n            return this;\n        }\n        return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');\n    }\n\n    function to_type__valueOf () {\n        return +this._d - ((this._offset || 0) * 60000);\n    }\n\n    function unix () {\n        return Math.floor(+this / 1000);\n    }\n\n    function toDate () {\n        return this._offset ? new Date(+this) : this._d;\n    }\n\n    function toArray () {\n        var m = this;\n        return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n    }\n\n    function toObject () {\n        var m = this;\n        return {\n            years: m.year(),\n            months: m.month(),\n            date: m.date(),\n            hours: m.hours(),\n            minutes: m.minutes(),\n            seconds: m.seconds(),\n            milliseconds: m.milliseconds()\n        };\n    }\n\n    function moment_valid__isValid () {\n        return valid__isValid(this);\n    }\n\n    function parsingFlags () {\n        return extend({}, getParsingFlags(this));\n    }\n\n    function invalidAt () {\n        return getParsingFlags(this).overflow;\n    }\n\n    addFormatToken(0, ['gg', 2], 0, function () {\n        return this.weekYear() % 100;\n    });\n\n    addFormatToken(0, ['GG', 2], 0, function () {\n        return this.isoWeekYear() % 100;\n    });\n\n    function addWeekYearFormatToken (token, getter) {\n        addFormatToken(0, [token, token.length], 0, getter);\n    }\n\n    addWeekYearFormatToken('gggg',     'weekYear');\n    addWeekYearFormatToken('ggggg',    'weekYear');\n    addWeekYearFormatToken('GGGG',  'isoWeekYear');\n    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n    // ALIASES\n\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n\n    // PARSING\n\n    addRegexToken('G',      matchSigned);\n    addRegexToken('g',      matchSigned);\n    addRegexToken('GG',     match1to2, match2);\n    addRegexToken('gg',     match1to2, match2);\n    addRegexToken('GGGG',   match1to4, match4);\n    addRegexToken('gggg',   match1to4, match4);\n    addRegexToken('GGGGG',  match1to6, match6);\n    addRegexToken('ggggg',  match1to6, match6);\n\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n    });\n\n    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n        week[token] = utils_hooks__hooks.parseTwoDigitYear(input);\n    });\n\n    // HELPERS\n\n    function weeksInYear(year, dow, doy) {\n        return weekOfYear(local__createLocal([year, 11, 31 + dow - doy]), dow, doy).week;\n    }\n\n    // MOMENTS\n\n    function getSetWeekYear (input) {\n        var year = weekOfYear(this, this.localeData()._week.dow, this.localeData()._week.doy).year;\n        return input == null ? year : this.add((input - year), 'y');\n    }\n\n    function getSetISOWeekYear (input) {\n        var year = weekOfYear(this, 1, 4).year;\n        return input == null ? year : this.add((input - year), 'y');\n    }\n\n    function getISOWeeksInYear () {\n        return weeksInYear(this.year(), 1, 4);\n    }\n\n    function getWeeksInYear () {\n        var weekInfo = this.localeData()._week;\n        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n    }\n\n    addFormatToken('Q', 0, 0, 'quarter');\n\n    // ALIASES\n\n    addUnitAlias('quarter', 'Q');\n\n    // PARSING\n\n    addRegexToken('Q', match1);\n    addParseToken('Q', function (input, array) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n    });\n\n    // MOMENTS\n\n    function getSetQuarter (input) {\n        return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n    }\n\n    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n    // ALIASES\n\n    addUnitAlias('date', 'D');\n\n    // PARSING\n\n    addRegexToken('D',  match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', function (isStrict, locale) {\n        return isStrict ? locale._ordinalParse : locale._ordinalParseLenient;\n    });\n\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', function (input, array) {\n        array[DATE] = toInt(input.match(match1to2)[0], 10);\n    });\n\n    // MOMENTS\n\n    var getSetDayOfMonth = makeGetSet('Date', true);\n\n    addFormatToken('d', 0, 'do', 'day');\n\n    addFormatToken('dd', 0, 0, function (format) {\n        return this.localeData().weekdaysMin(this, format);\n    });\n\n    addFormatToken('ddd', 0, 0, function (format) {\n        return this.localeData().weekdaysShort(this, format);\n    });\n\n    addFormatToken('dddd', 0, 0, function (format) {\n        return this.localeData().weekdays(this, format);\n    });\n\n    addFormatToken('e', 0, 0, 'weekday');\n    addFormatToken('E', 0, 0, 'isoWeekday');\n\n    // ALIASES\n\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n\n    // PARSING\n\n    addRegexToken('d',    match1to2);\n    addRegexToken('e',    match1to2);\n    addRegexToken('E',    match1to2);\n    addRegexToken('dd',   matchWord);\n    addRegexToken('ddd',  matchWord);\n    addRegexToken('dddd', matchWord);\n\n    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config) {\n        var weekday = config._locale.weekdaysParse(input);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        } else {\n            getParsingFlags(config).invalidWeekday = input;\n        }\n    });\n\n    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n        week[token] = toInt(input);\n    });\n\n    // HELPERS\n\n    function parseWeekday(input, locale) {\n        if (typeof input !== 'string') {\n            return input;\n        }\n\n        if (!isNaN(input)) {\n            return parseInt(input, 10);\n        }\n\n        input = locale.weekdaysParse(input);\n        if (typeof input === 'number') {\n            return input;\n        }\n\n        return null;\n    }\n\n    // LOCALES\n\n    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n    function localeWeekdays (m) {\n        return this._weekdays[m.day()];\n    }\n\n    var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n    function localeWeekdaysShort (m) {\n        return this._weekdaysShort[m.day()];\n    }\n\n    var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n    function localeWeekdaysMin (m) {\n        return this._weekdaysMin[m.day()];\n    }\n\n    function localeWeekdaysParse (weekdayName) {\n        var i, mom, regex;\n\n        this._weekdaysParse = this._weekdaysParse || [];\n\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            if (!this._weekdaysParse[i]) {\n                mom = local__createLocal([2000, 1]).day(i);\n                regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n\n    // MOMENTS\n\n    function getSetDayOfWeek (input) {\n        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n        if (input != null) {\n            input = parseWeekday(input, this.localeData());\n            return this.add(input - day, 'd');\n        } else {\n            return day;\n        }\n    }\n\n    function getSetLocaleDayOfWeek (input) {\n        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n        return input == null ? weekday : this.add(input - weekday, 'd');\n    }\n\n    function getSetISODayOfWeek (input) {\n        // behaves the same as moment#day except\n        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n        // as a setter, sunday should belong to the previous week.\n        return input == null ? this.day() || 7 : this.day(this.day() % 7 ? input : input - 7);\n    }\n\n    addFormatToken('H', ['HH', 2], 0, 'hour');\n    addFormatToken('h', ['hh', 2], 0, function () {\n        return this.hours() % 12 || 12;\n    });\n\n    function meridiem (token, lowercase) {\n        addFormatToken(token, 0, 0, function () {\n            return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n        });\n    }\n\n    meridiem('a', true);\n    meridiem('A', false);\n\n    // ALIASES\n\n    addUnitAlias('hour', 'h');\n\n    // PARSING\n\n    function matchMeridiem (isStrict, locale) {\n        return locale._meridiemParse;\n    }\n\n    addRegexToken('a',  matchMeridiem);\n    addRegexToken('A',  matchMeridiem);\n    addRegexToken('H',  match1to2);\n    addRegexToken('h',  match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['a', 'A'], function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n    });\n    addParseToken(['h', 'hh'], function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n    });\n\n    // LOCALES\n\n    function localeIsPM (input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return ((input + '').toLowerCase().charAt(0) === 'p');\n    }\n\n    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n    function localeMeridiem (hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        } else {\n            return isLower ? 'am' : 'AM';\n        }\n    }\n\n\n    // MOMENTS\n\n    // Setting the hour should keep the time, because the user explicitly\n    // specified which hour he wants. So trying to maintain the same hour (in\n    // a new timezone) makes sense. Adding/subtracting hours does not follow\n    // this rule.\n    var getSetHour = makeGetSet('Hours', true);\n\n    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n    // ALIASES\n\n    addUnitAlias('minute', 'm');\n\n    // PARSING\n\n    addRegexToken('m',  match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n\n    // MOMENTS\n\n    var getSetMinute = makeGetSet('Minutes', false);\n\n    addFormatToken('s', ['ss', 2], 0, 'second');\n\n    // ALIASES\n\n    addUnitAlias('second', 's');\n\n    // PARSING\n\n    addRegexToken('s',  match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n\n    // MOMENTS\n\n    var getSetSecond = makeGetSet('Seconds', false);\n\n    addFormatToken('S', 0, 0, function () {\n        return ~~(this.millisecond() / 100);\n    });\n\n    addFormatToken(0, ['SS', 2], 0, function () {\n        return ~~(this.millisecond() / 10);\n    });\n\n    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n    addFormatToken(0, ['SSSS', 4], 0, function () {\n        return this.millisecond() * 10;\n    });\n    addFormatToken(0, ['SSSSS', 5], 0, function () {\n        return this.millisecond() * 100;\n    });\n    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n        return this.millisecond() * 1000;\n    });\n    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n        return this.millisecond() * 10000;\n    });\n    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n        return this.millisecond() * 100000;\n    });\n    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n        return this.millisecond() * 1000000;\n    });\n\n\n    // ALIASES\n\n    addUnitAlias('millisecond', 'ms');\n\n    // PARSING\n\n    addRegexToken('S',    match1to3, match1);\n    addRegexToken('SS',   match1to3, match2);\n    addRegexToken('SSS',  match1to3, match3);\n\n    var token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n\n    function parseMs(input, array) {\n        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n    }\n\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n\n    var getSetMillisecond = makeGetSet('Milliseconds', false);\n\n    addFormatToken('z',  0, 0, 'zoneAbbr');\n    addFormatToken('zz', 0, 0, 'zoneName');\n\n    // MOMENTS\n\n    function getZoneAbbr () {\n        return this._isUTC ? 'UTC' : '';\n    }\n\n    function getZoneName () {\n        return this._isUTC ? 'Coordinated Universal Time' : '';\n    }\n\n    var momentPrototype__proto = Moment.prototype;\n\n    momentPrototype__proto.add          = add_subtract__add;\n    momentPrototype__proto.calendar     = moment_calendar__calendar;\n    momentPrototype__proto.clone        = clone;\n    momentPrototype__proto.diff         = diff;\n    momentPrototype__proto.endOf        = endOf;\n    momentPrototype__proto.format       = format;\n    momentPrototype__proto.from         = from;\n    momentPrototype__proto.fromNow      = fromNow;\n    momentPrototype__proto.to           = to;\n    momentPrototype__proto.toNow        = toNow;\n    momentPrototype__proto.get          = getSet;\n    momentPrototype__proto.invalidAt    = invalidAt;\n    momentPrototype__proto.isAfter      = isAfter;\n    momentPrototype__proto.isBefore     = isBefore;\n    momentPrototype__proto.isBetween    = isBetween;\n    momentPrototype__proto.isSame       = isSame;\n    momentPrototype__proto.isValid      = moment_valid__isValid;\n    momentPrototype__proto.lang         = lang;\n    momentPrototype__proto.locale       = locale;\n    momentPrototype__proto.localeData   = localeData;\n    momentPrototype__proto.max          = prototypeMax;\n    momentPrototype__proto.min          = prototypeMin;\n    momentPrototype__proto.parsingFlags = parsingFlags;\n    momentPrototype__proto.set          = getSet;\n    momentPrototype__proto.startOf      = startOf;\n    momentPrototype__proto.subtract     = add_subtract__subtract;\n    momentPrototype__proto.toArray      = toArray;\n    momentPrototype__proto.toObject     = toObject;\n    momentPrototype__proto.toDate       = toDate;\n    momentPrototype__proto.toISOString  = moment_format__toISOString;\n    momentPrototype__proto.toJSON       = moment_format__toISOString;\n    momentPrototype__proto.toString     = toString;\n    momentPrototype__proto.unix         = unix;\n    momentPrototype__proto.valueOf      = to_type__valueOf;\n\n    // Year\n    momentPrototype__proto.year       = getSetYear;\n    momentPrototype__proto.isLeapYear = getIsLeapYear;\n\n    // Week Year\n    momentPrototype__proto.weekYear    = getSetWeekYear;\n    momentPrototype__proto.isoWeekYear = getSetISOWeekYear;\n\n    // Quarter\n    momentPrototype__proto.quarter = momentPrototype__proto.quarters = getSetQuarter;\n\n    // Month\n    momentPrototype__proto.month       = getSetMonth;\n    momentPrototype__proto.daysInMonth = getDaysInMonth;\n\n    // Week\n    momentPrototype__proto.week           = momentPrototype__proto.weeks        = getSetWeek;\n    momentPrototype__proto.isoWeek        = momentPrototype__proto.isoWeeks     = getSetISOWeek;\n    momentPrototype__proto.weeksInYear    = getWeeksInYear;\n    momentPrototype__proto.isoWeeksInYear = getISOWeeksInYear;\n\n    // Day\n    momentPrototype__proto.date       = getSetDayOfMonth;\n    momentPrototype__proto.day        = momentPrototype__proto.days             = getSetDayOfWeek;\n    momentPrototype__proto.weekday    = getSetLocaleDayOfWeek;\n    momentPrototype__proto.isoWeekday = getSetISODayOfWeek;\n    momentPrototype__proto.dayOfYear  = getSetDayOfYear;\n\n    // Hour\n    momentPrototype__proto.hour = momentPrototype__proto.hours = getSetHour;\n\n    // Minute\n    momentPrototype__proto.minute = momentPrototype__proto.minutes = getSetMinute;\n\n    // Second\n    momentPrototype__proto.second = momentPrototype__proto.seconds = getSetSecond;\n\n    // Millisecond\n    momentPrototype__proto.millisecond = momentPrototype__proto.milliseconds = getSetMillisecond;\n\n    // Offset\n    momentPrototype__proto.utcOffset            = getSetOffset;\n    momentPrototype__proto.utc                  = setOffsetToUTC;\n    momentPrototype__proto.local                = setOffsetToLocal;\n    momentPrototype__proto.parseZone            = setOffsetToParsedOffset;\n    momentPrototype__proto.hasAlignedHourOffset = hasAlignedHourOffset;\n    momentPrototype__proto.isDST                = isDaylightSavingTime;\n    momentPrototype__proto.isDSTShifted         = isDaylightSavingTimeShifted;\n    momentPrototype__proto.isLocal              = isLocal;\n    momentPrototype__proto.isUtcOffset          = isUtcOffset;\n    momentPrototype__proto.isUtc                = isUtc;\n    momentPrototype__proto.isUTC                = isUtc;\n\n    // Timezone\n    momentPrototype__proto.zoneAbbr = getZoneAbbr;\n    momentPrototype__proto.zoneName = getZoneName;\n\n    // Deprecations\n    momentPrototype__proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n    momentPrototype__proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n    momentPrototype__proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n    momentPrototype__proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779', getSetZone);\n\n    var momentPrototype = momentPrototype__proto;\n\n    function moment__createUnix (input) {\n        return local__createLocal(input * 1000);\n    }\n\n    function moment__createInZone () {\n        return local__createLocal.apply(null, arguments).parseZone();\n    }\n\n    var defaultCalendar = {\n        sameDay : '[Today at] LT',\n        nextDay : '[Tomorrow at] LT',\n        nextWeek : 'dddd [at] LT',\n        lastDay : '[Yesterday at] LT',\n        lastWeek : '[Last] dddd [at] LT',\n        sameElse : 'L'\n    };\n\n    function locale_calendar__calendar (key, mom, now) {\n        var output = this._calendar[key];\n        return typeof output === 'function' ? output.call(mom, now) : output;\n    }\n\n    var defaultLongDateFormat = {\n        LTS  : 'h:mm:ss A',\n        LT   : 'h:mm A',\n        L    : 'MM/DD/YYYY',\n        LL   : 'MMMM D, YYYY',\n        LLL  : 'MMMM D, YYYY h:mm A',\n        LLLL : 'dddd, MMMM D, YYYY h:mm A'\n    };\n\n    function longDateFormat (key) {\n        var format = this._longDateFormat[key],\n            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n        if (format || !formatUpper) {\n            return format;\n        }\n\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n            return val.slice(1);\n        });\n\n        return this._longDateFormat[key];\n    }\n\n    var defaultInvalidDate = 'Invalid date';\n\n    function invalidDate () {\n        return this._invalidDate;\n    }\n\n    var defaultOrdinal = '%d';\n    var defaultOrdinalParse = /\\d{1,2}/;\n\n    function ordinal (number) {\n        return this._ordinal.replace('%d', number);\n    }\n\n    function preParsePostFormat (string) {\n        return string;\n    }\n\n    var defaultRelativeTime = {\n        future : 'in %s',\n        past   : '%s ago',\n        s  : 'a few seconds',\n        m  : 'a minute',\n        mm : '%d minutes',\n        h  : 'an hour',\n        hh : '%d hours',\n        d  : 'a day',\n        dd : '%d days',\n        M  : 'a month',\n        MM : '%d months',\n        y  : 'a year',\n        yy : '%d years'\n    };\n\n    function relative__relativeTime (number, withoutSuffix, string, isFuture) {\n        var output = this._relativeTime[string];\n        return (typeof output === 'function') ?\n            output(number, withoutSuffix, string, isFuture) :\n            output.replace(/%d/i, number);\n    }\n\n    function pastFuture (diff, output) {\n        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return typeof format === 'function' ? format(output) : format.replace(/%s/i, output);\n    }\n\n    function locale_set__set (config) {\n        var prop, i;\n        for (i in config) {\n            prop = config[i];\n            if (typeof prop === 'function') {\n                this[i] = prop;\n            } else {\n                this['_' + i] = prop;\n            }\n        }\n        // Lenient ordinal parsing accepts just a number in addition to\n        // number + (possibly) stuff coming from _ordinalParseLenient.\n        this._ordinalParseLenient = new RegExp(this._ordinalParse.source + '|' + (/\\d{1,2}/).source);\n    }\n\n    var prototype__proto = Locale.prototype;\n\n    prototype__proto._calendar       = defaultCalendar;\n    prototype__proto.calendar        = locale_calendar__calendar;\n    prototype__proto._longDateFormat = defaultLongDateFormat;\n    prototype__proto.longDateFormat  = longDateFormat;\n    prototype__proto._invalidDate    = defaultInvalidDate;\n    prototype__proto.invalidDate     = invalidDate;\n    prototype__proto._ordinal        = defaultOrdinal;\n    prototype__proto.ordinal         = ordinal;\n    prototype__proto._ordinalParse   = defaultOrdinalParse;\n    prototype__proto.preparse        = preParsePostFormat;\n    prototype__proto.postformat      = preParsePostFormat;\n    prototype__proto._relativeTime   = defaultRelativeTime;\n    prototype__proto.relativeTime    = relative__relativeTime;\n    prototype__proto.pastFuture      = pastFuture;\n    prototype__proto.set             = locale_set__set;\n\n    // Month\n    prototype__proto.months       =        localeMonths;\n    prototype__proto._months      = defaultLocaleMonths;\n    prototype__proto.monthsShort  =        localeMonthsShort;\n    prototype__proto._monthsShort = defaultLocaleMonthsShort;\n    prototype__proto.monthsParse  =        localeMonthsParse;\n\n    // Week\n    prototype__proto.week = localeWeek;\n    prototype__proto._week = defaultLocaleWeek;\n    prototype__proto.firstDayOfYear = localeFirstDayOfYear;\n    prototype__proto.firstDayOfWeek = localeFirstDayOfWeek;\n\n    // Day of Week\n    prototype__proto.weekdays       =        localeWeekdays;\n    prototype__proto._weekdays      = defaultLocaleWeekdays;\n    prototype__proto.weekdaysMin    =        localeWeekdaysMin;\n    prototype__proto._weekdaysMin   = defaultLocaleWeekdaysMin;\n    prototype__proto.weekdaysShort  =        localeWeekdaysShort;\n    prototype__proto._weekdaysShort = defaultLocaleWeekdaysShort;\n    prototype__proto.weekdaysParse  =        localeWeekdaysParse;\n\n    // Hours\n    prototype__proto.isPM = localeIsPM;\n    prototype__proto._meridiemParse = defaultLocaleMeridiemParse;\n    prototype__proto.meridiem = localeMeridiem;\n\n    function lists__get (format, index, field, setter) {\n        var locale = locale_locales__getLocale();\n        var utc = create_utc__createUTC().set(setter, index);\n        return locale[field](utc, format);\n    }\n\n    function list (format, index, field, count, setter) {\n        if (typeof format === 'number') {\n            index = format;\n            format = undefined;\n        }\n\n        format = format || '';\n\n        if (index != null) {\n            return lists__get(format, index, field, setter);\n        }\n\n        var i;\n        var out = [];\n        for (i = 0; i < count; i++) {\n            out[i] = lists__get(format, i, field, setter);\n        }\n        return out;\n    }\n\n    function lists__listMonths (format, index) {\n        return list(format, index, 'months', 12, 'month');\n    }\n\n    function lists__listMonthsShort (format, index) {\n        return list(format, index, 'monthsShort', 12, 'month');\n    }\n\n    function lists__listWeekdays (format, index) {\n        return list(format, index, 'weekdays', 7, 'day');\n    }\n\n    function lists__listWeekdaysShort (format, index) {\n        return list(format, index, 'weekdaysShort', 7, 'day');\n    }\n\n    function lists__listWeekdaysMin (format, index) {\n        return list(format, index, 'weekdaysMin', 7, 'day');\n    }\n\n    locale_locales__getSetGlobalLocale('en', {\n        ordinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        ordinal : function (number) {\n            var b = number % 10,\n                output = (toInt(number % 100 / 10) === 1) ? 'th' :\n                (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                (b === 3) ? 'rd' : 'th';\n            return number + output;\n        }\n    });\n\n    // Side effect imports\n    utils_hooks__hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', locale_locales__getSetGlobalLocale);\n    utils_hooks__hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', locale_locales__getLocale);\n\n    var mathAbs = Math.abs;\n\n    function duration_abs__abs () {\n        var data           = this._data;\n\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days         = mathAbs(this._days);\n        this._months       = mathAbs(this._months);\n\n        data.milliseconds  = mathAbs(data.milliseconds);\n        data.seconds       = mathAbs(data.seconds);\n        data.minutes       = mathAbs(data.minutes);\n        data.hours         = mathAbs(data.hours);\n        data.months        = mathAbs(data.months);\n        data.years         = mathAbs(data.years);\n\n        return this;\n    }\n\n    function duration_add_subtract__addSubtract (duration, input, value, direction) {\n        var other = create__createDuration(input, value);\n\n        duration._milliseconds += direction * other._milliseconds;\n        duration._days         += direction * other._days;\n        duration._months       += direction * other._months;\n\n        return duration._bubble();\n    }\n\n    // supports only 2.0-style add(1, 's') or add(duration)\n    function duration_add_subtract__add (input, value) {\n        return duration_add_subtract__addSubtract(this, input, value, 1);\n    }\n\n    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n    function duration_add_subtract__subtract (input, value) {\n        return duration_add_subtract__addSubtract(this, input, value, -1);\n    }\n\n    function absCeil (number) {\n        if (number < 0) {\n            return Math.floor(number);\n        } else {\n            return Math.ceil(number);\n        }\n    }\n\n    function bubble () {\n        var milliseconds = this._milliseconds;\n        var days         = this._days;\n        var months       = this._months;\n        var data         = this._data;\n        var seconds, minutes, hours, years, monthsFromDays;\n\n        // if we have a mix of positive and negative values, bubble down first\n        // check: https://github.com/moment/moment/issues/2166\n        if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n                (milliseconds <= 0 && days <= 0 && months <= 0))) {\n            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n            days = 0;\n            months = 0;\n        }\n\n        // The following code bubbles up values, see the tests for\n        // examples of what that means.\n        data.milliseconds = milliseconds % 1000;\n\n        seconds           = absFloor(milliseconds / 1000);\n        data.seconds      = seconds % 60;\n\n        minutes           = absFloor(seconds / 60);\n        data.minutes      = minutes % 60;\n\n        hours             = absFloor(minutes / 60);\n        data.hours        = hours % 24;\n\n        days += absFloor(hours / 24);\n\n        // convert days to months\n        monthsFromDays = absFloor(daysToMonths(days));\n        months += monthsFromDays;\n        days -= absCeil(monthsToDays(monthsFromDays));\n\n        // 12 months -> 1 year\n        years = absFloor(months / 12);\n        months %= 12;\n\n        data.days   = days;\n        data.months = months;\n        data.years  = years;\n\n        return this;\n    }\n\n    function daysToMonths (days) {\n        // 400 years have 146097 days (taking into account leap year rules)\n        // 400 years have 12 months === 4800\n        return days * 4800 / 146097;\n    }\n\n    function monthsToDays (months) {\n        // the reverse of daysToMonths\n        return months * 146097 / 4800;\n    }\n\n    function as (units) {\n        var days;\n        var months;\n        var milliseconds = this._milliseconds;\n\n        units = normalizeUnits(units);\n\n        if (units === 'month' || units === 'year') {\n            days   = this._days   + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        } else {\n            // handle milliseconds separately because of floating point math errors (issue #1867)\n            days = this._days + Math.round(monthsToDays(this._months));\n            switch (units) {\n                case 'week'   : return days / 7     + milliseconds / 6048e5;\n                case 'day'    : return days         + milliseconds / 864e5;\n                case 'hour'   : return days * 24    + milliseconds / 36e5;\n                case 'minute' : return days * 1440  + milliseconds / 6e4;\n                case 'second' : return days * 86400 + milliseconds / 1000;\n                // Math.floor prevents floating point math errors here\n                case 'millisecond': return Math.floor(days * 864e5) + milliseconds;\n                default: throw new Error('Unknown unit ' + units);\n            }\n        }\n    }\n\n    // TODO: Use this.as('ms')?\n    function duration_as__valueOf () {\n        return (\n            this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6\n        );\n    }\n\n    function makeAs (alias) {\n        return function () {\n            return this.as(alias);\n        };\n    }\n\n    var asMilliseconds = makeAs('ms');\n    var asSeconds      = makeAs('s');\n    var asMinutes      = makeAs('m');\n    var asHours        = makeAs('h');\n    var asDays         = makeAs('d');\n    var asWeeks        = makeAs('w');\n    var asMonths       = makeAs('M');\n    var asYears        = makeAs('y');\n\n    function duration_get__get (units) {\n        units = normalizeUnits(units);\n        return this[units + 's']();\n    }\n\n    function makeGetter(name) {\n        return function () {\n            return this._data[name];\n        };\n    }\n\n    var milliseconds = makeGetter('milliseconds');\n    var seconds      = makeGetter('seconds');\n    var minutes      = makeGetter('minutes');\n    var hours        = makeGetter('hours');\n    var days         = makeGetter('days');\n    var months       = makeGetter('months');\n    var years        = makeGetter('years');\n\n    function weeks () {\n        return absFloor(this.days() / 7);\n    }\n\n    var round = Math.round;\n    var thresholds = {\n        s: 45,  // seconds to minute\n        m: 45,  // minutes to hour\n        h: 22,  // hours to day\n        d: 26,  // days to month\n        M: 11   // months to year\n    };\n\n    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n    }\n\n    function duration_humanize__relativeTime (posNegDuration, withoutSuffix, locale) {\n        var duration = create__createDuration(posNegDuration).abs();\n        var seconds  = round(duration.as('s'));\n        var minutes  = round(duration.as('m'));\n        var hours    = round(duration.as('h'));\n        var days     = round(duration.as('d'));\n        var months   = round(duration.as('M'));\n        var years    = round(duration.as('y'));\n\n        var a = seconds < thresholds.s && ['s', seconds]  ||\n                minutes === 1          && ['m']           ||\n                minutes < thresholds.m && ['mm', minutes] ||\n                hours   === 1          && ['h']           ||\n                hours   < thresholds.h && ['hh', hours]   ||\n                days    === 1          && ['d']           ||\n                days    < thresholds.d && ['dd', days]    ||\n                months  === 1          && ['M']           ||\n                months  < thresholds.M && ['MM', months]  ||\n                years   === 1          && ['y']           || ['yy', years];\n\n        a[2] = withoutSuffix;\n        a[3] = +posNegDuration > 0;\n        a[4] = locale;\n        return substituteTimeAgo.apply(null, a);\n    }\n\n    // This function allows you to set a threshold for relative time strings\n    function duration_humanize__getSetRelativeTimeThreshold (threshold, limit) {\n        if (thresholds[threshold] === undefined) {\n            return false;\n        }\n        if (limit === undefined) {\n            return thresholds[threshold];\n        }\n        thresholds[threshold] = limit;\n        return true;\n    }\n\n    function humanize (withSuffix) {\n        var locale = this.localeData();\n        var output = duration_humanize__relativeTime(this, !withSuffix, locale);\n\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n\n        return locale.postformat(output);\n    }\n\n    var iso_string__abs = Math.abs;\n\n    function iso_string__toISOString() {\n        // for ISO strings we do not use the normal bubbling rules:\n        //  * milliseconds bubble up until they become hours\n        //  * days do not bubble at all\n        //  * months bubble up until they become years\n        // This is because there is no context-free conversion between hours and days\n        // (think of clock changes)\n        // and also not between days and months (28-31 days per month)\n        var seconds = iso_string__abs(this._milliseconds) / 1000;\n        var days         = iso_string__abs(this._days);\n        var months       = iso_string__abs(this._months);\n        var minutes, hours, years;\n\n        // 3600 seconds -> 60 minutes -> 1 hour\n        minutes           = absFloor(seconds / 60);\n        hours             = absFloor(minutes / 60);\n        seconds %= 60;\n        minutes %= 60;\n\n        // 12 months -> 1 year\n        years  = absFloor(months / 12);\n        months %= 12;\n\n\n        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n        var Y = years;\n        var M = months;\n        var D = days;\n        var h = hours;\n        var m = minutes;\n        var s = seconds;\n        var total = this.asSeconds();\n\n        if (!total) {\n            // this is the same as C#'s (Noda) and python (isodate)...\n            // but not other JS (goog.date)\n            return 'P0D';\n        }\n\n        return (total < 0 ? '-' : '') +\n            'P' +\n            (Y ? Y + 'Y' : '') +\n            (M ? M + 'M' : '') +\n            (D ? D + 'D' : '') +\n            ((h || m || s) ? 'T' : '') +\n            (h ? h + 'H' : '') +\n            (m ? m + 'M' : '') +\n            (s ? s + 'S' : '');\n    }\n\n    var duration_prototype__proto = Duration.prototype;\n\n    duration_prototype__proto.abs            = duration_abs__abs;\n    duration_prototype__proto.add            = duration_add_subtract__add;\n    duration_prototype__proto.subtract       = duration_add_subtract__subtract;\n    duration_prototype__proto.as             = as;\n    duration_prototype__proto.asMilliseconds = asMilliseconds;\n    duration_prototype__proto.asSeconds      = asSeconds;\n    duration_prototype__proto.asMinutes      = asMinutes;\n    duration_prototype__proto.asHours        = asHours;\n    duration_prototype__proto.asDays         = asDays;\n    duration_prototype__proto.asWeeks        = asWeeks;\n    duration_prototype__proto.asMonths       = asMonths;\n    duration_prototype__proto.asYears        = asYears;\n    duration_prototype__proto.valueOf        = duration_as__valueOf;\n    duration_prototype__proto._bubble        = bubble;\n    duration_prototype__proto.get            = duration_get__get;\n    duration_prototype__proto.milliseconds   = milliseconds;\n    duration_prototype__proto.seconds        = seconds;\n    duration_prototype__proto.minutes        = minutes;\n    duration_prototype__proto.hours          = hours;\n    duration_prototype__proto.days           = days;\n    duration_prototype__proto.weeks          = weeks;\n    duration_prototype__proto.months         = months;\n    duration_prototype__proto.years          = years;\n    duration_prototype__proto.humanize       = humanize;\n    duration_prototype__proto.toISOString    = iso_string__toISOString;\n    duration_prototype__proto.toString       = iso_string__toISOString;\n    duration_prototype__proto.toJSON         = iso_string__toISOString;\n    duration_prototype__proto.locale         = locale;\n    duration_prototype__proto.localeData     = localeData;\n\n    // Deprecations\n    duration_prototype__proto.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', iso_string__toISOString);\n    duration_prototype__proto.lang = lang;\n\n    // Side effect imports\n\n    addFormatToken('X', 0, 0, 'unix');\n    addFormatToken('x', 0, 0, 'valueOf');\n\n    // PARSING\n\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', function (input, array, config) {\n        config._d = new Date(parseFloat(input, 10) * 1000);\n    });\n    addParseToken('x', function (input, array, config) {\n        config._d = new Date(toInt(input));\n    });\n\n    // Side effect imports\n\n\n    utils_hooks__hooks.version = '2.10.6';\n\n    setHookCallback(local__createLocal);\n\n    utils_hooks__hooks.fn                    = momentPrototype;\n    utils_hooks__hooks.min                   = min;\n    utils_hooks__hooks.max                   = max;\n    utils_hooks__hooks.utc                   = create_utc__createUTC;\n    utils_hooks__hooks.unix                  = moment__createUnix;\n    utils_hooks__hooks.months                = lists__listMonths;\n    utils_hooks__hooks.isDate                = isDate;\n    utils_hooks__hooks.locale                = locale_locales__getSetGlobalLocale;\n    utils_hooks__hooks.invalid               = valid__createInvalid;\n    utils_hooks__hooks.duration              = create__createDuration;\n    utils_hooks__hooks.isMoment              = isMoment;\n    utils_hooks__hooks.weekdays              = lists__listWeekdays;\n    utils_hooks__hooks.parseZone             = moment__createInZone;\n    utils_hooks__hooks.localeData            = locale_locales__getLocale;\n    utils_hooks__hooks.isDuration            = isDuration;\n    utils_hooks__hooks.monthsShort           = lists__listMonthsShort;\n    utils_hooks__hooks.weekdaysMin           = lists__listWeekdaysMin;\n    utils_hooks__hooks.defineLocale          = defineLocale;\n    utils_hooks__hooks.weekdaysShort         = lists__listWeekdaysShort;\n    utils_hooks__hooks.normalizeUnits        = normalizeUnits;\n    utils_hooks__hooks.relativeTimeThreshold = duration_humanize__getSetRelativeTimeThreshold;\n\n    var _moment = utils_hooks__hooks;\n\n    return _moment;\n\n}));","import {SortEntry} from \"./SortEntry\";\r\nimport {IPage} from \"./IPage\";\r\nimport {TimeoutUtils} from \"./utils/TimeoutUtils\";\r\nimport {PageMode} from \"./PageMode\";\r\n\r\nexport interface IGridModel<T> {\r\n    entries: Array<T>;\r\n    filter: any;\r\n    nonPersistedFilterFields: Array<string>;\r\n    pageSize: number;\r\n    currentPage: number;\r\n    totalCount: number;\r\n    totalCountRevised: number;\r\n    requestsPageMode: string;\r\n    totalPageCount: number;\r\n    selectedPage: number;\r\n\r\n    sorting: Array<SortEntry>;\r\n    gridColumns: Array<GridColumn>;\r\n    visibleColumnsCount: number;\r\n\r\n    isLoading: boolean;\r\n\r\n    loadPage(pageNumber: number);\r\n    loadCurrentPage();\r\n    loadWithDelay(timeoutUtils: TimeoutUtils, uuid: any);\r\n    loadPageForFilter(pageNumber: number, filter: any);\r\n    addLoadingListener(listener: IGridLoadingListener);\r\n    clearLoadListeners();\r\n    addColumnVisibilityListener(listener: IColumnVisibilityChangeListener);\r\n    addPageSizeListener(listener: IPageSizeChangeListener);\r\n    getPageSize(): number;\r\n    setDefaultPageSize(): GridModel<T>;\r\n    setMaxPageSize(): GridModel<T>;\r\n\r\n    recalculateVisibleColumnsCount();\r\n    changeColumnVisibility(columnIndex: number);\r\n\r\n    onChangePageSize();\r\n}\r\n\r\nexport interface IGridLoadingListener {\r\n    startLoading();\r\n    endLoading();\r\n}\r\nexport interface IColumnVisibilityChangeListener {\r\n    onColumnVisibilityChange(column: GridColumn);\r\n}\r\nexport interface IPageSizeChangeListener {\r\n    onChangePageSize();\r\n}\r\n\r\nexport class PersistedGridModelConfiguration {\r\n    public gridColumns: Array<GridColumn>;\r\n    public sortEntries: Array<SortEntry>;\r\n    public pageSize: number;\r\n    public filter: any;\r\n\r\n    public static fromGridModel(gridModel: IGridModel<any>): PersistedGridModelConfiguration {\r\n        var persisted = new PersistedGridModelConfiguration();\r\n        persisted.pageSize = gridModel.pageSize;\r\n        persisted.gridColumns = gridModel.gridColumns;\r\n        persisted.sortEntries = gridModel.sorting;\r\n        persisted.filter = {};\r\n        if (gridModel.filter) {\r\n            for (var fieldName in gridModel.filter) {\r\n                if (gridModel.filter.hasOwnProperty(fieldName) && gridModel.nonPersistedFilterFields.indexOf(fieldName) < 0) {\r\n                    persisted.filter[fieldName] = angular.copy(gridModel.filter[fieldName]);\r\n                }\r\n            }\r\n        }\r\n        return persisted;\r\n    }\r\n}\r\n\r\nexport class GridColumn {\r\n    index: number;\r\n    position: number;\r\n    title: string;\r\n    visible: boolean = true;\r\n    alwaysVisible: boolean = false;\r\n    fixedColumn: boolean = false;\r\n\r\n    public reverseVisibility() {\r\n        this.visible = !this.visible;\r\n    }\r\n}\r\n\r\nexport class GridModel<T> implements IGridModel<T> {\r\n    public static DEFAULT_PAGE_SIZE: number = 10;\r\n    public static MAX_USER_PAGE_SIZE: number = 5000;\r\n    public static MAX_PAGE_SIZE: number = 2147483647;\r\n\r\n    public entries: Array<T> = [];\r\n    public sorting: Array<SortEntry> = [];\r\n    public gridColumns: Array<GridColumn> = [];\r\n    public visibleColumnsCount: number;\r\n    public totalCount = 0;\r\n    public totalCountRevised = 0;\r\n    public pageMode: string;\r\n    public requestsPageMode: string = PageMode[PageMode.ENTRIES_AND_TOTAL_ESTIMATES];\r\n    public totalPageCount = 1;\r\n    public currentPage = 0;\r\n    public selectedPage = 1;\r\n    public pageSize = GridModel.DEFAULT_PAGE_SIZE;\r\n    public filter = {};\r\n    public nonPersistedFilterFields: Array<string> = [\"searchString\"];\r\n    public isLoading = false;\r\n    public isTotalLoading = false;\r\n    private latestRevisedTotalFilter: any;\r\n\r\n    private loadListeners: Array<IGridLoadingListener> = [];\r\n    private columnsListeners: Array<IColumnVisibilityChangeListener> = [];\r\n    private pageSizeListeners: Array<IPageSizeChangeListener> = [];\r\n\r\n    private loadEntitiesFunction: (gridModel: IGridModel<T>) => angular.IPromise<IPage<T>>;\r\n\r\n    constructor(loadEntitiesApi: (gridModel: IGridModel<T>) => angular.IPromise<IPage<T>>) {\r\n        this.loadEntitiesFunction = loadEntitiesApi;\r\n    }\r\n\r\n    public setDefaultPageSize(): GridModel<T> {\r\n        this.pageSize = GridModel.DEFAULT_PAGE_SIZE;\r\n        return this;\r\n    }\r\n\r\n    public setMaxPageSize(): GridModel<T> {\r\n        this.pageSize = GridModel.MAX_PAGE_SIZE;\r\n        return this;\r\n    }\r\n\r\n    public addSortEntry(sortEntry: SortEntry): GridModel<T> {\r\n        this.sorting.push(sortEntry);\r\n        return this;\r\n    }\r\n\r\n    public addLoadingListener(listener: IGridLoadingListener) {\r\n        this.loadListeners.push(listener);\r\n    }\r\n\r\n    public clearLoadListeners(){\r\n        this.loadListeners.splice(0, this.loadListeners.length);\r\n    }\r\n\r\n    public addColumnVisibilityListener(listener: IColumnVisibilityChangeListener) {\r\n        this.columnsListeners.push(listener);\r\n    }\r\n\r\n    public addPageSizeListener(listener: IPageSizeChangeListener) {\r\n        this.pageSizeListeners.push(listener);\r\n    }\r\n\r\n    public loadPage(pageNumber: number) {\r\n        this.loadPageForFilter(pageNumber, this.filter);\r\n    }\r\n\r\n    public loadWithDelay(timeoutUtils: TimeoutUtils, uuid: any) {\r\n        timeoutUtils.processWithDelay(uuid, a => this.loadPage(0), 500);\r\n    }\r\n\r\n    public loadCurrentPage() {\r\n        this.loadPageForFilter(this.currentPage, this.filter)\r\n    }\r\n\r\n    public loadPageForFilter(pageNumber: number, filter: any, pageMode?: string) {\r\n        this.isLoading = true;\r\n        for (var i = 0; i < this.loadListeners.length; i++) {\r\n            var listener: IGridLoadingListener = this.loadListeners[i];\r\n            listener.startLoading();\r\n        }\r\n        this.currentPage = pageNumber;\r\n        let initialRequestsMode = this.requestsPageMode;\r\n        if (pageMode) {\r\n            this.requestsPageMode = pageMode;\r\n        }\r\n        if (this.selectedPage !== pageNumber + 1) {\r\n            this.selectedPage = pageNumber + 1;\r\n        }\r\n        this.filter = filter; //todo:\r\n        this.loadEntitiesFunction(this)\r\n            .then(result => {\r\n                this.totalCount = result.totalCount;\r\n                if (result.pageMode !== \"TOTAL\") {\r\n                    this.entries = result.entries;\r\n                    this.pageMode = result.pageMode;\r\n                }\r\n                if (result.pageMode === \"ENTRIES_AND_TOTAL\" || result.pageMode === \"TOTAL\") {\r\n                    this.totalCountRevised = result.totalCount;\r\n                    this.latestRevisedTotalFilter = angular.copy(this.filter);\r\n                    this.isTotalLoading = false;\r\n                } else if (result.pageMode === \"ENTRIES_AND_TOTAL_ESTIMATES\"\r\n                    && !angular.equals(filter, this.latestRevisedTotalFilter)) {\r\n                    this.totalCountRevised = null;\r\n                    this.latestRevisedTotalFilter = null;\r\n                }\r\n                this.calculateTotalPages();\r\n                for (const listener of this.loadListeners) {\r\n                    listener.endLoading();\r\n                }\r\n                this.isLoading = false;\r\n            });\r\n        if (pageMode) {\r\n            this.requestsPageMode = initialRequestsMode;\r\n        }\r\n    }\r\n\r\n    public loadRecordsCount() {\r\n        this.latestRevisedTotalFilter = angular.copy(this.filter);\r\n        this.isTotalLoading = true;\r\n        let initialRequestsMode = this.requestsPageMode;\r\n        this.requestsPageMode = \"TOTAL\";\r\n        this.loadEntitiesFunction(this)\r\n            .then((result:IPage<T>) => {\r\n                this.totalCount = result.totalCount;\r\n                if (result.pageMode === \"TOTAL\") {\r\n                    this.totalCountRevised = result.totalCount;\r\n                }\r\n                this.isTotalLoading = false;\r\n                this.calculateTotalPages();\r\n            });\r\n        this.requestsPageMode = initialRequestsMode;\r\n    }\r\n\r\n    public getPageSize() {\r\n        return this.pageSize && !isNaN(this.pageSize) ? this.pageSize : GridModel.DEFAULT_PAGE_SIZE;\r\n    }\r\n\r\n    public recalculateVisibleColumnsCount() {\r\n        var count = 0;\r\n        for (var i = 0; i < this.gridColumns.length; i++) {\r\n            var column: GridColumn = this.gridColumns[i];\r\n            if (column.alwaysVisible || column.visible) {\r\n                count++;\r\n            }\r\n        }\r\n        this.visibleColumnsCount = count;\r\n    }\r\n\r\n    public changeColumnVisibility(columnIndex: number) {\r\n        var column: GridColumn = null;\r\n        for (var i = 0; i < this.gridColumns.length; i++) {\r\n            column = this.gridColumns[i];\r\n            if (column.index == columnIndex) {\r\n                break;\r\n            } else {\r\n                column = null;\r\n            }\r\n        }\r\n        if (column != null) {\r\n            column.reverseVisibility();\r\n            this.recalculateVisibleColumnsCount();\r\n            for (var i = 0; i < this.columnsListeners.length; i++) {\r\n                this.columnsListeners[i].onColumnVisibilityChange(column);\r\n            }\r\n        }\r\n    }\r\n\r\n    public onChangePageSize() {\r\n        for (var i = 0; i < this.pageSizeListeners.length; i++) {\r\n            this.pageSizeListeners[i].onChangePageSize();\r\n        }\r\n    }\r\n\r\n    private calculateTotalPages() {\r\n        let knownToUsTotalCount = this.totalCountRevised ? this.totalCountRevised : this.totalCount;\r\n        const totalPages = this.pageSize < 1 ? 1 : Math.ceil(knownToUsTotalCount / this.pageSize);\r\n        this.totalPageCount = Math.max(totalPages || 0, 1);\r\n    }\r\n}","import {IPage} from \"./IPage\";\r\nimport {SortEntry} from \"./SortEntry\";\r\nimport {IGridModel} from \"./IGridModel\";\r\n\r\nexport interface IHttpGridService<T> {\r\n    page(page: number, pageSize: number, pageMode: string): IHttpGridService<T>;\r\n    sorting(sortBy: string, sortDir: string): IHttpGridService<T>;\r\n    cache(): IHttpGridService<T>\r\n    getItems(page?: number, size?: number, mode?: string, filter?: any, sorting?: Array<SortEntry>): angular.IPromise<IPage<T>>;\r\n}\r\n\r\nexport class HttpGridService<T> implements IHttpGridService<T> {\r\n\r\n    private $http: angular.IHttpService;\r\n    private apiUrl: string;\r\n    private params: any = {};\r\n    private enableCache: boolean = false;\r\n\r\n    constructor($http: angular.IHttpService, apiUrl: string) {\r\n        this.$http = $http;\r\n        this.apiUrl = apiUrl;\r\n    }\r\n\r\n    public getItems(page?: number, size?: number, mode?: string, filter?: any, sorting?: Array<SortEntry>): angular.IPromise<IPage<T>> {\r\n\r\n        if (typeof filter !== \"undefined\") {\r\n            for (var key in filter) {\r\n                if (filter.hasOwnProperty(key)) {\r\n                    this.params[key + \"Filter\"] = filter[key];\r\n                }\r\n            }\r\n        }\r\n        if (typeof sorting !== \"undefined\") {\r\n            this.params[\"sorting\"] = sorting;\r\n        }\r\n        if (!this.enableCache) {\r\n            this.addNoCache();\r\n        }\r\n        this.page(page, size, mode);\r\n\r\n        return this.$http.get(this.apiUrl, {params: this.params})\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public page(page: number, pageSize: number, pageMode: string): IHttpGridService<T> {\r\n        this.params[\"page\"] = page;\r\n        this.params[\"pageSize\"] = pageSize;\r\n        this.params[\"pageMode\"] = pageMode;\r\n        return this;\r\n    }\r\n\r\n    public sorting(sortBy: string, sortDir: string): IHttpGridService<T> { //todo:\r\n        this.params[\"sortBy\"] = sortBy;\r\n        this.params[\"sortDir\"] = sortDir;\r\n        return this;\r\n    }\r\n\r\n    public cache(): IHttpGridService<T> {\r\n        this.enableCache = true;\r\n        return this;\r\n    }\r\n\r\n    private addNoCache() {\r\n        this.params[\"no-cache\"] = new Date().getTime();\r\n        return this;\r\n    }\r\n\r\n    public static grid<T>($http: angular.IHttpService, apiUrl: string): IHttpGridService<T> {\r\n        return new HttpGridService<T>($http, apiUrl);\r\n    }\r\n\r\n}\r\n\r\nexport class HttpGridHelper {\r\n\r\n    public static createLoader<T>($http: angular.IHttpService, apiUrl: string): (m: IGridModel<T>) => angular.IPromise<IPage<T>> {\r\n        var httpGridService = HttpGridService.grid($http, apiUrl);\r\n        return model => httpGridService.getItems(model.currentPage, model.getPageSize(), model.requestsPageMode, model.filter, model.sorting);\r\n    }\r\n\r\n    public static createLoaderWithCallback<T>($http: angular.IHttpService,\r\n                                              apiUrl: string,\r\n                                              callback: (page: IPage<T>) => angular.IPromise<IPage<T>>): (m: IGridModel<T>) => angular.IPromise<IPage<T>> {\r\n        var httpGridService = HttpGridService.grid($http, apiUrl);\r\n        return model => httpGridService.getItems(model.currentPage, model.pageSize, model.filter, model.sorting)\r\n            .then((result: IPage<T>) => callback(result));\r\n    }\r\n}","export interface INotifierDisplayMethod {\r\n    (message: string, title?: string, overrides?: ToastrOptions): JQuery;\r\n}\r\n\r\nexport class Notifier {\r\n    public success: INotifierDisplayMethod = this.getNotifierDisplayMethod(toastr.success);\r\n    public error: INotifierDisplayMethod = this.getNotifierDisplayMethod(toastr.error);\r\n    public warning: INotifierDisplayMethod = this.getNotifierDisplayMethod(toastr.warning);\r\n\r\n    private getNotifierDisplayMethod(toastrDisplayMethod: ToastrDisplayMethod): INotifierDisplayMethod {\r\n        return function (message: string, title: string, overrides: ToastrOptions): JQuery {\r\n            if (message != undefined && title == undefined && overrides == undefined) {\r\n                return toastrDisplayMethod(s.escapeHTML(message));\r\n            }\r\n            if (message != undefined && title != undefined && overrides == undefined) {\r\n                return toastrDisplayMethod(s.escapeHTML(message), s.escapeHTML(title));\r\n            }\r\n            if (message != undefined && title != undefined && overrides != undefined) {\r\n                return toastrDisplayMethod(s.escapeHTML(message), s.escapeHTML(title), overrides);\r\n            }\r\n            return undefined;\r\n        };\r\n    }\r\n}\r\n\r\nexport var notifier: Notifier = new Notifier();","export enum PageMode {\r\n    ENTRIES_AND_TOTAL,\r\n    ENTRIES_AND_TOTAL_ESTIMATES,\r\n    ENTRIES,\r\n    TOTAL\r\n}","export enum ReferencedObjectType {\r\n    MATERIAL,\r\n    COURSE,\r\n    PLAYLIST,\r\n    NEWS\r\n}","export enum SortOrder {\r\n    ASC,\r\n    DESC\r\n}\r\n\r\nexport class SortEntry {\r\n    public fieldName: string;\r\n    public sortOrder: SortOrder;\r\n\r\n    constructor(fieldName: string, sortOrder: SortOrder) {\r\n        this.fieldName = fieldName;\r\n        this.sortOrder = sortOrder;\r\n    }\r\n\r\n    public reverseOrder() {\r\n        this.sortOrder = this.sortOrder == SortOrder.ASC ? SortOrder.DESC : SortOrder.ASC;\r\n    }\r\n\r\n    public static asc(fieldName: string): SortEntry {\r\n        return new SortEntry(fieldName, SortOrder.ASC);\r\n    }\r\n\r\n    public static desc(fieldName: string): SortEntry {\r\n        return new SortEntry(fieldName, SortOrder.DESC);\r\n    }\r\n}","/// <reference path=\"./references.ts\" />\r\n\r\nimport {ICommonRootScope} from \"common/ICommonRootScope\";\r\nimport {AppProperties} from \"./utils/AppProperties\";\r\nimport {Event as ComponentsEvents} from \"./components/models/Event\"\r\nimport {VhsEmbeddedMaterialController} from \"./components/VhsEmbeddedMaterialDirective\"\r\nimport {VhsEmbeddedBundleController} from \"./components/richtext/VhsEmbeddedBundleDirective\"\r\nimport {VhsSandboxController} from \"./components/richtext/VhsSandboxDirective\"\r\nimport {VhsDownloadBundleController} from \"./components/richtext/VhsDownloadBundleDirective\"\r\nimport {RichTextEditorController} from \"./components/richtext/RichTextEditorDirective\"\r\nimport {ITextAngularEventData} from \"./components/models/ITextAngularEventData\"\r\n\r\nimport {AuthModule} from \"./auth/AuthModule\";\r\nimport {AuthService} from \"./auth/AuthService\";\r\nimport {LogOnController} from \"./auth/LogOnController\";\r\n\r\nimport {AuthCoreModule} from \"./authcore/AuthCoreModule\";\r\nimport {AuthManager} from \"./authcore/AuthManager\";\r\nimport {AuthRedirect} from \"./authcore/AuthRedirect\";\r\nimport {TokenStorage} from \"./authcore/TokenStorage\";\r\n\r\nimport {BroadcastsModule} from \"./broadcasts/BroadcastsModule\";\r\n\r\nimport {ComponentsModule}  from \"./components/ComponentsModule\";\r\n\r\nimport {HttpModule} from \"./http/HttpModule\";\r\n\r\nimport {InfrastructureModule} from \"./infrastructure/InfrastructureModule\";\r\nimport {StorageWrapper, Storages} from \"./infrastructure/Storage\";\r\n\r\nimport {MainModule} from \"./main/MainModule\";\r\n\r\nimport {NewsModule} from \"./news/NewsModule\";\r\n\r\nimport {InfoModule} from \"./info/InfoModule\";\r\n\r\nimport {PersonalModule} from \"./personal/PersonalModule\";\r\n\r\nimport {StatisticsModule} from \"./statistics/StatisticsModule\";\r\n\r\nimport {MaterialsModule} from \"./materials/MaterialsModule\";\r\n\r\nimport {ReferenceModule} from \"./reference/ReferenceModule\";\r\n\r\nimport {SecurityModule} from \"./security/SecurityModule\";\r\n\r\nimport {SettingsModule} from \"./settings/SettingsModule\";\r\n\r\nimport {UrlsModule} from \"./urls/UrlsModule\";\r\nimport {UrlServiceProvider} from \"./urls/UrlServiceProvider\";\r\n\r\nimport {UsersModule} from \"./users/UsersModule\";\r\n\r\nimport {notifier} from \"./INotifier\";\r\n\r\nimport {BundlesModule} from \"./bundles/BundlesModule\";\r\n\r\nimport {CoursesModule} from \"./courses/CoursesModule\";\r\n\r\nimport {FinancesModule} from \"./finances/FinancesModule\"\r\n\r\nimport {CommonModule} from \"./common/CommonModule\";\r\n\r\nimport {StorageModule} from \"./storage/StorageModule\";\r\n\r\nimport {QuizzesModule} from \"./quizzes/QuizzesModule\";\r\n\r\nimport {LogsModule} from \"./logs/LogsModule\";\r\nimport {UtilsModule} from \"./utils/UtilsModule\";\r\n\r\nimport {MainRouter} from \"./urls/MainRouter\";\r\nimport {NewsRouter} from \"./urls/NewsRouter\";\r\nimport {InfoRouter} from \"./urls/InfoRouter\";\r\nimport {AuthRouter} from \"./urls/AuthRouter\";\r\nimport {ReferenceRouter}  from \"./urls/ReferenceRouter\";\r\nimport {SystemSettingsRouter} from \"./urls/SystemSettingsRouter\";\r\nimport {CoursesRouter} from \"./urls/CoursesRouter\";\r\nimport {BroadcastsRouter} from \"./urls/BroadcastsRouter\";\r\nimport {StatisticsRouter} from \"./urls/StatisticsRouter\";\r\nimport {UsersRouter} from \"./urls/UsersRouter\";\r\nimport {MaterialsRouter} from \"./urls/MaterialsRouter\";\r\nimport {FinancesRouter} from \"./urls/FinancesRouter\";\r\nimport {PersonalRouter} from \"./urls/PersonalRouter\";\r\nimport {CommonRouter} from \"./urls/CommonRouter\";\r\nimport {QuizzesRouter} from \"./urls/QuizzesRouter\";\r\nimport {LogsRouter} from \"./urls/LogsRouter\";\r\n\r\nimport {HttpInterceptor} from \"./http/HttpInterceptor\";\r\nimport {LocationUtils} from \"./utils/LocationUtils\";\r\nimport {StringBuilder} from \"./utils/StringBuilder\";\r\nimport {UrlService} from \"./utils/UrlService\";\r\n\r\nangular.module(\"vhs\", [\r\n    \"ngRoute\",\r\n    \"ngAnimate\",\r\n    \"ngSanitize\",\r\n    \"ngFileUpload\",\r\n    \"ngNumeraljs\",\r\n    \"ui.chart\",\r\n    \"ui.select\",\r\n    \"duScroll\",\r\n    \"textAngular\",\r\n    \"timer\",\r\n    \"dndLists\",\r\n    \"ui.mask\",\r\n    CommonModule.name,\r\n    AuthModule.name,\r\n    AuthCoreModule.name,\r\n    UrlsModule.name,\r\n    SecurityModule.name,\r\n    InfrastructureModule.name,\r\n    HttpModule.name,\r\n    ComponentsModule.name,\r\n    StatisticsModule.name,\r\n    ReferenceModule.name,\r\n    UsersModule.name,\r\n    SettingsModule.name,\r\n    LogsModule.name,\r\n    MainModule.name,\r\n    MaterialsModule.name,\r\n    NewsModule.name,\r\n    InfoModule.name,\r\n    BroadcastsModule.name,\r\n    PersonalModule.name,\r\n    BundlesModule.name,\r\n    CoursesModule.name,\r\n    FinancesModule.name,\r\n    StorageModule.name,\r\n    QuizzesModule.name,\r\n    UtilsModule.name\r\n]).config([\r\n    \"$routeProvider\",\r\n    \"$logProvider\",\r\n    \"$httpProvider\",\r\n    UrlServiceProvider.NAME,\r\n    configuration\r\n]).config([\r\n    \"$provide\",\r\n    thirdPartyConfiguration\r\n]).run([\r\n    \"$log\",\r\n    \"$rootScope\",\r\n    AuthService.NAME,\r\n    AuthManager.NAME,\r\n    AuthRedirect.NAME,\r\n    Storages.LOCAL_NAME,\r\n    UrlService.NAME,\r\n    run\r\n]);\r\n\r\nwindow.onbeforeunload = function (event) {\r\n    if ($(\"#uploads-status\").length == 0) return;\r\n    let message = \"Uploading of files will be canceled if you leave this page\";\r\n    if (typeof event == \"undefined\") {\r\n        event = window.event;\r\n    }\r\n    if (event) {\r\n        event.returnValue = message;\r\n    }\r\n    return message;\r\n};\r\n\r\n// Use this method to register work which needs to be performed on module loading.\r\n// Note only providers can be injected as dependencies here.\r\nfunction configuration($routeProvider: ng.route.IRouteProvider, $logProvider: ng.ILogProvider,\r\n                       $httpProvider: ng.IHttpProvider, urlServiceProvider: UrlServiceProvider) {\r\n    // TODO: Enable debug logging based on server config\r\n    // TODO: Capture all logged errors and send back to server\r\n    $logProvider.debugEnabled(true);\r\n\r\n    urlServiceProvider\r\n        .setServiceRoot(AppProperties.serviceRoot)\r\n        .setBuildVersion(AppProperties.buildVersion);\r\n\r\n    // Hack\r\n    var url = urlServiceProvider.$get();\r\n\r\n    $routeProvider\r\n        .when(CommonRouter.notFoundRoute, {templateUrl: url.template(\"common/not-found.html\")})\r\n        .when(MainRouter.mainRoute, {redirectTo: function (routeParams, path, search: any) {\r\n            let fullScreen: boolean = LocationUtils.isFullScreenBySearch(search);\r\n            return StringBuilder\r\n                        .interpolate(CoursesRouter.detailsRoute)\r\n                        .with(':' + CoursesRouter.COURSE_ID_PARAM, 61001)\r\n                        .build() + (!fullScreen ? \"?fullScreen=false\" : \"\");\r\n        }})\r\n        .when(AuthRouter.logonRoute, {templateUrl: url.template(\"auth/logon.html\")})\r\n        .when(AuthRouter.logoutRoute, {templateUrl: url.template(\"auth/logout.html\")})\r\n        .when(AuthRouter.accessDeniedRoute, {templateUrl: url.template(\"auth/access-denied.html\")})\r\n        .when(AuthRouter.restorePasswordRoute, {templateUrl: url.template(\"auth/restore-password.html\")})\r\n        .when(AuthRouter.checkValidCodeRoute, {templateUrl: url.template(\"auth/check-valid-code.html\")})\r\n        .when(AuthRouter.createNewPasswordRoute, {templateUrl: url.template(\"auth/create-new-password.html\")})\r\n        .when(AuthRouter.createNewPasswordByCodeRoute, {templateUrl: url.template(\"auth/create-new-password.html\")})\r\n        .when(MaterialsRouter.searchRoute, {templateUrl: url.template(\"materials/search.html\")})\r\n        .when(MaterialsRouter.myDownloadsRoute, {templateUrl: url.template(\"materials/myDownloads.html\")})\r\n        .when(MaterialsRouter.createRoute, {templateUrl: url.template(\"materials/edit.html\")})\r\n        .when(MaterialsRouter.playlistsRoute, {templateUrl: url.template(\"materials/playlists.html\")})\r\n        .when(MaterialsRouter.playlistCreateRoute, {templateUrl: url.template(\"materials/playlistEdit.html\")})\r\n        .when(MaterialsRouter.playlistDetailsRoute, {templateUrl: url.template(\"materials/playlistDetails.html\")})\r\n        .when(MaterialsRouter.playlistEditRoute, {templateUrl: url.template(\"materials/playlistEdit.html\")})\r\n        .when(MaterialsRouter.materialRoute, {templateUrl: url.template(\"materials/material.html\")})\r\n        .when(MaterialsRouter.updateRoute, {templateUrl: url.template(\"materials/edit.html\")})\r\n        .when(BroadcastsRouter.studentRoute, {templateUrl: url.template(\"broadcasts/student.html\")})\r\n        .when(BroadcastsRouter.teacherRoute, {templateUrl: url.template(\"broadcasts/teacher.html\")})\r\n        .when(StatisticsRouter.materialViewReportRoute, {templateUrl: url.template(\"statistics/materialViewReport.html\")})\r\n        .when(StatisticsRouter.materialDownloadReportRoute, {templateUrl: url.template(\"statistics/materialDownloadReport.html\")})\r\n        .when(StatisticsRouter.materialUploadReportRoute, {templateUrl: url.template(\"statistics/materialUploadReport.html\")})\r\n        .when(PersonalRouter.profileRoute, {templateUrl: url.template(\"personal/profile.html\")})\r\n        .when(PersonalRouter.favoritesRoute, {templateUrl: url.template(\"personal/favorites.html\")})\r\n        .when(PersonalRouter.uploadsRoute, {templateUrl: url.template(\"personal/uploads.html\")})\r\n        .when(PersonalRouter.coursesRoute, {templateUrl: url.template(\"personal/courses.html\")})\r\n        .when(PersonalRouter.quizzesRoute, {templateUrl: url.template(\"personal/quizzes.html\")})\r\n        .when(PersonalRouter.playlistsRoute, {templateUrl: url.template(\"personal/playlists.html\")})\r\n        .when(PersonalRouter.subscriptionsRoute, {templateUrl: url.template(\"personal/subscriptions.html\")})\r\n        .when(PersonalRouter.newCommentsRoute, {templateUrl: url.template(\"personal/newComments.html\")})\r\n        .when(PersonalRouter.supportRoute, {templateUrl: url.template(\"personal/support.html\")})\r\n        .when(PersonalRouter.couponsRoute, {templateUrl: url.template(\"personal/coupons.html\")})\r\n        .when(PersonalRouter.purchasesHistoryRoute, {templateUrl: url.template(\"personal/purchasesHistory.html\")})\r\n        .when(PersonalRouter.balanceRoute, {templateUrl: url.template(\"personal/balance.html\")})\r\n        .when(PersonalRouter.settingsRoute, {templateUrl: url.template(\"personal/settings.html\")})\r\n        .when(PersonalRouter.settingsAopaRoute, {templateUrl: url.template(\"personal/settings_aopa.html\")})\r\n        .when(FinancesRouter.balanceRoute, {templateUrl: url.template(\"finances/balance.html\")})\r\n        .when(FinancesRouter.purchaseHistoryRoute, {templateUrl: url.template(\"finances/purchaseHistory.html\")})\r\n        .when(FinancesRouter.accountManagementRoute, {templateUrl: url.template(\"finances/accountManagement.html\")})\r\n        .when(FinancesRouter.purchaseRoute, {templateUrl: url.template(\"finances/purchase.html\")})\r\n        .when(NewsRouter.newsSearchRoute, {templateUrl: url.template(\"news/allNews.html\")})\r\n        .when(NewsRouter.oneNewsCreateRoute, {templateUrl: url.template(\"news/edit.html\")})\r\n        .when(NewsRouter.oneNewsRoute, {templateUrl: url.template(\"news/oneNews.html\")})\r\n        .when(NewsRouter.oneNewsEditRoute, {templateUrl: url.template(\"news/edit.html\")})\r\n        .when(InfoRouter.aboutProjectRoute, {templateUrl: url.template(\"info/aboutProject.html\")})\r\n        .when(InfoRouter.aboutCompanyRoute, {templateUrl: url.template(\"info/aboutCompany.html\")})\r\n        .when(InfoRouter.contactsRoute, {templateUrl: url.template(\"info/contacts.html\")})\r\n        .when(InfoRouter.faqRoute, {templateUrl: url.template(\"info/faq.html\")})\r\n        .when(ReferenceRouter.indexRoute, {templateUrl: url.template(\"reference/index.html\")})\r\n        .when(ReferenceRouter.editRoute, {templateUrl: url.template(\"reference/edit.html\")})\r\n        .when(UsersRouter.indexRoute, {templateUrl: url.template(\"users/index.html\")})\r\n        .when(UsersRouter.addRoute, {templateUrl: url.template(\"users/edit.html\")})\r\n        .when(UsersRouter.signupRoute, {templateUrl: url.template(\"users/signup.html\")})\r\n        .when(UsersRouter.editRoute, {templateUrl: url.template(\"users/edit.html\")})\r\n        .when(UsersRouter.currentProfileRoute, {templateUrl: url.template(\"users/profile.html\")})\r\n        .when(UsersRouter.groupIndexRoute, {templateUrl: url.template(\"users/groups.html\")})\r\n        .when(UsersRouter.groupAddRoute, {templateUrl: url.template(\"users/groupEdit.html\")})\r\n        .when(UsersRouter.groupEditRoute, {templateUrl: url.template(\"users/groupEdit.html\")})\r\n        .when(SystemSettingsRouter.commonSettingsRoute, {templateUrl: url.template(\"settings/commonSettings.html\")})\r\n        .when(SystemSettingsRouter.storagePlacesIndexRoute, {templateUrl: url.template(\"settings/storagePlacesIndex.html\")})\r\n        .when(SystemSettingsRouter.storagePlaceCreateRoute, {templateUrl: url.template(\"settings/storagePlaceEdit.html\")})\r\n        .when(SystemSettingsRouter.storagePlaceEditRoute, {templateUrl: url.template(\"settings/storagePlaceEdit.html\")})\r\n        .when(LogsRouter.systemLogsRoute, {templateUrl: url.template(\"logs/system.html\")})\r\n        .when(LogsRouter.securityLogsRoute, {templateUrl: url.template(\"logs/security.html\")})\r\n        .when(CoursesRouter.createRoute, {templateUrl: url.template(\"courses/courseEdit.html\")})\r\n        .when(CoursesRouter.progressRoute, {templateUrl: url.template(\"courses/progress.html\")})\r\n        .when(CoursesRouter.infoRoute, {templateUrl: url.template(\"courses/info.html\")})\r\n        .when(CoursesRouter.detailsRoute, {templateUrl: url.template(\"courses/details.html\"), reloadOnSearch: false})\r\n        .when(CoursesRouter.quizDetailsRoute, {templateUrl: url.template(\"courses/quizDetails.html\")})\r\n        .when(CoursesRouter.updateRoute, {templateUrl: url.template(\"courses/courseEdit.html\")})\r\n        .when(CoursesRouter.indexRoute, {templateUrl: url.template(\"courses/courses.html\")})\r\n        .when(QuizzesRouter.createRoute, {templateUrl: url.template(\"quizzes/edit.html\")})\r\n        .when(QuizzesRouter.detailsRoute, {templateUrl: url.template(\"quizzes/details.html\")})\r\n        .when(QuizzesRouter.updateRoute, {templateUrl: url.template(\"quizzes/edit.html\")})\r\n        .when(QuizzesRouter.passingRoute, {templateUrl: url.template(\"quizzes/quizPassing.html\")})\r\n        .when(QuizzesRouter.indexRoute, {templateUrl: url.template(\"quizzes/quizzes.html\")})\r\n        .otherwise({redirectTo: MainRouter.mainRoute});\r\n\r\n    $httpProvider.interceptors.push(HttpInterceptor.NAME);\r\n}\r\n\r\n// Use this method for third party libraries/services configuration on module loading\r\n// Note only providers can be injected as dependencies here.\r\nfunction thirdPartyConfiguration($provide: ng.auto.IProvideService) {\r\n    $provide.decorator('taOptions', ['taRegisterTool','$rootScope', '$delegate', function (taRegisterTool: any,\r\n                                                                                           $rootScope: ICommonRootScope,\r\n                                                                                           taOptions: any) {\r\n        var callExternalTaToolFunction = function(textAngular, deferred, event, restoreSelection) {\r\n            var eventData: ITextAngularEventData = {\r\n                eventSourceButton: <angular.IAugmentedJQuery>$(textAngular.$element),\r\n                callbackFunction: (html) => {\r\n                    $(textAngular.$editor().displayElements.text[0]).trigger('focus');\r\n                    if (restoreSelection) {\r\n                        restoreSelection();\r\n                    }\r\n                    if (html) {\r\n                        textAngular.$editor().wrapSelection('insertHTML', \"\" + html, true);\r\n                        deferred.resolve();\r\n                    }\r\n                }\r\n            };\r\n            $rootScope.$broadcast(event, eventData);\r\n            return false;\r\n        };\r\n        taRegisterTool(RichTextEditorController.TA_EMBEDDED_MATERIAL_BUTTON, {\r\n            iconclass: \"fa fa-file-video-o\",\r\n            tooltiptext: \"Insert material\",\r\n            action: function(deferred, restoreSelection) {\r\n                return callExternalTaToolFunction(this, deferred, ComponentsEvents.TA_SELECT_EMBEDDED_MATERIAL, restoreSelection);\r\n            }\r\n        });\r\n        taRegisterTool(RichTextEditorController.TA_EMBEDDED_BUNDLE_BUTTON, {\r\n            iconclass: \"fa fa-file-zip-o\",\r\n            tooltiptext: \"Insert attached file\",\r\n            action: function(deferred, restoreSelection){\r\n                return callExternalTaToolFunction(this, deferred, ComponentsEvents.TA_SELECT_EMBEDDED_BUNDLE, restoreSelection);\r\n            }\r\n        });\r\n        taRegisterTool(RichTextEditorController.TA_SANDBOX_BUTTON, {\r\n            iconclass: \"fa fa-file-code-o\",\r\n            tooltiptext: \"Insert sandbox window\",\r\n            action: function(deferred, restoreSelection){\r\n                return callExternalTaToolFunction(this, deferred, ComponentsEvents.TA_SELECT_SANDBOX, restoreSelection);\r\n            }\r\n        });\r\n        taOptions.toolbar = [\r\n            ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'p', 'pre', 'quote'],\r\n            ['bold', 'italics', 'underline', 'strikeThrough', 'ul', 'ol', 'redo', 'undo', 'clear'],\r\n            ['justifyLeft', 'justifyCenter', 'justifyRight', 'justifyFull', 'indent', 'outdent'],\r\n            ['html', 'insertImage', 'insertLink', 'insertVideo',\r\n                RichTextEditorController.TA_EMBEDDED_MATERIAL_BUTTON, RichTextEditorController.TA_EMBEDDED_BUNDLE_BUTTON,\r\n                RichTextEditorController.TA_SANDBOX_BUTTON]\r\n        ];\r\n        return taOptions;\r\n    }]);\r\n    $provide.decorator('taCustomRenderers', ['$delegate', '$compile', '$rootScope', '$timeout', function (taCustomRenderers: Array<any>,\r\n                                                                                $compile: angular.ICompileService,\r\n                                                                                $rootScope: ICommonRootScope,\r\n                                                                                $timeout: angular.ITimeoutService) {\r\n        taCustomRenderers.push({\r\n                selector: VhsEmbeddedMaterialController.TA_ELEMENT_SELECTOR, customAttribute: '',\r\n                renderLogic: function(element) {\r\n                    VhsEmbeddedMaterialController.TA_RENDER_FUNCTION(element, $compile, $rootScope, $timeout);\r\n                }\r\n        });\r\n        taCustomRenderers.push({\r\n                selector: VhsEmbeddedBundleController.TA_ELEMENT_SELECTOR, customAttribute: '',\r\n                renderLogic: function(element) {\r\n                    VhsEmbeddedBundleController.TA_RENDER_FUNCTION(element, $compile, $rootScope, $timeout);\r\n                }\r\n        });\r\n        taCustomRenderers.push({\r\n                selector: VhsSandboxController.TA_ELEMENT_SELECTOR, customAttribute: '',\r\n                renderLogic: function(element) {\r\n                    VhsSandboxController.TA_RENDER_FUNCTION(element, $compile, $rootScope, $timeout);\r\n                }\r\n        });\r\n        taCustomRenderers.push({\r\n                selector: VhsDownloadBundleController.TA_ELEMENT_SELECTOR, customAttribute: '',\r\n                renderLogic: function(element) {\r\n                    VhsDownloadBundleController.TA_RENDER_FUNCTION(element, $compile, $rootScope, $timeout);\r\n                }\r\n        });\r\n        return taCustomRenderers;\r\n    }]);\r\n}\r\n\r\n// Use this method to register work which should be performed when the injector is done loading all modules.\r\nfunction run($log: ng.ILogService, $rootScope: ICommonRootScope, authApi: AuthService, authManager: AuthManager,\r\n             authRedirect: AuthRedirect, localStorage: StorageWrapper, urlService: UrlService) {\r\n    $rootScope.appVersionNumber = buildVersionNumber(\r\n        AppProperties.appVersion,\r\n        AppProperties.svnRevision,\r\n        AppProperties.buildDate);\r\n    $rootScope.url = urlService;\r\n    //var completed = authManager.completeSpnegoExchange();\r\n    //if (completed) {\r\n    //    console.log(\"SPNEGO is completed. Waiting for redirect...\");\r\n    //    return;\r\n    //}\r\n    var completedSso = authManager.completePersonifySsoExchange();\r\n    if (!authManager.isAuthenticated()) {\r\n        //console.log(\"Is not authenticated. Redirect to Log On.\");\r\n        //authRedirect.redirectToLogOn();\r\n        if (authManager.restoreAvailable()) {\r\n            authApi.restartAutoRefresh();\r\n        } else if (!completedSso) {\r\n            console.log(\"Try personify SSO!\");\r\n            authManager.tryPersonifySsoIfAllowed();\r\n        }\r\n    } else {\r\n        //console.log(\"Is authenticated. Start refresh.\");\r\n        var locale = authManager.getToken().locale ? authManager.getToken().locale : AppProperties.currentLocale;\r\n        if (!LogOnController.reloadApplicationForLocaleIfNeeded(locale)) {\r\n            authApi.restartAutoRefresh();\r\n        }\r\n    }\r\n    var VERSION_STORAGE_KEY = \"vhs.application.version.number\";\r\n    //console.log(\"storage version: \" + localStorage.get(VERSION_STORAGE_KEY));\r\n    if (localStorage.contains(VERSION_STORAGE_KEY)\r\n        && localStorage.get(VERSION_STORAGE_KEY) != AppProperties.buildVersion) {\r\n        notifier.warning(\"Application version has been updated since your last visit\");\r\n    }\r\n    localStorage.put(VERSION_STORAGE_KEY, AppProperties.buildVersion);\r\n}\r\n\r\nfunction buildVersionNumber(appVersion: any, svnRevision: any, buildDate: any) {\r\n    var parsed = moment(buildDate, \"YYYYMMDDHHmm\");\r\n    return appVersion + \".\" + svnRevision + \"; \" + parsed.format(\"YYYY-MM-DD HH:mm\");\r\n}","import {AuthService} from \"./AuthService\";\r\nimport {LogOnController} from \"./LogOnController\";\r\nimport {LogOutController} from \"./LogOutController\";\r\nimport {RestorePasswordController} from \"./RestorePasswordController\";\r\nimport {CreateNewPasswordController} from \"./CreateNewPasswordController\";\r\nimport {CheckValidCodeController} from \"./CheckValidCodeController\";\r\n\r\nimport {AuthCoreModule} from \"./../authcore/AuthCoreModule\";\r\nimport {UrlsModule} from \"./../urls/UrlsModule\";\r\nimport {InfrastructureModule} from \"./../infrastructure/InfrastructureModule\";\r\n\r\nexport var AuthModule: angular.IModule = angular\r\n    .module(\"auth\", [\r\n        AuthCoreModule.name,\r\n        UrlsModule.name,\r\n        InfrastructureModule.name\r\n    ])\r\n    .service(AuthService.NAME, AuthService)\r\n    .controller(LogOutController.NAME, LogOutController)\r\n    .controller(LogOnController.NAME, LogOnController)\r\n    .controller(RestorePasswordController.NAME, RestorePasswordController)\r\n    .controller(CreateNewPasswordController.NAME, CreateNewPasswordController)\r\n    .controller(CheckValidCodeController.NAME, CheckValidCodeController);","import {IUserInfo} from \"./../security/IUserInfo\";\r\nimport {AuthManager} from \"./../authcore/AuthManager\";\r\nimport {ITokenInfo} from \"./../authcore/ITokenInfo\";\r\nimport {ILogonProvider} from \"./ILogonProvider\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {IPromise} from \"angular\";\r\n\r\nexport class AuthService {\r\n    public static NAME = \"auth.AuthService\";\r\n\r\n    private restoreSessionPromisesMap: Map<string, IPromise<any>> = new Map<string, IPromise<any>>();\r\n\r\n    private providers: Array<ILogonProvider> = [ //todo: AOPA temp only\r\n        { \"key\" : \"LOCAL\",\r\n          \"name\" : \"Internal accounts\",\r\n          \"type\" : \"INTERNAL\" }\r\n        // { \"key\" : \"LOCAL_OR_PERSONIFY\",\r\n        //        \"name\" : \"Internal accounts or Personify\",\r\n        //        \"type\" : \"INTERNAL\" }\r\n    ];\r\n\r\n    public static $inject = [\r\n        \"$timeout\",\r\n        \"$http\",\r\n        \"$q\",\r\n        AuthManager.NAME,\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $timeout: angular.ITimeoutService,\r\n                private $http: angular.IHttpService,\r\n                private $q: angular.IQService,\r\n                private authManager: AuthManager,\r\n                private url: UrlService) {\r\n    }\r\n\r\n\r\n    public getProviders(): angular.IPromise<Array<ILogonProvider>> {\r\n        if (this.providers) {\r\n            var promise: angular.IDeferred<Array<ILogonProvider>> = this.$q.defer();\r\n            promise.resolve(this.providers);\r\n            return promise.promise;\r\n        }\r\n\r\n        return this.$http.get(this.url.service(\"/api/settings/common/logonproviders\"))\r\n            .then(result => {\r\n                let theResult: Array<ILogonProvider> = <Array<ILogonProvider>> result.data;\r\n                this.providers = theResult;\r\n                return theResult;\r\n            });\r\n    }\r\n\r\n    public getProvidersForLogon(): angular.IPromise<ILogonProvider[]> {\r\n        return this.$q.when(\r\n            [\r\n                // {\r\n                //     \"key\": \"LOCAL_OR_PERSONIFY\",\r\n                //     \"name\": \"Internal accounts or Personify\",\r\n                //     \"type\": \"INTERNAL\"\r\n                // },\r\n                {\r\n                    \"key\": \"LOCAL\",\r\n                    \"name\": \"Internal accounts\",\r\n                    \"type\": \"INTERNAL\"\r\n                }\r\n            ]\r\n        );\r\n    }\r\n\r\n    public getCurrentUser(): angular.IPromise<IUserInfo> {\r\n        if (this.authManager.getCurrentUser()) {\r\n            var promise: angular.IDeferred<IUserInfo> = this.$q.defer();\r\n            promise.resolve(this.authManager.getCurrentUser());\r\n\r\n            return promise.promise;\r\n        }\r\n\r\n        return this.$http.get(this.url.service(\"/api/security/user\"))\r\n            .then(result => {\r\n                this.authManager.logOn(result.data);\r\n                return result.data;\r\n            });\r\n    }\r\n\r\n    public logOn(username: string, password: string): angular.IPromise<IUserInfo> {\r\n        return this.authenticate(\r\n            {\"grant_type\": \"password\", \"username\": username, \"password\": password});\r\n    }\r\n\r\n    public restoreSession(token: string): angular.IPromise<IUserInfo> {\r\n        if (this.restoreSessionPromisesMap.has(token)) {\r\n            return this.restoreSessionPromisesMap.get(token);\r\n        }\r\n        console.log(\"Session restore fired!\");\r\n        this.restoreSessionPromisesMap.set(token, this.authenticate(\r\n            {\"grant_type\": \"refresh_token\", \"refresh_token\": token})\r\n            .finally(() => {\r\n                this.restoreSessionPromisesMap.delete(token);\r\n            }));\r\n        return this.restoreSessionPromisesMap.get(token);\r\n    }\r\n\r\n    private authenticate(params: any): angular.IPromise<IUserInfo> {\r\n        return this.$http({\r\n            method: \"post\",\r\n            url: this.url.service(\"/api/token\"),\r\n            headers: {\"Content-Type\": \"application/x-www-form-urlencoded\"},\r\n            data: params,\r\n            transformRequest: function (data) {\r\n                return $.param(data);\r\n            }\r\n        })\r\n            .then(tokenResult => {\r\n                this.authManager.logOff();\r\n                this.authManager.saveToken({\r\n                    accessToken: tokenResult.data[\"access_token\"],\r\n                    refreshToken: tokenResult.data[\"refresh_token\"],\r\n                    tokenType: tokenResult.data[\"token_type\"],\r\n                    expiresIn: tokenResult.data[\"expires_in\"],\r\n                    issuedAt: tokenResult.data[\"issued_at\"],\r\n                    locale: tokenResult.data[\"locale\"]\r\n                });\r\n                this.startAutoRefresh();\r\n                return this.getCurrentUser();\r\n            });\r\n    }\r\n\r\n    public logOff(): angular.IPromise<any> {\r\n        var refreshToken = this.authManager.getToken() ? this.authManager.getToken().refreshToken : null;\r\n        this.authManager.disableSpnego();\r\n        return this.$http.post(this.url.service(\"/api/security/logOff\"), {refreshToken: refreshToken})\r\n            .finally(() => {\r\n                this.authManager.logOff();\r\n            });\r\n    }\r\n\r\n    public restartAutoRefresh() {\r\n        var token: ITokenInfo = this.authManager.getToken();\r\n\r\n        var expirationDate: moment.Moment = moment.utc(token.issuedAt).add(token.expiresIn, \"s\");\r\n        var now: moment.Moment = moment.utc();\r\n        var timeInterval: number = expirationDate.diff(now, \"s\") - 2 * 60;\r\n        if (timeInterval < 0) {\r\n            timeInterval = 2;\r\n        }\r\n\r\n        this.$timeout(\r\n           () => {\r\n               const currentToken = this.authManager.getToken();\r\n               if (currentToken && currentToken.refreshToken === token.refreshToken) {\r\n                   this.restoreSession(token.refreshToken)\r\n                       .catch(result => {\r\n                           if (result.data.error == \"invalid_request\") {\r\n                               this.authManager.eraseRefreshToken();\r\n                           }\r\n                       })\r\n               }\r\n           },\r\n           timeInterval * 1000);\r\n    }\r\n\r\n    public restorePassword(logonName: string): angular.IPromise<any> {\r\n        return this.$http.post(this.url.base(\"/api/security/restore/password\")\r\n            .service(), {logonName: logonName})\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public createNewPassword(token: string, code: string, password: string): angular.IPromise<any> {\r\n        return this.$http.post(\r\n            this.url.service(\"/api/security/create/new/password\"), {token: token, code: code, password: password});\r\n    }\r\n\r\n    private startAutoRefresh() {\r\n        var token: ITokenInfo = this.authManager.getToken();\r\n        if (token.expiresIn < 4 * 60) {\r\n            return;\r\n        }\r\n        var timeInterval = token.expiresIn - 2 * 60;\r\n        this.$timeout(\r\n            () => this.restoreSession(token.refreshToken),\r\n            timeInterval * 1000);\r\n    }\r\n\r\n    public checkValidCodeFromEmail(code: string): angular.IPromise<any> {\r\n        return this.$http.get(this.url.base(\"/api/security/check/code/:code\")\r\n            .param(\":code\", code)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n}\r\n","import {AuthService} from \"./AuthService\";\r\n\r\nimport {AuthRouter} from \"../urls/AuthRouter\";\r\nimport {MenuHelper} from \"../utils/MenuHelper\";\r\nimport {notifier} from \"../INotifier\";\r\nimport {UrlService} from \"../utils/UrlService\";\r\n\r\nexport class CheckValidCodeController {\r\n    public static NAME = \"auth.CheckValidCodeController\";\r\n\r\n    public code: string = null;\r\n    public disableButton: boolean = false;\r\n    public logonName: string;\r\n    public shortEmail: string = null;\r\n\r\n    public static $inject = [\r\n        \"$routeParams\",\r\n        \"$location\",\r\n        \"$scope\",\r\n        AuthService.NAME,\r\n        AuthRouter.NAME,\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $routeParams: ng.route.IRouteParamsService,\r\n                private $location: angular.ILocationService,\r\n                private $scope: angular.IScope,\r\n                private authService: AuthService,\r\n                private authRouter: AuthRouter,\r\n                private url: UrlService) {\r\n\r\n        MenuHelper.setCurrentMenuItem(\"\");\r\n        this.logonName = this.$location.$logonName;\r\n        if (!this.logonName) {\r\n            this.$location.url(this.authRouter.restorePassword());\r\n        } else {\r\n            this.getShortEmail();\r\n        }\r\n    }\r\n\r\n    public checkValidCodeFromEmail() {\r\n        this.authService.checkValidCodeFromEmail(this.code)\r\n            .then(() => {\r\n                this.$location.url(this.authRouter.createNewPasswordByCode(this.code));\r\n                return;\r\n            }).catch(response => {\r\n            switch (response.data.error) {\r\n                case \"error.password.restore.impossible\": {\r\n                    notifier.error(\"Incorrect code or code expired. Try to restore the password again\");\r\n                    this.code = null;\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public restorePassword() {\r\n        this.$location.url(this.authRouter.restorePassword());\r\n    }\r\n\r\n    public cancel() {\r\n        this.$location.url(this.authRouter.logonUrl());\r\n    }\r\n\r\n    public getShortEmail() {\r\n        if (this.logonName.indexOf(\"@\") > 0) {\r\n            let emailParts = this.logonName.split(\"@\");\r\n            if (emailParts[0].length > 3) {\r\n                this.shortEmail = emailParts[0].charAt(0) + \"...\" + emailParts[0].charAt(emailParts[0].length-1) + \"@\" + emailParts[1];\r\n            } else {\r\n                this.shortEmail = emailParts[0] + \"@\" + emailParts[1];\r\n            }\r\n        } else {\r\n            this.shortEmail = this.logonName;\r\n        }\r\n    }\r\n\r\n    public codeValid() {\r\n        let regexp = /^[0-9]{6}$/g;\r\n        return regexp.test(this.code);\r\n    }\r\n}","import {AuthService} from \"./AuthService\";\r\n\r\nimport {AuthRouter} from \"../urls/AuthRouter\";\r\nimport {MenuHelper} from \"../utils/MenuHelper\";\r\nimport {PageHeader} from \"../utils/PageHeaderHelper\";\r\nimport {notifier} from \"../INotifier\";\r\nimport {UrlService} from \"../utils/UrlService\";\r\n\r\nexport class CreateNewPasswordController {\r\n    public static NAME = \"auth.CreateNewPasswordController\";\r\n\r\n    public password: string = null;\r\n    public confirmPassword: string = null;\r\n\r\n    private token: string = null;\r\n    public code: string = null;\r\n\r\n    public static $inject = [\r\n        \"$routeParams\",\r\n        \"$location\",\r\n        AuthService.NAME,\r\n        AuthRouter.NAME,\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $routeParams: ng.route.IRouteParamsService,\r\n                private $location: angular.ILocationService,\r\n                private authService: AuthService,\r\n                private authRouter: AuthRouter,\r\n                private url: UrlService) {\r\n        this.token = this.$routeParams[AuthRouter.PASSWORD_TOKEN_PARAM_NAME];\r\n        this.code = this.$routeParams[AuthRouter.PASSWORD_CODE_PARAM_NAME];\r\n\r\n        MenuHelper.setCurrentMenuItem(\"\");\r\n        PageHeader.set().header(\"Create New Password\").update();\r\n    }\r\n\r\n    public createNewPassword() {\r\n        this.authService.createNewPassword(this.token, this.code, this.password)\r\n            .then(() => {\r\n                notifier.success(\"Password successfully changed\");\r\n                this.$location.url(this.authRouter.logonUrl());\r\n            }).catch((response) => {\r\n                switch (response.data.error) {\r\n                    case \"error.password.restore.impossible\": {\r\n                        notifier.error(\"Incorrect code or code expired. Try to restore the password again\");\r\n                        this.$location.url(this.authRouter.restorePassword());\r\n                        return;\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    public showPassword() {\r\n        if ($('#passwordField').attr('type') == 'password') {\r\n            $(this).addClass('view');\r\n            $('#passwordField').attr('type', 'text');\r\n            $('#confirmPasswordField').attr('type', 'text');\r\n        } else {\r\n            $(this).removeClass('view');\r\n            $('#passwordField').attr('type', 'password');\r\n            $('#confirmPasswordField').attr('type', 'password');\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public checkHidePassword() {\r\n        return $('#passwordField').attr('type') == 'password';\r\n    }\r\n}","import {AuthService} from \"./AuthService\";\r\nimport {AuthManager} from \"./../authcore/AuthManager\";\r\nimport {AuthRedirect} from \"./../authcore/AuthRedirect\";\r\nimport {AuthRouter} from \"./../urls/AuthRouter\";\r\nimport {AppProperties} from \"./../utils/AppProperties\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {ILogonProvider} from \"./ILogonProvider\";\r\nimport {Storages, StorageWrapper} from \"./../infrastructure/Storage\";\r\nimport {LogonProviderEnum} from \"./../security/LogonProviderEnum\";\r\nimport {UsersRouter} from \"./../urls/UsersRouter\";\r\nimport {UrlService} from \"../utils/UrlService\";\r\nimport {InfoRouter} from \"./../urls/InfoRouter\";\r\nimport {RenewalType} from \"./RenewalType\";\r\nimport IRouteService = angular.route.IRouteService;\r\n\r\nexport class LogOnController {\r\n    public static NAME = \"auth.LogOnController\";\r\n\r\n    private LAST_USED_PROVIDER_STORAGE_KEY = \"vhs.application.logon.last.used.provider\";\r\n\r\n    public username: string;\r\n    public password: string;\r\n    public error: string;\r\n    public inProgress: boolean;\r\n    public restore: boolean;\r\n    public accessDenied: boolean;\r\n    public tokenExpired: boolean;\r\n    public logonRequired: boolean;\r\n    public renewalType: string;\r\n\r\n    public providerKey: string;\r\n    public providers: Array<ILogonProvider>;\r\n    public internalProviders: Array<ILogonProvider>;\r\n    public localProviderAvailable: boolean;\r\n    public activeDirectoryLocalProviderAvailable: boolean;\r\n    public activeDirectorySsoProviderAvailable: boolean;\r\n    public noSpnego: boolean;\r\n\r\n    public static $inject = [\r\n        \"$timeout\",\r\n        \"$log\",\r\n        \"$route\",\r\n        \"$sce\",\r\n        UrlService.NAME,\r\n        AuthRedirect.NAME,\r\n        AuthService.NAME,\r\n        AuthManager.NAME,\r\n        \"$location\",\r\n        Storages.LOCAL_NAME,\r\n        UsersRouter.NAME,\r\n        AuthRouter.NAME,\r\n        InfoRouter.NAME\r\n    ];\r\n\r\n    constructor(private $timeout: angular.ITimeoutService,\r\n                private $log: angular.ILogService,\r\n                private $route: IRouteService,\r\n                private $sce: angular.ISCEService,\r\n                private url: UrlService,\r\n                private authRedirect: AuthRedirect,\r\n                private authApi: AuthService,\r\n                private authManager: AuthManager,\r\n                private $location: angular.ILocationService,\r\n                private localStorage: StorageWrapper,\r\n                public usersRouter: UsersRouter,\r\n                public authRouter: AuthRouter,\r\n                public infoRouter: InfoRouter) {\r\n        this.inProgress = false;\r\n        this.restore = false;\r\n        this.error = null;\r\n        this.renewalType = $location.search()[AuthRouter.RENEWAL_TYPE_PARAM_NAME];\r\n        if (!RenewalType[this.renewalType]) {\r\n            this.renewalType = RenewalType[RenewalType.NEW];\r\n            this.$location.search(AuthRouter.RENEWAL_TYPE_PARAM_NAME, this.renewalType);\r\n        }\r\n        this.accessDenied = $location.search()[AuthRouter.ACCESS_DENIED_PARAM_NAME];\r\n        this.tokenExpired = $location.search()[AuthRouter.TOKEN_EXPIRED_PARAM_NAME];\r\n        this.logonRequired = $location.search()[AuthRouter.LOGON_REQUIRED_PARAM_NAME];\r\n\r\n        this.noSpnego = this.localStorage.contains(\"vhs.application.no.spnego\");\r\n        var spnegoLoginFailed = this.localStorage.contains(\"vhs.application.spnego.login.failed\");\r\n        var spnegoLoginNotSupported = this.localStorage.contains(\"vhs.application.spnego.login.not.supported\");\r\n        if (spnegoLoginNotSupported) {\r\n            this.error = \"Automatic Windows login is not supported\";\r\n            this.localStorage.remove(\"vhs.application.spnego.login.not.supported\");\r\n        } else if (spnegoLoginFailed) {\r\n            this.error = \"Automatic Windows login failed\";\r\n            this.localStorage.remove(\"vhs.application.spnego.login.failed\");\r\n        }\r\n\r\n\r\n        MenuHelper.setCurrentMenuItem(\"\");\r\n        PageHeader.set().header(\"BasicMed Online Course Login\").update();\r\n        if (this.authManager.restoreAvailable()) {\r\n            this.restoreSession();\r\n        } else {\r\n            this.loadProviders();\r\n        }\r\n    }\r\n\r\n    private loadProviders() {\r\n        this.authApi.getProvidersForLogon()\r\n            .then(result => this.initProviders(result));\r\n    }\r\n\r\n    private initProviders(providers: Array<ILogonProvider>) {\r\n        this.providers = providers;\r\n        this.internalProviders = [];\r\n\r\n        this.localProviderAvailable = false;\r\n        this.activeDirectoryLocalProviderAvailable = false;\r\n        this.activeDirectorySsoProviderAvailable = false;\r\n\r\n        angular.forEach(this.providers, provider => {\r\n            if (provider.key === LogonProviderEnum[LogonProviderEnum.LOCAL]) {\r\n                this.localProviderAvailable = true;\r\n                this.internalProviders.push({key: provider.key, name: \"Internal users\"});\r\n            } else if (provider.key === LogonProviderEnum[LogonProviderEnum.AD_LOCAL]) {\r\n                this.activeDirectoryLocalProviderAvailable = true;\r\n                this.internalProviders.push({key: provider.key, name: \"ActiveDirectory users\"});\r\n            } else if (provider.key === LogonProviderEnum[LogonProviderEnum.AD_SSO]) {\r\n                this.activeDirectorySsoProviderAvailable = true;\r\n            } else if (provider.key === LogonProviderEnum[LogonProviderEnum.PERSONIFY_USERPASSWORD] ||\r\n                        provider.key === LogonProviderEnum[LogonProviderEnum.LOCAL_OR_PERSONIFY]) {\r\n                this.localProviderAvailable = true;\r\n                this.internalProviders.push({key: provider.key, name: provider.name})\r\n            }\r\n        });\r\n\r\n        if (this.internalProviders.length === 0) {\r\n            this.providerKey = null;\r\n        } if (this.internalProviders.length > 0) {\r\n            var previousProvider: string = this.localStorage.get<string>(this.LAST_USED_PROVIDER_STORAGE_KEY);\r\n            var previousProviderExists = false;\r\n            if (previousProvider) {\r\n                angular.forEach(this.internalProviders, provider => {\r\n                    if (provider.key == previousProvider) {\r\n                        previousProviderExists = true;\r\n                    }\r\n                });\r\n            }\r\n            if (previousProvider && previousProviderExists) {\r\n                this.providerKey = previousProvider;\r\n            } else {\r\n                this.providerKey = this.internalProviders[0].key;\r\n            }\r\n        }\r\n\r\n        this.tryToNegotiate();\r\n    }\r\n\r\n    public tryToNegotiate() {\r\n        if (this.activeDirectorySsoProviderAvailable && !this.noSpnego) {\r\n            console.log(\"Try to SPNEGO\");\r\n            this.restore = true;\r\n            this.authRedirect.forwardToSpnego();\r\n        }\r\n    }\r\n\r\n    public forceNegotiation() {\r\n        if (this.activeDirectorySsoProviderAvailable) {\r\n            this.authManager.enableSpnego();\r\n            console.log(\"Try to SPNEGO (forced)\");\r\n            this.restore = true;\r\n            this.authRedirect.forwardToSpnego();\r\n        }\r\n    }\r\n\r\n    public logOn(): void {\r\n        if (this.authManager.isPersonifyOrLocalEnabled()) {\r\n            this.providerKey = LogonProviderEnum[LogonProviderEnum.LOCAL_OR_PERSONIFY];\r\n        } else {\r\n            this.providerKey = LogonProviderEnum[LogonProviderEnum.LOCAL];\r\n        }\r\n        this.error = \"\";\r\n        this.inProgress = true;\r\n        this.localStorage.put(this.LAST_USED_PROVIDER_STORAGE_KEY, this.providerKey);\r\n        this.authApi.logOn(this.providerKey + \":\" + this.username, this.password).then(user => {\r\n            //todo: only 1 locale for AOPA\r\n            var locale = user.locale ? user.locale : AppProperties.currentLocale;\r\n            if (!LogOnController.reloadApplicationForLocaleIfNeeded(locale)) {\r\n                this.authManager.enableSpnego();\r\n                this.authRedirect.returnAfterLogOn(false /*native*/);\r\n            }\r\n            this.inProgress = false;\r\n        })\r\n            .catch(response => {\r\n                this.inProgress = false;\r\n                this.error = response.data[\"error\"] === \"invalid_user\"\r\n                    ? this.$sce.getTrustedHtml(\"Invalid Email or Password.<br/> Click <a href='{0}'>HERE</a> to reset your password.<br/><i>Reminder: The BasicMed Course is not linked to your AOPA account. You will need to create a separate account for the BasicMed Course.</i>\".replace(\"{0}\",\r\n                        this.buildRestorePasswordLinkWithUserNameParam()\r\n                    ))\r\n                    : \"Query has failed: please contact your system administrator or help desk\"\r\n            });\r\n    }\r\n\r\n    public restorePassword() {\r\n        this.$location.$logonName = this.username;\r\n        this.$location.url(this.authRouter.restorePassword());\r\n    }\r\n\r\n    private buildRestorePasswordLinkWithUserNameParam(): string {\r\n        let url = this.authRouter.restorePassword();\r\n        if (url.indexOf(\"?\") === -1) {\r\n            url += \"?\";\r\n        }\r\n        return \"#\" + url + \"&\" + AuthRouter.LOGON_PARAM_NAME + \"=\" + this.username;\r\n    }\r\n\r\n    private restoreSession() {\r\n        var refreshToken = this.authManager.getToken().refreshToken;\r\n        this.restore = true;\r\n        this.authApi.restoreSession(refreshToken).then(user => {\r\n            // var locale = user.locale ? user.locale : AppProperties.currentLocale;\r\n            // if (!LogOnController.reloadApplicationForLocaleIfNeeded(locale)) {\r\n                this.authRedirect.returnAfterLogOn(false /*native*/);\r\n            // }\r\n            // this should prevent stuck if redirect was not performed (i.e. redirect was to logon url)\r\n            this.restore = false;\r\n            this.loadProviders();\r\n        })\r\n            .catch(response => {\r\n                this.restore = false;\r\n                this.authManager.logOff();\r\n                // TODO: after logging off\r\n                this.loadProviders();\r\n            });\r\n    }\r\n\r\n    public changeRenewalType(renewalsType: RenewalType) {\r\n        if(RenewalType[renewalsType] != undefined) {\r\n            this.renewalType = renewalsType.toString();\r\n            this.$location.search(AuthRouter.RENEWAL_TYPE_PARAM_NAME, this.renewalType);\r\n        }\r\n    }\r\n\r\n    public static reloadApplicationForLocaleIfNeeded(userLocale: string): boolean {\r\n        //if (AppProperties.currentLocale != userLocale) {\r\n        //    var LOCALE_STORAGE_KEY = \"vhs.application.current.locale\";\r\n        //    localStorage.setItem(LOCALE_STORAGE_KEY, userLocale);\r\n        //    numeral.language(userLocale.substr(0, 2)); // e.g. 'en' or 'ru'\r\n        //    window.location.reload(false);\r\n        //    return true;\r\n        //} else {\r\n            return false;\r\n        //}\r\n    }\r\n}\r\n","import {AuthService} from \"./AuthService\";\r\nimport {AuthRouter} from \"./../urls/AuthRouter\";\r\nimport {notifier} from \"../INotifier\";\r\nimport {MainRouter} from \"./../urls/MainRouter\";\r\n\r\nexport class LogOutController {\r\n    public static NAME = \"auth.LogOutController\";\r\n\r\n    public static $inject = [\r\n        AuthService.NAME,\r\n        MainRouter.NAME,\r\n        AuthRouter.NAME,\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor(private authApi: AuthService,\r\n                private mainRouter: MainRouter,\r\n                private authRouter: AuthRouter,\r\n                private $location: angular.ILocationService) {\r\n        this.authApi.logOff()\r\n            .then(() => {\r\n                notifier.success(\"Logged Out\");\r\n                //this.$location.url(this.mainRouter.mainUrl());\r\n                this.$location.url(this.authRouter.logonUrl());\r\n            });\r\n    }\r\n}\r\n","export enum RenewalType {\r\n    NEW,\r\n    MONTH24,\r\n    MONTH48\r\n}","import {AuthService} from \"./AuthService\";\r\n\r\nimport {AuthRouter} from \"../urls/AuthRouter\";\r\nimport {MenuHelper} from \"../utils/MenuHelper\";\r\nimport {PageHeader} from \"../utils/PageHeaderHelper\";\r\nimport {MainRouter} from \"../urls/MainRouter\";\r\nimport {notifier} from \"../INotifier\";\r\nimport {UrlService} from \"../utils/UrlService\";\r\n\r\nexport class RestorePasswordController {\r\n    public static NAME = \"auth.RestorePasswordController\";\r\n\r\n    public logonName: string;\r\n    public hasError: boolean = false;\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        \"$scope\",\r\n        AuthService.NAME,\r\n        AuthRouter.NAME,\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                private $scope: angular.IScope,\r\n                private authService: AuthService,\r\n                private authRouter: AuthRouter,\r\n                private url: UrlService) {\r\n        this.logonName = this.$location.$logonName;\r\n\r\n        MenuHelper.setCurrentMenuItem(\"\");\r\n        PageHeader.set().header(\"Restore Password\").update();\r\n    }\r\n\r\n    public restorePassword() {\r\n        this.hasError = false;\r\n        this.authService.restorePassword(this.logonName).then(result => {\r\n            if (result.error === \"error.password.restore.impossible\") {\r\n                this.hasError = true;\r\n                const popup: any = $(\"#restore_link_result_popup\");\r\n                popup.showPopup();\r\n            } else  {\r\n                this.$location.$logonName = this.logonName;\r\n                this.$location.url(this.authRouter.checkValidCode());\r\n            }\r\n        }).catch((response) => {\r\n            switch (response.data.error) {\r\n                case \"error.password.restore.impossible\": {\r\n                    notifier.error(\"Incorrect code or code expired. Try to restore the password again\");\r\n                    return;\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    public cancel() {\r\n        this.$location.url(this.authRouter.logonUrl());\r\n    }\r\n\r\n    public onClosePopup() {\r\n        const popup: any = $('#restore_link_result_popup');\r\n        popup.hidePopup();\r\n        if (!this.hasError) {\r\n            this.cancel();\r\n        }\r\n    }\r\n}","import {TokenStorage} from \"./TokenStorage\";\r\nimport {AuthRedirect} from \"./AuthRedirect\";\r\nimport {AuthManager} from \"./AuthManager\";\r\n\r\nimport {UrlsModule} from \"./../urls/UrlsModule\";\r\nimport {InfrastructureModule} from \"./../infrastructure/InfrastructureModule\";\r\n\r\nexport var AuthCoreModule: angular.IModule = angular\r\n    .module(\"authcore\", [\r\n        UrlsModule.name,\r\n        InfrastructureModule.name\r\n    ])\r\n    .service(TokenStorage.NAME, TokenStorage)\r\n    .service(AuthRedirect.NAME, AuthRedirect)\r\n    .service(AuthManager.NAME, AuthManager);","import {ITokenInfo} from \"./ITokenInfo\";\r\nimport {TokenStorage} from \"./TokenStorage\";\r\nimport {AuthRedirect} from \"./AuthRedirect\";\r\nimport {StorageWrapper, Storages} from \"./../infrastructure/Storage\";\r\nimport {IUserInfo} from \"./../security/IUserInfo\";\r\nimport {Event} from \"./Event\";\r\nimport {LogonProviderEnum} from \"./../security/LogonProviderEnum\";\r\nimport {AppProperties} from \"../utils/AppProperties\";\r\n\r\nexport class AuthManager {\r\n    public static NAME = \"authcore.AuthManager\";\r\n    public static GUEST_ID = 2;\r\n\r\n    private userInfo: IUserInfo;\r\n\r\n    public static $inject = [\r\n        \"$rootScope\",\r\n        \"$location\",\r\n        AuthRedirect.NAME,\r\n        Storages.LOCAL_NAME,\r\n        TokenStorage.NAME\r\n    ];\r\n\r\n    constructor(private $rootScope: angular.IRootScopeService,\r\n                private $location: ng.ILocationService,\r\n                private authRedirect: AuthRedirect,\r\n                private localStorage: StorageWrapper,\r\n                private tokenStorage: TokenStorage) {\r\n        this.userInfo = null;\r\n    }\r\n\r\n    public isAuthenticated(): boolean {\r\n        var token = this.tokenStorage.get();\r\n        return token != null\r\n            && token.accessToken\r\n            && token.issuedAt\r\n            && moment.utc(token.issuedAt).add(token.expiresIn, \"s\").isAfter(moment.utc());\r\n    }\r\n\r\n    public hasToken(): boolean {\r\n        var token = this.tokenStorage.get();\r\n        return token != null\r\n            && token.accessToken != null\r\n            && token.accessToken != \"\";\r\n    }\r\n\r\n    public restoreAvailable(): boolean {\r\n        var token = this.tokenStorage.get();\r\n        return token != null\r\n            && token.refreshToken != null\r\n            && token.refreshToken != \"\";\r\n    }\r\n\r\n    public getCurrentUser(): IUserInfo {\r\n        return this.userInfo;\r\n    }\r\n\r\n    public getToken(): ITokenInfo {\r\n        return this.tokenStorage.get();\r\n    }\r\n\r\n    public saveToken(token: ITokenInfo) {\r\n        if (token && token.issuedAt) {\r\n            if (moment.utc(token.issuedAt).add(1, \"hours\") < moment.utc()) {\r\n                // incorrect user local time! save local time as issue date\r\n                token.issuedAt = moment.utc().subtract(2, \"minutes\").format();\r\n            }\r\n        }\r\n        this.tokenStorage.put(token);\r\n    }\r\n\r\n    public eraseToken() {\r\n        this.userInfo = null;\r\n        var token = this.tokenStorage.get();\r\n        if (token != null) {\r\n            token.accessToken = null;\r\n            this.tokenStorage.put(token);\r\n        }\r\n    }\r\n\r\n    public eraseRefreshToken() {\r\n        var token = this.tokenStorage.get();\r\n        if (token != null) {\r\n            token.refreshToken = null;\r\n            this.tokenStorage.put(token);\r\n        }\r\n    }\r\n\r\n    public logOn(user: IUserInfo) {\r\n        this.userInfo = user;\r\n        if (this.userInfo.id != AuthManager.GUEST_ID) {\r\n            this.$rootScope.$broadcast(Event.LOGGED_ON);\r\n        }\r\n    }\r\n\r\n    public logOff() {\r\n        this.tokenStorage.remove();\r\n        let userId: number = this.userInfo ? this.userInfo.id : null;\r\n        this.userInfo = null;\r\n        if (userId != null && userId != AuthManager.GUEST_ID) {\r\n            this.$rootScope.$broadcast(Event.LOGGED_OFF);\r\n        }\r\n    }\r\n\r\n    public completeSpnegoExchange(): boolean {\r\n        var tokenInfo = AuthManager.getUrlVars();\r\n        if (LogonProviderEnum[LogonProviderEnum.AD_SSO] !== tokenInfo[\"ssoProvider\"]) {\r\n            return false;\r\n        }\r\n        if (tokenInfo[\"accessDenied\"]) {\r\n            console.log(\"ACCESS DENIED\");\r\n            this.disableSpnego();\r\n            this.localStorage.put(\"vhs.application.spnego.login.failed\", true);\r\n            this.authRedirect.forwardToLogOn(true /*native*/);\r\n            return true;\r\n        }\r\n        if (!tokenInfo[\"token\"]) {\r\n            return false;\r\n        }\r\n\r\n        this.saveToken({\r\n            accessToken: tokenInfo[\"token\"],\r\n            tokenType: tokenInfo[\"tokenType\"],\r\n            refreshToken: tokenInfo[\"refreshToken\"],\r\n            expiresIn: tokenInfo[\"lifetimeSeconds\"],\r\n            issuedAt: tokenInfo[\"issuedAt\"],\r\n            locale: tokenInfo[\"locale\"]  //todo: check this var in token info\r\n        });\r\n        this.authRedirect.returnAfterLogOn(true /*native*/);\r\n        return true;\r\n    }\r\n\r\n    public tryPersonifySsoIfAllowed(): boolean {\r\n        if (!this.isPersonifySsoEnabled()) {\r\n            return false;\r\n        }\r\n        this.authRedirect.forwardToStartPersonifySSO();\r\n        return true;\r\n    }\r\n\r\n    public completePersonifySsoExchange(): boolean {\r\n        if (!this.isPersonifySsoEnabled()) {\r\n            return false;\r\n        }\r\n        var tokenInfo = AuthManager.getUrlVars();\r\n        if (LogonProviderEnum[LogonProviderEnum.PERSONIFY_SSO] !== tokenInfo[\"ssoProvider\"]) {\r\n            return false;\r\n        }\r\n        if (tokenInfo[\"accessDenied\"]) {\r\n            console.log(\"ACCESS DENIED\");\r\n            this.localStorage.put(\"vhs.application.sso.login.failed\", true);\r\n            this.clearTokenInfoFromUrl();\r\n            this.authRedirect.forwardToLogOn(false /*native*/);\r\n            return true;\r\n        }\r\n        if (tokenInfo[\"ssoDisabled\"]) {\r\n            this.clearTokenInfoFromUrl();\r\n            this.authRedirect.returnAfterLogOn(false /*native*/);\r\n            return true;\r\n        }\r\n        if (!tokenInfo[\"token\"]) {\r\n            return false;\r\n        }\r\n\r\n        this.saveToken({\r\n            accessToken: tokenInfo[\"token\"],\r\n            tokenType: tokenInfo[\"tokenType\"],\r\n            refreshToken: tokenInfo[\"refreshToken\"],\r\n            expiresIn: tokenInfo[\"lifetimeSeconds\"],\r\n            issuedAt: tokenInfo[\"issuedAt\"],\r\n            locale: tokenInfo[\"locale\"]\r\n        });\r\n        this.clearTokenInfoFromUrl();\r\n        this.authRedirect.returnAfterLogOn(false /*native*/);\r\n        return true;\r\n    }\r\n\r\n    public enableSpnego(): void {\r\n        this.localStorage.remove(\"vhs.application.no.spnego\");\r\n    }\r\n\r\n    public disableSpnego(): void {\r\n        this.localStorage.put(\"vhs.application.no.spnego\", true);\r\n    }\r\n\r\n    public isPersonifySsoEnabled() {\r\n        return AppProperties.authProvider.indexOf(LogonProviderEnum[LogonProviderEnum.PERSONIFY_SSO]) != -1;\r\n    }\r\n\r\n    public isPersonifyOrLocalEnabled() {\r\n        return AppProperties.authProvider.indexOf(LogonProviderEnum[LogonProviderEnum.LOCAL_OR_PERSONIFY]) != -1;\r\n    }\r\n\r\n    private static getUrlVars() {\r\n        var vars = {},\r\n            hash,\r\n            hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');\r\n\r\n        for(var i = 0; i < hashes.length; i++) {\r\n            hash = hashes[i].split('=');\r\n            vars[hash[0]] = hash[1];\r\n        }\r\n        return vars;\r\n    }\r\n\r\n    private clearTokenInfoFromUrl() {\r\n        this.$location.search(\"accessDenied\", null);\r\n        this.$location.search(\"ssoDisabled\", null);\r\n        this.$location.search(\"token\", null);\r\n        this.$location.search(\"tokenType\", null);\r\n        this.$location.search(\"refreshToken\", null);\r\n        this.$location.search(\"lifetimeSeconds\", null);\r\n        this.$location.search(\"issuedAt\", null);\r\n        this.$location.search(\"locale\", null);\r\n        this.$location.url(this.$location.path());\r\n    }\r\n}","import {RedirectReason} from \"./RedirectReason\";\r\n\r\nimport {StorageWrapper, Storages} from \"./../infrastructure/Storage\";\r\nimport {AuthRouter} from \"./../urls/AuthRouter\";\r\nimport {MainRouter} from \"./../urls/MainRouter\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {LocationUtils} from \"./../utils/LocationUtils\";\r\n\r\nexport class AuthRedirect {\r\n    public static NAME = \"authcore.AuthRedirect\";\r\n\r\n    private static KEY = \"auth-redirect\";\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        \"$window\",\r\n        Storages.SESSION_NAME,\r\n        AuthRouter.NAME,\r\n        MainRouter.NAME,\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                private $window: angular.IWindowService,\r\n                private sessionStorage: StorageWrapper,\r\n                private authRouter: AuthRouter,\r\n                private mainRouter: MainRouter,\r\n                private url: UrlService) {\r\n        // this.clearRedirection();\r\n    }\r\n\r\n    public redirectToLogOn(reason?: RedirectReason) {\r\n        console.log(\"Redirecting to Log On...\");\r\n        this.storeUrlBeforeAuthRedirect();\r\n        this.forwardToLogOn(false /*native*/, reason);\r\n    }\r\n\r\n    private storeUrlBeforeAuthRedirect() {\r\n        var currentUrl = this.$location.url();\r\n        if (!this.sessionStorage.contains(AuthRedirect.KEY) && currentUrl !== this.authRouter.logonUrl()) {\r\n            console.log(\"Storing URL: \" + currentUrl);\r\n            this.sessionStorage.put(AuthRedirect.KEY, currentUrl);\r\n        }\r\n    }\r\n\r\n    public forwardToLogOn(native: boolean, reason?: RedirectReason) {\r\n        console.log(\"Forwarding to Log On...\");\r\n        if (!native) {\r\n            let isFullScreen: boolean = LocationUtils.isFullScreen(this.$location);\r\n            switch (reason) {\r\n                case RedirectReason.ACCESS_DENIED:\r\n                    this.$location.url(this.authRouter.logonUrl()).search(AuthRouter.ACCESS_DENIED_PARAM_NAME, true); break;\r\n                case RedirectReason.TOKEN_EXPIRED:\r\n                    this.$location.url(this.authRouter.logonUrl()).search(AuthRouter.TOKEN_EXPIRED_PARAM_NAME, true); break;\r\n                case RedirectReason.LOGON_REQUIRED:\r\n                    this.$location.url(this.authRouter.logonUrl()).search(AuthRouter.LOGON_REQUIRED_PARAM_NAME, true); break;\r\n                default:\r\n                    this.$location.url(this.authRouter.logonUrl());\r\n            }\r\n        } else {\r\n            var baseUrl = this.$window.location.href.split(\"?\")[0],\r\n                url = baseUrl + \"#\" + this.authRouter.logonUrl();\r\n            console.log(\"URL: \" + url);\r\n            this.$window.location.replace(url);\r\n        }\r\n    }\r\n\r\n    public forwardToSpnego() {\r\n        console.log(\"Redirecting to SPNEGO...\");\r\n        this.$window.location.href = this.url.service(\"/api/spnego/exchange\");\r\n    }\r\n\r\n    public forwardToStartPersonifySSO() {\r\n        console.log(\"Redirecting to PersonifySSO...\");\r\n        this.storeUrlBeforeAuthRedirect();\r\n        this.$window.location.href = this.url.service(\"/api/sso/start?ssoProvider=PERSONIFY_SSO\");\r\n    }\r\n\r\n\r\n    public forwardToAccessDenied() {\r\n        console.log(\"Redirecting to Access Denied...\");\r\n        this.$location.url(this.authRouter.accessDeniedUrl());\r\n    }\r\n\r\n    public returnAfterLogOn(native: boolean) {\r\n        console.log(\"Returning after Log On...\");\r\n        var redirect = this.sessionStorage.get<string>(AuthRedirect.KEY);\r\n        this.clearRedirection();\r\n        redirect = redirect ? redirect : \"/\";\r\n        if (!native) {\r\n            console.log(\"$location.path('\" + redirect + \"')\");\r\n            this.$location.url(redirect ? redirect : this.mainRouter.mainUrl());\r\n        } else {\r\n            var baseUrl = this.$window.location.href.split(\"?\")[0],\r\n                url = baseUrl + \"#\" + redirect;\r\n            console.log(\"$window.location.replace('\" + url + \"')\");\r\n            this.$window.location.replace(url);\r\n        }\r\n    }\r\n\r\n    public clearRedirection(): void {\r\n        this.sessionStorage.remove(AuthRedirect.KEY);\r\n    }\r\n}\r\n","export class Event {\r\n    public static LOGGED_ON: string = \"auth:loggedOn\";\r\n    public static LOGGED_OFF: string = \"auth:loggedOff\";\r\n}","export enum RedirectReason {\r\n    ACCESS_DENIED,\r\n    TOKEN_EXPIRED,\r\n    LOGON_REQUIRED\r\n}","import {StorageWrapper, Storages} from \"./../infrastructure/Storage\";\r\nimport {ITokenInfo} from \"./ITokenInfo\";\r\n\r\nexport class TokenStorage {\r\n    public static NAME = \"authcore.TokenStorage\";\r\n\r\n    private static TOKEN_KEY = \"access-token\";\r\n\r\n    private tokenInfo: ITokenInfo;\r\n\r\n    public static $inject = [\r\n        Storages.LOCAL_NAME\r\n    ];\r\n\r\n    constructor(private storage: StorageWrapper) {\r\n        this.tokenInfo = storage.get<ITokenInfo>(TokenStorage.TOKEN_KEY);\r\n    }\r\n\r\n    public get(): ITokenInfo {\r\n        return this.tokenInfo;\r\n    }\r\n\r\n    public put(token: ITokenInfo) {\r\n        this.tokenInfo = token;\r\n        this.storage.put(TokenStorage.TOKEN_KEY, token);\r\n    }\r\n\r\n    public remove() {\r\n        this.tokenInfo = null;\r\n        this.storage.remove(TokenStorage.TOKEN_KEY);\r\n    }\r\n}\r\n","import {StudentController} from \"./StudentController\";\r\nimport {TeacherController} from \"./TeacherController\";\r\n\r\nimport {SecurityModule} from \"./../security/SecurityModule\";\r\n\r\nexport var BroadcastsModule: angular.IModule = angular\r\n    .module(\"broadcasts\", [\r\n        SecurityModule.name\r\n    ])\r\n    .controller(StudentController.NAME, StudentController)\r\n    .controller(TeacherController.NAME, TeacherController);","import {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\n\r\nexport class StudentController {\r\n    public static NAME = \"broadcasts.StudentController\";\r\n\r\n    public isHandUp: boolean;\r\n    public broadcastMode: string;\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        SecurityService.NAME\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                private securityService: SecurityService) {\r\n        this.securityService.demandAuthentication()\r\n            .demandSystemPermissions(systemPermissions => systemPermissions.participateBroadcasts);\r\n\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.EDUCATION_STUDENT_BROADCASTS_MENU_KEY);\r\n        PageHeader.set().header(\"Webcasts\").update();\r\n\r\n        this.broadcastMode = \"video\";\r\n    }\r\n\r\n    public handUp() {\r\n        this.isHandUp = !this.isHandUp;\r\n    }\r\n\r\n    public setBroadcastMode(mode: string) {\r\n        this.broadcastMode = mode;\r\n    }\r\n}\r\n","import {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\n\r\nexport class TeacherController {\r\n    public static NAME = \"broadcasts.TeacherController\";\r\n\r\n    public broadcastMode: string;\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        SecurityService.NAME\r\n    ];\r\n\r\n    constructor(private $location: ng.ILocationService,\r\n                private securityService: SecurityService) {\r\n        this.securityService.demandAuthentication()\r\n            .demandSystemPermissions(systemPermissions => systemPermissions.organizationBroadcasts);\r\n\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.EDUCATION_TEACHER_BROADCASTS_MENU_KEY);\r\n        PageHeader.set().header(\"Webcasts\").update();\r\n\r\n        this.broadcastMode = \"video\";\r\n    }\r\n\r\n    public setBroadcastMode(mode: string) {\r\n        this.broadcastMode = mode;\r\n    }\r\n}\r\n","import {UrlService} from \"./../utils/UrlService\";\r\nimport IPromise = angular.IPromise;\r\nimport {IBundle} from \"./models/IBundle\";\r\nimport {IBundleFile} from \"./models/IBundleFile\";\r\nimport {BundleFileTypeEnum} from \"./models/BundleFileType\";\r\nimport {IBundleInput} from \"./models/IBundleInput\";\r\n\r\nexport class BundleService {\r\n    public static NAME = \"bundle.BundleService\";\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$q\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private $q: angular.IQService,\r\n                private url: UrlService) {\r\n    }\r\n\r\n    public getBundle(bundleId: number): angular.IPromise<IBundle> {\r\n        return this.$http.get(this.url.base(\"/api/bundles/:bundleId\")\r\n            .param(\":bundleId\", bundleId)\r\n            .service())\r\n            .then(result => {\r\n                var bundle: IBundle = result.data;\r\n                this.createFilesMap(bundle);\r\n                return result.data;\r\n            });\r\n    }\r\n\r\n    public updateBundleFromFiles(bundleInput: IBundleInput): angular.IPromise<any> {\r\n        return this.$http.put(this.url.base(\"/api/bundles/files\")\r\n            .service(), bundleInput)\r\n            .then(result => {\r\n                var bundle: IBundle = result.data[\"bundle\"];\r\n                this.createFilesMap(bundle);\r\n                return result.data;\r\n            });\r\n    }\r\n\r\n    private createFilesMap(bundle: IBundle): void {\r\n        //temp version\r\n        bundle.filesMap = new Map<string, Array<IBundleFile>>();\r\n        bundle.files.forEach((file: IBundleFile) => {\r\n            //console.log('bundle file url ' + file.url);\r\n            //file.url = file.url.replace(\"vhs-aopa-static-1-client\", \"vhs-aopa-content-1-main\");\r\n            //file.url = file.url.replace(\"vhs-aopa-static-1-client.azureedge.net\", \"vhsaopacontentblob1.blob.core.windows.net\");\r\n            //console.log('bundle file url replaced: ' + file.url);\r\n            bundle.filesMap.set(file.key, file);\r\n        });\r\n    }\r\n}","import {BundleService} from \"./BundleService\";\r\n\r\nimport {UrlsModule} from \"./../urls/UrlsModule\";\r\n\r\nexport var BundlesModule: angular.IModule = angular\r\n    .module(\"bundles\", [\r\n        UrlsModule.name\r\n    ])\r\n    .service(BundleService.NAME, BundleService);","export enum BundleFileTypeEnum {\r\n    JS = 1,\r\n    CSS = 2,\r\n    IMAGE = 3,\r\n    HTML = 4\r\n}\r\n\r\nexport var BUNDLE_FILE_TYPE_ENUM_VALUES: Array<BundleFileTypeEnum> = [\r\n    BundleFileTypeEnum.JS,\r\n    BundleFileTypeEnum.CSS,\r\n    BundleFileTypeEnum.IMAGE,\r\n    BundleFileTypeEnum.HTML\r\n];","import {CommonNavigation} from \"../common/CommonNavigation\";\r\n\r\nexport var CommonModule: angular.IModule = angular\r\n    .module(\"common\", [])\r\n    .service(CommonNavigation.NAME, CommonNavigation);\r\n","import {CommonRouter} from \"./../urls/CommonRouter\";\r\nimport {notifier} from \"./../INotifier\";\r\n\r\nexport class CommonNavigation {\r\n    public static NAME = \"common.CommonNavigation\";\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        \"$rootScope\",\r\n        \"$timeout\",\r\n        CommonRouter.NAME\r\n    ];\r\n\r\n    private preventNavigationFromUrl: string; // window.location.href is stored here when needed\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                private $rootScope: angular.IRootScopeService,\r\n                private $timeout: angular.ITimeoutService,\r\n                private commonRouter: CommonRouter) {\r\n        $rootScope.$on('$locationChangeStart', (event: angular.IAngularEvent, newUrl: string, oldUrl: string) => {\r\n            if (!event.defaultPrevented) {\r\n                // console.log(\"\" + oldUrl + \" -> \" + newUrl);\r\n                if (!this.preventNavigationFromUrl || this.preventNavigationFromUrl !== oldUrl) {\r\n                    // console.log(\"this.preventNavigationFromUrl:\", this.preventNavigationFromUrl);\r\n                    this.allowNavigation();\r\n                } else if (this.preventNavigationFromUrl) {\r\n                    event.preventDefault();\r\n                    this.$timeout(() => {\r\n                        notifier.warning(\"Unsaved data will be lost if you leave this page\");\r\n                    });\r\n                } else {\r\n                    this.allowNavigation();\r\n                }\r\n            }\r\n        });\r\n        $(window).bind(\"beforeunload\", (event: JQueryEventObject) => {\r\n            if (this.preventNavigationFromUrl && this.preventNavigationFromUrl === window.location.href) {\r\n                return \"Unsaved data will be lost if you leave this page\";\r\n            }\r\n        });\r\n    }\r\n\r\n    public allowNavigation() {\r\n        this.preventNavigationFromUrl = null;\r\n    }\r\n\r\n    public preventNavigation() {\r\n        // console.log(\"window.location.href:\", window.location.href);\r\n        let _url = window.location.href;\r\n        this.preventNavigationFromUrl = _url;\r\n    }\r\n\r\n    public redirectToNotFound() {\r\n        this.allowNavigation();\r\n        this.$location.url(this.commonRouter.notFoundUrl());\r\n    }\r\n}\r\n","export function AutoFocusDirectiveFactory($timeout: angular.ITimeoutService): angular.IDirective {\r\n    function link($scope: angular.IScope, element: angular.IAugmentedJQuery) {\r\n        $timeout(function () {\r\n            element[0].focus();\r\n        });\r\n    }\r\n\r\n    return {\r\n        restrict: \"A\",\r\n        link: link\r\n    };\r\n}\r\n\r\nAutoFocusDirectiveFactory.$inject = [\r\n    \"$timeout\"\r\n];","import {AutoFocusDirectiveFactory} from \"./AutofocusDirective\";\r\nimport {DateTimePickerDirectiveFactory} from \"./DateTimePickerDirective\";\r\nimport {GridConfigurationDirectiveFactory} from \"./GridConfigurationDirective\";\r\nimport {GridDirectiveFactory} from \"./GridDirective\";\r\nimport {GridEmptyDirectiveFactory} from \"./GridEmptyDirective\";\r\nimport {GridExternalConfigurationFactory} from \"./GridExternalConfiguration\";\r\nimport {GridPaginationDirectiveFactory} from \"./GridPaginationDirective\";\r\nimport {LoginDirectiveFactory} from \"./LoginDirective\";\r\nimport {MultipleCheckboxSelectorDirectiveFactory} from \"./MultipleCheckboxSelectorDirective\";\r\nimport {PageFooterDirectiveFactory} from \"./PageFooterDirective\";\r\nimport {PageHeaderDirectiveFactory} from \"./PageHeaderDirective\";\r\nimport {VhsSelectAllDirectiveFactory} from \"./VhsSelectAllDirective\";\r\nimport {ReferenceCheckboxSelectorDirectiveFactory} from \"./ReferenceCheckboxSelectorDirective\";\r\nimport {ReferenceDropdownSelectorDirectiveFactory} from \"./ReferenceDropdownSelectorDirective\";\r\nimport {ReferenceMultipleSelectorDirectiveFactory} from \"./ReferenceMultipleSelectorDirective\";\r\nimport {TooltipDirectiveFactory} from \"./TooltipDirective\";\r\nimport {VhsSearchDirectiveFactory} from \"./VhsSearchDirective\";\r\nimport {\r\n    PersonalMenuDirectiveFactory,\r\n    NavigationPersonalMenuDirectiveFactory,\r\n    LeftPersonalMenuDirectiveFactory,\r\n    VhsBreadcrumbsDirectiveFactory} from \"./PersonalMenuDirective\";\r\nimport {VhsVideoDirectiveFactory, VhsYoutubeVideoDirectiveFactory, VhsAudioDirectiveFactory} from \"./VhsVideoAudioDirective\";\r\nimport {UsersAndGroupsSelectorDirectiveFactory} from \"./UsersAndGroupsSelectorDirective\";\r\nimport {SelectOptionsDisabledDirectiveFactory} from \"./SelectOptionsDisabledDirective\";\r\nimport {SelectPlaceholderDirectiveFactory} from \"./SelectPlaceholderDirective\";\r\nimport {UploadsStatusDirectiveFactory} from \"./UploadsStatusDirective\";\r\nimport {VhsThumbnailDirectiveFactory} from \"./VhsThumbnailDirective\";\r\nimport {VhsMaterialEditingDirectiveFactory} from \"./VhsMaterialEditingDirective\";\r\nimport {VhsEmbeddedBundleDirectiveFactory} from \"./richtext/VhsEmbeddedBundleDirective\";\r\nimport {VhsEmbeddedMaterialDirectiveFactory} from \"./VhsEmbeddedMaterialDirective\";\r\nimport {VhsSelectMaterialDirectiveFactory} from \"./richtext/VhsSelectMaterialDirective\";\r\nimport {VhsSelectEmbeddedBundleDirectiveFactory} from \"./richtext/VhsSelectEmbeddedBundleDirective\";\r\nimport {VhsSelectSandboxDirectiveFactory} from \"./richtext/VhsSelectSandboxDirective\";\r\nimport {VhsSandboxDirectiveFactory} from \"./richtext/VhsSandboxDirective\";\r\nimport {RichTextEditorDirectiveFactory} from \"./richtext/RichTextEditorDirective\";\r\nimport {RichTextBindDirectiveFactory} from \"./richtext/RichTextBindDirective\";\r\nimport {VhsDownloadBundleDirectiveFactory} from \"./richtext/VhsDownloadBundleDirective\";\r\nimport {LoadBundleFileDirectiveFactory} from \"./LoadBundleFileDirective\";\r\nimport {FullScreenDirectiveFactory} from \"./FullScreenDirective\";\r\nimport {PageTitleDirectiveFactory} from \"./PageTitleDirective\";\r\nimport {EntitiesSelect2SelectorDirectiveFactory} from \"./EntitiesSelect2SelectorDirective\";\r\n\r\nimport {RichTextContentLoadingSynchronizer} from \"./richtext/RichTextContentLoadingSynchronizer\";\r\n\r\nimport {AuthCoreModule} from \"./../authcore/AuthCoreModule\";\r\nimport {AuthModule} from \"./../auth/AuthModule\";\r\nimport {SecurityModule} from \"./../security/SecurityModule\";\r\nimport {UrlsModule} from \"./../urls/UrlsModule\";\r\nimport {InfrastructureModule} from \"./../infrastructure/InfrastructureModule\";\r\nimport {MainModule} from \"./../main/MainModule\";\r\nimport {MaterialsModule} from \"./../materials/MaterialsModule\";\r\nimport {BroadcastsModule} from \"./../broadcasts/BroadcastsModule\";\r\nimport {NewsModule} from \"./../news/NewsModule\";\r\nimport {InfoModule} from \"./../info/InfoModule\";\r\nimport {ReferenceModule} from \"./../reference/ReferenceModule\";\r\nimport {StorageModule} from \"./../storage/StorageModule\";\r\nimport {LogsModule} from \"./../logs/LogsModule\";\r\nimport {SettingsModule} from \"../settings/SettingsModule\";\r\nimport {CurrentYearDirectiveFactory} from \"./CurrentYearDirective\";\r\nimport {SuffixValidatorDirectiveFactory} from \"./SuffixValidatorDirective\";\r\n\r\nexport var ComponentsModule: angular.IModule = angular\r\n    .module(\"components\", [\r\n        AuthCoreModule.name,\r\n        AuthModule.name,\r\n        SecurityModule.name,\r\n        MainModule.name,\r\n        UrlsModule.name,\r\n        InfrastructureModule.name,\r\n        MaterialsModule.name,\r\n        BroadcastsModule.name,\r\n        NewsModule.name,\r\n        InfoModule.name,\r\n        ReferenceModule.name,\r\n        StorageModule.name,\r\n        LogsModule.name,\r\n        SettingsModule.name\r\n    ])\r\n    .service(RichTextContentLoadingSynchronizer.NAME, RichTextContentLoadingSynchronizer)\r\n\r\n    .directive(\"autofocus\", AutoFocusDirectiveFactory)\r\n    .directive(\"datePicker\", DateTimePickerDirectiveFactory)\r\n    .directive(\"vhsGridConfiguration\", GridConfigurationDirectiveFactory)\r\n    .directive(\"vhsGrid\", GridDirectiveFactory)\r\n    .directive(\"vhsGridEmpty\", GridEmptyDirectiveFactory)\r\n    .directive(\"vhsGridExternalConfiguration\", GridExternalConfigurationFactory)\r\n    .directive(\"vhsGridPagination\", GridPaginationDirectiveFactory)\r\n    .directive(\"login\", LoginDirectiveFactory)\r\n    .directive('multipleCheckboxSelector', MultipleCheckboxSelectorDirectiveFactory)\r\n    .directive(\"vhsPageFooter\", PageFooterDirectiveFactory)\r\n    .directive(\"vhsPageHeader\", PageHeaderDirectiveFactory)\r\n    .directive('vhsSelectAll', VhsSelectAllDirectiveFactory)\r\n    .directive('referenceCheckboxSelector', ReferenceCheckboxSelectorDirectiveFactory)\r\n    .directive('referenceDropdownSelector', ReferenceDropdownSelectorDirectiveFactory)\r\n    .directive('referenceMultipleSelector', ReferenceMultipleSelectorDirectiveFactory)\r\n    .directive(\"tooltip\", TooltipDirectiveFactory)\r\n    .directive(\"vhsSearch\", VhsSearchDirectiveFactory)\r\n    .directive(\"personalMenu\", PersonalMenuDirectiveFactory)\r\n    .directive(\"navigationPersonalMenu\", NavigationPersonalMenuDirectiveFactory)\r\n    .directive(\"leftPersonalMenu\", LeftPersonalMenuDirectiveFactory)\r\n    .directive(\"vhsBreadcrumbs\", VhsBreadcrumbsDirectiveFactory)\r\n    .directive(\"vhsVideo\", VhsVideoDirectiveFactory)\r\n    .directive(\"vhsYoutubeVideo\", VhsYoutubeVideoDirectiveFactory)\r\n    .directive(\"vhsAudio\", VhsAudioDirectiveFactory)\r\n    .directive(\"usersAndGroupsSelector\", UsersAndGroupsSelectorDirectiveFactory)\r\n    .directive(\"selectOptionsDisabled\", SelectOptionsDisabledDirectiveFactory)\r\n    .directive(\"selectPlaceholder\", SelectPlaceholderDirectiveFactory)\r\n    .directive(\"uploadsStatus\", UploadsStatusDirectiveFactory)\r\n    .directive(\"vhsThumbnail\", VhsThumbnailDirectiveFactory)\r\n    .directive(\"vhsMaterialEditing\", VhsMaterialEditingDirectiveFactory)\r\n    .directive(\"vhsEmbeddedMaterial\", VhsEmbeddedMaterialDirectiveFactory)\r\n    .directive(\"vhsSelectMaterial\", VhsSelectMaterialDirectiveFactory)\r\n    .directive(\"vhsRichTextEditor\", RichTextEditorDirectiveFactory)\r\n    .directive(\"vhsRichTextBind\", RichTextBindDirectiveFactory)\r\n    .directive(\"vhsEmbeddedBundle\", VhsEmbeddedBundleDirectiveFactory)\r\n    .directive(\"vhsSelectEmbeddedBundle\", VhsSelectEmbeddedBundleDirectiveFactory)\r\n    .directive(\"vhsSelectSandbox\", VhsSelectSandboxDirectiveFactory)\r\n    .directive(\"vhsSandbox\", VhsSandboxDirectiveFactory)\r\n    .directive(\"vhsDownloadBundle\", VhsDownloadBundleDirectiveFactory)\r\n    .directive(\"vhsLoadBundleFile\", LoadBundleFileDirectiveFactory)\r\n    .directive(\"vhsFullScreen\", FullScreenDirectiveFactory)\r\n    .directive(\"vhsPageTitle\", PageTitleDirectiveFactory)\r\n    .directive(\"vhsCurrentYear\", CurrentYearDirectiveFactory)\r\n    .directive(\"entitiesSelect2Selector\", EntitiesSelect2SelectorDirectiveFactory)\r\n    .directive(\"suffixValidator\", SuffixValidatorDirectiveFactory);\r\n","import {SettingsService} from \"../settings/SettingsService\";\r\nimport IScope = angular.IScope;\r\nimport IAugmentedJQuery = angular.IAugmentedJQuery;\r\nimport IDirective = angular.IDirective;\r\nimport IAttributes = angular.IAttributes;\r\nimport ITranscludeFunction = angular.ITranscludeFunction;\r\n\r\nexport function CurrentYearDirectiveFactory(settingsService: SettingsService): IDirective {\r\n    function link($scope: IScope, element: IAugmentedJQuery,\r\n                  attributes: IAttributes, controller: any,\r\n                  transclude: ITranscludeFunction) {\r\n        settingsService.getCurrentDate()\r\n            .then(date => $scope[\"currentDate\"] = date);\r\n    }\r\n\r\n\r\n    const directive: any = {};\r\n    directive.restrict = \"A\";\r\n    directive.template = \"{{::currentDate | date:'yyyy'}}\";\r\n    directive.link = link;\r\n    directive.scope = true;\r\n    return directive;\r\n}\r\n\r\nCurrentYearDirectiveFactory.$inject = [\r\n    SettingsService.NAME\r\n];\r\n","import INgModelController = angular.INgModelController;\r\nimport IScope = angular.IScope;\r\nimport {Moment} from \"../utils/Moment\";\r\ninterface DateTimePickerAttributes extends angular.IAttributes {\r\n    navigation: string;\r\n    ngModel: string;\r\n    maxCurrentDate: boolean\r\n}\r\ninterface DatePickerScope extends IScope {\r\n    minDate?: string;\r\n    maxDate?: string;\r\n    minDateValidation: boolean;\r\n    maxDateValidation: boolean;\r\n}\r\n\r\nexport function DateTimePickerDirectiveFactory(): angular.IDirective {\r\n    function link($scope: DatePickerScope, element: angular.IAugmentedJQuery,\r\n                  attributes: DateTimePickerAttributes, ngModel: INgModelController,\r\n                  transclude: angular.ITranscludeFunction) {\r\n\r\n        element.datetimepicker({\r\n            pickTime: false,\r\n            language: \"en\",\r\n\r\n            // TODO: absent\r\n            format: \"M/D/YYYY\",\r\n            collapse: true,\r\n            keyboardNavigation: attributes.navigation || true,\r\n            maxDate: $scope.maxDateValidation ? moment($scope.maxDate).toDate() : null\r\n        });\r\n\r\n        element.bind(\"dp.change\", function () {\r\n            element.trigger('input');\r\n        });\r\n\r\n        $scope.$watch(attributes.ngModel, value => {\r\n            if (value) {\r\n                element.trigger(\"change\");\r\n            }\r\n        });\r\n\r\n        $scope.$on(\"$destroy\",\r\n            () => element.datetimepicker().data('DateTimePicker').destroy());\r\n\r\n        if ($scope.maxDateValidation) {\r\n            ngModel.$validators[\"maxDate\"] = (modelValue: string, viewValue: string) => {\r\n                if (!$scope.maxDate || !viewValue) {\r\n                   return true;\r\n                }\r\n                const max = moment($scope.maxDate);\r\n\r\n                const value = Moment.parse(viewValue);\r\n                return !max.isValid() || !value.isValid() || !value.isAfter(max);\r\n            };\r\n            $scope.$watch(\"maxDate\", () => {\r\n                ngModel.$validate();\r\n            });\r\n        }\r\n\r\n        if ($scope.minDateValidation) {\r\n            ngModel.$validators[\"minDate\"] = (modelValue: string, viewValue: string) => {\r\n                if (!$scope.minDate || !viewValue) {\r\n                    return true;\r\n                }\r\n                const min = moment($scope.minDate);\r\n\r\n                const value = Moment.parse(viewValue);\r\n                return !min.isValid() || !value.isValid() || !value.isBefore(min);\r\n            };\r\n            $scope.$watch(\"minDate\", () => {\r\n                ngModel.$validate();\r\n            });\r\n        }\r\n    }\r\n\r\n    return {\r\n        restrict: \"A\",\r\n        require: \"?ngModel\",\r\n        scope: {\r\n            minDate: \"=?vhsMin\",\r\n            maxDate: \"=?vhsMax\",\r\n            minDateValidation: \"=?vhsMinDateValidation\",\r\n            maxDateValidation: \"=?vhsMaxDateValidation\"\r\n        },\r\n        link: link\r\n    };\r\n}","import {UrlService} from \"./../utils/UrlService\";\r\nimport {ReferenceService} from \"./../reference/ReferenceService\";\r\nimport {ISelectable} from \"../ISelectable\";\r\nimport {ReferenceEntitiesParams} from \"./../reference/models/IReferenceEntitiesParams\";\r\n\r\nexport interface IEntitiesSelect2SelectorDirectiveScope extends angular.IScope {\r\n    urlString?: string;\r\n    referenceKey?: string;\r\n    filter?: any;\r\n    model?: any;\r\n    modelProperty?: string;\r\n    multiple: boolean;\r\n    disabled?: boolean;\r\n    nullable: boolean;\r\n    activeEntities?: boolean;\r\n    placeholder?: string;\r\n    onSelectorChange?: (object?: any) => {};\r\n\r\n    vm?: EntitiesSelect2SelectorController;\r\n}\r\n\r\nexport class EntitiesSelect2SelectorController {\r\n    private static DEFAULT_PLACEHOLDER: string = \"\";\r\n\r\n    private modelIds: Array<number>;\r\n    private modelId: number = null;\r\n\r\n    public items: Array<ISelectable>;\r\n    public selectedItems: any = null;\r\n\r\n    public placeholder: string;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$http\",\r\n        UrlService.NAME,\r\n        ReferenceService.NAME\r\n    ];\r\n\r\n    constructor(private $scope: IEntitiesSelect2SelectorDirectiveScope,\r\n                private $http: ng.IHttpService,\r\n                private url: UrlService,\r\n                private referenceApi: ReferenceService) {\r\n        $scope.vm = this;\r\n\r\n        this.placeholder = $scope.placeholder ? $scope.placeholder : EntitiesSelect2SelectorController.DEFAULT_PLACEHOLDER;\r\n\r\n        if ($scope.multiple) {\r\n            this.modelIds = $scope.model[$scope.modelProperty];\r\n        } else {\r\n            this.modelId = $scope.model[$scope.modelProperty];\r\n        }\r\n\r\n        this.loadEntitiesForSelector();\r\n        this.$scope.$watch(\"filter\", (newValue, oldValue) => {\r\n            if (angular.equals(newValue, oldValue)) return;\r\n            this.loadEntitiesForSelector();\r\n        });\r\n        this.$scope.$watch(\"activeEntities\", (newValue, oldValue) => {\r\n            if (newValue == oldValue) return;\r\n            this.loadEntitiesForSelector();\r\n        });\r\n        this.$scope.$watch(\"model[modelProperty]\", (newValue, oldValue) => {\r\n            if (angular.equals(newValue, oldValue) ||\r\n                angular.equals(newValue, this.$scope.multiple ? this.modelIds : this.modelId)) return;\r\n            this.setValues();\r\n        });\r\n    }\r\n\r\n    private loadEntitiesForSelector(): void {\r\n        this.selectedItems = this.$scope.multiple ? [] : null;\r\n        if (this.$scope.referenceKey != null) {\r\n            this.referenceApi.getActiveReferenceEntitiesForSelector(this.$scope.referenceKey, new ReferenceEntitiesParams(\r\n                null, null, undefined, undefined), null)\r\n                .then(result => {\r\n                    this.items = result;\r\n                    this.items.forEach(item => {\r\n                        if (this.$scope.multiple && this.modelIds.indexOf(item.id) > -1) {\r\n                            if (this.selectedItems.filter(i => i.id == item.id).length == 0) {\r\n                                this.selectedItems.push(item);\r\n                            }\r\n                        } else if (!this.$scope.multiple && this.modelId == item.id) {\r\n                            this.selectedItems = item;\r\n                        }\r\n                    })\r\n                });\r\n        } else {\r\n            this.$http.get(this.url.service(this.$scope.urlString), {\r\n                params: this.$scope.filter\r\n            }).then((result: any) => {\r\n                this.items = result.data;\r\n                this.items.forEach(item => {\r\n                    if (this.$scope.multiple && this.modelIds.indexOf(item.id) > -1) {\r\n                        if (this.selectedItems.filter(i => i.id == item.id).length == 0) {\r\n                            this.selectedItems.push(item);\r\n                        }\r\n\r\n                    } else if (!this.$scope.multiple && this.modelId == item.id) {\r\n                        this.selectedItems = item;\r\n                    }\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    private setValues() {\r\n        if (this.$scope.multiple) {\r\n            this.modelIds = this.$scope.model[this.$scope.modelProperty];\r\n        } else {\r\n            this.modelId = this.$scope.model[this.$scope.modelProperty];\r\n        }\r\n        this.selectedItems = this.$scope.multiple ? [] : null;\r\n        this.items.forEach(item => {\r\n            if (this.$scope.multiple && this.modelIds.indexOf(item.id) > -1) {\r\n                if (this.selectedItems.filter(i => i.id == item.id).length == 0) {\r\n                    this.selectedItems.push(item);\r\n                }\r\n\r\n            } else if (!this.$scope.multiple && this.modelId == item.id) {\r\n                this.selectedItems = item;\r\n            }\r\n        });\r\n    }\r\n\r\n    public onSelectCallback(item: ISelectable, select: any): void {\r\n        if (this.$scope.multiple) {\r\n            this.modelIds.push(item.id);\r\n        } else {\r\n            this.selectedItems = item;\r\n            this.$scope.model[this.$scope.modelProperty] = item.id;\r\n            this.modelId = item.id;\r\n        }\r\n        let result: any = angular.copy(item);\r\n        result.selected = true;\r\n        this.$scope.onSelectorChange(result);\r\n    }\r\n\r\n    public onRemoveCallback(item: ISelectable, select: any): void {\r\n        if (this.$scope.multiple) {\r\n            var index = this.modelIds.indexOf(item.id, 0);\r\n            if (index > -1) {\r\n                this.modelIds.splice(index, 1);\r\n            }\r\n        } else {\r\n            this.selectedItems = null;\r\n            this.$scope.model[this.$scope.modelProperty] = null;\r\n            this.modelId = null;\r\n        }\r\n        let result: any = angular.copy(item);\r\n        result.selected = false;\r\n        this.$scope.onSelectorChange(result);\r\n    }\r\n}\r\n\r\nexport function EntitiesSelect2SelectorDirectiveFactory(url: UrlService): ng.IDirective {\r\n\r\n    var directive: ng.IDirective = {};\r\n    directive.restrict = \"A\";\r\n    directive.controller = EntitiesSelect2SelectorController;\r\n    directive.scope = {\r\n        urlString: \"=?vhsEntitiesUrl\",\r\n        referenceKey: \"=?vhsReferenceKey\",\r\n        filter: \"=?vhsFilter\",\r\n        model: \"=vhsModel\",\r\n        modelProperty: \"=vhsModelProperty\",\r\n        multiple: \"=vhsMultiple\",\r\n        disabled: \"=?vhsDisabled\",\r\n        nullable: \"=vhsNullable\",\r\n        activeEntities: \"=?vhsActiveEntities\",\r\n        placeholder: \"=?vhsPlaceholder\",\r\n        onSelectorChange: \"&vhsOnChange\"\r\n    };\r\n    directive.templateUrl = url.template(\"components/entities-select2-selector.html\");\r\n    directive.transclude = true;\r\n    return directive;\r\n}\r\n\r\nEntitiesSelect2SelectorDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];","import {LocationUtils} from \"./../utils/LocationUtils\";\r\n\r\nexport function FullScreenDirectiveFactory($location: angular.ILocationService, $rootScope: angular.IRootScopeService): angular.IDirective {\r\n    var FULL_SCREEN_CLASS = \"full-screen-view\";\r\n    function link($scope: angular.IScope,\r\n                  element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes,\r\n                  controller: any) {\r\n        var applyFullScreenFunction = function() {\r\n            if (LocationUtils.isFullScreen($location)) {\r\n                element.addClass(FULL_SCREEN_CLASS);\r\n            } else {\r\n                element.removeClass(FULL_SCREEN_CLASS);\r\n            }\r\n        };\r\n        $rootScope.$on('$locationChangeSuccess', ($locationEvent) => {\r\n            applyFullScreenFunction();\r\n        });\r\n        applyFullScreenFunction();\r\n        element.removeClass(\"invisible-on-load\");\r\n    }\r\n\r\n    let directive: angular.IDirective = {\r\n        restrict: \"A\",\r\n        link: link\r\n    };\r\n    return directive;\r\n}\r\n\r\nFullScreenDirectiveFactory.$inject = [\r\n    \"$location\",\r\n    \"$rootScope\"\r\n];","import {GridController} from \"./GridDirective\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\n\r\ninterface GridConfigurationAttributes extends ng.IAttributes {\r\n}\r\n\r\nexport function GridConfigurationDirectiveFactory(url: UrlService): ng.IDirective {\r\n\r\n    function link($scope: ng.IScope, element: ng.IAugmentedJQuery,\r\n                  attributes: GridConfigurationAttributes, controller: GridController<any>,\r\n                  transclude: ng.ITranscludeFunction) {\r\n        controller.setIsConfigurable(true);\r\n        $scope[\"_showPageSizeSelector\"] = true;\r\n    }\r\n\r\n    var directive: any = {};\r\n    directive.restrict = \"A\";\r\n    directive.templateUrl = url.template(\"components/grid-configuration.html\");\r\n    directive.link = link;\r\n    directive.require = \"^vhsGrid\";\r\n    return directive;\r\n}\r\n\r\nGridConfigurationDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {SortOrder, SortEntry} from \"./../SortEntry\";\r\nimport {StorageWrapper, Storages} from \"./../infrastructure/Storage\";\r\nimport {TimeoutUtils} from \"./../utils/TimeoutUtils\";\r\nimport {ObjectFieldResolver} from \"./../utils/ObjectFieldResolver\";\r\nimport {\r\n    GridColumn,\r\n    IGridModel,\r\n    GridModel,\r\n    IGridLoadingListener,\r\n    IColumnVisibilityChangeListener,\r\n    IPageSizeChangeListener,\r\n    PersistedGridModelConfiguration\r\n} from \"./../IGridModel\";\r\n\r\ninterface GridAttributes extends angular.IAttributes {\r\n    gridModelPath: string;\r\n    vhsGridUuid: string;\r\n    vhsHasConfiguration?: boolean;\r\n}\r\n\r\nclass ElementSortingInfo {\r\n    public sortPath: string;\r\n    public index: number = null;\r\n    public order: SortOrder = null;\r\n    public mandatory: boolean = false;\r\n\r\n    public static fromString(str: string): ElementSortingInfo {\r\n        //example: project.name desc(=2)\r\n        var info: ElementSortingInfo = null;\r\n        if (str) {\r\n            var strParts: Array<string> = str.split(/[ ()]/g);\r\n            info = new ElementSortingInfo();\r\n            if (strParts.length > 0) {\r\n                info.sortPath = strParts[0];\r\n            }\r\n            if (strParts.length > 1) {\r\n                info.order = strParts[1] == \"asc\" ? SortOrder.ASC : SortOrder.DESC;\r\n            }\r\n            if (strParts.length > 2) {\r\n                var index: string = strParts[2];\r\n                if (index.charAt(0) == \"=\") {\r\n                    info.mandatory = true;\r\n                    index = index.substr(1);\r\n                }\r\n                info.index = +index;\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n}\r\n\r\nexport class GridController<T> implements IGridLoadingListener, IColumnVisibilityChangeListener, IPageSizeChangeListener {\r\n    public parentScope;\r\n    private directiveScope: angular.IScope;\r\n    public gridModel: IGridModel<T>;\r\n\r\n    private timeoutUtils: TimeoutUtils;\r\n    private gridContainer: angular.IAugmentedJQuery;\r\n    private tableContainer: angular.IAugmentedJQuery;\r\n    private gridUuid: string = null;\r\n    private hasConfiguration: boolean = false;\r\n    private hasChangesForTemplateReload: boolean = false;\r\n    private tableTemplate: string;\r\n\r\n\r\n    private SORTABLE_HEADERS_CLASSES: Array<string> = [\"sortable\", \"sortable-desc\", \"sortable-asc\", \"sortable-0\", \"sortable-1\", \"sortable-2\", \"sortable-3\"];\r\n    public static TABLE_SELECTOR = \"table[data-vhs-table] \";\r\n    public static SORTABLE_HEADERS_SELECTOR = \"tr th[data-sortable]\";\r\n    public static TABLE_HEADERS_SELECTOR = \"thead tr th\";\r\n    public static TABLE_CELLS_IN_TEMPLATE_SELECTOR = \"tbody tr[ng-repeat] td\";\r\n    public static TABLE_CELLS_IN_TEMPLATE_SELECTOR_FOR_REPEAT_START = \"tbody tr[ng-repeat-start]:not([data-columns-always-visible]) td\";\r\n    public static TABLE_CELLS_IN_TEMPLATE_SELECTOR_FOR_REPEAT_END = \"tbody tr[ng-repeat-end]:not([data-columns-always-visible]) td\";\r\n    private SEARCH_ELEMENTS_SELECTOR = \"[data-vhs-auto-search] select,[data-vhs-auto-search] input\";\r\n    private MAX_SORT_INDEX = 3;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$timeout\",\r\n        \"$compile\",\r\n        Storages.LOCAL_NAME\r\n    ];\r\n\r\n    constructor($scope,\r\n                private $timeout: angular.ITimeoutService,\r\n                private $compile: angular.ICompileService,\r\n                private localStorage: StorageWrapper) {\r\n        $scope.gridVm = this;\r\n        this.parentScope = $scope.$parent;\r\n        this.directiveScope = $scope;\r\n        this.timeoutUtils = new TimeoutUtils();\r\n    }\r\n\r\n    public init(element: angular.IAugmentedJQuery, modelPathInController: string, uuid: string, tableTemplate: string) {\r\n        this.gridContainer = element;\r\n        this.tableContainer = this.gridContainer.find(GridController.TABLE_SELECTOR);\r\n        this.tableTemplate = tableTemplate;\r\n        this.gridUuid = uuid ? uuid : \"grid_\" + new Date().getTime();\r\n        if (typeof modelPathInController != 'undefined') {\r\n            this.gridModel = ObjectFieldResolver.findForPath(this.parentScope, modelPathInController);\r\n            this.gridModel.addLoadingListener(this);\r\n            this.gridModel.addColumnVisibilityListener(this);\r\n            this.gridModel.addPageSizeListener(this);\r\n        }\r\n        this.collectGridColumns();\r\n        this.loadColumnsConfigurationFromStorage();\r\n        this.loadFilterFromStorage();\r\n        this.addPredefinedSorting();\r\n\r\n        this.addAutoSearchListeners(); //currently listeners only outside table\r\n\r\n        this.initDomElementsHandlers();\r\n\r\n        this.processTemplate();\r\n\r\n        this.gridModel.loadCurrentPage();\r\n    }\r\n\r\n    private initDomElementsHandlers() {\r\n        this.addHeadersSortingHandlers();\r\n        this.updateHeaderClasses();\r\n    }\r\n\r\n    public setIsConfigurable(hasConfiguration: boolean) {\r\n        this.hasConfiguration = hasConfiguration;\r\n        if (hasConfiguration) {\r\n            this.processTemplate();\r\n        }\r\n    }\r\n\r\n    public applyFilter() {\r\n        this.gridModel.loadWithDelay(this.timeoutUtils, this);\r\n    }\r\n\r\n    public addSorting(fieldName: string): SortEntry {\r\n        var info = this.findSortEntryInfo(fieldName);\r\n        var sortEntry: SortEntry = null;\r\n        if (info != null) {\r\n            sortEntry = info.sortEntry;\r\n        }\r\n        if (sortEntry == null) {\r\n            sortEntry = SortEntry.asc(fieldName);\r\n            this.gridModel.sorting.push(sortEntry);\r\n        } else {\r\n            sortEntry.reverseOrder()\r\n        }\r\n        this.gridModel.loadCurrentPage();\r\n        return sortEntry;\r\n    }\r\n\r\n    public resetSorting(fieldName: string) {\r\n        var info = this.findSortEntryInfo(fieldName);\r\n        var foundIndex: number = -1;\r\n        if (info != null) {\r\n            foundIndex = info.index;\r\n        }\r\n        if (foundIndex > -1) {\r\n            this.gridModel.sorting.splice(foundIndex, 1);\r\n        }\r\n        this.gridModel.loadCurrentPage();\r\n    }\r\n\r\n    public goToPage(pageNumber: number) {\r\n        if (this.gridModel.currentPage != pageNumber && pageNumber >= 0 && pageNumber < this.gridModel.totalPageCount) {\r\n            this.gridModel.loadPage(pageNumber);\r\n        }\r\n    }\r\n\r\n    public getPagesForPagination(): Array<number> {\r\n        var currentPage: number = this.gridModel.currentPage;\r\n        var totalPages: number = this.gridModel.totalPageCount;\r\n        var pages: Array<number> = [];\r\n\r\n        for (var i: number = currentPage; i >= 0 && (currentPage - i ) < 5; i--) {\r\n            pages.push(i);\r\n        }\r\n        pages = pages.reverse();\r\n\r\n        for (var i: number = currentPage + 1; i < totalPages && (i - currentPage) < 5; i++) {\r\n            pages.push(i);\r\n        }\r\n        return pages;\r\n    }\r\n\r\n    public startLoading() {\r\n        this.gridContainer.addClass(\"loading\");\r\n    }\r\n\r\n    public endLoading() {\r\n        this.gridContainer.removeClass(\"loading\");\r\n    }\r\n\r\n    public onColumnVisibilityChange(column: GridColumn) {\r\n        if (this.hasConfiguration && column != null) {\r\n            this.hasChangesForTemplateReload = true;\r\n            this.processTemplate();\r\n        }\r\n    }\r\n\r\n    public upColumnPosition(column: GridColumn) {\r\n        if (column && this.hasConfiguration) {\r\n            if (column.position > 0) {\r\n                this.doUpdateColumnPosition(column, column.position - 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    public downColumnPosition(column: GridColumn) {\r\n        if (column && this.hasConfiguration) {\r\n            if (column.position < this.gridModel.gridColumns.length - 1) {\r\n                this.doUpdateColumnPosition(column, column.position + 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    private doUpdateColumnPosition(column: GridColumn, newPosition: number) {\r\n        var currentColumnInPosition = this.findColumnByPosition(newPosition);\r\n        if (currentColumnInPosition) {\r\n            currentColumnInPosition.position = column.position;\r\n        }\r\n        column.position = newPosition;\r\n\r\n        this.hasChangesForTemplateReload = true;\r\n        this.processTemplate();\r\n    }\r\n\r\n    private findColumnByPosition(targetPosition: number) {\r\n        for (var i = 0; i < this.gridModel.gridColumns.length; i++) {\r\n            var column: GridColumn = this.gridModel.gridColumns[i];\r\n            if (column.position == targetPosition) {\r\n                return column;\r\n            }\r\n        }\r\n    }\r\n\r\n    private findColumnByIndex(columnIndex: number): GridColumn {\r\n        return this.gridModel.gridColumns[columnIndex];\r\n    }\r\n\r\n    private fixColumnPositions() {\r\n        var orderedColumns: Array<GridColumn> = [];\r\n        for (var i = 0; i < this.gridModel.gridColumns.length; i++) {\r\n            orderedColumns.push(this.gridModel.gridColumns[i]);\r\n        }\r\n        orderedColumns.sort((o1, o2) => {\r\n            //fixed columns to the end of list\r\n            if (o1.fixedColumn && o2.fixedColumn) return 0;\r\n            if (o1.fixedColumn && !o2.fixedColumn) return 1;\r\n            if (!o1.fixedColumn && o2.fixedColumn) return -1;\r\n            //columns without positions to the end of the list (before fixed columns)\r\n            if (!o1.position && !o2.position) return o1.index > o2.index ? 1 : -1;\r\n            if (o1.position && !o2.position) return 1;\r\n            if (!o1.position && o2.position) return -1;\r\n            //columns with same position should be compared by index\r\n            if (o1.position == o2.position) {\r\n                return o1.index > o2.index ? 1 : -1;\r\n            }\r\n            return o1.position > o2.position ? 1 : -1;\r\n        });\r\n        for (var i = 0; i < orderedColumns.length; i++) {\r\n            if (orderedColumns[i].position != i) {\r\n                this.hasChangesForTemplateReload = true;\r\n            }\r\n            orderedColumns[i].position = i;\r\n        }\r\n    }\r\n\r\n    public onChangePageSize() {\r\n        if (!this.gridModel.pageSize) return;\r\n        if (isNaN(this.gridModel.pageSize)) {\r\n            this.gridModel.pageSize = GridModel.DEFAULT_PAGE_SIZE;\r\n        }\r\n        if (this.gridModel.pageSize > GridModel.MAX_USER_PAGE_SIZE) {\r\n            this.gridModel.pageSize = GridModel.MAX_USER_PAGE_SIZE;\r\n        }\r\n        this.gridModel.pageSize = Math.round(this.gridModel.pageSize);\r\n        this.applyFilter();\r\n    }\r\n\r\n    private loadColumnsConfigurationFromStorage() {\r\n        if (this.gridModel) {\r\n            var persistedModel = this.localStorage.get<PersistedGridModelConfiguration>(this.gridUuid);\r\n            if (persistedModel) {\r\n                this.gridModel.pageSize = persistedModel.pageSize;\r\n                if (!this.gridModel.pageSize || isNaN(this.gridModel.pageSize)) {\r\n                    this.gridModel.pageSize = GridModel.DEFAULT_PAGE_SIZE;\r\n                } else {\r\n                    this.gridModel.pageSize = Math.round(this.gridModel.pageSize);\r\n                }\r\n                for (var i = 0; i < this.gridModel.gridColumns.length; i++) {\r\n                    var column: GridColumn = this.gridModel.gridColumns[i];\r\n                    for (var j = 0; j < persistedModel.gridColumns.length; j++) {\r\n                        var persistedColumn: GridColumn = persistedModel.gridColumns[j];\r\n                        if (persistedColumn.index == column.index) {\r\n                            if (column.visible != persistedColumn.visible) {\r\n                                this.hasChangesForTemplateReload = true;\r\n                                column.visible = persistedColumn.visible;\r\n                            }\r\n                            if (persistedColumn.position != undefined && persistedColumn.position != null\r\n                                && column.position != persistedColumn.position) {\r\n                                this.hasChangesForTemplateReload = true;\r\n                                column.position = persistedColumn.position;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                this.fixColumnPositions();\r\n                this.gridModel.recalculateVisibleColumnsCount();\r\n            }\r\n        }\r\n    }\r\n\r\n    private loadFilterFromStorage() {\r\n        if (this.gridModel) {\r\n            var persistedModel = this.localStorage.get<PersistedGridModelConfiguration>(this.gridUuid);\r\n            if (persistedModel) {\r\n                for (var fieldName in persistedModel.filter) {\r\n                    if (persistedModel.filter.hasOwnProperty(fieldName) && this.gridModel.nonPersistedFilterFields.indexOf(fieldName) < 0) {\r\n                        this.gridModel.filter[fieldName] = angular.copy(persistedModel.filter[fieldName]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public saveGridConfiguration() {\r\n        this.localStorage.put(this.gridUuid, PersistedGridModelConfiguration.fromGridModel(this.gridModel));\r\n    }\r\n\r\n    private findSortEntryInfo(fieldName: string) {\r\n        for (var i = 0; i < this.gridModel.sorting.length; i++) {\r\n            var sortEntry = this.gridModel.sorting[i];\r\n            if (sortEntry.fieldName === fieldName) {\r\n                return {sortEntry: sortEntry, index: i};\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private setHeaderClass(targetClasses: Array<string>, element: JQuery) {\r\n        for (var i = 0; i < this.SORTABLE_HEADERS_CLASSES.length; i++) {\r\n            var elClass = this.SORTABLE_HEADERS_CLASSES[i];\r\n            if (targetClasses.indexOf(elClass) != -1) {\r\n                element.addClass(elClass);\r\n            } else {\r\n                element.removeClass(elClass);\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateHeaderClasses() {\r\n        var self = this;\r\n        this.tableContainer.find(GridController.SORTABLE_HEADERS_SELECTOR).each(\r\n            function (index: any, el: Element) {\r\n                var jQueryElement: JQuery = $(el);\r\n                var sortString = ElementSortingInfo.fromString(jQueryElement.attr('data-sortable')).sortPath;\r\n                var info = self.findSortEntryInfo(sortString);\r\n                var targetClasses: Array<string> = [];\r\n                if (info != null) {\r\n                    if (info.index < self.MAX_SORT_INDEX) {\r\n                        targetClasses.push(\"sortable-\" + info.index);\r\n                    }\r\n                    targetClasses.push(info.sortEntry.sortOrder == SortOrder.ASC ? \"sortable-asc\" : \"sortable-desc\");\r\n                } else {\r\n                    targetClasses.push(\"sortable\");\r\n                }\r\n                self.setHeaderClass(targetClasses, jQueryElement);\r\n            }\r\n        );\r\n    }\r\n\r\n    private collectGridColumns() {\r\n        var self = this;\r\n        this.tableContainer.find(GridController.TABLE_HEADERS_SELECTOR).each(\r\n            function (index: number, th: Element) {\r\n                var el = $(th);\r\n                var column = new GridColumn();\r\n                column.index = index;\r\n                column.position = index;\r\n                column.visible = true;\r\n                var columnExcluded = el.attr(\"data-column-always-visible\");\r\n                var fixedColumn = el.attr(\"data-column-fixed\");\r\n                if (columnExcluded != undefined) {\r\n                    column.alwaysVisible = true;\r\n                }\r\n                if (fixedColumn != undefined) {\r\n                    column.fixedColumn = true;\r\n                }\r\n                var columnName = el.attr(\"data-column-name\");\r\n                if (columnName) {\r\n                    column.title = columnName\r\n                } else {\r\n                    column.title = el.text();\r\n                }\r\n                self.gridModel.gridColumns.push(column);\r\n            }\r\n        );\r\n        this.gridModel.recalculateVisibleColumnsCount();\r\n    }\r\n\r\n    private addHeadersSortingHandlers() {\r\n        var self = this;\r\n        this.tableContainer.find(GridController.SORTABLE_HEADERS_SELECTOR).each(\r\n            function (index: any, th: Element) {\r\n                var el = $(th);\r\n                var sortingInfo = ElementSortingInfo.fromString(el.attr('data-sortable'));\r\n                var sortString = sortingInfo.sortPath;\r\n                //change sorting\r\n                el.click(function (event: JQueryEventObject) {\r\n                    var sortEntry: SortEntry = self.addSorting(sortString);\r\n                    var sortIndex = self.gridModel.sorting.indexOf(sortEntry);\r\n                    var targetClasses: Array<string> = [];\r\n                    if (sortIndex < self.MAX_SORT_INDEX) {\r\n                        targetClasses.push(\"sortable-\" + sortIndex);\r\n                    }\r\n                    targetClasses.push(sortEntry.sortOrder == SortOrder.ASC ? \"sortable-asc\" : \"sortable-desc\");\r\n                    self.setHeaderClass(targetClasses, el);\r\n                });\r\n                //reset sorting\r\n                if (!sortingInfo.mandatory) { //reset sorting only if it is not mandatory\r\n                    el.dblclick(function (event: JQueryEventObject) {\r\n                        self.resetSorting(sortString);\r\n                        self.updateHeaderClasses();\r\n                    });\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    private addPredefinedSorting() {\r\n        var predefinedSorting: Array<ElementSortingInfo> = [];\r\n        var sortFields: Array<string> = [];\r\n        this.tableContainer.find(GridController.SORTABLE_HEADERS_SELECTOR).each(\r\n            function (index: any, th: Element) {\r\n                var el = $(th);\r\n                var sortingInfo = ElementSortingInfo.fromString(el.attr('data-sortable'));\r\n                sortFields.push(sortingInfo.sortPath);\r\n                if (sortingInfo.order != null) {\r\n                    predefinedSorting.push(sortingInfo);\r\n                }\r\n            }\r\n        );\r\n\r\n        predefinedSorting.sort((o1: ElementSortingInfo, o2: ElementSortingInfo) => {\r\n            if (o1.index == null && o2.index == null) return 0;\r\n            if (o1.index != null && o2.index == null) return -1;\r\n            if (o1.index == null && o2.index != null) return 1;\r\n            if (o1.index > o2.index) return 1;\r\n            if (o1.index < o2.index) return -1;\r\n            return 0;\r\n        });\r\n\r\n        var persistedSorting: Array<SortEntry> = [];\r\n        var persistedModel = this.localStorage.get<PersistedGridModelConfiguration>(this.gridUuid);\r\n        if (persistedModel && persistedModel.sortEntries) {\r\n            //filter persisted columns by existence in new table definition\r\n            for (var i = 0; i < persistedModel.sortEntries.length; i++) {\r\n                if (sortFields.indexOf(persistedModel.sortEntries[i].fieldName) >= 0) {\r\n                    persistedSorting.push(persistedModel.sortEntries[i]);\r\n                }\r\n            }\r\n            //remove non-mandatory columns from current definition and mandatory from persisted\r\n            for (var i = predefinedSorting.length - 1; i >= 0; i--) {\r\n                var predefinedSortingInfo = predefinedSorting[i];\r\n                if (predefinedSortingInfo.mandatory) {\r\n                    var persistedIndex = -1;\r\n                    for (var j = 0; j < persistedSorting.length; j++) {\r\n                        if (persistedSorting[j].fieldName == predefinedSortingInfo.sortPath) {\r\n                            persistedIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (persistedIndex >= 0) {\r\n                        predefinedSorting[i].order = persistedSorting[persistedIndex].sortOrder;\r\n                        persistedSorting.splice(persistedIndex, 1);\r\n                    }\r\n                } else {\r\n                    predefinedSorting.splice(i, 1);\r\n                }\r\n            }\r\n            //add persisted columns to default sorting\r\n            for (var i = 0; i < persistedSorting.length; i++) {\r\n                var sortingInfo = new ElementSortingInfo();\r\n                sortingInfo.order = persistedSorting[i].sortOrder;\r\n                sortingInfo.sortPath = persistedSorting[i].fieldName;\r\n                predefinedSorting.push(sortingInfo);\r\n            }\r\n        }\r\n\r\n        for (var i = 0; i < predefinedSorting.length; i++) {\r\n            var sorting: ElementSortingInfo = predefinedSorting[i];\r\n            this.addPredefinedSortingToModel(sorting.sortPath, sorting.order);\r\n        }\r\n    }\r\n\r\n    private addPredefinedSortingToModel(fieldName: string, sortOrder: SortOrder) {\r\n        var sortEntry = new SortEntry(fieldName, sortOrder);\r\n        if (this.findSortEntryInfo(fieldName) == null) {\r\n            this.gridModel.sorting.push(sortEntry);\r\n        }\r\n    }\r\n\r\n    private addAutoSearchListeners() {\r\n        var self = this;\r\n        this.gridContainer.find(this.SEARCH_ELEMENTS_SELECTOR).each(\r\n            function (index: any, el: Element) {\r\n                var inputElement: JQuery = $(el);\r\n                var func = function (event: JQueryEventObject) {\r\n                    self.applyFilter();\r\n                };\r\n                switch (inputElement.prop(\"type\").toLowerCase()) {\r\n                    case 'checkbox':\r\n                    case 'radio':\r\n                        inputElement.click(func);\r\n                        break;\r\n                    case 'text':\r\n                        inputElement.keyup(func);\r\n                        break;\r\n                    default:\r\n                        inputElement.change(func);\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    private processTemplate() {\r\n        if (this.hasChangesForTemplateReload) {\r\n            this.tableContainer.html(this.tableTemplate);\r\n\r\n            var cellsPositionsMap: Map<number, number> = new Map<number, number>();\r\n            for (var i = 0; i < this.gridModel.gridColumns.length; i++) {\r\n                var column: GridColumn = this.gridModel.gridColumns[i];\r\n                cellsPositionsMap.set(column.position, column.index);\r\n            }\r\n\r\n            this.processTableCellsInTemplate(this.tableContainer.find(GridController.TABLE_HEADERS_SELECTOR), cellsPositionsMap);\r\n            this.processTableCellsInTemplate(this.tableContainer.find(GridController.TABLE_CELLS_IN_TEMPLATE_SELECTOR), cellsPositionsMap);\r\n            this.processTableCellsInTemplate(this.tableContainer.find(GridController.TABLE_CELLS_IN_TEMPLATE_SELECTOR_FOR_REPEAT_START), cellsPositionsMap);\r\n            this.processTableCellsInTemplate(this.tableContainer.find(GridController.TABLE_CELLS_IN_TEMPLATE_SELECTOR_FOR_REPEAT_END), cellsPositionsMap);\r\n\r\n            this.$compile(this.tableContainer.contents())(this.directiveScope);\r\n            this.hasChangesForTemplateReload = false;\r\n            this.initDomElementsHandlers();\r\n        }\r\n    }\r\n\r\n    private processTableCellsInTemplate(cells: angular.IAugmentedJQuery, positionsMap: Map<number, number>) {\r\n        var hideColumnFunc = (index: number, td: Element) => {\r\n            var column: GridColumn = this.findColumnByIndex(index);\r\n            if (!column.fixedColumn && !column.visible) {\r\n                $(td).remove();\r\n            }\r\n        };\r\n        var cellsPositions: Map<number, JQuery> = new Map<number, JQuery>();\r\n        for (var position = 0; position < this.gridModel.gridColumns.length; position++) {\r\n            var positionIndex: number = positionsMap.get(position);\r\n            if (positionIndex != null) {\r\n                var cellInPosition: JQuery = cells.eq(positionIndex);\r\n                cellsPositions.set(position, cellInPosition);\r\n            }\r\n        }\r\n        for (var position = 0; position < this.gridModel.gridColumns.length; position++) {\r\n            var cellInPosition: JQuery = cellsPositions.get(position);\r\n            var previousCell: JQuery = position > 0 ? cellsPositions.get(position - 1) : null;\r\n            if (previousCell) {\r\n                $(cellInPosition).insertAfter($(previousCell));\r\n            }\r\n        }\r\n        cells.each(hideColumnFunc);\r\n    }\r\n}\r\n\r\nexport function GridDirectiveFactory(): angular.IDirective {\r\n    var tableTemplate;\r\n\r\n    function link($scope: angular.IScope, element: angular.IAugmentedJQuery,\r\n                  attributes: GridAttributes, controller: GridController<any>,\r\n                  transclude: angular.ITranscludeFunction) {\r\n        element.addClass(\"grid-container\");\r\n        controller.init(element, attributes.gridModelPath, attributes.vhsGridUuid, tableTemplate);\r\n        if (attributes.vhsHasConfiguration) {\r\n            controller.setIsConfigurable(true);\r\n        }\r\n    }\r\n\r\n    var directive: any = {};\r\n    directive.restrict = \"A\";\r\n    directive.compile = function compile(element: angular.IAugmentedJQuery,\r\n                                         templateAttributes: angular.IAttributes,\r\n                                         transclude: angular.ITranscludeFunction) {\r\n        tableTemplate = $(element).find(GridController.TABLE_SELECTOR).html();\r\n        return {\r\n            pre: null,\r\n            post: link\r\n        };\r\n    };\r\n    directive.controller = GridController;\r\n    directive.scope = true;\r\n    directive.trunsclude = false;\r\n    return directive;\r\n}","import {GridController} from \"./GridDirective\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\n\r\ninterface GridEmptyAttributes extends angular.IAttributes {\r\n    vhsEmptyMessage: string;\r\n}\r\n\r\nexport function GridEmptyDirectiveFactory(url: UrlService): angular.IDirective {\r\n\r\n    function link($scope: angular.IScope, element: angular.IAugmentedJQuery,\r\n                  attributes: GridEmptyAttributes, controller: GridController<any>,\r\n                  transclude: angular.ITranscludeFunction) {\r\n        $scope[\"_emptyMessage\"] = attributes && attributes.vhsEmptyMessage \r\n            ? attributes.vhsEmptyMessage \r\n            : 'No records found';\r\n    }\r\n\r\n    var directive: any = {};\r\n    directive.link = link;\r\n    directive.restrict = \"A\";\r\n    directive.replace = true;\r\n    directive.templateUrl = url.template(\"components/grid-empty.html\");\r\n    directive.require = \"^?vhsGrid\"; //todo: temp solution, should be mandatory. Currently there is an error during template reprocessing for grid\r\n    return directive;\r\n}\r\n\r\nGridEmptyDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {ObjectFieldResolver} from \"./../utils/ObjectFieldResolver\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\n\r\ninterface GridExternalConfigurationAttributes extends angular.IAttributes {\r\n    gridModelPath: string;\r\n    hidePageSizeSelector: boolean;\r\n}\r\n\r\nexport function GridExternalConfigurationFactory(url: UrlService): angular.IDirective {\r\n\r\n    function link($scope: angular.IScope, element: angular.IAugmentedJQuery,\r\n                  attributes: GridExternalConfigurationAttributes, controller: any,\r\n                  transclude: angular.ITranscludeFunction) {\r\n        if (typeof attributes.gridModelPath != 'undefined') {\r\n            var obj = ObjectFieldResolver.findForPath($scope, attributes.gridModelPath);\r\n            $scope[\"gridVm\"] = {gridModel: obj};\r\n            $scope[\"_showPageSizeSelector\"] = !attributes.hidePageSizeSelector;\r\n        }\r\n    }\r\n\r\n    var directive: any = {};\r\n    directive.restrict = \"A\";\r\n    directive.templateUrl = url.template(\"components/grid-configuration.html\");\r\n    directive.link = link;\r\n    return directive;\r\n}\r\n\r\nGridExternalConfigurationFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {UrlService} from \"./../utils/UrlService\";\r\n\r\nexport function GridPaginationDirectiveFactory(url: UrlService): angular.IDirective {\r\n    var directive: any = {};\r\n    directive.restrict = \"A\";\r\n    directive.templateUrl = url.template(\"components/grid-pagination.html\");\r\n    directive.require = \"^vhsGrid\";\r\n    return directive;\r\n}\r\n\r\nGridPaginationDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {UrlService} from \"../utils/UrlService\"\r\n\r\nimport {IBundleFile} from \"../bundles/models/IBundleFile\";\r\nimport {BundleFileTypeEnum} from \"../bundles/models/BundleFileType\";\r\n\r\nexport interface IVhsLoadBundleDirectiveScope extends angular.IScope {\r\n    bundleFile?: IBundleFile;\r\n}\r\n\r\nexport class VhsLoadBundleFileController {\r\n\r\n    public bundleFile: IBundleFile;\r\n\r\n    private element: angular.IAugmentedJQuery;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$http\"\r\n    ];\r\n\r\n    constructor(private $scope: IVhsLoadBundleDirectiveScope,\r\n                private $http: angular.IHttpService) {\r\n    }\r\n\r\n    public init($scope: IVhsLoadBundleDirectiveScope,\r\n                element: angular.IAugmentedJQuery) {\r\n        this.element = element;\r\n        this.bundleFile = $scope.bundleFile;\r\n\r\n        this.processBundleFile();\r\n    }\r\n\r\n    public processBundleFile() {\r\n        if (!this.bundleFile || !this.bundleFile.url) {\r\n            return;\r\n        }\r\n        if (this.bundleFile.type == BundleFileTypeEnum[BundleFileTypeEnum.JS]) {\r\n            return this.$http.get(this.bundleFile.url, this.getHttpConfig())\r\n                .then(result => result.data)\r\n                .then((content: string) => this.processFileContent(content, this.bundleFile));\r\n        } else if (this.bundleFile.type == BundleFileTypeEnum[BundleFileTypeEnum.CSS]) {\r\n            this.element.replaceWith(\"<link rel='stylesheet' href=\" + this.bundleFile.url + \">\");\r\n        } else if (this.bundleFile.type == BundleFileTypeEnum[BundleFileTypeEnum.IMAGE] && this.element.is('img')) {\r\n            this.element.attr(\"src\", this.bundleFile.url);\r\n        } else {\r\n            console.log('Incorrect bundle file type for load: ' + this.bundleFile.type);\r\n        }\r\n    }\r\n\r\n    private processFileContent(fileContent: string, bundleFile: IBundleFile) {\r\n        if (fileContent && bundleFile) {\r\n            switch (bundleFile.type) {\r\n                case BundleFileTypeEnum[BundleFileTypeEnum.JS]:\r\n                    $.globalEval('\"use strict\";' + fileContent);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private getHttpConfig() : any {\r\n        return { cache: true, withoutAuthorization: true, ignore404: true };\r\n    }\r\n}\r\n\r\nexport function LoadBundleFileDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: IVhsLoadBundleDirectiveScope,\r\n                  element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes,\r\n                  controller: VhsLoadBundleFileController) {\r\n        controller.init($scope, element);\r\n    }\r\n\r\n    let directive: angular.IDirective = {\r\n        restrict: \"AE\",\r\n        link: link,\r\n        controller: VhsLoadBundleFileController,\r\n        scope: {\r\n            bundleFile: \"=vhsBundleFile\"\r\n        }\r\n    };\r\n    return directive;\r\n}\r\n\r\nLoadBundleFileDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];","import {AuthRouter} from \"./../urls/AuthRouter\";\r\nimport {AuthRedirect} from \"./../authcore/AuthRedirect\";\r\nimport {AuthManager} from \"./../authcore/AuthManager\";\r\nimport {Event} from \"./../authcore/Event\";\r\nimport {AuthService} from \"./../auth/AuthService\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {IUserInfo} from \"./../security/IUserInfo\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {MainRouter} from \"./../urls/MainRouter\";\r\nimport {PersonalRouter} from \"./../urls/PersonalRouter\";\r\nimport {UsersRouter} from \"./../urls/UsersRouter\";\r\nimport {InfoRouter} from \"./../urls/InfoRouter\";\r\n\r\nexport class LoginController {\r\n    private systemPermissions: ISystemPermissions;\r\n\r\n    public authenticated: boolean;\r\n    public user: IUserInfo;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        AuthService.NAME,\r\n        MainRouter.NAME,\r\n        AuthRouter.NAME,\r\n        UsersRouter.NAME,\r\n        InfoRouter.NAME,\r\n        PersonalRouter.NAME,\r\n        AuthManager.NAME,\r\n    ];\r\n\r\n    constructor(private $scope,\r\n                private authApi: AuthService,\r\n                private mainRouter: MainRouter,\r\n                public authRouter: AuthRouter,\r\n                public usersRouter: UsersRouter,\r\n                public infoRouter: InfoRouter,\r\n                public personalRouter: PersonalRouter,\r\n                authManager: AuthManager) {\r\n        $scope.vm = this;\r\n        this.authenticated = authManager.isAuthenticated();\r\n        if (this.authenticated) {\r\n            this.getCurrentUser();\r\n            this.updatePermissions();\r\n        }\r\n        $scope.$on(Event.LOGGED_ON, () => {\r\n            this.authenticated = true;\r\n            this.getCurrentUser();\r\n            this.updatePermissions();\r\n        });\r\n        $scope.$on(Event.LOGGED_OFF, () => {\r\n            this.authenticated = false;\r\n            this.systemPermissions = {};\r\n        });\r\n    }\r\n\r\n    private getCurrentUser(): void {\r\n        this.authApi.getCurrentUser().then(u => {\r\n            this.user = u;\r\n        });\r\n    }\r\n\r\n    private updatePermissions() {\r\n        this.systemPermissions = this.authApi.getCurrentUser().then(u => {\r\n            this.systemPermissions = u.permissions;\r\n        });\r\n    }\r\n}\r\n\r\nexport function LoginDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: angular.IScope, element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes, controller: LoginController,\r\n                  transclude: angular.ITranscludeFunction) {\r\n    }\r\n\r\n    var directive: any = {};\r\n    directive.restrict = \"A\";\r\n    directive.templateUrl = url.template(\"components/login.html\");\r\n    directive.link = link;\r\n    directive.scope = true;\r\n    directive.controller = LoginController;\r\n    return directive;\r\n}\r\n\r\nLoginDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {ISelectable} from \"./../ISelectable\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\n\r\nexport interface IMultipleCheckboxSelectorDirectiveScope extends angular.IScope {\r\n    entities?: Array<ISelectable>;\r\n    model?: Array<number>;\r\n\r\n    vm?: MultipleCheckboxSelectorController;\r\n}\r\n\r\nexport class MultipleCheckboxSelectorController {\r\n    public static $inject = [\r\n        \"$scope\"\r\n    ];\r\n\r\n    constructor(private $scope: IMultipleCheckboxSelectorDirectiveScope) {\r\n        $scope.vm = this;\r\n\r\n        this.pushDataModel();\r\n    }\r\n\r\n    protected pushDataModel(): void {\r\n        for (var i = 0; i < this.$scope.entities.length; ++i) {\r\n            var entity: ISelectable = this.$scope.entities[i];\r\n            entity[\"selected\"] = false;\r\n            for (var j = 0; j < this.$scope.model.length; ++j) {\r\n                var id = this.$scope.model[j];\r\n                if (entity.id == id) {\r\n                    entity[\"selected\"] = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public itemSelection(entity: ISelectable): void {\r\n        for (var i = 0; i < this.$scope.model.length; ++i) {\r\n            var id = this.$scope.model[i];\r\n            if (id == entity.id) {\r\n                this.$scope.model.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n        this.$scope.model.push(entity.id);\r\n    }\r\n}\r\n\r\nexport function MultipleCheckboxSelectorDirectiveFactory(url: UrlService): angular.IDirective {\r\n    var directive: angular.IDirective = {};\r\n    directive.restrict = \"A\";\r\n    directive.controller = MultipleCheckboxSelectorController;\r\n    directive.scope = {\r\n        entities: \"=vhsEntities\",\r\n        model: \"=vhsModel\"\r\n    };\r\n    directive.templateUrl = url.template(\"components/multiple-checkbox-selector.html\");\r\n    directive.transclude = true;\r\n    return directive;\r\n}\r\n\r\nMultipleCheckboxSelectorDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {UrlService} from \"./../utils/UrlService\";\r\n\r\nexport function PageFooterDirectiveFactory(url: UrlService): angular.IDirective {\r\n    var directive: angular.IDirective = {\r\n        restrict: \"A\",\r\n        templateUrl: url.template(\"components/page-footer.html\")\r\n    };\r\n    return directive;\r\n}\r\n\r\nPageFooterDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {StorageWrapper, Storages} from \"./../infrastructure/Storage\";\r\nimport {Event} from \"./../authcore/Event\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {\r\n    IMenuUpdateListener,\r\n    MenuHelper\r\n} from \"./../utils/MenuHelper\";\r\nimport {\r\n    IPageHeaderUpdateListener,\r\n    PageHeaderHelper,\r\n    PageHeader\r\n} from \"./../utils/PageHeaderHelper\";\r\n\r\ninterface PageHeaderAttributes extends angular.IAttributes {\r\n}\r\n\r\nexport class PageHeaderController implements IMenuUpdateListener, IPageHeaderUpdateListener {\r\n    private static MULTIPLE_ACTIONS_LINK_TEMPLATE_START = '<li role=\"presentation\">';\r\n    private static MULTIPLE_ACTIONS_LINK_TEMPLATE_END = '</li>';\r\n    private static VHS_SESSION_HISTORY_KEY = \"vhs_session_navigation_history\";\r\n    private static MAX_HISTORY_DEPTH = 3;\r\n\r\n    public currentPageName: string = \"&nbsp;\";\r\n    public actionsPanelHtml: string;\r\n    public statusPanelHtml: string;\r\n    public multipleActionsOnPanel: boolean = false;\r\n    public hasHistory: boolean = false;\r\n    public history: Array<string> = [];\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$sce\",\r\n        \"$location\",\r\n        Storages.SESSION_NAME\r\n    ];\r\n\r\n    constructor($scope,\r\n                private $sce: angular.ISCEService,\r\n                private $location: angular.ILocationService,\r\n                private sessionStorage: StorageWrapper) {\r\n        $scope.vm = this;\r\n\r\n        //subscribe to update events\r\n        MenuHelper.addMenuUpdateListener(this);\r\n        PageHeaderHelper.addPageHeaderUpdateListener(this);\r\n\r\n        $scope.$on(Event.LOGGED_ON, () => {\r\n            this.history.splice(0, this.history.length);\r\n            this.hasHistory = false;\r\n            this.saveHistory();\r\n        });\r\n        $scope.$on(Event.LOGGED_OFF, () => {\r\n            this.history.splice(0, this.history.length);\r\n            this.hasHistory = false;\r\n            this.saveHistory();\r\n        });\r\n        if (this.sessionStorage.contains(PageHeaderController.VHS_SESSION_HISTORY_KEY)) {\r\n            var storedHistory = this.sessionStorage.get<string>(PageHeaderController.VHS_SESSION_HISTORY_KEY);\r\n            for (var i = 0; i < storedHistory.length; i++) {\r\n                this.history.push(storedHistory[i]);\r\n            }\r\n            this.hasHistory = this.history.length > 1;\r\n        }\r\n    }\r\n\r\n    public goBack() {\r\n        if (this.hasHistory) {\r\n            this.history.pop(); // forgot current url\r\n            var target = this.history.pop();\r\n            this.saveHistory();\r\n            this.$location.url(target);\r\n        }\r\n        this.hasHistory = this.history.length > 1;\r\n    }\r\n\r\n    public onMenuItemUpdate(newMenuItemKey: string, oldMenuItemKey: string) {\r\n        this.currentPageName = \"&nbsp;\";\r\n        this.actionsPanelHtml = \"\";\r\n        this.statusPanelHtml = \"\";\r\n        this.multipleActionsOnPanel = false;\r\n\r\n        var lastIndex = this.history.length - 1;\r\n        if (lastIndex < 0 || this.history[lastIndex] != this.$location.path()) {\r\n            if (this.history.length > PageHeaderController.MAX_HISTORY_DEPTH) {\r\n                this.history.splice(0, 1);\r\n            }\r\n            this.history.push(this.$location.path());\r\n            this.hasHistory = this.history.length > 1;\r\n            this.saveHistory();\r\n        }\r\n    }\r\n\r\n    public onHeaderUpdate(pageHeader: PageHeader) {\r\n        if (!pageHeader.preservePageName) {\r\n            this.currentPageName = pageHeader.pageName;\r\n        }\r\n        if (!pageHeader.preserveActionsPanel) {\r\n            var html = \"\";\r\n            this.multipleActionsOnPanel = false;\r\n            if (pageHeader.actions.length == 1) {\r\n                html = pageHeader.actions[0];\r\n            } else if (pageHeader.actions.length > 0) {\r\n                for (var i = 0; i < pageHeader.actions.length; i++) {\r\n                    html += PageHeaderController.MULTIPLE_ACTIONS_LINK_TEMPLATE_START + pageHeader.actions[i] + PageHeaderController.MULTIPLE_ACTIONS_LINK_TEMPLATE_END;\r\n                }\r\n                this.multipleActionsOnPanel = true;\r\n            }\r\n            this.actionsPanelHtml = this.$sce.getTrustedHtml(html);\r\n        }\r\n        if (!pageHeader.preserveStatusPanel) {\r\n            this.statusPanelHtml = this.$sce.getTrustedHtml(pageHeader.statusPanel);\r\n        }\r\n    }\r\n\r\n    private saveHistory() {\r\n        this.sessionStorage.put(PageHeaderController.VHS_SESSION_HISTORY_KEY, this.history);\r\n    }\r\n}\r\n\r\nexport function PageHeaderDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: angular.IScope, element: angular.IAugmentedJQuery,\r\n                  attributes: PageHeaderAttributes, controller: PageHeaderController,\r\n                  transclude: angular.ITranscludeFunction) {\r\n    }\r\n\r\n    var directive: any = {};\r\n    directive.restrict = \"A\";\r\n    directive.link = link;\r\n    directive.scope = {};\r\n    directive.controller = PageHeaderController;\r\n    directive.templateUrl = url.template(\"components/page-header.html\");\r\n    return directive;\r\n}\r\n\r\nPageHeaderDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {StorageWrapper, Storages} from \"./../infrastructure/Storage\";\r\nimport {Event} from \"./../authcore/Event\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {AppProperties} from \"./../utils/AppProperties\";\r\nimport {\r\n    IMenuUpdateListener,\r\n    MenuHelper\r\n} from \"./../utils/MenuHelper\";\r\nimport {\r\n    IPageHeaderUpdateListener,\r\n    PageHeaderHelper,\r\n    PageHeader\r\n} from \"./../utils/PageHeaderHelper\";\r\n\r\n\r\nexport class PageTitleController implements IPageHeaderUpdateListener {\r\n\r\n    public currentPageName: string = AppProperties.appTitle;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$sce\",\r\n        \"$location\",\r\n        Storages.SESSION_NAME\r\n    ];\r\n\r\n    constructor($scope,\r\n                private $sce: angular.ISCEService,\r\n                private $location: angular.ILocationService,\r\n                private sessionStorage: StorageWrapper) {\r\n        $scope.vm = this;\r\n\r\n        //subscribe to update events\r\n        PageHeaderHelper.addPageHeaderUpdateListener(this);\r\n    }\r\n\r\n    public onHeaderUpdate(pageHeader: PageHeader) {\r\n        if (!pageHeader.preservePageName) {\r\n            this.currentPageName = pageHeader.pageName;\r\n            document.title = this.currentPageName ? this.currentPageName : AppProperties.appTitle;\r\n        }\r\n    }\r\n}\r\n\r\nexport function PageTitleDirectiveFactory(): angular.IDirective {\r\n    function link($scope: angular.IScope, element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes, controller: PageTitleController,\r\n                  transclude: angular.ITranscludeFunction) {\r\n    }\r\n\r\n    var directive: any = {};\r\n    directive.restrict = \"A\";\r\n    directive.link = link;\r\n    directive.controller = PageTitleController;\r\n    return directive;\r\n}","import {AuthService} from \"./../auth/AuthService\";\r\nimport {AuthManager} from \"./../authcore/AuthManager\";\r\nimport {Event} from \"./../authcore/Event\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {IMenuUpdateListener, MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {MaterialsRouter} from \"./../urls/MaterialsRouter\";\r\nimport {BroadcastsRouter} from \"./../urls/BroadcastsRouter\";\r\nimport {StatisticsRouter} from \"./../urls/StatisticsRouter\";\r\nimport {FinancesRouter} from \"./../urls/FinancesRouter\";\r\nimport {NewsRouter} from \"./../urls/NewsRouter\";\r\nimport {InfoRouter} from \"./../urls/InfoRouter\";\r\nimport {UsersRouter} from \"./../urls/UsersRouter\";\r\nimport {CoursesRouter} from \"./../urls/CoursesRouter\";\r\nimport {QuizzesRouter} from \"./../urls/QuizzesRouter\";\r\nimport {PersonalRouter} from \"./../urls/PersonalRouter\";\r\nimport {ReferenceRouter} from \"./../urls/ReferenceRouter\";\r\nimport {LogsRouter} from \"./../urls/LogsRouter\";\r\nimport {SecuredObjectType} from \"./../security/permissions/SecuredObjectType\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {IPageHeaderUpdateListener, PageHeaderHelper, PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {SystemSettingsRouter} from \"./../urls/SystemSettingsRouter\";\r\n\r\ninterface IMenuItem {\r\n    key?: string;\r\n    name?: string;\r\n    url?: string;\r\n    urlFunc?: Function;\r\n    routeParamKey?: string;\r\n    allowed?: boolean;\r\n    allowFunc?: (p) => boolean;\r\n    items?: Array<IMenuItem>;\r\n}\r\n\r\ninterface IMenuGroup {\r\n    key?: string;\r\n    imgKey?: string;\r\n    name?: string;\r\n    url?: string;\r\n    items?: Array<IMenuItem>;\r\n    allowed?: boolean;\r\n}\r\n\r\nexport interface IBreadcrumb {\r\n    text: string;\r\n    url: string;\r\n}\r\n\r\nclass PersonalMenuController implements IMenuUpdateListener, IPageHeaderUpdateListener {\r\n\r\n    //private static PROJECT_PATH_PARAM = \"projectId\";\r\n\r\n    private systemPermissions: ISystemPermissions;\r\n\r\n    public menu: Array<IMenuGroup> = [];\r\n    public currentTopMenu: Array<IMenuItem> = [];\r\n    public currentMenuItemKey: string = \"\";\r\n    public currentMenuGroupKey: string = \"\";\r\n    public menuMap: Map<string, IMenuGroup> = new Map<string, IMenuGroup>();\r\n    public menuItemMap: Map<string, any> = new Map<string, any>();\r\n    public parentMap: Map<string, any> = new Map<string, any>();\r\n    public authenticated: boolean;\r\n\r\n    public breadcrumbs: Array<IBreadcrumb> = [];\r\n    private breadcrumbsPageName: string;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$location\",\r\n        \"$routeParams\",\r\n        AuthService.NAME,\r\n        PermissionsService.NAME,\r\n        AuthManager.NAME,\r\n        MaterialsRouter.NAME,\r\n        BroadcastsRouter.NAME,\r\n        StatisticsRouter.NAME,\r\n        FinancesRouter.NAME,\r\n        NewsRouter.NAME,\r\n        InfoRouter.NAME,\r\n        UsersRouter.NAME,\r\n        CoursesRouter.NAME,\r\n        QuizzesRouter.NAME,\r\n        PersonalRouter.NAME,\r\n        SystemSettingsRouter.NAME,\r\n        LogsRouter.NAME,\r\n        ReferenceRouter.NAME\r\n    ];\r\n\r\n    constructor($scope,\r\n                private $location: angular.ILocationService,\r\n                private $routeParams: angular.route.IRouteParamsService,\r\n                private authApi: AuthService,\r\n                private permissionsApi: PermissionsService,\r\n                authManager: AuthManager,\r\n                private materialsRouter: MaterialsRouter,\r\n                private broadcastsRouter: BroadcastsRouter,\r\n                private statisticsRouter: StatisticsRouter,\r\n                private financesRouter: FinancesRouter,\r\n                private newsRouter: NewsRouter,\r\n                private infoRouter: InfoRouter,\r\n                private usersRouter: UsersRouter,\r\n                private coursesRouter: CoursesRouter,\r\n                private quizzesRouter: QuizzesRouter,\r\n                private personalRouter: PersonalRouter,\r\n                private systemSettingsRouter: SystemSettingsRouter,\r\n                private logsRouter: LogsRouter,\r\n                private referenceRouter: ReferenceRouter) {\r\n        $scope.menuVM = this;\r\n        this.authenticated = authManager.isAuthenticated();\r\n        this.loadMenu(); // this was in 'else' section below, but for breadcrumbs it is better to have it here\r\n        if (this.authenticated) {\r\n            this.updatePermissions();\r\n        }\r\n        this.changeBodyCss();\r\n        $scope.$on(Event.LOGGED_ON, () => {\r\n            this.authenticated = true;\r\n            this.updatePermissions();\r\n            this.changeBodyCss();\r\n        });\r\n        $scope.$on(Event.LOGGED_OFF, () => {\r\n            this.authenticated = false;\r\n            this.systemPermissions = {};\r\n            this.menu.splice(0);\r\n            this.currentTopMenu.splice(0);\r\n            this.loadMenu();\r\n            this.changeBodyCss();\r\n        });\r\n        //subscribe to menu update events\r\n        MenuHelper.addMenuUpdateListener(this);\r\n        //subscribe to page header update events\r\n        PageHeaderHelper.addPageHeaderUpdateListener(this);\r\n    }\r\n\r\n    private updatePermissions() {\r\n        this.systemPermissions = this.authApi.getCurrentUser().then(u => {\r\n            this.systemPermissions = u.permissions;\r\n            this.loadMenu();\r\n        });\r\n    }\r\n\r\n    public loadMenu() {\r\n        let menuByPermissions: Array<IMenuGroup> = [\r\n            {\r\n               key: MenuHelper.SEARCH_MENU_KEY,\r\n               name: 'Search',\r\n               allowed: true,\r\n               url: '#' + this.materialsRouter.searchUrl(),\r\n               items: []\r\n            },\r\n            {\r\n                key: MenuHelper.EDUCATION_MENU_KEY,\r\n                name: 'Education',\r\n                allowed: true,\r\n                dynamicUrl: true,\r\n                items: [\r\n                    //{\r\n                    //    key: MenuHelper.EDUCATION_STUDENT_BROADCASTS_MENU_KEY,\r\n                    //    name: 'Webcasts',\r\n                    //    allowed: this.authenticated && this.systemPermissions && this.systemPermissions.participateBroadcasts,\r\n                    //    url: '#' + this.broadcastsRouter.studentUrl(),\r\n                    //    items: []\r\n                    //},\r\n                    //{\r\n                    //    key: MenuHelper.EDUCATION_TEACHER_BROADCASTS_MENU_KEY,\r\n                    //    name: 'Webcasts',\r\n                    //    allowed: this.authenticated && this.systemPermissions && this.systemPermissions.organizationBroadcasts,\r\n                    //    url: '#' + this.broadcastsRouter.teacherUrl(),\r\n                    //    items: []\r\n                    //},\r\n                    {\r\n                        key: MenuHelper.EDUCATION_COURSES_MENU_KEY,\r\n                        name: 'Courses',\r\n                        allowed: true,\r\n                        url: '#' + this.coursesRouter.indexUrl(),\r\n                        items: []\r\n                    },\r\n                    //{\r\n                    //    key: MenuHelper.EDUCATION_PLAYLISTS_MENU_KEY,\r\n                    //    name: 'Playlists',\r\n                    //    allowed: true,\r\n                    //    url: '#' + this.materialsRouter.playlistsUrl(),\r\n                    //    items: []\r\n                    //},\r\n                    {\r\n                        key: MenuHelper.EDUCATION_QUIZZES_MENU_KEY,\r\n                        name: 'Quizzes',\r\n                        allowed: true,\r\n                        url: '#' + this.quizzesRouter.indexUrl(),\r\n                        items: []\r\n                    },\r\n                ]\r\n            },\r\n            //{\r\n            //    key: MenuHelper.FAVORITES_MENU_KEY,\r\n            //    name: 'Favorites',\r\n            //    allowed: this.authenticated,\r\n            //    url: '#' + this.personalRouter.favoritesUrl(),\r\n            //    items: []\r\n            //},\r\n            {\r\n                key: MenuHelper.OPERATIONS_MENU_KEY,\r\n                name: 'Operations',\r\n                allowed: this.authenticated && this.systemPermissions && (this.systemPermissions.addMaterial || this.systemPermissions.viewAnalytics || this.systemPermissions.viewMyAnalytics),\r\n                dynamicUrl: true,\r\n                items: [\r\n                    {\r\n                        key: MenuHelper.OPERATIONS_UPLOADS_MENU_KEY,\r\n                        name: 'Uploads',\r\n                        url: '#' + this.materialsRouter.createUrl(),\r\n                        allowed: this.authenticated && this.systemPermissions && this.systemPermissions.addMaterial,\r\n                        items: []\r\n                    },\r\n                    //{\r\n                    //    key: MenuHelper.ANALYTICS_MENU_KEY,\r\n                    //    name: 'Analytics',\r\n                    //    url: '#' + this.statisticsRouter.materialViewReportUrl(),\r\n                    //    allowed: this.authenticated && this.systemPermissions && (this.systemPermissions.viewAnalytics || this.systemPermissions.viewMyAnalytics),\r\n                    //    items: [\r\n                    //        {\r\n                    //            key: MenuHelper.ANALYTICS_MATERIAL_VIEW_REPORT_MENU_KEY,\r\n                    //            name: 'The report on view of materials',\r\n                    //            url: '#' + this.statisticsRouter.materialViewReportUrl(),\r\n                    //            allowed: this.authenticated && this.systemPermissions && (this.systemPermissions.viewAnalytics || this.systemPermissions.viewMyAnalytics)\r\n                    //        },\r\n                    //        {\r\n                    //            key: MenuHelper.ANALYTICS_MATERIAL_DOWNLOAD_REPORT_MENU_KEY,\r\n                    //            name: 'The report on download of materials',\r\n                    //            url: '#' + this.statisticsRouter.materialDownloadReportUrl(),\r\n                    //            allowed: this.authenticated && this.systemPermissions && (this.systemPermissions.viewAnalytics || this.systemPermissions.viewMyAnalytics)\r\n                    //        },\r\n                    //        {\r\n                    //            key: MenuHelper.ANALYTICS_MATERIAL_UPLOAD_REPORT_MENU_KEY,\r\n                    //            name: 'The report on upload of materials',\r\n                    //            url: '#' + this.statisticsRouter.materialUploadReportUrl(),\r\n                    //            allowed: this.authenticated && this.systemPermissions && (this.systemPermissions.viewAnalytics || this.systemPermissions.viewMyAnalytics)\r\n                    //        }\r\n                    //    ]\r\n                    //}\r\n                ]\r\n            },\r\n            //{\r\n            //    key: MenuHelper.NEWS_MENU_KEY,\r\n            //    name: 'News',\r\n            //    allowed: true,\r\n            //    dynamicUrl: true,\r\n            //    items: [\r\n            //        {\r\n            //            key: MenuHelper.ALL_NEWS_MENU_KEY,\r\n            //            name: 'All News',\r\n            //            url: '#' + this.newsRouter.newsSearchUrl('ALL'),\r\n            //            allowed: true,\r\n            //            items: []\r\n            //        },\r\n            //        {\r\n            //            key: MenuHelper.STUDENTS_OFFERS_MENU_KEY,\r\n            //            name: 'News for Students',\r\n            //            url: '#' + this.newsRouter.newsSearchUrl('STUDENTS'),\r\n            //            allowed: this.authenticated,\r\n            //            items: []\r\n            //        }\r\n            //    ]\r\n            //},\r\n            //{\r\n            //    key: MenuHelper.INFO_MENU_KEY,\r\n            //    name: 'About',\r\n            //    allowed: true,\r\n            //    dynamicUrl: true,\r\n            //    items: [\r\n            //        {\r\n            //            key: MenuHelper.ABOUT_PROJECT_MENU_KEY,\r\n            //            name: 'About the System',\r\n            //            url: '#' + this.infoRouter.aboutProjectUrl(),\r\n            //            allowed: true,\r\n            //            items: []\r\n            //        },\r\n            //        {\r\n            //            key: MenuHelper.ABOUT_COMPANY_MENU_KEY,\r\n            //            name: 'About Us',\r\n            //            url: '#' + this.infoRouter.aboutCompanyUrl(),\r\n            //            allowed: true,\r\n            //            items: []\r\n            //        },\r\n            //        {\r\n            //            key: MenuHelper.FAQ_MENU_KEY,\r\n            //            name: 'FAQ',\r\n            //            url: '#' + this.infoRouter.faqUrl(),\r\n            //            allowed: true,\r\n            //            items: []\r\n            //        },\r\n            //        {\r\n            //            key: MenuHelper.CONTACTS_MENU_KEY,\r\n            //            name: 'Contacts',\r\n            //            url: '#' + this.infoRouter.contactsUrl(),\r\n            //            allowed: true,\r\n            //            items: []\r\n            //        }\r\n            //    ]\r\n            //},\r\n            {\r\n                key: MenuHelper.ADMINISTRATION_MENU_KEY,\r\n                name: 'Administration',\r\n                allowed: this.authenticated && this.systemPermissions && (\r\n                    this.systemPermissions.viewUsers ||\r\n                    this.systemPermissions.viewGroups ||\r\n                    this.systemPermissions.editStoragePlaces ||\r\n                    this.systemPermissions.viewReferenceData ||\r\n                    this.systemPermissions.viewSystemLog ||\r\n                    this.systemPermissions.viewSecurityLog\r\n                ),\r\n                dynamicUrl: true,\r\n                items: [\r\n                    {\r\n                        key: MenuHelper.ADMINISTRATION_USERS_MENU_KEY,\r\n                        name: 'Users',\r\n                        url: '#' + this.usersRouter.indexUrl(),\r\n                        allowed: this.authenticated && this.systemPermissions && this.systemPermissions.viewUsers,\r\n                        items: []\r\n                    },\r\n                    {\r\n                        key: MenuHelper.ADMINISTRATION_GROUPS_MENU_KEY,\r\n                        name: 'User Groups',\r\n                        url: '#' + this.usersRouter.groupsIndexUrl(),\r\n                        allowed: this.authenticated && this.systemPermissions && this.systemPermissions.viewGroups,\r\n                        items: []\r\n                    },\r\n                    {\r\n                        key: MenuHelper.ADMINISTRATION_STORAGE_PLACES_MENU_KEY,\r\n                        name: 'Storages',\r\n                        url: '#' + this.systemSettingsRouter.storagePlacesIndexUrl(),\r\n                        allowed: this.authenticated && this.systemPermissions && this.systemPermissions.editStoragePlaces,\r\n                        items: []\r\n                    },\r\n                    {\r\n                        key: MenuHelper.ADMINISTRATION_SUBJECTS_MENU_KEY,\r\n                        name: 'Subjects',\r\n                        url: '#' + this.referenceRouter.indexUrl(\"subjects\"),\r\n                        allowed: this.authenticated && this.systemPermissions && this.systemPermissions.viewReferenceData,\r\n                        items: []\r\n                    },\r\n                    {\r\n                        key: MenuHelper.ADMINISTRATION_LANGUAGES_MENU_KEY,\r\n                        name: 'Languages',\r\n                        url: '#' + this.referenceRouter.indexUrl(\"languages\"),\r\n                        allowed: this.authenticated && this.systemPermissions && this.systemPermissions.viewReferenceData,\r\n                        items: []\r\n                    },\r\n                    {\r\n                        key: MenuHelper.ADMINISTRATION_COURSE_TYPES_MENU_KEY,\r\n                        name: 'Course Types',\r\n                        url: '#' + this.referenceRouter.indexUrl(\"courseTypes\"),\r\n                        allowed: this.authenticated && this.systemPermissions && this.systemPermissions.viewReferenceData,\r\n                        items: []\r\n                    },\r\n                    {\r\n                        key: MenuHelper.ADMINISTRATION_SOURCES_MENU_KEY,\r\n                        name: 'Sources',\r\n                        url: '#' + this.referenceRouter.indexUrl(\"sources\"),\r\n                        allowed: this.authenticated && this.systemPermissions && this.systemPermissions.viewReferenceData,\r\n                        items: []\r\n                    },\r\n                    {\r\n                        key: MenuHelper.ADMINISTRATION_SOURCE_TYPES_MENU_KEY,\r\n                        name: 'Source Types',\r\n                        url: '#' + this.referenceRouter.indexUrl(\"sourceTypes\"),\r\n                        allowed: this.authenticated && this.systemPermissions && this.systemPermissions.viewReferenceData,\r\n                        items: []\r\n                    },\r\n                    {\r\n                        key: MenuHelper.ADMINISTRATION_COMPLEXITY_LEVELS_MENU_KEY,\r\n                        name: 'Complexity Levels',\r\n                        url: '#' + this.referenceRouter.indexUrl(\"complexityLevels\"),\r\n                        allowed: this.authenticated && this.systemPermissions && this.systemPermissions.viewReferenceData,\r\n                        items: []\r\n                    },\r\n                    {\r\n                        key: MenuHelper.ADMINISTRATION_SECURITY_LOGS_KEY,\r\n                        name: 'Security Logs',\r\n                        url: '#' + this.logsRouter.securityLogsUrl(),\r\n                        allowed: this.authenticated && this.systemPermissions && this.systemPermissions.viewSecurityLog,\r\n                        items: []\r\n                    },\r\n                    {\r\n                        key: MenuHelper.ADMINISTRATION_SYSTEM_LOGS_KEY,\r\n                        name: 'System Logs',\r\n                        url: '#' + this.logsRouter.systemLogsUrl(),\r\n                        allowed: this.authenticated && this.systemPermissions && this.systemPermissions.viewSystemLog,\r\n                        items: []\r\n                    }\r\n                ]\r\n            }\r\n        ];\r\n\r\n        let personalAccount: IMenuGroup = {\r\n            key: MenuHelper.PERSONAL_ACCOUNT_MENU_KEY,\r\n            name: 'My profile',\r\n            url: '#' + (this.systemPermissions && this.systemPermissions.addMaterial ? this.personalRouter.uploadsUrl() : this.personalRouter.coursesUrl()),\r\n            allowed: this.authenticated,\r\n            items: [\r\n                {\r\n                    key: MenuHelper.PERSONAL_ACCOUNT_UPLOADS_MENU_KEY,\r\n                    name: 'My uploads',\r\n                    url: '#' + this.personalRouter.uploadsUrl(),\r\n                    allowed: this.authenticated && this.systemPermissions && this.systemPermissions.addMaterial,\r\n                    items: []\r\n                },\r\n                {\r\n                    key: MenuHelper.PERSONAL_ACCOUNT_COURSES_MENU_KEY,\r\n                    name: 'My courses',\r\n                    url: '#' + this.personalRouter.coursesUrl(),\r\n                    allowed: this.authenticated,\r\n                    items: []\r\n                },\r\n                {\r\n                    key: MenuHelper.PERSONAL_ACCOUNT_QUIZZES_MENU_KEY,\r\n                    name: 'My quizzes',\r\n                    url: '#' + this.personalRouter.quizzesUrl(),\r\n                    allowed: this.authenticated,\r\n                    items: []\r\n                },\r\n                {\r\n                    key: MenuHelper.PERSONAL_ACCOUNT_PLAYLISTS_MENU_KEY,\r\n                    name: 'My playlists',\r\n                    url: '#' + this.personalRouter.playlistsUrl(),\r\n                    allowed: this.authenticated,\r\n                    items: []\r\n                },\r\n                {\r\n                    key: MenuHelper.PERSONAL_ACCOUNT_SUBSCRIPTIONS_MENU_KEY,\r\n                    name: 'My subscriptions',\r\n                    url: '#' + this.personalRouter.subscriptionsUrl(),\r\n                    allowed: this.authenticated,\r\n                    items: []\r\n                },\r\n                {\r\n                    key: MenuHelper.PERSONAL_ACCOUNT_NEW_COMMENTS_MENU_KEY,\r\n                    name: 'New comments',\r\n                    url: '#' + this.personalRouter.newCommentsUrl(),\r\n                    allowed: this.authenticated,\r\n                    items: []\r\n                },\r\n                {\r\n                    key: MenuHelper.PERSONAL_ACCOUNT_SUPPORT_MENU_KEY,\r\n                    name: 'Support',\r\n                    url: '#' + this.personalRouter.supportUrl(),\r\n                    allowed: this.authenticated,\r\n                    items: []\r\n                },\r\n                {\r\n                    key: MenuHelper.PERSONAL_ACCOUNT_COUPONS_MENU_KEY,\r\n                    name: 'Coupons',\r\n                    url: '#' + this.personalRouter.couponsUrl(),\r\n                    allowed: this.authenticated,\r\n                    items: []\r\n                },\r\n                {\r\n                    key: MenuHelper.PERSONAL_ACCOUNT_PURCHASES_HISTORY_MENU_KEY,\r\n                    name: 'History of purchases',\r\n                    url: '#' + this.personalRouter.purchasesHistoryUrl(),\r\n                    allowed: this.authenticated && this.systemPermissions && this.systemPermissions.viewPurchaseHistory,\r\n                    items: []\r\n                },\r\n                {\r\n                    key: MenuHelper.PERSONAL_ACCOUNT_BALANCE_MENU_KEY,\r\n                    name: 'Top-up',\r\n                    url: '#' + this.personalRouter.balanceUrl(),\r\n                    allowed: this.authenticated && this.systemPermissions && this.systemPermissions.rechargeAccount,\r\n                    items: []\r\n                },\r\n                {\r\n                    key: MenuHelper.PERSONAL_ACCOUNT_SETTINGS_MENU_KEY,\r\n                    name: 'Settings',\r\n                    url: '#' + this.personalRouter.settingsUrl(),\r\n                    allowed: this.authenticated,\r\n                    items: []\r\n                }\r\n            ]\r\n        };\r\n\r\n        this.menu.splice(0);\r\n        for (let i = 0; i < menuByPermissions.length; i++) {\r\n            this.menu.push(menuByPermissions[i]);\r\n        }\r\n\r\n        this.menuMap.clear();\r\n        this.parentMap.clear();\r\n        this.menuItemMap.clear();\r\n        this.menuMap = new Map<string, IMenuGroup>();\r\n\r\n        for (let i = 0; i < this.menu.length; ++i) {\r\n            let menuGroup: IMenuGroup = this.menu[i];\r\n            this.menuMap.set(menuGroup.key, menuGroup);\r\n            this.menuItemMap.set(menuGroup.key, menuGroup);\r\n            for (let j = 0; j < menuGroup.items.length; ++j) {\r\n                let menuItem: IMenuItem = menuGroup.items[j];\r\n                this.menuMap.set(menuItem.key, menuGroup);\r\n                this.parentMap.set(menuItem.key, menuGroup);\r\n                this.menuItemMap.set(menuItem.key, menuItem);\r\n                for (let k = 0; k < menuItem.items.length; ++k) {\r\n                    let menuItem2: IMenuItem = menuItem.items[k];\r\n                    this.parentMap.set(menuItem2.key, menuItem);\r\n                    this.menuItemMap.set(menuItem2.key, menuItem2);\r\n                }\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < personalAccount.items.length; ++i) {\r\n            let menuItem: IMenuItem = personalAccount.items[i];\r\n            this.parentMap.set(menuItem.key, personalAccount);\r\n            this.menuItemMap.set(menuItem.key, menuItem);\r\n        }\r\n\r\n        this.currentMenuItemKey = MenuHelper.getCurrentMenuItemKey();\r\n        this.currentMenuGroupKey = this.getCurrentMenuGroupKey();\r\n        //this.recalculateCurrentTopMenuItems(this.currentMenuItemKey);\r\n        //this.recalculateTopMenu();\r\n        //this.recalculateLeftMenu();\r\n    }\r\n\r\n    private getCurrentMenuGroupKey() {\r\n        if (this.menuMap.has(MenuHelper.getCurrentMenuItemKey())) {\r\n            return this.menuMap.get(MenuHelper.getCurrentMenuItemKey()).key;\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    //private recalculateCurrentTopMenuItems(menuItemKey): Array<IMenuItem> {\r\n    //    if (this.menuMap.has(menuItemKey)) {\r\n    //        this.currentTopMenu = this.menuMap.get(menuItemKey).items;\r\n    //    } else {\r\n    //        this.currentTopMenu = [];\r\n    //    }\r\n    //    return this.currentTopMenu;\r\n    //}\r\n\r\n    //private recalculateTopMenu() {\r\n    //    var entityKey: string = null;\r\n    //    var entityId: string = null;\r\n    //    var items: Array<IMenuItem> = [];\r\n    //    for (var j = 0; j < this.currentTopMenu.length; j++) {\r\n    //        var menuItem: IMenuItem = this.currentTopMenu[j];\r\n    //        if (menuItem.allowed && menuItem.urlFunc && menuItem.routeParamKey) {\r\n    //            var entityIdParam = this.$routeParams[menuItem.routeParamKey];\r\n    //            if (menuItem.allowFunc) { //hide items dependent from permissions\r\n    //                menuItem.url = null;\r\n    //                items.push(menuItem);\r\n    //                if (entityIdParam && entityKey == null) {\r\n    //                    entityKey = menuItem.routeParamKey;\r\n    //                    entityId = entityIdParam;\r\n    //                }\r\n    //            } else if (entityIdParam) { //show url independent from permissions\r\n    //                menuItem.url = '#' + menuItem.urlFunc.call(this, entityIdParam);\r\n    //            } else {\r\n    //                menuItem.url = null; // hide urls for another route params\r\n    //            }\r\n    //        }\r\n    //    }\r\n    //    if (items.length > 0 && entityKey && entityId) { //at least one item depends from permissions\r\n    //        this.recalculateMenuItemsForPermissions(items, entityKey, entityId);\r\n    //    }\r\n    //}\r\n\r\n    //private recalculateMenuItemsForPermissions(items: Array<IMenuItem>, entityKey: string, entityId: string) {\r\n    //    var objectType: SecuredObjectType = null;\r\n    //    //switch (entityKey) {\r\n    //    //    case PersonalMenuController.PROJECT_PATH_PARAM:\r\n    //    //        objectType = SecuredObjectType.PROJECT;\r\n    //    //        break;\r\n    //    //}\r\n    //    if (objectType != null) {\r\n    //        this.permissionsApi.getSecuredObjectPermissions(objectType, entityId).then((permissions) => {\r\n    //            for (var j = 0; j < items.length; j++) {\r\n    //                var menuItem: IMenuItem = items[j];\r\n    //                if (menuItem.allowed && menuItem.urlFunc && menuItem.routeParamKey && menuItem.allowFunc) {\r\n    //                    var entityIdParam = this.$routeParams[menuItem.routeParamKey];\r\n    //                    if (entityIdParam && entityId == entityIdParam) {\r\n    //                        if (menuItem.allowFunc(permissions)) {\r\n    //                            menuItem.url = '#' + menuItem.urlFunc.call(this, entityIdParam);\r\n    //                        }\r\n    //                    }\r\n    //                }\r\n    //            }\r\n    //        });\r\n    //    }\r\n    //}\r\n\r\n    public onMenuItemUpdate(newMenuItemKey: string, oldMenuItemKey: string) {\r\n        this.currentMenuItemKey = newMenuItemKey;\r\n        this.currentMenuGroupKey = this.getCurrentMenuGroupKey();\r\n        //if (newMenuItemKey != oldMenuItemKey) {\r\n        //    if (this.menuMap.get(newMenuItemKey) != this.menuMap.get(oldMenuItemKey)) {\r\n        //        this.recalculateCurrentTopMenuItems(newMenuItemKey);\r\n        //    }\r\n        //}\r\n        //this.recalculateTopMenu();\r\n        // console.log('New menu item: ' + newMenuItemKey);\r\n        this.breadcrumbsPageName = ''; // TODO: peer review\r\n        this.recalculateBreadcrumbs();\r\n    }\r\n\r\n    private changeBodyCss() {\r\n        if (this.authenticated) {\r\n            $('body').removeClass('login');\r\n        } else {\r\n            $('body').addClass('login');\r\n        }\r\n    }\r\n\r\n    //private recalculateLeftMenu() {\r\n    //    this.menuMap.forEach(leftMenuGroup => {\r\n    //        for (var i = 0; i < leftMenuGroup.items.length; i++) {\r\n    //            var topMenuItem: IMenuItem = leftMenuGroup.items[i];\r\n    //            if (topMenuItem && !topMenuItem.routeParamKey && topMenuItem.allowed && topMenuItem.url) {\r\n    //                leftMenuGroup.url = topMenuItem.url;\r\n    //                break;\r\n    //            }\r\n    //        }\r\n    //    })\r\n    //}\r\n\r\n    public onHeaderUpdate(pageHeader: PageHeader) {\r\n        this.breadcrumbsPageName = pageHeader.pageName;\r\n        // console.log('New page header: ' + this.breadcrumbsPageName);\r\n        this.recalculateBreadcrumbs();\r\n    }\r\n\r\n    private recalculateBreadcrumbs(): void {\r\n        let currentMenuItem: any = this.menuItemMap.get(this.currentMenuItemKey);\r\n        if (!currentMenuItem) {\r\n            this.breadcrumbs = null;\r\n            return;\r\n        }\r\n\r\n        let breadcrumbs: Array<IBreadcrumb> = [];\r\n        if (this.breadcrumbsPageName && this.breadcrumbsPageName != \"\" && this.breadcrumbsPageName != currentMenuItem.name) {\r\n            breadcrumbs.push({\r\n                text: this.breadcrumbsPageName,\r\n                url: null\r\n            });\r\n        }\r\n        breadcrumbs.push({\r\n            text: currentMenuItem.name,\r\n            url: breadcrumbs.length > 0 ? currentMenuItem.url : null\r\n        });\r\n        while (this.parentMap.has(currentMenuItem.key)) {\r\n            let previousUrl: string = currentMenuItem.url;\r\n            currentMenuItem = this.parentMap.get(currentMenuItem.key);\r\n            breadcrumbs.push({\r\n                text: currentMenuItem.name,\r\n                url: currentMenuItem.dynamicUrl ? previousUrl : currentMenuItem.url\r\n            });\r\n        }\r\n        breadcrumbs.push({\r\n            text: 'Home',\r\n            url: '#/'\r\n        });\r\n        this.breadcrumbs = breadcrumbs.reverse();\r\n    }\r\n}\r\n\r\ninterface PersonalMenuAttributes extends angular.IAttributes {\r\n}\r\n\r\nexport function PersonalMenuDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: angular.IScope, element: angular.IAugmentedJQuery,\r\n                  attributes: PersonalMenuAttributes, controller: PersonalMenuController,\r\n                  transclude: angular.ITranscludeFunction) {\r\n    }\r\n\r\n    var directive: any = {};\r\n    directive.restrict = \"A\";\r\n    directive.link = link;\r\n    directive.scope = true;\r\n    directive.controller = PersonalMenuController;\r\n    return directive;\r\n}\r\n\r\nPersonalMenuDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n\r\nexport function NavigationPersonalMenuDirectiveFactory(url: UrlService): angular.IDirective {\r\n\r\n    function link($scope: angular.IScope, element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes, controller: PersonalMenuController,\r\n                  transclude: angular.ITranscludeFunction) {\r\n    }\r\n\r\n    var directive: any = {};\r\n    directive.restrict = \"A\";\r\n    directive.templateUrl = url.template(\"components/menu/navigation-personal-menu.html\");\r\n    directive.link = link;\r\n    directive.require = \"^personalMenu\";\r\n    return directive;\r\n}\r\n\r\nNavigationPersonalMenuDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n\r\nexport function LeftPersonalMenuDirectiveFactory(url: UrlService): angular.IDirective {\r\n\r\n    function link($scope: any, element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes, controller: PersonalMenuController,\r\n                  transclude: angular.ITranscludeFunction) {\r\n    }\r\n\r\n    var directive: any = {};\r\n    directive.restrict = \"A\";\r\n    directive.templateUrl = url.template(\"components/menu/left-personal-menu.html\");\r\n    directive.link = link;\r\n    directive.require = \"^personalMenu\";\r\n    return directive;\r\n}\r\n\r\nLeftPersonalMenuDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n\r\nexport function VhsBreadcrumbsDirectiveFactory(url: UrlService): ng.IDirective {\r\n\r\n    function link($scope: ng.IScope, element: ng.IAugmentedJQuery,\r\n                  attributes: ng.IAttributes, controller: PersonalMenuController,\r\n                  transclude: ng.ITranscludeFunction) {\r\n    }\r\n\r\n    var directive: any = {};\r\n    directive.restrict = \"A\";\r\n    directive.templateUrl = url.template(\"components/vhs-breadcrumbs.html\");\r\n    directive.link = link;\r\n    directive.require = \"^personalMenu\";\r\n    return directive;\r\n}\r\n\r\nVhsBreadcrumbsDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {UrlService} from \"./../utils/UrlService\";\r\nimport {ISelectableReferenceEntity} from \"./../reference/models/ISelectableReferenceEntity\";\r\nimport {ReferenceService} from \"./../reference/ReferenceService\";\r\nimport {ReferenceUtils} from \"./../reference/ReferenceUtils\";\r\nimport {ReferenceEntitiesParams} from \"./../reference/models/IReferenceEntitiesParams\";\r\n\r\nexport interface IReferenceCheckboxSelectorDirectiveScope extends ng.IScope {\r\n    referenceName?: string;\r\n    referenceFilter?: string;\r\n    referenceSorting?: string;\r\n    model?: any;\r\n    modelProperty?: string;\r\n    disabled?: boolean;\r\n\r\n    vm?: ReferenceCheckboxSelectorController;\r\n}\r\n\r\nexport class ReferenceCheckboxSelectorController {\r\n\r\n    public referenceEntities: Array<ISelectableReferenceEntity>;\r\n    public selectAll: boolean;\r\n\r\n    private modelIds: Array<number>;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        ReferenceService.NAME,\r\n        ReferenceUtils.NAME\r\n    ];\r\n\r\n    constructor(private $scope: IReferenceCheckboxSelectorDirectiveScope,\r\n                private referenceApi: ReferenceService,\r\n                private referenceUtils: ReferenceUtils) {\r\n        $scope.vm = this;\r\n        this.referenceApi.getActiveReferenceEntitiesForSelector(this.$scope.referenceName, new ReferenceEntitiesParams(\r\n            this.$scope.referenceFilter, this.$scope.referenceSorting, undefined, undefined), null)\r\n            .then(result => {\r\n                this.referenceEntities = result;\r\n\r\n                this.$scope.$watch(() => {\r\n                    return $scope.model[$scope.modelProperty]\r\n                }, (newValue) => {\r\n                    this.modelIds = $scope.model[$scope.modelProperty];\r\n                    this.pushDataModel();\r\n                });\r\n            });\r\n    }\r\n\r\n    protected pushDataModel(): void {\r\n        for (var i = 0; i < this.referenceEntities.length; ++i) {\r\n            var entity: ISelectableReferenceEntity = this.referenceEntities[i];\r\n            entity[\"selected\"] = false;\r\n            for (var j = 0; j < this.modelIds.length; ++j) {\r\n                var id = this.modelIds[j];\r\n                if (entity.id == id) {\r\n                    entity[\"selected\"] = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.initSelectAll();\r\n    }\r\n\r\n    public itemSelection(entity: ISelectableReferenceEntity): void {\r\n        for (var i = 0; i < this.modelIds.length; ++i) {\r\n            var id = this.modelIds[i];\r\n            if (id == entity.id) {\r\n                this.modelIds.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n        this.modelIds.push(entity.id);\r\n    }\r\n\r\n    public initSelectAll(): boolean {\r\n        var countSelected = 0;\r\n        for (var i = 0; i < this.referenceEntities.length; i++) {\r\n            if (this.referenceEntities[i][\"selected\"]) {\r\n                countSelected++;\r\n            }\r\n        }\r\n        return this.selectAll = this.referenceEntities && countSelected == this.referenceEntities.length;\r\n    }\r\n\r\n    public clickSelectAll(): void {\r\n        if (!this.initSelectAll()) {\r\n            for (var i = 0; i < this.referenceEntities.length; ++i) {\r\n                var entity: ISelectableReferenceEntity = this.referenceEntities[i];\r\n                if (this.modelIds.indexOf(entity.id) < 0) {\r\n                    this.itemSelection(entity);\r\n                }\r\n            }\r\n        } else {\r\n            for (var i = 0; i < this.referenceEntities.length; ++i) {\r\n                var entity: ISelectableReferenceEntity = this.referenceEntities[i];\r\n                if (this.modelIds.indexOf(entity.id) >= 0) {\r\n                    this.itemSelection(entity);\r\n                }\r\n            }\r\n        }\r\n        this.pushDataModel();\r\n        this.initSelectAll();\r\n    }\r\n}\r\n\r\nexport function ReferenceCheckboxSelectorDirectiveFactory(url: UrlService): ng.IDirective {\r\n    var directive: ng.IDirective = {};\r\n    directive.restrict = \"A\";\r\n    directive.controller = ReferenceCheckboxSelectorController;\r\n    directive.scope = {\r\n        referenceName: \"=vhsReferenceName\",\r\n        referenceFilter: \"=?vhsReferenceFilter\",\r\n        referenceSorting: \"=?vhsReferenceSorting\",\r\n        model: \"=vhsModel\",\r\n        modelProperty: \"=vhsModelProperty\",\r\n        disabled: \"=?vhsDisabled\",\r\n    };\r\n    directive.templateUrl = url.template(\"components/reference-checkbox-selector.html\");\r\n    directive.transclude = true;\r\n    return directive;\r\n}\r\n\r\nReferenceCheckboxSelectorDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {UrlService} from \"./../utils/UrlService\";\r\nimport {ISelectableReferenceEntity} from \"./../reference/models/ISelectableReferenceEntity\";\r\nimport {ReferenceService} from \"./../reference/ReferenceService\";\r\nimport {ReferenceRedirect} from \"./../reference/ReferenceRedirect\";\r\nimport {ReferenceEntitiesParams} from \"./../reference/models/IReferenceEntitiesParams\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\n\r\nexport interface IReferenceDropdownSelectorDirectiveScope extends angular.IScope {\r\n    referenceName?: string;\r\n    referenceFilter?: string;\r\n    referenceSorting?: string;\r\n    model?: any;\r\n    modelProperty?: string;\r\n    disabled?: boolean;\r\n    required?: boolean;\r\n    elementName?: string;\r\n    nullable?: boolean;\r\n    placeholder?: string;\r\n    editable?: boolean;\r\n    style: any;\r\n    onSelectorChange?: (object?: any) => void;\r\n\r\n    vm?: ReferenceDropdownSelectorController;\r\n}\r\n\r\nexport class ReferenceDropdownSelectorController {\r\n    public systemPermissions: ISystemPermissions;\r\n    public referenceEntities: Array<ISelectableReferenceEntity>;\r\n    private referenceEntitiesMap: Map<number, ISelectableReferenceEntity>;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        ReferenceService.NAME,\r\n        ReferenceRedirect.NAME,\r\n        PermissionsService.NAME\r\n    ];\r\n\r\n    constructor(protected $scope: IReferenceDropdownSelectorDirectiveScope,\r\n                protected referenceApi: ReferenceService,\r\n                protected referenceRedirect: ReferenceRedirect,\r\n                protected permissionsApi: PermissionsService) {\r\n        $scope.vm = this;\r\n\r\n        this.permissionsApi.getSystemPermissions().then(p => {\r\n            this.systemPermissions = p;\r\n        });\r\n        this.referenceApi.getActiveReferenceEntitiesForSelector(this.$scope.referenceName, new ReferenceEntitiesParams(\r\n                this.$scope.referenceFilter, this.$scope.referenceSorting, undefined, undefined), null).then(result => {\r\n            this.referenceEntities = result;\r\n            this.referenceEntitiesMap = new Map<number, ISelectableReferenceEntity>();\r\n            this.referenceEntities.forEach((entity: ISelectableReferenceEntity) => {\r\n                this.referenceEntitiesMap.set(entity.id, entity);\r\n            });\r\n        });\r\n    }\r\n\r\n    public changeCallback = (id: number) => {\r\n        this.$scope.onSelectorChange(this.referenceEntitiesMap.get(id));\r\n    };\r\n\r\n    public redirectToNewReferenceItem(): void {\r\n        this.referenceRedirect.redirectToEditReferenceItem(this.$scope.referenceName);\r\n    }\r\n\r\n    public redirectToEditReferenceItem(referenceId: number): void {\r\n        this.referenceRedirect.redirectToEditReferenceItem(this.$scope.referenceName, referenceId);\r\n    }\r\n}\r\n\r\nexport function ReferenceDropdownSelectorDirectiveFactory(url: UrlService): angular.IDirective {\r\n    var directive: angular.IDirective = {};\r\n    directive.restrict = \"A\";\r\n    directive.controller = ReferenceDropdownSelectorController;\r\n    directive.scope = {\r\n        referenceName: \"=vhsReferenceName\",\r\n        referenceFilter: \"=?vhsReferenceFilter\",\r\n        referenceSorting: \"=?vhsReferenceSorting\",\r\n        model: \"=vhsModel\",\r\n        modelProperty: \"=vhsModelProperty\",\r\n        disabled: \"=?vhsDisabled\",\r\n        required: \"=?vhsRequired\",\r\n        elementName: \"@?vhsElementName\",\r\n        nullable: \"=?vhsNullable\",\r\n        placeholder: \"=?vhsPlaceholder\",\r\n        editable: \"=?vhsEditable\",\r\n        style: \"=?vhsStyle\",\r\n        onSelectorChange: \"&vhsOnChange\"\r\n    };\r\n    directive.templateUrl = url.template(\"components/reference-dropdown-selector.html\");\r\n    return directive;\r\n}\r\n\r\nReferenceDropdownSelectorDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {UrlService} from \"./../utils/UrlService\";\r\nimport {ISelectableReferenceEntity} from \"./../reference/models/ISelectableReferenceEntity\";\r\nimport {ReferenceEntitiesParams} from \"./../reference/models/IReferenceEntitiesParams\";\r\nimport {ReferenceUtils} from \"./../reference/ReferenceUtils\";\r\nimport {ReferenceService} from \"./../reference/ReferenceService\";\r\n\r\nexport interface IIReferenceMultipleSelectorDirectiveScope extends ng.IScope {\r\n    referenceName?: string;\r\n    referenceFilter?: string;\r\n    referenceSorting?: string;\r\n    model?: any;\r\n    modelProperty?: string;\r\n    disabled?: boolean;\r\n\r\n    vm?: ReferenceMultipleSelectorController;\r\n}\r\n\r\nexport class ReferenceMultipleSelectorController {\r\n\r\n    public selectedIds: Array<number>;\r\n    public referenceEntities: Array<ISelectableReferenceEntity>;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        ReferenceService.NAME,\r\n        ReferenceUtils.NAME\r\n    ];\r\n\r\n    constructor(protected $scope: IIReferenceMultipleSelectorDirectiveScope,\r\n                protected referenceApi: ReferenceService,\r\n                protected referenceUtils: ReferenceUtils) {\r\n        $scope.vm = this;\r\n        this.selectedIds = angular.copy(this.$scope.model[this.$scope.modelProperty]);\r\n\r\n        this.$scope.$watch(() => this.$scope.model[this.$scope.modelProperty], () => {\r\n            this.selectedIds = angular.copy(this.$scope.model[this.$scope.modelProperty]);\r\n            this.setModelIds(this.selectedIds);\r\n        });\r\n\r\n        this.referenceApi.getActiveReferenceEntitiesForSelector(this.$scope.referenceName, new ReferenceEntitiesParams(\r\n            this.$scope.referenceFilter, this.$scope.referenceSorting, undefined, undefined), null)\r\n            .then(result => {\r\n                this.referenceEntities = result;\r\n            });\r\n    }\r\n\r\n    public setModelIds(selectedIds: any): void {\r\n        this.$scope.model[this.$scope.modelProperty].splice(0, this.$scope.model[this.$scope.modelProperty].length);\r\n        for (var i = 0; i < selectedIds.length; ++i) {\r\n            this.$scope.model[this.$scope.modelProperty].push(selectedIds[i]);\r\n        }\r\n    }\r\n}\r\n\r\nexport function ReferenceMultipleSelectorDirectiveFactory(url: UrlService): ng.IDirective {\r\n    var directive: ng.IDirective = {};\r\n    directive.restrict = \"A\";\r\n    directive.controller = ReferenceMultipleSelectorController;\r\n    directive.scope = {\r\n        referenceName: \"=vhsReferenceName\",\r\n        referenceFilter: \"=?vhsReferenceFilter\",\r\n        referenceSorting: \"=?vhsReferenceSorting\",\r\n        model: \"=vhsModel\",\r\n        modelProperty: \"=vhsModelProperty\",\r\n        disabled: \"=?vhsDisabled\"\r\n    };\r\n    directive.templateUrl = url.template(\"components/reference-multiple-selector.html\");\r\n    directive.transclude = true;\r\n    return directive;\r\n}\r\n\r\nReferenceMultipleSelectorDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","interface SelectOptionsDisabledAttributes extends angular.IAttributes {\r\n    selectOptionsDisabled: string;\r\n    ngModel: string;\r\n}\r\n\r\nSelectOptionsDisabledDirectiveFactory.$inject = [\r\n    \"$parse\"\r\n];\r\n\r\nexport function SelectOptionsDisabledDirectiveFactory($parse: angular.IParseService): ng.IDirective {\r\n    function disableOptions($scope: angular.IScope, attribute: string, element: any, data: any,\r\n                            fnDisableIfTrue: angular.ICompiledExpression) {\r\n        let options = element.find(\"option\");\r\n        for (let pos = 0, index = 0; pos < options.length; pos++) {\r\n            let elem = angular.element(options[pos]);\r\n            if (elem.val() != \"\") {\r\n                let locals = {};\r\n                locals[attribute] = data[index];\r\n                elem.attr(\"disabled\", fnDisableIfTrue($scope, locals));\r\n                index++;\r\n            }\r\n        }\r\n    }\r\n\r\n    function link($scope: angular.IScope, element: any, attributes: SelectOptionsDisabledAttributes) {\r\n        let expElements: RegExpMatchArray = attributes.selectOptionsDisabled.match(/^\\s*(.+)\\s+for\\s+(.+)\\s+in\\s+(.+)?\\s*/);\r\n        let attrToWatch: string = expElements[3];\r\n        let fnDisableIfTrue: angular.ICompiledExpression = $parse(expElements[1]);\r\n\r\n        $scope.$watch(attrToWatch, (newValue) => {\r\n            if (newValue) {\r\n                disableOptions($scope, expElements[2], element, newValue, fnDisableIfTrue);\r\n            }\r\n        }, true);\r\n\r\n        $scope.$watch(attributes.ngModel, (newValue) => {\r\n            var disOptions = $parse(attrToWatch)($scope);\r\n            if (newValue) {\r\n                disableOptions($scope, expElements[2], element, disOptions, fnDisableIfTrue);\r\n            }\r\n        });\r\n    }\r\n\r\n    var directive: ng.IDirective = {};\r\n    directive.priority = 0;\r\n    directive.require = 'ngModel';\r\n    directive.link = link;\r\n    return directive;\r\n}","interface SelectPlaceholderAttributes extends angular.IAttributes {\r\n    ngModel: string;\r\n}\r\n\r\nSelectPlaceholderDirectiveFactory.$inject = [\r\n];\r\n\r\nexport function SelectPlaceholderDirectiveFactory(): ng.IDirective {\r\n    function setPlaceholder(element: any) {\r\n        let options = element.find(\"option:selected\");\r\n        let elem = angular.element(options[0]);\r\n        if (elem.val() == \"\") {\r\n            element.removeClass(\"simple-text-color\");\r\n            element.addClass(\"placeholder-color\");\r\n        } else {\r\n            element.removeClass(\"placeholder-color\");\r\n            element.addClass(\"simple-text-color\");\r\n        }\r\n\r\n        options = element.find(\"option\");\r\n        for (let pos = 0; pos < options.length; pos++) {\r\n            let elem = angular.element(options[pos]);\r\n            if (elem.val() != \"\") {\r\n                elem.addClass(\"simple-text-color\");\r\n            } else {\r\n                elem.addClass(\"placeholder-color\");\r\n            }\r\n        }\r\n    }\r\n\r\n    function link($scope: angular.IScope, element: any, attributes: SelectPlaceholderAttributes) {\r\n        $scope.$watch(attributes.ngModel, () => {\r\n            setPlaceholder(element);\r\n        });\r\n    }\r\n\r\n    var directive: ng.IDirective = {};\r\n    directive.priority = 0;\r\n    directive.require = ['ngModel'];\r\n    directive.link = link;\r\n    return directive;\r\n}","import INgModelController = angular.INgModelController;\r\nimport IScope = angular.IScope;\r\nimport IAttributes = angular.IAttributes;\r\n\r\nexport function SuffixValidatorDirectiveFactory(): angular.IDirective {\r\n    function link($scope: IScope, element: angular.IAugmentedJQuery,\r\n                  attributes: IAttributes, ngModel: INgModelController,\r\n                  transclude: angular.ITranscludeFunction) {\r\n\r\n        ngModel.$validators[\"suffix\"] = (modelValue: string, viewValue: string) => {\r\n            let suffix = viewValue;\r\n            if (!suffix) return true;\r\n            suffix = suffix.trim();\r\n            if (suffix.charAt(suffix.length - 1) === \".\") {\r\n                suffix = suffix.substr(0, suffix.length - 1);\r\n            }\r\n            suffix = suffix.toLowerCase();\r\n            const prefixes = [\"ms\", \"miss\", \"mr\", \"mrs\", \"fr\", \"rev\", \"dr\", \"atty\", \"hon\", \"prof\",\r\n                \"pres\", \"vp\", \"gov\", \"ofc\", \"sir\"];\r\n            return prefixes.indexOf(suffix) < 0;\r\n        };\r\n    }\r\n\r\n    return {\r\n        restrict: \"A\",\r\n        require: \"?ngModel\",\r\n        link: link\r\n    };\r\n}","interface TooltipAttributes extends angular.IAttributes {\r\n}\r\n\r\nclass TooltipController {\r\n    public static $inject = [\r\n        \"$timeout\"\r\n    ];\r\n\r\n    constructor(private $timeout: angular.ITimeoutService) {\r\n    }\r\n\r\n    public makeTooltip(element: any) {\r\n        this.$timeout(a => element.tooltip(), 0, false);\r\n    }\r\n}\r\n\r\nexport function TooltipDirectiveFactory(): angular.IDirective {\r\n    function link($scope: angular.IScope, element: any,\r\n                  attributes: TooltipAttributes, controller: TooltipController,\r\n                  transclude: angular.ITranscludeFunction) {\r\n        controller.makeTooltip(element);\r\n    }\r\n\r\n    var directive: any = {};\r\n    directive.restrict = \"A\";\r\n    directive.link = link;\r\n    directive.controller = TooltipController;\r\n    directive.scope = true;\r\n    directive.trunsclude = false;\r\n    return directive;\r\n}\r\n","import {UploadsService, CurrentlyUploadableFile} from \"./../storage/UploadsService\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\n\r\ninterface IUploadsStatusDirectiveScope extends angular.IScope {\r\n    vm?: UploadsStatusController\r\n}\r\n\r\nclass UploadsStatusController {\r\n\r\n    private static CURRENTLY_UPLOADABLE_FILES_DELAY = 1000;\r\n\r\n    private currentlyUploadableFiles: Array<CurrentlyUploadableFile> = [];\r\n\r\n    public showFiles: boolean = true;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$interval\",\r\n        UploadsService.NAME\r\n    ];\r\n\r\n    constructor(private $scope: IUploadsStatusDirectiveScope,\r\n                private $interval: angular.IIntervalService,\r\n                private uploadsService: UploadsService) {\r\n        this.$scope.vm = this;\r\n        this.$interval(this.currentlyUploadableFilesFunc, UploadsStatusController.CURRENTLY_UPLOADABLE_FILES_DELAY);\r\n    }\r\n\r\n    public cancel(file: CurrentlyUploadableFile): void {\r\n        this.uploadsService.cancel(file);\r\n    }\r\n\r\n    public toggleFiles(): void {\r\n        this.showFiles = !this.showFiles;\r\n    }\r\n\r\n    private currentlyUploadableFilesFunc: () => void = () => {\r\n        this.currentlyUploadableFiles = this.uploadsService.getCurrentlyUploadableFiles();\r\n    }\r\n}\r\n\r\nUploadsStatusDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n\r\nexport function UploadsStatusDirectiveFactory(url: UrlService): angular.IDirective {\r\n    var directive: any = {};\r\n    directive.restrict = \"A\";\r\n    directive.scope = true;\r\n    directive.controller = UploadsStatusController;\r\n    directive.templateUrl = url.template(\"components/uploads-status.html\");\r\n    return directive;\r\n}","import {UserService} from \"./../users/UserService\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {IMaterial} from \"./../materials/models/IMaterial\";\r\nimport {IPlaylist} from \"./../materials/models/IPlaylist\";\r\nimport {ICourse} from \"./../courses/models/ICourse\";\r\nimport {IQuiz} from \"./../quizzes/models/IQuiz\";\r\nimport {SecuredObjectType} from \"./../security/permissions/SecuredObjectType\";\r\nimport {IPermissionWithUsersAndGroups} from \"./../security/permissions/IPermissionWithUsersAndGroups\";\r\nimport {AllUsersPermissions} from \"./../security/permissions/IPermission\";\r\n\r\nexport interface IUsersAndGroupsSelectorDirectiveScope extends ng.IScope {\r\n    objectModel: any;\r\n    objectModelProperty: string;\r\n    currentUserIdModel: any,\r\n    currentUserIdModelProperty: string,\r\n    currentUserNameModel: any,\r\n    currentUserNameModelProperty: string,\r\n\r\n    permissionsWithUsersAndGroupsModel: IPermissionWithUsersAndGroups[];\r\n    businessUnitFilter?: number;\r\n    disabled: boolean;\r\n    isPermissionsDelegation: boolean;\r\n\r\n    vm?: UsersAndGroupsSelectorController;\r\n}\r\n\r\ninterface IExtPermissionWithUsersAndGroups extends IPermissionWithUsersAndGroups {\r\n    isEditing?: boolean;\r\n    isUsersShowed?: boolean;\r\n    isGroupsShowed?: boolean;\r\n\r\n    currentAvailableUserIds?: number[];\r\n    currentAvailableGroupIds?: number[];\r\n    currentAvailableUsers?: ISelectable[];\r\n    currentAvailableGroups?: ISelectable[];\r\n    currentSelectedUsers?: ISelectable[];\r\n    currentSelectedGroups?: ISelectable[];\r\n    userIds?: number[];\r\n    groupIds?: number[];\r\n\r\n    currentAvailableUsersChangeCallback?: (selected: boolean, id: number, name: string) => void;\r\n    currentAvailableGroupsChangeCallback?: (selected: boolean, id: number, name: string) => void;\r\n}\r\n\r\ninterface IExtUser extends ISelectable {\r\n    disabled?: boolean;\r\n}\r\n\r\nexport class UsersAndGroupsSelectorController {\r\n    private static ALL_USERS_GROUP_ID: number = 1;\r\n\r\n    public permissionsWithUsersAndGroups: IExtPermissionWithUsersAndGroups[] = [];\r\n    public isLoaded = false;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$q\",\r\n        UserService.NAME\r\n    ];\r\n\r\n    constructor(public $scope: IUsersAndGroupsSelectorDirectiveScope,\r\n                private $q: angular.IQService,\r\n                private userService: UserService) {\r\n        $scope.vm = this;\r\n\r\n        this.$scope.disabled = this.$scope.disabled != null\r\n            ? this.$scope.disabled\r\n            : false;\r\n\r\n        this.$scope.isPermissionsDelegation= this.$scope.isPermissionsDelegation != null\r\n            ? this.$scope.isPermissionsDelegation\r\n            : false;\r\n\r\n        this.permissionsWithUsersAndGroups = this.$scope.permissionsWithUsersAndGroupsModel;\r\n        this.permissionsWithUsersAndGroups.forEach((permissionsWithUsersAndGroup: IExtPermissionWithUsersAndGroups) => {\r\n            permissionsWithUsersAndGroup.isEditing = false;\r\n            permissionsWithUsersAndGroup.isUsersShowed = true;\r\n            permissionsWithUsersAndGroup.isGroupsShowed = true;\r\n\r\n            permissionsWithUsersAndGroup.currentAvailableUserIds = [];\r\n            permissionsWithUsersAndGroup.currentAvailableGroupIds = [];\r\n            permissionsWithUsersAndGroup.currentAvailableUsers = [];\r\n            permissionsWithUsersAndGroup.currentAvailableGroups = [];\r\n            permissionsWithUsersAndGroup.currentSelectedUsers = [];\r\n            permissionsWithUsersAndGroup.currentSelectedGroups = [];\r\n\r\n            const currentUser: ISelectable = this.getCurrentUser();\r\n            if (!this.$scope.objectModel[this.$scope.objectModelProperty].id && currentUser.id && currentUser.name) {\r\n                let isFound: boolean = false;\r\n                permissionsWithUsersAndGroup.users.forEach(user => {\r\n                    if (!isFound && user.id === currentUser.id) {\r\n                        isFound = true;\r\n                    }\r\n                });\r\n\r\n                if (!isFound) {\r\n                    let currentExtUser:IExtUser = currentUser;\r\n                    currentExtUser.disabled = true;\r\n                    permissionsWithUsersAndGroup.users.push(currentExtUser);\r\n                    permissionsWithUsersAndGroup.users.sort(this.usersCompareFn);\r\n                }\r\n            }\r\n\r\n            permissionsWithUsersAndGroup.userIds = [];\r\n            permissionsWithUsersAndGroup.users.forEach(user => permissionsWithUsersAndGroup.userIds.push(user.id));\r\n            permissionsWithUsersAndGroup.groupIds = [];\r\n            permissionsWithUsersAndGroup.groups.forEach(group => permissionsWithUsersAndGroup.groupIds.push(group.id));\r\n\r\n            permissionsWithUsersAndGroup.currentAvailableUsersChangeCallback = (selected: boolean, id: number, name: string): void => {\r\n                if (selected) {\r\n                    permissionsWithUsersAndGroup.currentAvailableUsers.push({id: id, name: name});\r\n                } else {\r\n                    for (let i = 0; i < permissionsWithUsersAndGroup.currentAvailableUsers.length; ++i) {\r\n                        let currentAvailableUser: ISelectable = permissionsWithUsersAndGroup.currentAvailableUsers[i];\r\n                        if (currentAvailableUser.id === id) {\r\n                            permissionsWithUsersAndGroup.currentAvailableUsers.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            permissionsWithUsersAndGroup.currentAvailableGroupsChangeCallback = (selected: boolean, id: number, name: string): void => {\r\n                if (selected) {\r\n                    permissionsWithUsersAndGroup.currentAvailableGroups.push({id: id, name: name});\r\n                } else {\r\n                    for (let i = 0; i < permissionsWithUsersAndGroup.currentAvailableGroups.length; ++i) {\r\n                        let currentAvailableGroup: ISelectable = permissionsWithUsersAndGroup.currentAvailableGroups[i];\r\n                        if (currentAvailableGroup.id === id) {\r\n                            permissionsWithUsersAndGroup.currentAvailableGroups.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        this.$scope.$watch(($scope: IUsersAndGroupsSelectorDirectiveScope) => this.$scope.vm.getCurrentUserId(), (newValue, oldValue) => {\r\n            if (newValue != oldValue) {\r\n                this.permissionsWithUsersAndGroups.forEach((p: IExtPermissionWithUsersAndGroups) => {\r\n                    p.isUsersShowed = false;\r\n                    const currentUser: ISelectable = this.getCurrentUser();\r\n                    UsersAndGroupsSelectorController.moveItems<ISelectable>([currentUser], p.users);\r\n                    UsersAndGroupsSelectorController.moveItemIds<ISelectable>([currentUser], p.userIds);\r\n                    for (let i = 0; i < p.users.length; ++i) {\r\n                        const u: ISelectable = p.users[i];\r\n                        if (u.id === oldValue) {\r\n                            p.users.splice(i, 1);\r\n                            break;\r\n                        }\r\n                    }\r\n                    p.userIds.splice(p.userIds.indexOf(oldValue), 1);\r\n                    p.currentAvailableUserIds = [];\r\n                    p.currentAvailableUsers = [];\r\n                    p.currentSelectedUsers = [];\r\n                    p.users.sort(this.usersCompareFn);\r\n                    setTimeout(() => p.isUsersShowed = true, 0);\r\n                });\r\n            }\r\n        });\r\n\r\n        //if (this.$scope.isPermissionsDelegation) {\r\n        //    this.userService.getManagedUsersForSelector(this.$scope.businessUnitFilter).then((users: Array<ISelectable>) => {\r\n        //        const usersMap: Map<number, ISelectable> = new Map<number, ISelectable>();\r\n        //        users.forEach(user => usersMap.set(user.id, user));\r\n        //        this.permissionsWithUsersAndGroups.forEach((permissionsWithUsersAndGroup: IExtPermissionWithUsersAndGroups) => {\r\n        //            for (let j = permissionsWithUsersAndGroup.users.length - 1; j >= 0; j--) {\r\n        //                if (!usersMap.has(permissionsWithUsersAndGroup.users[j].id)) {\r\n        //                    permissionsWithUsersAndGroup.users.splice(j, 1);\r\n        //                }\r\n        //            }\r\n        //        });\r\n        //    });\r\n        //\r\n        //    this.userService.getManagedGroupsForSelector(this.$scope.businessUnitFilter).then((groups: Array<ISelectable>) => {\r\n        //        const groupsMap: Map<number, ISelectable> = new Map<number, ISelectable>();\r\n        //        groups.forEach(group => groupsMap.set(group.id, group));\r\n        //        this.permissionsWithUsersAndGroups.forEach((permissionsWithUsersAndGroup: IExtPermissionWithUsersAndGroups) => {\r\n        //            for (let j = permissionsWithUsersAndGroup.groups.length - 1; j >= 0; j--) {\r\n        //                if (!groupsMap.has(permissionsWithUsersAndGroup.groups[j].id)) {\r\n        //                    permissionsWithUsersAndGroup.groups.splice(j, 1);\r\n        //                }\r\n        //            }\r\n        //        });\r\n        //    });\r\n        //}\r\n\r\n        this.isLoaded = true;\r\n    }\r\n\r\n    public editing(p: IExtPermissionWithUsersAndGroups): void {\r\n        p.isEditing = true;\r\n    }\r\n\r\n    public edited(p: IExtPermissionWithUsersAndGroups): void {\r\n        p.isEditing = false;\r\n    }\r\n\r\n    public selectUsers(p: IExtPermissionWithUsersAndGroups): void {\r\n        p.isUsersShowed = false;\r\n        UsersAndGroupsSelectorController.moveItems<ISelectable>(p.currentAvailableUsers, p.users);\r\n        UsersAndGroupsSelectorController.moveItemIds<ISelectable>(p.currentAvailableUsers, p.userIds);\r\n        p.currentAvailableUserIds = [];\r\n        p.currentAvailableUsers = [];\r\n        p.users.sort(this.usersCompareFn);\r\n        setTimeout(() => p.isUsersShowed = true, 0);\r\n    }\r\n\r\n    public unselectUsers(p: IExtPermissionWithUsersAndGroups): void {\r\n        p.isUsersShowed = false;\r\n        p.currentSelectedUsers.forEach(user => {\r\n            p.users.splice(p.users.indexOf(user), 1);\r\n            p.userIds.splice(p.userIds.indexOf(user.id), 1);\r\n        });\r\n        p.currentSelectedUsers = [];\r\n        setTimeout(() => p.isUsersShowed = true, 0);\r\n    }\r\n\r\n    public selectGroups(p: IExtPermissionWithUsersAndGroups): void {\r\n        p.isGroupsShowed = false;\r\n        UsersAndGroupsSelectorController.moveItems<ISelectable>(p.currentAvailableGroups, p.groups);\r\n        UsersAndGroupsSelectorController.moveItemIds<ISelectable>(p.currentAvailableGroups, p.groupIds);\r\n        p.currentAvailableGroupIds = [];\r\n        p.currentAvailableGroups = [];\r\n        p.groups.sort(this.groupsCompareFn);\r\n        setTimeout(() => p.isGroupsShowed = true, 0);\r\n    }\r\n\r\n    public unselectGroups(p: IExtPermissionWithUsersAndGroups): void {\r\n        p.isGroupsShowed = false;\r\n        p.currentSelectedGroups.forEach(group => {\r\n            p.groups.splice(p.groups.indexOf(group), 1);\r\n            p.groupIds.splice(p.groupIds.indexOf(group.id), 1);\r\n        });\r\n        p.currentSelectedGroups = [];\r\n        setTimeout(() => p.isGroupsShowed = true, 0);\r\n    }\r\n\r\n    public disableUser(user: ISelectable, p: IExtPermissionWithUsersAndGroups): boolean {\r\n        switch (p.permission.type) {\r\n            case SecuredObjectType.MATERIAL.name.toUpperCase():\r\n                let material: IMaterial = this.$scope.objectModel[this.$scope.objectModelProperty];\r\n                return material.ownerId == user.id;\r\n            case SecuredObjectType.PLAYLIST.name.toUpperCase():\r\n                let playlist: IPlaylist = this.$scope.objectModel[this.$scope.objectModelProperty];\r\n                return playlist.ownerId == user.id;\r\n            case SecuredObjectType.COURSE.name.toUpperCase():\r\n                let course: ICourse = this.$scope.objectModel[this.$scope.objectModelProperty];\r\n                return course.ownerIds.indexOf(user.id) != -1;\r\n            case SecuredObjectType.QUIZ.name.toUpperCase():\r\n                let quiz: IQuiz = this.$scope.objectModel[this.$scope.objectModelProperty];\r\n                return quiz.ownerId == user.id;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public getAvailableUsersUrl(businessUnit: number, excludedUserIds: number[]): string {\r\n        let url: string = this.$scope.isPermissionsDelegation\r\n            ? `/api/userSelector/managedUsers?businessUnitId=${businessUnit}`\r\n            : `/api/userSelector/users?businessUnitId=${businessUnit}`;\r\n        if (excludedUserIds && excludedUserIds.length > 0) {\r\n            excludedUserIds.forEach(id => url += `&excludedUserIds=${id}`);\r\n        }\r\n        return url;\r\n    }\r\n\r\n    public getAvailableGroupsUrl(businessUnit: number, excludedGroupIds: number[], permissionId: number): string {\r\n        let url: string = this.$scope.isPermissionsDelegation\r\n            ? `/api/userSelector/managedGroups?businessUnitId=${businessUnit}`\r\n            : `/api/userSelector/groups?businessUnitId=${businessUnit}`;\r\n        let excludedAllUsersGroup: boolean = false;\r\n        if (excludedGroupIds && excludedGroupIds.length > 0) {\r\n            excludedGroupIds.forEach(id => {\r\n                url += `&excludedGroupIds=${id}`;\r\n                if (!excludedAllUsersGroup) {\r\n                    excludedAllUsersGroup = id === UsersAndGroupsSelectorController.ALL_USERS_GROUP_ID;\r\n                }\r\n            });\r\n        }\r\n        if (!excludedAllUsersGroup && AllUsersPermissions.PERMISSIONS_IDS.indexOf(permissionId) === -1) {\r\n            url += `&excludedGroupIds=${UsersAndGroupsSelectorController.ALL_USERS_GROUP_ID}`;\r\n        }\r\n        return url;\r\n    }\r\n\r\n    private getCurrentUserId(): number {\r\n        return this.$scope.currentUserIdModel && this.$scope.currentUserIdModelProperty\r\n            ? this.$scope.currentUserIdModel[this.$scope.currentUserIdModelProperty]\r\n            : null;\r\n    }\r\n\r\n    private getCurrentUserName(): string {\r\n        return this.$scope.currentUserNameModel && this.$scope.currentUserNameModelProperty\r\n            ? this.$scope.currentUserNameModel[this.$scope.currentUserNameModelProperty]\r\n            : null;\r\n    }\r\n\r\n    private getCurrentUser(): ISelectable {\r\n        return {\r\n            id: this.getCurrentUserId(),\r\n            name: this.getCurrentUserName()\r\n        };\r\n    }\r\n\r\n    private usersCompareFn = (first: ISelectable, second: ISelectable): number => {\r\n        if (first.name > second.name) {\r\n            return 1;\r\n        } else if (first.name < second.name) {\r\n            return -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    private groupsCompareFn = (first: ISelectable, second: ISelectable): number => {\r\n        if (first.name > second.name) {\r\n            return 1;\r\n        } else if (first.name < second.name) {\r\n            return -1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    private static moveItems<T extends ISelectable>(items: T[], destination: T[]): void {\r\n        items.forEach((item: T) => {\r\n            let destinationIds: Array<number> = destination.map(destinationItem => {\r\n                return destinationItem.id;\r\n            });\r\n            let index = destinationIds.indexOf(item.id);\r\n            if (index === -1) {\r\n                destination.push(item);\r\n            }\r\n        });\r\n    }\r\n\r\n    private static moveItemIds<T extends ISelectable>(items: T[], destination: number[]): void {\r\n        items.forEach((item: T) => {\r\n            let index = destination.indexOf(item.id);\r\n            if (index === -1) {\r\n                destination.push(item.id);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nUsersAndGroupsSelectorDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n\r\nexport function UsersAndGroupsSelectorDirectiveFactory(url: UrlService): ng.IDirective {\r\n    var directive: ng.IDirective = {};\r\n    directive.restrict = \"A\";\r\n    directive.controller = UsersAndGroupsSelectorController;\r\n    directive.scope = {\r\n        objectModel: \"=vhsObjectModel\",\r\n        objectModelProperty: \"=vhsObjectModelProperty\",\r\n        currentUserIdModel: \"=?vhsCurrentUserIdModel\",\r\n        currentUserIdModelProperty: \"=?vhsCurrentUserIdModelProperty\",\r\n        currentUserNameModel: \"=?vhsCurrentUserNameModel\",\r\n        currentUserNameModelProperty: \"=?vhsCurrentUserNameModelProperty\",\r\n        permissionsWithUsersAndGroupsModel: \"=vhsPermissionsWithUsersAndGroupsModel\",\r\n        businessUnitFilter: \"=?vhsBusinessUnitFilter\",\r\n        disabled: \"=?vhsDisabled\",\r\n        isPermissionsDelegation: \"@?vhsIsPermissionsDelegation\"\r\n    };\r\n    directive.templateUrl = url.template(\"components/users-and-groups-selector.html\");\r\n    directive.transclude = true;\r\n    return directive;\r\n}","import {UrlService} from \"./../utils/UrlService\"\r\n\r\nimport {CourseService} from \"./../courses/CourseService\"\r\nimport {ICourseMaterial} from \"./../courses/models/ICourseMaterial\"\r\nimport {IMultimediaSource} from \"./../components/models/IMultimedia\";\r\nimport {RandomUtils} from \"../utils/RandomUtils\";\r\nimport {StringBuilder} from \"../utils/StringBuilder\";\r\nimport {MaterialTypeKeyEnum} from \"./../materials/models/MaterialType\";\r\nimport {ObjectTypeUtils} from \"./../utils/ObjectTypeUtils\";\r\n\r\nexport interface IVhsEmbeddedMaterialDirectiveScope extends angular.IScope {\r\n    id?: string;\r\n\r\n    vm?: VhsEmbeddedMaterialController;\r\n}\r\n\r\nexport class VhsEmbeddedMaterialController {\r\n    public static TA_ELEMENT_SELECTOR = \"p.ta-vhs-embedded-material\";\r\n    public static TA_DIRECTIVE_HTML = \"<div vhs-embedded-material id=':materialId'></div>\";\r\n    public static TA_RENDER_FUNCTION = (element: angular.IAugmentedJQuery,\r\n                                        $compile: angular.ICompileService,\r\n                                        $rootScope: angular.IRootScopeService,\r\n                                        $timeout: angular.ITimeoutService) => {\r\n        var id: string = RandomUtils.generateRandomId('vhsEmbeddedMaterial_');\r\n        var materialId: string = element.attr('id');\r\n        var endIdIndex: number = materialId.indexOf(\"__\");\r\n        if (endIdIndex >= 0) {\r\n            materialId = materialId.substring(0, endIdIndex);\r\n        }\r\n        element.replaceWith(\"<div id='\" + id + \"'></div>\");\r\n        $timeout(() => {\r\n            VhsEmbeddedMaterialController.TA_COMPILE_AND_REPLACE_ELEMENT_FUNCTION('#' + id, materialId, $compile, $rootScope);\r\n        }, 0);\r\n    };\r\n\r\n    public static TA_COMPILE_AND_REPLACE_ELEMENT_FUNCTION = (elementSelector: any,\r\n                                         materialId: string,\r\n                                         $compile: angular.ICompileService,\r\n                                         $scope: angular.IRootScopeService) => {\r\n        $(elementSelector).replaceWith($compile(\r\n            StringBuilder.interpolate(VhsEmbeddedMaterialController.TA_DIRECTIVE_HTML).with(\":materialId\", materialId).build()\r\n        )($scope));\r\n    };\r\n\r\n    public materialId: number;\r\n    public material: ICourseMaterial;\r\n    public multimediaSources: IMultimediaSource[];\r\n    public isViewAllowed: boolean;\r\n    public isInlineView: boolean;\r\n    public materialType: string;\r\n    public isMaterialEmpty: boolean;\r\n    public isMaterialNotReady: boolean;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$timeout\",\r\n        CourseService.NAME\r\n    ];\r\n\r\n    constructor(private $scope: IVhsEmbeddedMaterialDirectiveScope,\r\n                private $timeout: angular.ITimeoutService,\r\n                private courseApi: CourseService) {\r\n        $scope.vm = this;\r\n    }\r\n\r\n    public init($scope: IVhsEmbeddedMaterialDirectiveScope,\r\n                element: any) {\r\n        this.materialId = parseInt($scope.id);\r\n        this.loadMaterial(this.materialId);\r\n    }\r\n\r\n    public multimediaErrorCallback(code: number, message: string): angular.IPromise<ICourseMaterial> {\r\n        return this.loadMaterial(this.materialId);\r\n    }\r\n\r\n    public loadMaterial(materialId: number): angular.IPromise<ICourseMaterial> {\r\n        return this.courseApi.getEmbeddedMaterial(this.materialId)\r\n            .then(result => {\r\n                this.material = angular.copy(result);\r\n                this.multimediaSources = [{\r\n                    src: this.isMaterialYoutubeLink() ? this.material.link : (this.material.downloadUrl || ''),\r\n                    type: this.isMaterialYoutubeLink() ? \"video/youtube\" : this.material.contentType,\r\n                    dataRes: ''\r\n                }];\r\n                this.isInlineView = true;\r\n                if (this.isMaterialYoutubeLink()) {\r\n                    this.materialType = 'YOUTUBE';\r\n                    this.isInlineView = false;\r\n                } else {\r\n                    this.materialType = this.material.typeKey;\r\n                    if (this.materialType ==  MaterialTypeKeyEnum[MaterialTypeKeyEnum.VIDEO] ||\r\n                        this.materialType ==  MaterialTypeKeyEnum[MaterialTypeKeyEnum.AUDIO]) {\r\n                        this.isInlineView = false;\r\n                    }\r\n                }\r\n                this.isMaterialEmpty = this.material.id && this.material.typeKey !== MaterialTypeKeyEnum[MaterialTypeKeyEnum.LINK] &&\r\n                    (!this.material.fileStatus || this.material.fileStatus === 'EMPTY');\r\n                this.isMaterialNotReady = !this.isMaterialEmpty && this.material.id && this.material.typeKey !== MaterialTypeKeyEnum[MaterialTypeKeyEnum.LINK] &&\r\n                    this.material.fileStatus && this.material.fileStatus !== 'EMPTY' && this.material.fileStatus !== 'READY';\r\n                this.isViewAllowed = this.material.permissions.view && !this.isMaterialEmpty && !this.isMaterialNotReady;\r\n                return this.material;\r\n            })\r\n            .catch(response => {\r\n                this.material = null;\r\n                return this.material;\r\n            });\r\n    }\r\n\r\n    public isMaterialYoutubeLink(): boolean {\r\n        if (!this.material) {\r\n            return undefined;\r\n        }\r\n        return this.material && this.material.typeKey == MaterialTypeKeyEnum[MaterialTypeKeyEnum.LINK] && ObjectTypeUtils.isYoutubeUrl(this.material.link);\r\n    }\r\n}\r\n\r\nexport function VhsEmbeddedMaterialDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: IVhsEmbeddedMaterialDirectiveScope,\r\n                  element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes,\r\n                  controller: VhsEmbeddedMaterialController) {\r\n        controller.init($scope, element);\r\n    }\r\n\r\n    let directive: angular.IDirective = {\r\n        restrict: \"AE\",\r\n        link: link,\r\n        controller: VhsEmbeddedMaterialController,\r\n        scope: {\r\n            id: \"@?\",\r\n        },\r\n        templateUrl: url.template(\"components/vhs-embedded-material.html\"),\r\n    };\r\n    return directive;\r\n}\r\n\r\nVhsEmbeddedMaterialDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {UrlService} from \"./../utils/UrlService\"\r\nimport {UploadUtils} from \"./../utils/UploadUtils\";\r\nimport {UploadsService} from \"./../storage/UploadsService\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {Moment} from \"./../utils/Moment\";\r\nimport {StringBuilder} from \"./../utils/StringBuilder\";\r\nimport {ContentUtils} from \"./../utils/ContentUtils\";\r\nimport {ActionLogService} from \"./../statistics/ActionLogService\";\r\nimport {ActionType} from \"./../statistics/models/ActionType\";\r\nimport {SecuredObjectType} from \"./../security/permissions/SecuredObjectType\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\nimport {ContentService} from \"./../content/ContentService\";\r\nimport {AuthService} from \"./../auth/AuthService\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {IMultimediaSource} from \"./../components/models/IMultimedia\";\r\n\r\nimport {EditMaterialController} from \"./../materials/EditMaterialController\"\r\nimport {IMaterial} from \"./../materials/models/IMaterial\"\r\nimport {MaterialType, MaterialTypeEnum} from \"./../materials/models/MaterialType\"\r\nimport {MaterialService} from \"./../materials/MaterialService\"\r\nimport {IPermissionWithUsersAndGroups} from \"./../security/permissions/IPermissionWithUsersAndGroups\";\r\nimport {ICourse} from \"./../courses/models/ICourse\"\r\n\r\ntype CallbackWhenFinished = (callbackParameters: {material: IMaterial}) => void;\r\n\r\ninterface IFile extends File {\r\n    title?: string;\r\n}\r\n\r\ninterface IVhsMaterialEditingDirectiveScope extends angular.IScope {\r\n    course: ICourse;\r\n    callbackWhenFinished: CallbackWhenFinished;\r\n    // materialId?: number;\r\n    vm?: VhsMaterialEditingController; // set by the directive itself, then used in the html template\r\n}\r\n\r\nexport class VhsMaterialEditingController {\r\n    public material: IMaterial = {};\r\n    private owners: Array<ISelectable> = [];\r\n    private ownersMap: Map<number, ISelectable>;\r\n    public preview: IFile;\r\n    private file: File;\r\n    private fileName: string;\r\n    public permissionsWithUsersAndGroups: Array<IPermissionWithUsersAndGroups> = [];\r\n\r\n    public attachFormat: string;\r\n    public uploadContentType: number;\r\n    public multimediaSources: IMultimediaSource[];\r\n\r\n    public showUploadButton: boolean;\r\n    public disabledSaveButton: boolean;\r\n    public disabledUploadButton: boolean;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$http\",\r\n        \"Upload\",\r\n        PermissionsService.NAME,\r\n        UserService.NAME,\r\n        SecurityService.NAME,\r\n        AuthService.NAME,\r\n        UrlService.NAME,\r\n        ActionLogService.NAME,\r\n        UploadUtils.NAME,\r\n        MaterialService.NAME\r\n    ];\r\n\r\n    constructor(private $scope: IVhsMaterialEditingDirectiveScope,\r\n                private $http: angular.IHttpService,\r\n                private $uploader: ng.angularFileUpload.IUploadService,\r\n                private permissionsService: PermissionsService,\r\n                private userService: UserService,\r\n                private securityService: SecurityService,\r\n                private authService: AuthService,\r\n                private url: UrlService,\r\n                private actionLogService: ActionLogService,\r\n                private uploadUtils: UploadUtils,\r\n                private materialService: MaterialService) {\r\n        $scope.vm = this;\r\n\r\n        this.attachFormat = \"\";\r\n        this.disabledSaveButton = true;\r\n        this.disabledUploadButton = false;\r\n\r\n        this.initializeMaterial();\r\n\r\n        this.userService.getUsersWithoutExcludedUsersForSelector().then(result => {\r\n            this.owners = angular.copy(result);\r\n            this.ownersMap = new Map<number, ISelectable>();\r\n            this.owners.forEach(owner => {\r\n                this.ownersMap.set(owner.id, owner);\r\n            });\r\n        });\r\n    }\r\n\r\n    public saveOrUpdateMaterial(material: IMaterial,\r\n                                permissionsWithUsersAndGroups: Array<IPermissionWithUsersAndGroups>): void {\r\n        this.disabledSaveButton = true;\r\n        this.disabledUploadButton = true;\r\n        let file: File = this.file;\r\n        let preview: File = this.preview;\r\n        this.material.validity = Moment.textToJavaDate(material.validityText);\r\n        this.material.typeKey = MaterialTypeEnum[this.material.typeId];\r\n\r\n        if (this.material.typeId === MaterialTypeEnum.LINK || !this.file) {\r\n            let promise = this.material.id\r\n                ? this.materialService.update(material, permissionsWithUsersAndGroups, false)\r\n                : this.materialService.create(material, permissionsWithUsersAndGroups);\r\n            promise.then(result => {\r\n                this.material = angular.copy(result[UploadsService.MATERIAL_KEY]);\r\n                if (this.preview) {\r\n                    let previewUploadUrl: string = result[UploadsService.PREVIEW_UPLOAD_URL_KEY];\r\n                    let previewUploadMethod: string = result[UploadsService.PREVIEW_UPLOAD_METHOD_KEY];\r\n                    this.uploadUtils.uploadMaterialByChunks(preview, this.material.previewId, this.material.id, previewUploadUrl, previewUploadMethod);\r\n                }\r\n                this.processSuccessCallback(this.material.id);\r\n            }).catch(response => {\r\n                if (response.data.error == \"error.storage.not.available\") {\r\n                    notifier.error(\"No available storage\");\r\n                }\r\n            });\r\n        } else {\r\n            let fileExt = ContentUtils.getFileExt(file.name);\r\n            if (ContentUtils.checkFileExt(material.typeId, fileExt)) {\r\n                let promise = this.material.id\r\n                    ? this.materialService.update(material, permissionsWithUsersAndGroups, false, file, preview)\r\n                    : this.materialService.create(material, permissionsWithUsersAndGroups, file, preview);\r\n                promise.then(result => {\r\n                    this.material = angular.copy(result[UploadsService.MATERIAL_KEY]);\r\n                    if (this.preview != null) {\r\n                        let previewUploadUrl: string = result[UploadsService.PREVIEW_UPLOAD_URL_KEY];\r\n                        let previewUploadMethod: string = result[UploadsService.PREVIEW_UPLOAD_METHOD_KEY];\r\n                        this.uploadUtils.uploadMaterialByChunks(preview, this.material.previewId, this.material.id, previewUploadUrl, previewUploadMethod);\r\n                    }\r\n                    let fileUploadUrl: string = result[UploadsService.FILE_UPLOAD_URL_KEY];\r\n                    let fileUploadMethod: string = result[UploadsService.FILE_UPLOAD_METHOD_KEY];\r\n                    this.uploadUtils.uploadMaterialByChunks(file, this.material.fileId, this.material.id, fileUploadUrl, fileUploadMethod);\r\n                    this.processSuccessCallback(this.material.id);\r\n                }).catch(response => {\r\n                    if (response.data.error == \"error.storage.not.available\") {\r\n                        notifier.error(\"No available storage\");\r\n                    }\r\n                });\r\n            } else { // TODO: a specific error code should be caught here instead of all possible exceptions!\r\n                // console.log('checkFileExt(', material.typeId, '(', material.typeKey, ')', ',', fileExt, ') = false');\r\n                notifier.error(\"Failed to upload this file: please check whether the file format is valid\");\r\n                this.enableButton();\r\n            }\r\n        }\r\n    }\r\n\r\n    public setFileOrLinkType(): void {\r\n        if (this.uploadContentType === 1) {\r\n            this.material.typeId = MaterialTypeEnum.AUDIO; //default value\r\n            this.showUploadButton = true;\r\n        } else {\r\n            this.material.typeId = MaterialTypeEnum.LINK;\r\n            this.showUploadButton = false;\r\n        }\r\n    }\r\n\r\n    public setMaterialType(): void {\r\n        if (this.file) {\r\n            let fileExt = ContentUtils.getFileExt(this.file.name);\r\n            this.material.typeId = ContentUtils.findMaterialTypeByFileExtension(fileExt);\r\n            // console.log('setMaterialType', fileExt, MaterialTypeEnum[this.material.typeId]);\r\n        }\r\n    }\r\n\r\n    public enableButton(): void {\r\n        this.disabledSaveButton = false;\r\n        this.disabledUploadButton = false;\r\n    }\r\n\r\n    public enableButtonForLinkUpload(): void {\r\n        this.disabledSaveButton = false;\r\n    }\r\n\r\n    private upload(file: IFile, materialId: number, fileType: string): angular.angularFileUpload.IUploadPromise<IFile> {\r\n        let urlBuilder = this.url.base(\"/api/materials/upload?materialId=:materialId&fileType=:fileType\")\r\n            .param(\":materialId\", materialId)\r\n            .param(\":fileType\", fileType);\r\n        return this.$uploader.upload({\r\n                method: \"POST\",\r\n                url: angular.copy(urlBuilder)\r\n                    .service(),\r\n                file: file\r\n            }\r\n        );\r\n    }\r\n\r\n    public reupload(): void {\r\n        this.fileName = (this.showUploadButton) ? this.material.fileName : \"\";\r\n        this.showUploadButton = !this.showUploadButton;\r\n        this.file = undefined;\r\n    }\r\n\r\n    private processSuccessCallback(materialId: number): void {\r\n        this.actionLogService.create(materialId, ReferencedObjectType.MATERIAL, ActionType.MATERIAL_CREATION);\r\n        notifier.success(\"The material has been saved\");\r\n        if (this.$scope.callbackWhenFinished) {\r\n            // console.log('Calling the callback(', this.material, ')...');\r\n            this.$scope.callbackWhenFinished({material: this.material});\r\n        } else {\r\n            console.log('Callback not defined');\r\n        }\r\n    }\r\n\r\n    private loadPermissionsWithUsersAndGroups(securedObjectType: SecuredObjectType, objectId?: string): void {\r\n        this.permissionsService.getAllObjectPermissionsWithUsersAndGroups(securedObjectType, objectId).then(result => {\r\n            this.permissionsWithUsersAndGroups = result;\r\n        });\r\n    }\r\n\r\n    private loadMaterial(): angular.IPromise<IMaterial> {\r\n        let promise: angular.IPromise<IMaterial> = this.materialService.get(this.material.id);\r\n        promise.then(result => {\r\n            this.material = angular.copy(result);\r\n            this.material.validityText = Moment.isValidDate(result.validity);\r\n            this.fileName = result.fileName;\r\n            if (!result.link) {\r\n                this.uploadContentType = 1;\r\n            } else {\r\n                this.uploadContentType = 2;\r\n            }\r\n            if (this.material.typeId != MaterialTypeEnum.LINK) {\r\n                this.showUploadButton = !this.material.fileId;\r\n            }\r\n            this.multimediaSources = [{\r\n                src: this.material.downloadUrl || '',\r\n                type: this.material.contentType,\r\n                dataRes: ''\r\n            }];\r\n        });\r\n        return promise;\r\n    }\r\n\r\n    private initializeMaterial(): void {\r\n        this.material = {};\r\n        let materialIdStr: string = String(this.material.id);\r\n        let hasMaterialId: boolean = !!this.material.id;\r\n\r\n        this.securityService.demandAuthentication()\r\n            .demandSystemPermissionsIf(!hasMaterialId, systemPermissions => systemPermissions.addMaterial)\r\n            .demandMaterialPermissionsIf(hasMaterialId, materialIdStr, materialPermissions => materialPermissions.edit);\r\n\r\n        this.file = undefined;\r\n        this.preview = undefined;\r\n        this.disabledUploadButton = false;\r\n        this.showUploadButton = true;\r\n        this.uploadContentType = 1;\r\n\r\n        if (hasMaterialId) {\r\n            this.showUploadButton = false;\r\n            this.loadMaterial();\r\n            this.enableButtonForLinkUpload();\r\n            this.disabledSaveButton = false;\r\n            this.loadPermissionsWithUsersAndGroups(SecuredObjectType.MATERIAL, materialIdStr);\r\n        } else {\r\n            if (this.$scope.course) {\r\n                this.material.subjectId = this.$scope.course.subjectId;\r\n                this.material.subjectName = this.$scope.course.subjectName;\r\n                this.material.author = this.$scope.course.author;\r\n                this.material.topic = this.$scope.course.topic;\r\n                this.material.languageId = this.$scope.course.languageId;\r\n                this.material.languageName = this.$scope.course.languageName;\r\n                this.material.summary = this.$scope.course.summary;\r\n                this.material.ownerId = this.$scope.course.ownerIds[0];\r\n                this.material.ownerName = (this.material.ownerId) ? '...' : '';\r\n                this.material.typeId = MaterialTypeEnum.VIDEO;\r\n                this.material.typeName = 'Video';\r\n                this.material.typeKey = 'VIDEO';\r\n            }\r\n            this.authService.getCurrentUser().then(user => {\r\n                this.material.uploaderId = user.id;\r\n            });\r\n            this.loadPermissionsWithUsersAndGroups(SecuredObjectType.MATERIAL);\r\n        }\r\n    }\r\n}\r\n\r\nexport function VhsMaterialEditingDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: IVhsMaterialEditingDirectiveScope,\r\n                  element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes,\r\n                  controller: VhsMaterialEditingController) {\r\n        // controller.init($scope);\r\n    }\r\n\r\n    return {\r\n        restrict: \"A\",\r\n        link: link,\r\n        controller: VhsMaterialEditingController,\r\n        scope: {\r\n            course: \"=\",\r\n            callbackWhenFinished: \"&?\"\r\n            // materialId: \"=?\"\r\n        },\r\n        templateUrl: url.template(\"components/vhs-material-editing.html\")\r\n    };\r\n}\r\n\r\nVhsMaterialEditingDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {UrlService} from \"./../utils/UrlService\";\r\nimport {ISearchControlListener, SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeaderController} from \"./PageHeaderDirective\";\r\nimport {MaterialsRouter} from \"./../urls/MaterialsRouter\";\r\nimport {\r\n    IMenuUpdateListener,\r\n    MenuHelper\r\n} from \"./../utils/MenuHelper\";\r\n\r\ninterface VhsSearchAttributes extends angular.IAttributes {\r\n}\r\n\r\nexport interface IVhsSearchDirectiveScope extends angular.IScope {\r\n    vm: VhsSearchController;\r\n    controllable?: boolean;\r\n    showFileFormat?: boolean;\r\n}\r\n\r\nexport class VhsSearchController implements IMenuUpdateListener {\r\n    public static FILE_FORMAT_PARAMETER = \"fileFormat\";\r\n    public static SEARCH_STRING_PARAMETER = \"searchString\";\r\n\r\n    public searchVisible: boolean = true;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$rootScope\",\r\n        \"$location\",\r\n        MaterialsRouter.NAME\r\n    ];\r\n\r\n    constructor(private $scope: IVhsSearchDirectiveScope,\r\n                private $rootScope: ng.IRootScopeService,\r\n                private $location: angular.ILocationService,\r\n                private materialsRouter: MaterialsRouter) {\r\n        MenuHelper.addMenuUpdateListener(this);\r\n        $scope.vm = this;\r\n        if (!this.$rootScope[\"__vhsSearchInfo\"]) {\r\n            this.$rootScope[\"__vhsSearchInfo\"] = {\r\n                fileFormat: \"\",\r\n                searchString: \"\"\r\n            };\r\n        }\r\n    }\r\n\r\n    public doSubmit(): void {\r\n        this.$location.url(this.materialsRouter.searchUrl())\r\n            .search(VhsSearchController.FILE_FORMAT_PARAMETER, this.$rootScope[\"__vhsSearchInfo\"].fileFormat)\r\n            .search(VhsSearchController.SEARCH_STRING_PARAMETER, this.$rootScope[\"__vhsSearchInfo\"].searchString);\r\n        this.$rootScope[\"__vhsSearchInfo\"] = {\r\n            fileFormat: \"\",\r\n            searchString: \"\"\r\n        };\r\n    }\r\n\r\n    public onMenuItemUpdate(newMenuItemKey: string, oldMenuItemKey: string) {\r\n        if ((newMenuItemKey == MenuHelper.MAIN_MENU_KEY || newMenuItemKey == MenuHelper.SEARCH_MENU_KEY || newMenuItemKey == \"\") && this.$scope.controllable) {\r\n            this.searchVisible = false;\r\n        } else {\r\n            this.searchVisible = true;\r\n        }\r\n    }\r\n}\r\n\r\nexport function VhsSearchDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: angular.IScope, element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes, controller: VhsSearchController,\r\n                  transclude: angular.ITranscludeFunction) {\r\n        $scope.$on(\"$destroy\",\r\n            () => MenuHelper.removeMenuUpdateListener(controller));\r\n    }\r\n\r\n    var directive: any = {};\r\n    directive.restrict = \"A\";\r\n    directive.link = link;\r\n    directive.scope = {\r\n        controllable: \"=?vhsControllable\",\r\n        showFileFormat: \"=?vhsShowFileFormat\"\r\n    };\r\n    directive.controller = VhsSearchController;\r\n    directive.templateUrl = url.template(\"components/vhs-search.html\");\r\n    return directive;\r\n}\r\n\r\nVhsSearchDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];","import {UrlService} from \"./../utils/UrlService\";\r\n\r\ninterface VhsSelectAllAttributes extends angular.IAttributes {\r\n}\r\n\r\nclass VhsSelectAllController {\r\n    private $timeout: angular.ITimeoutService;\r\n    private targetElement: JQuery;\r\n    private thisElement: JQuery;\r\n    private $scope: angular.IScope;\r\n    private static TIMER_MILLISECONDS = 1000;\r\n\r\n    public static $inject = [\r\n        \"$timeout\"\r\n    ];\r\n\r\n    constructor($timeout: angular.ITimeoutService) {\r\n        this.$timeout = $timeout;\r\n    }\r\n\r\n    public isDisabled(): boolean {\r\n        var result = !this.targetElement || $(this.targetElement).prop('disabled');\r\n        $(this.thisElement).prop('disabled', result);\r\n        return result;\r\n    }\r\n\r\n    public getCurrentState(): boolean {\r\n        var total = this.targetElement.find('option').length;\r\n        var selected = this.targetElement.find('option:selected').length;\r\n        return (selected == total && total > 0);\r\n    }\r\n\r\n    public refreshState(): void {\r\n        try {\r\n            $(this.thisElement).prop('checked', this.getCurrentState());\r\n            this.isDisabled();\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    public makeSelectAll(element: any, $scope: angular.IScope) {\r\n        this.$scope = $scope;\r\n        $scope[\"refreshState\"] = (() => {\r\n            this.refreshState;\r\n        });\r\n        this.thisElement = $(element).find('input');\r\n        this.targetElement = $(element).find('select');\r\n        this.isDisabled();\r\n\r\n        $(document).ready(() => {\r\n\r\n            $scope.$watch('option', () => {\r\n                this.refreshState();\r\n                this.$timeout(() => {\r\n                    this.refreshState();\r\n                }, VhsSelectAllController.TIMER_MILLISECONDS);\r\n            });\r\n\r\n            $(document).ready(() => {\r\n                this.refreshState();\r\n            });\r\n\r\n            $(document).on('click', 'button', null, () => {\r\n                setTimeout(() => {\r\n                    this.refreshState();\r\n                }, VhsSelectAllController.TIMER_MILLISECONDS);\r\n            });\r\n\r\n            $(this.targetElement).change(() => {\r\n                this.refreshState();\r\n            });\r\n\r\n            $(this.targetElement).on('change', 'option', [], () => {\r\n                this.refreshState();\r\n            });\r\n\r\n            $(this.thisElement).change((event: JQueryEventObject) => {\r\n                if (this.isDisabled() || event.isDefaultPrevented()) {\r\n                    event.preventDefault();\r\n                    this.refreshState();\r\n                    return;\r\n                }\r\n                var options: JQuery = this.targetElement.find('option');\r\n                var previousState: boolean = this.getCurrentState();\r\n                for (var i = 0; i < options.length; i++) {\r\n                    if ($(options[i]).prop('selected') != !previousState) {\r\n                        $(options[i]).prop('selected', !previousState);\r\n                        $(options[i]).trigger('change');\r\n                    }\r\n                }\r\n                if (!this.isDisabled()) {\r\n                    this.thisElement.blur();\r\n                    this.targetElement.focus();\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport function VhsSelectAllDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: angular.IScope, element: any,\r\n                  attributes: VhsSelectAllAttributes, controller: VhsSelectAllController,\r\n                  transclude: angular.ITranscludeFunction) {\r\n        controller.makeSelectAll(element, $scope);\r\n    }\r\n\r\n    var directive: any = {};\r\n    directive.restrict = 'A';\r\n    directive.link = link;\r\n    directive.controller = [\"$timeout\", VhsSelectAllController];\r\n    directive.scope = {};\r\n    directive.templateUrl = url.template('components/vhs-select-all.html');\r\n    directive.transclude = true;\r\n    return directive;\r\n}\r\n\r\nVhsSelectAllDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {MaterialTypeEnum} from \"./../materials/models/MaterialType\";\r\n\r\nexport interface IVhsThumbnailModel {\r\n    previewUrl?: string;\r\n    materialTypeId?: number;\r\n    typeId?: number;\r\n    contentTypeKey?: string;\r\n    typeKey?: string;\r\n}\r\n\r\nexport interface IVhsThumbnailScope extends angular.IScope {\r\n    vhsThumbnailModel: IVhsThumbnailModel;\r\n}\r\n\r\nexport function VhsThumbnailDirectiveFactory(): angular.IDirective {\r\n    function link($scope: IVhsThumbnailScope) {\r\n        $scope.vhsThumbnailModel.previewUrl = $scope.vhsThumbnailModel.previewUrl ||\r\n            (\"themes/default/img/thumbnail-\" +\r\n            (MaterialTypeEnum[$scope.vhsThumbnailModel.materialTypeId || $scope.vhsThumbnailModel.typeId]\r\n            || $scope.vhsThumbnailModel.contentTypeKey || $scope.vhsThumbnailModel.typeKey) +\r\n            \".png\").toLowerCase();\r\n    }\r\n\r\n    return {\r\n        priority: 1,\r\n        restrict: \"A\",\r\n        scope: {\r\n            vhsThumbnailModel: \"=\"\r\n        },\r\n        link: link\r\n    };\r\n}\r\n","import {UrlService} from \"./../utils/UrlService\"\r\nimport {AppProperties} from \"./../utils/AppProperties\"\r\nimport {IMultimediaSource} from \"./models/IMultimedia\"\r\nimport {RandomUtils} from \"../utils/RandomUtils\";\r\n\r\nexport interface IVhsVideoAudioDirectiveScope extends angular.IScope {\r\n    vhsId?: string;\r\n    vhsSources: IMultimediaSource[];\r\n    vhsWidth?: number;\r\n    vhsHeight?: number;\r\n    vhsPoster?: string;\r\n    vhsErrorCallback?: (errorEvent: ErrorEvent) => angular.IPromise<any>;\r\n}\r\n\r\nexport class VhsVideoAudioController {\r\n    private errorCount: number = 0;\r\n    private static GIVE_UP_AFTER_SO_MANY_ERRORS = 5;\r\n    private static RETRY_TIME_INTERVAL = 10000; // ms\r\n\r\n    private _playerIsPlaying: boolean;\r\n    public get playerIsPlaying(): boolean {\r\n        return this._playerIsPlaying;\r\n    }\r\n\r\n    public set playerIsPlaying(value: boolean) {\r\n        this._playerIsPlaying = value;\r\n        // console.log('this._playerIsPlaying = ', this._playerIsPlaying);\r\n    }\r\n\r\n    private _playerCurrentTime: number;\r\n    public get playerCurrentTime(): number {\r\n        return this._playerCurrentTime;\r\n    }\r\n\r\n    public set playerCurrentTime(value: number) {\r\n        if (value > 0) {\r\n            this._playerCurrentTime = value;\r\n        }\r\n    }\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$timeout\"\r\n    ];\r\n\r\n    constructor(private $scope: IVhsVideoAudioDirectiveScope,\r\n                private $timeout: angular.ITimeoutService) {\r\n        // do nothing\r\n    }\r\n\r\n    public init($scope: IVhsVideoAudioDirectiveScope,\r\n                element: angular.IAugmentedJQuery,\r\n                isVideoOrAudio: string, isYoutube: boolean) {\r\n\r\n        isVideoOrAudio = isVideoOrAudio.toUpperCase();\r\n        if (isVideoOrAudio !== \"AUDIO\" && isVideoOrAudio !== \"VIDEO\") {\r\n            console.log(\"Error: Wrong multimedia directive type in init() - \" + isVideoOrAudio);\r\n            isVideoOrAudio = \"VIDEO\";\r\n        }\r\n\r\n        let _self: VhsVideoAudioController = this;\r\n        _self.$scope = $scope;\r\n        let playerVideoTag: HTMLMediaElement = <HTMLMediaElement> element.find(isVideoOrAudio).get(0);\r\n\r\n        $(playerVideoTag).on('contextmenu', (event: JQueryEventObject) => {\r\n            event.preventDefault(); // prevent a right-mouse click on the player area\r\n        });\r\n        /* try {\r\n         $(window).on('contextmenu', (event: JQueryEventObject) => {\r\n         event.preventDefault();\r\n         });\r\n         } catch (e) {\r\n         } */\r\n        if (_self.$scope.vhsId) {\r\n            playerVideoTag.id = _self.$scope.vhsId;\r\n        }\r\n        if (!_self.$scope.vhsPoster) {\r\n            _self.$scope.vhsPoster = \"\";\r\n        }\r\n        var videoJsPlayerId = null;\r\n        if (!element.attr('id')) {\r\n            element.attr('id', RandomUtils.generateRandomId('vhs_videoj_'));\r\n        }\r\n        videoJsPlayerId = element.attr('id');\r\n\r\n        let videojsOptions: VideoJSOptions = <VideoJSOptions> {\r\n            autoplay: false,\r\n            controls: true,\r\n            flash: {\r\n                swf: \"vendor/swf/video-js.swf\"\r\n            },\r\n            loop: false,\r\n            //plugins: {\r\n            //    videoJsResolutionSwitcher: {\r\n            //    }\r\n            //},\r\n            poster: _self.$scope.vhsPoster || \"\",\r\n            preload: \"none\",\r\n            techOrder: ['html5', 'flash']\r\n        };\r\n        let youtubeOptions: VideoJSOptions = <VideoJSOptions> {\r\n            autoplay: false,\r\n            controls: true,\r\n            loop: false,\r\n            //plugins: {\r\n            //    videoJsResolutionSwitcher: {\r\n            //    }\r\n            //},\r\n            //poster: _self.$scope.vhsPoster || \"\",\r\n            poster: \"\",\r\n            preload: \"none\",\r\n            techOrder: ['youtube'],\r\n            sources: _self.$scope.vhsSources,\r\n            \"youtube\": {\r\n                \"ytControls\": 2,\r\n                \"enablejsapi\": 1\r\n            }\r\n        };\r\n        if (isYoutube) {\r\n            $(element).addClass('vhs-youtube-video').width(_self.$scope.vhsWidth).height(_self.$scope.vhsHeight);\r\n        }\r\n        if (isYoutube && $('#' + videoJsPlayerId).length == 0 || !isYoutube && $('#' + playerVideoTag.id).length == 0) {\r\n            return;\r\n        }\r\n\r\n        videojs(isYoutube ? videoJsPlayerId : playerVideoTag, isYoutube  ? youtubeOptions : videojsOptions, function (): void {\r\n            if (isYoutube && $('#' + videoJsPlayerId).length == 0 || !isYoutube && $('#' + playerVideoTag.id).length == 0) {\r\n                return;\r\n            }\r\n            let player: VideoJSPlayer = this;\r\n            try {\r\n                let playerPosterTag: HTMLElement = element.find('.vjs-poster').get(0);\r\n                $(element).find('.video-js')\r\n                    .width(_self.$scope.vhsWidth)\r\n                    .height(_self.$scope.vhsHeight)\r\n                    .on('contextmenu', (event: JQueryEventObject) => {\r\n                        event.preventDefault(); // prevent a right-mouse click on the big play button and other control elements\r\n                    });\r\n\r\n                //if (isYoutube) {\r\n                //    let playerControlBarDivTag: HTMLElement = $(element).find('.vjs-control-bar').get(0);\r\n                //    $(playerControlBarDivTag).hide();\r\n                //}\r\n\r\n                player.isAudio(isVideoOrAudio === 'AUDIO');\r\n                _self._playerIsPlaying = false;\r\n                _self._playerCurrentTime = 0;\r\n\r\n                player.on(\"play\", () => { // complementary to player.on(\"ended\", ...)\r\n                    // console.log(\"play\");\r\n                    _self._playerIsPlaying = true;\r\n                });\r\n                player.on(\"ended\", () => { // complementary to player.on(\"play\", ...)\r\n                    // console.log(\"ended\");\r\n                    _self._playerIsPlaying = false;\r\n                    player.exitFullscreen();\r\n                    player.currentTime(0);\r\n                    // _self.setPlayerPoster(player, playerVideoTag, playerPosterTag); // sometimes may be needed for audio\r\n                    player.hasStarted(false); // this is needed to show a poster image again (using CSS)\r\n                });\r\n\r\n                player.on('pause', () => {\r\n                    _self._playerIsPlaying = false;\r\n                });\r\n                //player.on('click', () => {\r\n                //    (_self._playerIsPlaying) ? player.pause() : player.play();\r\n                //});\r\n                //player.on('tap', () => {\r\n                //    (_self._playerIsPlaying) ? player.pause() : player.play();\r\n                //});\r\n\r\n                player.on('changeRes', () => {\r\n                    // console.log('Resolution changed to: ', player['getCurrentRes']());\r\n                });\r\n                player.on('timeupdate', () => {\r\n                    _self._playerIsPlaying = !player.paused();\r\n                    if (player.currentTime() > 0) {\r\n                        _self.playerCurrentTime = player.currentTime();\r\n                        // console.log(\"on('timeupdate'): player.paused() = \", player.paused(), \", time = \", _self.playerCurrentTime);\r\n                    }\r\n                });\r\n\r\n                player.on('loadstart', () => {\r\n                    // console.log('loadstart');\r\n                });\r\n                player.on('firstplay', () => {\r\n                    // console.log('firstplay');\r\n                });\r\n                player.on('waiting', () => {\r\n                    // console.log('waiting');\r\n                });\r\n                player.on('canplay', () => {\r\n                    // console.log('canplay');\r\n                });\r\n                player.on('canplaythrough', () => {\r\n                    // console.log('canplaythrough');\r\n                });\r\n                player.on('loadedmetadata', () => {\r\n                    // console.log('loadedmetadata');\r\n                });\r\n                player.on('loadeddata', () => {\r\n                    // console.log('loadeddata');\r\n                });\r\n                player.on('stalled', () => {\r\n                    console.log('stalled');\r\n                });\r\n                player.on('suspend', () => {\r\n                    // console.log('suspend');\r\n                });\r\n\r\n                player.on('error', (event: Event): void => {\r\n                    // console.log('_self._playerIsPlaying:', _self._playerIsPlaying, '; errorEvent: ', errorEvent, ';  player.error(): ', player.error(), ';  player.error().code: ', player.error().code, ';  _self.$scope.$id: ', _self.$scope.$id, ';  attempt: ', _self.errorCount, ';  _self._playerCurrentTime', _self._playerCurrentTime);\r\n                    _self.errorCount++;\r\n                    if (_self.errorCount > VhsVideoAudioController.GIVE_UP_AFTER_SO_MANY_ERRORS) {\r\n                        player.off('error');\r\n                        _self.errorCount--;\r\n                        console.log(\"\" + _self.errorCount + (_self.errorCount === 1\r\n                                ? \" attempt to restore playback after error has \"\r\n                                : \" attempts to restore playback after error have \") +\r\n                            \"been made so far. Now we give up.\");\r\n                    }\r\n                    else if (_self.errorCount === 1 || _self.errorCount === VhsVideoAudioController.GIVE_UP_AFTER_SO_MANY_ERRORS - 1) {\r\n                        if (playerVideoTag.canPlayType && _self.$scope.vhsSources && _self.$scope.vhsSources.length > 0) {\r\n                            console.log(\"\" + _self.$scope.vhsSources[0].type + \" support: \",\r\n                                !!(playerVideoTag.canPlayType(\"\" + _self.$scope.vhsSources[0].type + \";\").replace(/no/, '')));\r\n                        }\r\n                        if (player.error().code === MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED) {\r\n                            if (player.error().message.toUpperCase().indexOf(\"FLASH\") >= 0) {\r\n                                player.options({techOrder: ['html5', 'flash']});\r\n                                console.log(\"Some error occurred. We will try to switch to HTML5 mode...\");\r\n                            }\r\n                            else if (player.techName.toUpperCase() === \"HTML5\") {\r\n                                player.options({techOrder: ['flash', 'html5']});\r\n                                console.log(\"Some error occurred. We will try to switch to Flash mode...\");\r\n                            }\r\n                        }\r\n                        _self.setPlayerSources(player, playerVideoTag, isYoutube);\r\n                        _self.reloadPlayer(player, playerVideoTag);\r\n                    }\r\n                    else if (_self.$scope.vhsErrorCallback) {\r\n                        console.log(\"Some error occurred. We are now trying to request multimedia sources again...\");\r\n                        let promise: angular.IPromise<any> = _self.$scope.vhsErrorCallback(player.error());\r\n                        if (promise) {\r\n                            promise.then(() => {\r\n                                _self.$timeout(() => {\r\n                                    _self.setPlayerPoster(player, playerVideoTag, playerPosterTag);\r\n                                    if (playerVideoTag.getAttribute(\"src\") != _self.$scope.vhsSources[0].src) { // TODO: revise later: always [0] or select a source by some conditions?\r\n                                        _self.setPlayerSources(player, playerVideoTag, isYoutube);\r\n                                        _self.reloadPlayer(player, playerVideoTag);\r\n                                    } else {\r\n                                        player.off('error');\r\n                                        if (_self.$scope.vhsSources && _self.$scope.vhsSources.length > 0) {\r\n                                            console.log(\"We received exactly the same multimedia URL.\" +\r\n                                                \" Won't request sources again.\");\r\n                                        } else {\r\n                                            console.log(\"No multimedia sources were provided.\");\r\n                                        }\r\n                                    }\r\n                                }, VhsVideoAudioController.RETRY_TIME_INTERVAL); // end of $timeout()\r\n                            }); // end of _self.$scope.vhsErrorCallback().then()\r\n                        }\r\n                    }\r\n                }); // end of player.on('error', ...)\r\n            } finally {\r\n                _self.setPlayerSources(player, playerVideoTag, isYoutube);\r\n            }\r\n        }); // end of video.js player initialization\r\n    } // end of public init($scope, element)\r\n\r\n    public setPlayerSources(player: VideoJSPlayer, playerVideoTag: HTMLMediaElement, isYoutube: boolean) {\r\n        if (isYoutube) return;\r\n        let _self: VhsVideoAudioController = this;\r\n        //$(playerVideoTag).find('source').remove();\r\n        //for (let i = 0; i < _self.$scope.vhsSources.length; i++) {\r\n        //    let item: IMultimediaSource = _self.$scope.vhsSources[i];\r\n        //    $(playerVideoTag).append($(\r\n        //        `<source src=\"${item.src}\" type=\"${item.type}\" data-res=\"${item.dataRes}\">`\r\n        //    ));\r\n        //}\r\n        player.src(_self.$scope.vhsSources);\r\n    }\r\n\r\n    public setPlayerPoster(player: VideoJSPlayer, playerVideoTag: HTMLMediaElement, playerPosterTag: HTMLElement) {\r\n        let _self: VhsVideoAudioController = this;\r\n        if (_self.$scope.vhsPoster && _self.$scope.vhsPoster.length > 0) {\r\n            // $(playerPosterTag).css(\"background-image\", 'url(\"' + (_self.$scope.vhsPoster || \"\") + '\")');\r\n            playerVideoTag.setAttribute('poster', _self.$scope.vhsPoster || \"\"); // TODO: test if this line can be deleted\r\n            player.posterImage.setSrc(_self.$scope.vhsPoster || \"\");\r\n        }\r\n    }\r\n\r\n    public reloadPlayer(player: VideoJSPlayer, playerVideoTag: HTMLMediaElement) {\r\n        let _self: VhsVideoAudioController = this;\r\n        player.one('loadedmetadata', () => {\r\n            if (player.currentTime() < _self.playerCurrentTime) {\r\n                player.currentTime(_self.playerCurrentTime);\r\n                playerVideoTag['currentTime'] = _self.playerCurrentTime;\r\n            }\r\n            if (_self.playerIsPlaying) {\r\n                player.one('canplay', () => {\r\n                    player.play();\r\n                });\r\n            }\r\n        });\r\n        player.preload('auto');\r\n        player.load();\r\n    }\r\n} // end of VhsVideoAudioController\r\n\r\nexport function VhsVideoDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: IVhsVideoAudioDirectiveScope,\r\n                  element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes,\r\n                  controller: VhsVideoAudioController) {\r\n\r\n        controller.init($scope, element, 'video', false);\r\n    }\r\n\r\n    let directive: angular.IDirective = {};\r\n    directive.restrict = \"A\";\r\n    directive.link = link;\r\n    directive.controller = VhsVideoAudioController;\r\n    directive.scope = {\r\n        vhsId: \"=?\",\r\n        vhsSources: \"=\",\r\n        vhsWidth: \"=?\",\r\n        vhsHeight: \"=?\",\r\n        vhsPoster: \"=?\",\r\n        vhsErrorCallback: \"&?\"\r\n    };\r\n    directive.templateUrl = url.template(\"components/vhs-video.html\");\r\n    return directive;\r\n}\r\n\r\nVhsVideoDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n\r\nexport function VhsYoutubeVideoDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: IVhsVideoAudioDirectiveScope,\r\n                  element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes,\r\n                  controller: VhsVideoAudioController) {\r\n\r\n        controller.init($scope, element, 'video', true);\r\n    }\r\n\r\n    let directive: angular.IDirective = {};\r\n    directive.restrict = \"A\";\r\n    directive.link = link;\r\n    directive.controller = VhsVideoAudioController;\r\n    directive.scope = {\r\n        vhsId: \"=?\",\r\n        vhsSources: \"=\",\r\n        vhsWidth: \"=?\",\r\n        vhsHeight: \"=?\",\r\n        vhsPoster: \"=?\",\r\n        vhsErrorCallback: \"&?\"\r\n    };\r\n    directive.templateUrl = url.template(\"components/vhs-video.html\");\r\n    return directive;\r\n}\r\n\r\nVhsYoutubeVideoDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n\r\nexport function VhsAudioDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: IVhsVideoAudioDirectiveScope,\r\n                  element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes,\r\n                  controller: VhsVideoAudioController) {\r\n\r\n        controller.init($scope, element, 'audio', false);\r\n    }\r\n\r\n    let directive: angular.IDirective = {};\r\n    directive.restrict = \"A\";\r\n    directive.link = link;\r\n    directive.controller = VhsVideoAudioController;\r\n    directive.scope = {\r\n        vhsId: \"=?\",\r\n        vhsSources: \"=\",\r\n        vhsWidth: \"=?\",\r\n        vhsHeight: \"=?\",\r\n        vhsPoster: \"=?\",\r\n        vhsErrorCallback: \"&?\"\r\n    };\r\n    directive.templateUrl = url.template(\"components/vhs-audio.html\");\r\n    return directive;\r\n}\r\n\r\nVhsAudioDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","export class Event {\r\n    public static TA_SELECT_EMBEDDED_MATERIAL: string = \"components.ta:selectEmbeddedMaterial\";\r\n    public static TA_SELECT_EMBEDDED_BUNDLE: string = \"components.ta:selectEmbeddedBundle\";\r\n    public static TA_SELECT_SANDBOX: string = \"components.ta:selectSandbox\";\r\n    public static TA_FIND_RICH_TEXT_BIND_CONTROLLER: string = \"components.ta:findRichTextBindController\";\r\n}","import {UrlService} from \"../../utils/UrlService\"\r\n\r\nimport {IGridModel, GridModel, IGridLoadingListener} from \"../../IGridModel\";\r\nimport {HttpGridHelper} from \"../../IHttpGridService\";\r\n\r\nimport {IPage} from \"../../IPage\";\r\nimport {IBundle} from \"../../bundles/models/IBundle\";\r\nimport {IBundleFile} from \"../../bundles/models/IBundleFile\";\r\nimport {BundleFileTypeEnum} from \"../../bundles/models/BundleFileType\";\r\nimport {Event} from \"../models/Event\"\r\nimport {ITextAngularEventData} from \"../models/ITextAngularEventData\"\r\nimport {StringBuilder} from \"../../utils/StringBuilder\"\r\nimport {RandomUtils} from \"../../utils/RandomUtils\";\r\nimport {DomUtils} from \"../../utils/DomUtils\";\r\nimport {BundleService} from \"../../bundles/BundleService\";\r\n\r\nexport interface IVhsSelectEmbeddedBundleDirectiveScope extends angular.IScope {\r\n    vm?: VhsSelectEmbeddedBundleMaterialController;\r\n    bundleId?: number;\r\n}\r\n\r\nexport class VhsSelectEmbeddedBundleMaterialController {\r\n\r\n    public static EMBEDDED_BUNDLE_TA_HTML: string = '<p class=\"ta-vhs-embedded-bundle\">:bundleKey</p>';\r\n    public static EMBEDDED_IMG_TA_HTML: string = '<img class=\"ta-vhs-embedded-bundle\" src=\":imageSrc\" width=\"\" height=\"\" alt=\":bundleKey\"/>';\r\n\r\n    public bundleFilesGridModel: IGridModel<IBundleFile>;\r\n    private lastEventData: ITextAngularEventData;\r\n    private element: angular.IAugmentedJQuery;\r\n    private richEditorParent: angular.IAugmentedJQuery;\r\n    private loadPopupContent: boolean = undefined;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$timeout\",\r\n        \"$http\",\r\n        BundleService.NAME,\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $scope: IVhsSelectEmbeddedBundleDirectiveScope,\r\n                private $timeout: angular.ITimeoutService,\r\n                private $http: angular.IHttpService,\r\n                private bundleApi: BundleService,\r\n                private url: UrlService) {\r\n        $scope.vm = this;\r\n        $scope.$on(Event.TA_SELECT_EMBEDDED_BUNDLE, (event: ng.IAngularEvent, data: ITextAngularEventData) => {\r\n            if (this.isEventProcessable(data)) {\r\n                this.loadPopupContent = true;\r\n                this.lastEventData = data;\r\n                this.element.find(\"div.modal\").modal({\r\n                    backdrop: 'static',\r\n                    keyboard: false,\r\n                    show: true\r\n                });\r\n            }\r\n        });\r\n\r\n        this.bundleFilesGridModel = new GridModel(HttpGridHelper.createLoader<IBundleFile>($http, this.url.service(\"/api/bundles/\" + $scope.bundleId + \"/files\")));\r\n        this.bundleFilesGridModel.pageSize = 6;\r\n    }\r\n\r\n    public init($scope: IVhsSelectEmbeddedBundleDirectiveScope,\r\n                element: angular.IAugmentedJQuery) {\r\n        this.element = element;\r\n        this.richEditorParent = DomUtils.findParentWithClass(this.element, \"vhs-rich-editor-content\");\r\n    }\r\n\r\n    public onBundleFileSelect(bundleFile: IBundleFile) {\r\n        var html = \"\";\r\n        if (bundleFile.type == BundleFileTypeEnum[BundleFileTypeEnum.IMAGE]) {\r\n            html = StringBuilder.interpolate(VhsSelectEmbeddedBundleMaterialController.EMBEDDED_IMG_TA_HTML)\r\n                                       .with(\":bundleKey\", bundleFile.key)\r\n                                       .with(\":imageSrc\", bundleFile.url)\r\n                                       .build();\r\n        } else {\r\n            html = StringBuilder.interpolate(VhsSelectEmbeddedBundleMaterialController.EMBEDDED_BUNDLE_TA_HTML)\r\n                    .with(\":bundleKey\", bundleFile.key)\r\n                    .build();\r\n        }\r\n        this.lastEventData.callbackFunction(html);\r\n    }\r\n\r\n    private isEventProcessable(data: ITextAngularEventData) {\r\n        if (data.eventSourceButton != null) {\r\n            var parent = DomUtils.findParentWithClass(data.eventSourceButton, \"vhs-rich-editor-content\");\r\n            if (parent != null && parent.is(this.richEditorParent)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function VhsSelectEmbeddedBundleDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: IVhsSelectEmbeddedBundleDirectiveScope,\r\n                  element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes,\r\n                  controller: VhsSelectEmbeddedBundleMaterialController) {\r\n        controller.init($scope, element);\r\n    }\r\n\r\n    let directive: angular.IDirective = {\r\n        restrict: \"A\",\r\n        link: link,\r\n        controller: VhsSelectEmbeddedBundleMaterialController,\r\n        scope: {\r\n            bundleId: \"@vhsBundleId\"\r\n        },\r\n        templateUrl: url.template(\"components/vhs-select-embedded-bundle.html\"),\r\n    };\r\n    return directive;\r\n}\r\n\r\nVhsSelectEmbeddedBundleDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {UrlService} from \"../../utils/UrlService\";\r\nimport {RandomUtils} from \"../../utils/RandomUtils\";\r\nimport IPromise = angular.IPromise;\r\nimport {Event} from \"../models/Event\";\r\nimport {IBundle} from \"../../bundles/models/IBundle\";\r\nimport {IBundleFile} from \"../../bundles/models/IBundleFile\";\r\nimport {IFindRichTextBindControllerEventData} from \"../models/IFindRichTextBindControllerEventData\";\r\nimport {BundleService} from \"./../../bundles/BundleService\";\r\nimport {RichTextContentLoadingSynchronizer} from \"./RichTextContentLoadingSynchronizer\";\r\n\r\ninterface RichTextBindAttributes extends angular.IAttributes {\r\n    bundleId?: number;\r\n}\r\n\r\ninterface RichTextBindScope extends angular.IScope {\r\n    ngModel?: any;\r\n    bundle?: IBundle;\r\n}\r\n\r\nexport class RichTextBindController {\r\n\r\n    private element: angular.IAugmentedJQuery;\r\n    private elementId: string;\r\n    private bundle: IBundle;\r\n    private loadBundlePromise: IPromise<IBundle>;\r\n    private waitContentLoadingDeferred: angular.IDeferred<any>;\r\n    private loadingContent: boolean = false;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$q\",\r\n        \"$timeout\",\r\n        BundleService.NAME,\r\n        RichTextContentLoadingSynchronizer.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private $q: angular.IQService,\r\n                private $timeout: angular.ITimeoutService,\r\n                private bundleApi: BundleService,\r\n                private loadingSynchronizer: RichTextContentLoadingSynchronizer) {\r\n    }\r\n\r\n    public init($scope: RichTextBindScope,\r\n                element: angular.IAugmentedJQuery,\r\n                bundleId: number) {\r\n        this.element = element;\r\n        this.elementId = element.attr('id');\r\n        if (!this.elementId) {\r\n            this.elementId = RandomUtils.generateRandomId('rich_text_element_');\r\n            this.element.attr('id', this.elementId);\r\n        }\r\n        if ($scope.bundle) {\r\n            this.bundle = $scope.bundle;\r\n        }\r\n        $scope.$watch(\"ngModel\", value => {\r\n            //console.log('Change richText model');\r\n            this.onRichTextChange(value);\r\n        });\r\n        if (!this.bundle && bundleId) {\r\n            this.loadBundlePromise = this.bundleApi.getBundle(bundleId);\r\n            this.loadBundlePromise.then((bundle) => {\r\n                this.bundle = bundle;\r\n                this.loadBundlePromise = null;\r\n            })\r\n            .catch(() => {\r\n                    this.loadBundlePromise = null;\r\n            });\r\n        }\r\n        $scope.$on(Event.TA_FIND_RICH_TEXT_BIND_CONTROLLER, (event: ng.IAngularEvent, data: IFindRichTextBindControllerEventData) => {\r\n            //console.log('On find rich text bind event');\r\n            if (!data.richTextBindController && data.richTextElementId && data.richTextElementId == this.elementId) {\r\n                data.richTextBindController = this;\r\n                if (event.stopPropagation) {\r\n                    event.stopPropagation();\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private onRichTextChange(value: any) {\r\n        if (value) {\r\n            this.loadingContent = true;\r\n            //this.element.addClass('rich-text-loading');\r\n            // delay displaying for 2 digest cycles + waiting for bundles loading\r\n            this.$timeout(() => {\r\n                this.$timeout(() => {\r\n                    this.loadingSynchronizer\r\n                        // todo: fix removeClass, load content at least 0.3 sec to show progress\r\n                        .loadContent(this.elementId, this.$timeout(() => {return ''}, 300))\r\n                        .finally(() => {\r\n                            this.$timeout(() => {\r\n                                //console.log('After load in richtext');\r\n                                if (this.waitContentLoadingDeferred) {\r\n                                    //console.log('Resolving wait content deferred after content loaded...');\r\n                                    this.waitContentLoadingDeferred.resolve();\r\n                                    this.waitContentLoadingDeferred = null;\r\n                                }\r\n                                this.loadingContent = false;\r\n                                //this.element.removeClass('rich-text-loading');\r\n                            }, 0)}\r\n                        );\r\n                }, 0);\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    public getBundleFile(bundleFileKey: string): IPromise<IBundleFile> {\r\n        if (this.bundle) {\r\n            return this.$q.when(this.bundle.filesMap.get(bundleFileKey));\r\n        } else if (this.loadBundlePromise) {\r\n            return this.loadBundlePromise.then((bundle) => {\r\n                if (bundle) {\r\n                    return bundle.filesMap.get(bundleFileKey);\r\n                } else {\r\n                    return null;\r\n                }\r\n            })\r\n        }\r\n        return this.$q.when(null);\r\n    }\r\n\r\n    public loadContentSynchronized(loadDataPromise: angular.IPromise<any>): angular.IPromise<string> {\r\n        return this.loadingSynchronizer.loadContent(this.elementId, loadDataPromise);\r\n    }\r\n\r\n    public waitForContentLoaded(): IPromise<any> {\r\n        if (this.waitContentLoadingDeferred) {\r\n            this.waitContentLoadingDeferred.reject();\r\n        }\r\n        //we should wait model change for 1 digest, otherwise - resolve RichText loading deferred\r\n        this.$timeout(() => {\r\n            if (!this.loadingContent && this.waitContentLoadingDeferred) {\r\n                //console.log('RichText Model was not changed, content is not loading... Reject waitContentLoadingDeferred.');\r\n                this.waitContentLoadingDeferred.reject();\r\n                this.waitContentLoadingDeferred = null;\r\n            }\r\n        }, 0);\r\n        this.waitContentLoadingDeferred = this.$q.defer<any>();\r\n        return this.waitContentLoadingDeferred.promise;\r\n    }\r\n}\r\n\r\nexport function RichTextBindDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: RichTextBindScope,\r\n                  element: angular.IAugmentedJQuery,\r\n                  attributes: RichTextBindAttributes,\r\n                  controller: RichTextBindController) {\r\n        controller.init($scope, element, attributes.bundleId);\r\n    }\r\n\r\n    let directive: angular.IDirective = {\r\n        restrict: \"A\",\r\n        link: link,\r\n        controller: RichTextBindController,\r\n        scope: {\r\n            ngModel: \"=?\",\r\n            bundle: \"=?vhsBundle\"\r\n        }\r\n    };\r\n    return directive;\r\n}\r\n\r\nRichTextBindDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {UrlService} from \"../../utils/UrlService\";\r\nimport IPromise = angular.IPromise;\r\n\r\ninterface IRichTextContentLoadingData {\r\n    loaderFunction?: IPromise<any>;\r\n    deferred?: angular.IDeferred<string>;\r\n}\r\n\r\n// provide ordered callbacks call after load all data in rich text (load bundles in appropriate order)\r\nexport class RichTextContentLoadingSynchronizer {\r\n    public static NAME = \"components.RichTextContentLoadingSynchronizer\";\r\n\r\n    private richTextLoadersMap: Map<angular.IAugmentedJQuery, Array<IRichTextContentLoadingData>> =\r\n        new Map<angular.IAugmentedJQuery, Array<IRichTextContentLoadingData>>();\r\n\r\n    private forcedLoading: boolean = false;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$q\",\r\n        \"$timeout\"\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private $q: angular.IQService,\r\n                private $timeout: angular.ITimeoutService) {\r\n    }\r\n\r\n    public loadContent(key: any, dataLoader: IPromise<any>): IPromise<string> {\r\n        if (!this.richTextLoadersMap.has(key)) {\r\n            this.richTextLoadersMap.set(key, []);\r\n        }\r\n        let deferred: angular.IDeferred<string> = this.$q.defer<string>();\r\n        let loadingData: IRichTextContentLoadingData = {\r\n            loaderFunction: dataLoader,\r\n            deferred: deferred\r\n        };\r\n        this.richTextLoadersMap.get(key).push(loadingData);\r\n        if (!this.forcedLoading) {\r\n            this.forcedLoading = true;\r\n            this.$timeout(() => {this.performLoadContent();}, 0);\r\n        }\r\n        return deferred.promise;\r\n    }\r\n\r\n    private performLoadContent() {\r\n        this.richTextLoadersMap.forEach((value, key) => {\r\n            var promises: Array<IPromise<any>> = [];\r\n            var callbacks: Array<angular.IDeferred<string>> = [];\r\n            value.forEach((data: IRichTextContentLoadingData) => {\r\n                promises.push(data.loaderFunction.catch(() => {return null}));\r\n                callbacks.push(data.deferred);\r\n            });\r\n            this.$q.all(promises).then((values: Array<any>) => {\r\n                //console.log(values);\r\n                for (var i = 0; i < callbacks.length; i++) {\r\n                     callbacks[i].resolve((values[i]));\r\n                }\r\n            });\r\n        });\r\n        this.forcedLoading = false;\r\n        this.richTextLoadersMap.clear();\r\n    }\r\n}","import {UrlService} from \"../../utils/UrlService\"\r\n\r\nexport interface IRichTextEditorDirectiveScope extends angular.IScope {\r\n    vm?: RichTextEditorController;\r\n    allowEmbedMaterials?: boolean;\r\n    allowBundles?: boolean;\r\n    allowSandbox?: boolean;\r\n    bundleId?: number;\r\n}\r\n\r\nexport class RichTextEditorController {\r\n\r\n    public static TA_EMBEDDED_MATERIAL_BUTTON = \"embeddedMaterial\";\r\n    public static TA_EMBEDDED_BUNDLE_BUTTON = \"embeddedBundle\";\r\n    public static TA_SANDBOX_BUTTON = \"sandbox\";\r\n\r\n    private element: angular.IAugmentedJQuery;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$timeout\"\r\n    ];\r\n\r\n    constructor(private $scope: IRichTextEditorDirectiveScope,\r\n                private $timeout: angular.ITimeoutService) {\r\n        $scope.vm = this;\r\n    }\r\n\r\n    public init($scope: IRichTextEditorDirectiveScope,\r\n                element: angular.IAugmentedJQuery) {\r\n        this.element = element;\r\n        if (!this.$scope.allowBundles || !this.$scope.allowEmbedMaterials || !this.$scope.allowSandbox || !this.$scope.bundleId) {\r\n            this.$timeout(() => {\r\n                this.hideEditorButtons();\r\n            }, 0)\r\n        }\r\n    }\r\n\r\n    private hideEditorButtons() {\r\n        if (!this.$scope.allowBundles || !this.$scope.bundleId) {\r\n            this.element.find(\"button[name='\" + RichTextEditorController.TA_EMBEDDED_BUNDLE_BUTTON + \"']\").hide();\r\n        }\r\n        if (!this.$scope.allowEmbedMaterials) {\r\n            this.element.find(\"button[name='\" + RichTextEditorController.TA_EMBEDDED_MATERIAL_BUTTON + \"']\").hide();\r\n        }\r\n        if (!this.$scope.allowSandbox || !this.$scope.bundleId) {\r\n            this.element.find(\"button[name='\" + RichTextEditorController.TA_SANDBOX_BUTTON + \"']\").hide();\r\n        }\r\n    }\r\n}\r\n\r\nexport function RichTextEditorDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: IRichTextEditorDirectiveScope,\r\n                  element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes,\r\n                  controller: RichTextEditorController) {\r\n        controller.init($scope, element);\r\n    }\r\n\r\n    let directive: angular.IDirective = {\r\n        restrict: \"A\",\r\n        link: link,\r\n        controller: RichTextEditorController,\r\n        scope: {\r\n            allowEmbedMaterials: \"@?vhsEmbedMaterials\",\r\n            allowBundles: \"@?vhsEmbedBundles\",\r\n            allowSandbox: \"@?vhsEmbedSandbox\",\r\n            bundleId: \"@?vhsBundleId\"\r\n        },\r\n        transclude: true,\r\n        templateUrl: url.template(\"components/rich-text-editor.html\")\r\n    };\r\n    return directive;\r\n}\r\n\r\nRichTextEditorDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {RandomUtils} from \"../../utils/RandomUtils\";\r\nimport {DomUtils} from \"../../utils/DomUtils\";\r\nimport {StringBuilder} from \"../../utils/StringBuilder\";\r\n\r\nimport {IBundle} from \"../../bundles/models/IBundle\";\r\nimport {IBundleFile} from \"../../bundles/models/IBundleFile\";\r\nimport {BundleFileTypeEnum} from \"../../bundles/models/BundleFileType\";\r\n\r\nimport {RichTextBindController} from \"./RichTextBindDirective\";\r\nimport {IFindRichTextBindControllerEventData} from \"./../models/IFindRichTextBindControllerEventData\";\r\nimport {Event} from \"../models/Event\";\r\n\r\nexport class VhsDownloadBundleController {\r\n    public static TA_ELEMENT_SELECTOR = \"a.vhs-download-bundle\";\r\n    public static TA_RENDER_FUNCTION = (element: angular.IAugmentedJQuery,\r\n                                        $compile: angular.ICompileService,\r\n                                        $rootScope: angular.IRootScopeService,\r\n                                        $timeout: angular.ITimeoutService) => {\r\n        var id: string = element.attr('id');\r\n        if (!id) {\r\n            id = RandomUtils.generateRandomId('vhs-download-bundle_');\r\n            element.attr(\"id\", id);\r\n        }\r\n        $timeout(() => {\r\n            let html: string = $('<p></p>').append(element.clone()).html();\r\n            $(\"#\" + id).replaceWith($compile(html)($rootScope))\r\n        }, 0);\r\n    };\r\n\r\n    public fileKey: string;\r\n\r\n    private element: angular.IAugmentedJQuery;\r\n\r\n    private richTextBindController: RichTextBindController;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$rootScope\",\r\n        \"$timeout\",\r\n        \"$http\"\r\n    ];\r\n\r\n    constructor(private $scope: angular.IScope,\r\n                private $rootScope: ng.IRootScopeService,\r\n                private $timeout: angular.ITimeoutService,\r\n                private $http: angular.IHttpService) {\r\n    }\r\n\r\n    public init($scope: angular.IScope,\r\n                element: angular.IAugmentedJQuery) {\r\n        this.element = element;\r\n        this.element.attr('id', 'my_href_id');\r\n        this.fileKey = element.attr(\"href\");\r\n        //load bundles after element add to DOM\r\n        this.$timeout(() => {\r\n            var eventData: IFindRichTextBindControllerEventData = {\r\n                richTextElementId: this.findRichTextElementId(),\r\n                richTextBindController: null\r\n            };\r\n            this.$rootScope.$broadcast(Event.TA_FIND_RICH_TEXT_BIND_CONTROLLER, eventData);\r\n            this.richTextBindController = eventData.richTextBindController;\r\n            this.loadBundle();\r\n        }, 0);\r\n\r\n    }\r\n\r\n    public loadBundle() {\r\n        if (!this.richTextBindController) {\r\n            console.log('RichTextBind Controller not found!');\r\n            return;\r\n        }\r\n        if (!this.fileKey) {\r\n            return;\r\n        }\r\n        this.richTextBindController.getBundleFile(this.fileKey).then((bundleFile: IBundleFile) => {\r\n            if (bundleFile && bundleFile.url) {\r\n                this.element.attr('href', bundleFile.url);\r\n            }\r\n        })\r\n    }\r\n\r\n    private findRichTextElementId(): string {\r\n        var richEditor: angular.IAugmentedJQuery = DomUtils.findParentWithAttr(this.element, \"vhs-rich-text-bind\");\r\n        if (!richEditor) {\r\n            richEditor = DomUtils.findParentWithAttr(this.element, \"ta-bind\");\r\n        }\r\n        return richEditor ? richEditor.attr('id') : null;\r\n    }\r\n}\r\n\r\nexport function VhsDownloadBundleDirectiveFactory(): angular.IDirective {\r\n    function link($scope: angular.IScope,\r\n                  element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes,\r\n                  controller: VhsDownloadBundleController) {\r\n        controller.init($scope, element);\r\n    }\r\n\r\n    let directive: angular.IDirective = {\r\n        restrict: \"C\",\r\n        link: link,\r\n        controller: VhsDownloadBundleController,\r\n        scope: false\r\n    };\r\n    return directive;\r\n}\r\n","import {UrlService} from \"../../utils/UrlService\"\r\n\r\nimport {RandomUtils} from \"../../utils/RandomUtils\";\r\nimport {DomUtils} from \"../../utils/DomUtils\";\r\nimport {StringBuilder} from \"../../utils/StringBuilder\";\r\n\r\nimport {IBundleFile} from \"../../bundles/models/IBundleFile\";\r\nimport {BundleFileTypeEnum} from \"../../bundles/models/BundleFileType\";\r\n\r\nimport {VhsEmbeddedMaterialController} from \"./../VhsEmbeddedMaterialDirective\";\r\nimport {RichTextBindController} from \"./RichTextBindDirective\";\r\nimport {IFindRichTextBindControllerEventData} from \"./../models/IFindRichTextBindControllerEventData\";\r\nimport {Event} from \"../models/Event\";\r\n\r\nexport interface IVhsEmbeddedBundleDirectiveScope extends angular.IScope {\r\n    fileKey?: string;\r\n    vm?: VhsEmbeddedBundleController;\r\n}\r\n\r\nexport class VhsEmbeddedBundleController {\r\n    public static TA_ELEMENT_SELECTOR = \"p.ta-vhs-embedded-bundle,img.ta-vhs-embedded-bundle\";\r\n    public static EMBEDDED_MATERIALS_IN_CONTENT_SELECTOR = \"div.vhs-embedded-material\";\r\n    public static DOWNLOAD_BUNDLES_LINKS_SELECTOR = \"a.vhs-download-bundle\";\r\n    public static TA_DIRECTIVE_HTML = \"<div vhs-embedded-bundle vhs-file-key=':fileKey' :imageAttributes></div>\";\r\n    public static TA_RENDER_FUNCTION = (element: angular.IAugmentedJQuery,\r\n                                        $compile: angular.ICompileService,\r\n                                        $rootScope: angular.IRootScopeService,\r\n                                        $timeout: angular.ITimeoutService) => {\r\n        let id: string = RandomUtils.generateRandomId('vhsEmbeddedBundle_');\r\n        let fileKey: string = element.is(\"img\") ? element.attr('alt') : element.text();\r\n        if (fileKey) {\r\n           fileKey = fileKey.trim();\r\n        }\r\n        var imageAttributes = \"\";\r\n        if (element.is(\"img\")) {\r\n            imageAttributes = \"width='\" + element.attr(\"width\") + \"' height='\" + element.attr(\"height\") + \"'\" +\r\n                \" style='\" + element.attr(\"style\") + \"'\";\r\n        }\r\n        element.replaceWith(\"<div id='\" + id + \"'></div>\");\r\n        $timeout(() => {\r\n            $('#' + id).replaceWith($compile(\r\n                StringBuilder.interpolate(VhsEmbeddedBundleController.TA_DIRECTIVE_HTML)\r\n                    .with(\":fileKey\", fileKey)\r\n                    .with(\":imageAttributes\", imageAttributes)\r\n                    .build()\r\n            )($rootScope));\r\n        }, 0);\r\n    };\r\n\r\n    public fileKey: string;\r\n    public bundleFile: IBundleFile;\r\n\r\n    private element: angular.IAugmentedJQuery;\r\n\r\n    private richTextBindController: RichTextBindController;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$rootScope\",\r\n        \"$timeout\",\r\n        \"$http\",\r\n        \"$compile\"\r\n    ];\r\n\r\n    constructor(private $scope: IVhsEmbeddedBundleDirectiveScope,\r\n                private $rootScope: ng.IRootScopeService,\r\n                private $timeout: angular.ITimeoutService,\r\n                private $http: angular.IHttpService,\r\n                private $compile: angular.ICompileService) {\r\n        $scope.vm = this;\r\n    }\r\n\r\n    public init($scope: IVhsEmbeddedBundleDirectiveScope,\r\n                element: angular.IAugmentedJQuery) {\r\n        this.element = element;\r\n        this.fileKey = $scope.fileKey;\r\n        //load bundles after element add to DOM\r\n        this.$timeout(() => {\r\n            var eventData: IFindRichTextBindControllerEventData = {\r\n                richTextElementId: this.findRichTextElementId(),\r\n                richTextBindController: null\r\n            };\r\n            this.$rootScope.$broadcast(Event.TA_FIND_RICH_TEXT_BIND_CONTROLLER, eventData);\r\n            this.richTextBindController = eventData.richTextBindController;\r\n            this.loadBundle();\r\n        }, 0);\r\n    }\r\n\r\n    public loadBundle() {\r\n        if (!this.richTextBindController) {\r\n            console.log('RichTextBind Controller not found!');\r\n            return;\r\n        }\r\n        var promise: ng.IPromise<any> = this.richTextBindController.getBundleFile(this.fileKey)\r\n            .then((bundleFile: IBundleFile) => {\r\n                this.bundleFile = bundleFile;\r\n                if (this.bundleFile && this.bundleFile.url) {\r\n                    if (this.bundleFile.type == BundleFileTypeEnum[BundleFileTypeEnum.JS] || this.bundleFile.type == BundleFileTypeEnum[BundleFileTypeEnum.HTML]) {\r\n                        return this.$http.get(this.bundleFile.url, this.getHttpConfig()).then(result => result.data);\r\n                    } else if (this.bundleFile.type == BundleFileTypeEnum[BundleFileTypeEnum.CSS]) {\r\n                        let mobileString = \"\";\r\n                        if (this.bundleFile.url.lastIndexOf(\"_mobile.css\") != -1){\r\n                            mobileString = \"media='handheld'\";\r\n                        }\r\n                        this.element.replaceWith(\"<link rel='stylesheet' href='\" + this.bundleFile.url + \"' \" + mobileString + \" >\");\r\n                    } else if (this.bundleFile.type == BundleFileTypeEnum[BundleFileTypeEnum.IMAGE]) {\r\n                        this.element.append(\"<img src='\" + this.bundleFile.url + \"' alt='' width='\" +\r\n                            this.element.attr(\"width\") + \"' height='\" + this.element.attr(\"height\") + \"' style='\" + this.element.attr(\"style\") + \"' />\");\r\n                    }\r\n                } else {\r\n                    console.log('Bundle file not found: ' + this.fileKey);\r\n                }\r\n                return null;\r\n            });\r\n\r\n        this.richTextBindController.loadContentSynchronized(promise)\r\n            .then((content: string) => {\r\n                if (content) {\r\n                    this.processFileContent(content, this.bundleFile);\r\n                }\r\n            });\r\n    }\r\n\r\n    private processFileContent(fileContent: string, bundleFile: IBundleFile) {\r\n        if (fileContent && bundleFile) {\r\n            switch (bundleFile.type) {\r\n                case BundleFileTypeEnum[BundleFileTypeEnum.JS]:\r\n                    try {\r\n                        $.globalEval('\"use strict\";' + fileContent);\r\n                    } catch (ex) {\r\n                        //do nothing\r\n                    }\r\n                    break;\r\n                case BundleFileTypeEnum[BundleFileTypeEnum.HTML]:\r\n                    var basePath = \"\";\r\n                    try {\r\n                        if (bundleFile.url && bundleFile.url.indexOf(\"/\") >= 0) {\r\n                            basePath = bundleFile.url.substr(0, bundleFile.url.lastIndexOf(\"/\") + 1);\r\n                        }\r\n                        fileContent = this.replaceImagePaths(fileContent, basePath);\r\n                    } catch (ex) {\r\n                        //do nothing\r\n                    }\r\n                    var htmlContent: angular.IAugmentedJQuery = angular.element(fileContent);\r\n                    this.element.replaceWith(htmlContent);\r\n                    htmlContent.find(VhsEmbeddedBundleController.EMBEDDED_MATERIALS_IN_CONTENT_SELECTOR).each((index, el) => {\r\n                        //console.log('embedded material found in content ' + el);\r\n                        if ($(el).attr('id')) {\r\n                            VhsEmbeddedMaterialController.TA_COMPILE_AND_REPLACE_ELEMENT_FUNCTION(el, $(el).attr('id'), this.$compile, this.$scope);\r\n                        }\r\n                    });\r\n                    if (basePath) {\r\n                        htmlContent.find(VhsEmbeddedBundleController.DOWNLOAD_BUNDLES_LINKS_SELECTOR).each((index, el) => {\r\n                            var a: angular.IAugmentedJQuery = <angular.IAugmentedJQuery> $(el);\r\n                            var href = a.attr('href');\r\n                            if (href && href.indexOf('http') != 0 && href.indexOf(\"#\") != 0) {\r\n                                a.attr('href', basePath + href);\r\n                            }\r\n                        });\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private replaceImagePaths(content: string, baseUrl: string) {\r\n        var regexp: RegExp =  new RegExp('<img(.*?)src=\"((?!http).*)\"', \"mg\");\r\n        content = content.replace(regexp, '<img$1src=\"' + baseUrl + '$2\"');\r\n        regexp = new RegExp(\"<img(.*?)src='((?!http).*)'\", \"mg\");\r\n        return content.replace(regexp, '<img$1src=\"' + baseUrl + '$2\"');\r\n    }\r\n\r\n    private findRichTextElementId(): string {\r\n        var richEditor: angular.IAugmentedJQuery = DomUtils.findParentWithAttr(this.element, \"vhs-rich-text-bind\");\r\n        if (!richEditor) {\r\n            richEditor = DomUtils.findParentWithAttr(this.element, \"ta-bind\");\r\n        }\r\n        return richEditor ? richEditor.attr('id') : null;\r\n    }\r\n\r\n    private getHttpConfig() : any {\r\n        return { cache: true, withoutAuthorization: true, ignore404: true };\r\n    }\r\n}\r\n\r\nexport function VhsEmbeddedBundleDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: IVhsEmbeddedBundleDirectiveScope,\r\n                  element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes,\r\n                  controller: VhsEmbeddedBundleController) {\r\n        controller.init($scope, element);\r\n    }\r\n\r\n    let directive: angular.IDirective = {\r\n        restrict: \"AE\",\r\n        link: link,\r\n        controller: VhsEmbeddedBundleController,\r\n        scope: {\r\n            fileKey: \"@?vhsFileKey\"\r\n        }\r\n    };\r\n    return directive;\r\n}\r\n\r\nVhsEmbeddedBundleDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];","import {RandomUtils} from \"../../utils/RandomUtils\";\r\nimport {DomUtils} from \"../../utils/DomUtils\";\r\nimport {StringBuilder} from \"../../utils/StringBuilder\";\r\n\r\nimport {IBundle} from \"../../bundles/models/IBundle\";\r\nimport {IBundleFile} from \"../../bundles/models/IBundleFile\";\r\nimport {BundleFileTypeEnum} from \"../../bundles/models/BundleFileType\";\r\n\r\nimport {RichTextBindController} from \"./RichTextBindDirective\";\r\nimport {IFindRichTextBindControllerEventData} from \"./../models/IFindRichTextBindControllerEventData\";\r\nimport {Event} from \"../models/Event\";\r\n\r\nexport interface IVhsSandboxDirectiveScope extends angular.IScope {\r\n    bundleId?: string;\r\n    fileKey?: string;\r\n}\r\n\r\nexport class VhsSandboxController {\r\n    public static TA_ELEMENT_SELECTOR = \"img.ta-vhs-sandbox\";\r\n    public static TA_DIRECTIVE_HTML = \"<div vhs-sandbox vhs-bundle-id=':bundleId' vhs-file-key=':fileKey' :imageAttributes></div>\";\r\n    public static TA_RENDER_FUNCTION = (element: angular.IAugmentedJQuery,\r\n                                        $compile: angular.ICompileService,\r\n                                        $rootScope: angular.IRootScopeService,\r\n                                        $timeout: angular.ITimeoutService) => {\r\n        var id: string = RandomUtils.generateRandomId('vhsSandbox_');\r\n        var elementId: string = element.attr(\"id\");\r\n        var endKeyIndex: number = elementId.indexOf(\"___\");\r\n        var fileKey: string = \"\";\r\n        if (endKeyIndex >= 0) {\r\n            fileKey = elementId.substring(0, endKeyIndex);\r\n        } else {\r\n            fileKey = elementId;\r\n        }\r\n        var imageAttributes = \"width='\" + element.attr(\"width\") + \"' height='\" + element.attr(\"height\") + \"'\" +\r\n                \" style='\" + element.attr(\"style\") + \"'\";\r\n        element.replaceWith(\"<div id='\" + id + \"'></div>\");\r\n        $timeout(() => {\r\n            $('#' + id).replaceWith($compile(\r\n                StringBuilder.interpolate(VhsSandboxController.TA_DIRECTIVE_HTML)\r\n                    .with(\":fileKey\", fileKey)\r\n                    .with(\":imageAttributes\", imageAttributes)\r\n                    .build()\r\n            )($rootScope));\r\n        }, 0);\r\n    };\r\n\r\n    public fileKey: string;\r\n    public bundleFile: IBundleFile;\r\n\r\n    private element: angular.IAugmentedJQuery;\r\n\r\n    private richTextBindController: RichTextBindController;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$rootScope\",\r\n        \"$timeout\",\r\n        \"$http\"\r\n    ];\r\n\r\n    constructor(private $scope: IVhsSandboxDirectiveScope,\r\n                private $rootScope: ng.IRootScopeService,\r\n                private $timeout: angular.ITimeoutService,\r\n                private $http: angular.IHttpService) {\r\n    }\r\n\r\n    public init($scope: IVhsSandboxDirectiveScope,\r\n                element: angular.IAugmentedJQuery) {\r\n        this.element = element;\r\n        this.fileKey = $scope.fileKey;\r\n        //load bundles after element add to DOM\r\n        this.$timeout(() => {\r\n            var eventData: IFindRichTextBindControllerEventData = {\r\n                richTextElementId: this.findRichTextElementId(),\r\n                richTextBindController: null\r\n            };\r\n            this.$rootScope.$broadcast(Event.TA_FIND_RICH_TEXT_BIND_CONTROLLER, eventData);\r\n            this.richTextBindController = eventData.richTextBindController;\r\n            this.loadBundle();\r\n        }, 0);\r\n\r\n    }\r\n\r\n    public loadBundle() {\r\n        if (!this.richTextBindController) {\r\n            console.log('RichTextBind Controller not found!');\r\n            return;\r\n        }\r\n        this.richTextBindController.getBundleFile(this.fileKey).then((bundleFile: IBundleFile) => {\r\n            this.bundleFile = bundleFile;\r\n            if (this.bundleFile && this.bundleFile.url) {\r\n                this.element.append(\"<iframe sandbox='allow-scripts' src='\" + this.bundleFile.url + \"' width='\" +\r\n                            this.element.attr(\"width\") + \"' height='\" + this.element.attr(\"height\") + \"' style='\" +\r\n                            this.element.attr(\"style\") + \"' ></iframe>\");\r\n                this.element.find('iframe').css({border: 'none'});\r\n            }\r\n        })\r\n        .catch(response => {\r\n            this.bundleFile = null;\r\n        });\r\n    }\r\n\r\n    private findRichTextElementId(): string {\r\n        var richEditor: angular.IAugmentedJQuery = DomUtils.findParentWithAttr(this.element, \"vhs-rich-text-bind\");\r\n        if (!richEditor) {\r\n            richEditor = DomUtils.findParentWithAttr(this.element, \"ta-bind\");\r\n        }\r\n        return richEditor ? richEditor.attr('id') : null;\r\n    }\r\n}\r\n\r\nexport function VhsSandboxDirectiveFactory(): angular.IDirective {\r\n    function link($scope: IVhsSandboxDirectiveScope,\r\n                  element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes,\r\n                  controller: VhsSandboxController) {\r\n        controller.init($scope, element);\r\n    }\r\n\r\n    let directive: angular.IDirective = {\r\n        restrict: \"AE\",\r\n        link: link,\r\n        controller: VhsSandboxController,\r\n        scope: {\r\n            bundleId: \"@?vhsBundleId\",\r\n            fileKey: \"@?vhsFileKey\"\r\n        }\r\n    };\r\n    return directive;\r\n}\r\n","import {UrlService} from \"../../utils/UrlService\"\r\n\r\nimport {IGridModel, GridModel, IGridLoadingListener} from \"../../IGridModel\";\r\nimport {HttpGridHelper} from \"../../IHttpGridService\";\r\n\r\nimport {IPage} from \"../../IPage\";\r\nimport {IBundle} from \"../../bundles/models/IBundle\";\r\nimport {IBundleFile} from \"../../bundles/models/IBundleFile\";\r\nimport {BundleFileTypeEnum} from \"../../bundles/models/BundleFileType\";\r\nimport {Event} from \"../models/Event\"\r\nimport {ITextAngularEventData} from \"../models/ITextAngularEventData\"\r\nimport {StringBuilder} from \"../../utils/StringBuilder\"\r\nimport {RandomUtils} from \"../../utils/RandomUtils\";\r\nimport {DomUtils} from \"../../utils/DomUtils\";\r\nimport {BundleService} from \"../../bundles/BundleService\";\r\n\r\nexport interface IVhsSelectEmbeddedBundleDirectiveScope extends angular.IScope {\r\n    vm?: VhsSelectEmbeddedBundleMaterialController;\r\n    bundleId?: number;\r\n}\r\n\r\nexport class VhsSelectEmbeddedBundleMaterialController {\r\n\r\n    public static EMBEDDED_BUNDLE_TA_HTML: string = '<p class=\"ta-vhs-embedded-bundle\">:bundleKey</p>';\r\n    public static EMBEDDED_IMG_TA_HTML: string = '<img class=\"ta-vhs-embedded-bundle\" src=\":imageSrc\" width=\"\" height=\"\" alt=\":bundleKey\"/>';\r\n\r\n    public bundleFilesGridModel: IGridModel<IBundleFile>;\r\n    private lastEventData: ITextAngularEventData;\r\n    private element: angular.IAugmentedJQuery;\r\n    private richEditorParent: angular.IAugmentedJQuery;\r\n    private loadPopupContent: boolean = undefined;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$timeout\",\r\n        \"$http\",\r\n        BundleService.NAME,\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $scope: IVhsSelectEmbeddedBundleDirectiveScope,\r\n                private $timeout: angular.ITimeoutService,\r\n                private $http: angular.IHttpService,\r\n                private bundleApi: BundleService,\r\n                private url: UrlService) {\r\n        $scope.vm = this;\r\n        $scope.$on(Event.TA_SELECT_EMBEDDED_BUNDLE, (event: ng.IAngularEvent, data: ITextAngularEventData) => {\r\n            if (this.isEventProcessable(data)) {\r\n                this.loadPopupContent = true;\r\n                this.lastEventData = data;\r\n                this.element.find(\"div.modal\").modal({\r\n                    backdrop: 'static',\r\n                    keyboard: false,\r\n                    show: true\r\n                });\r\n            }\r\n        });\r\n\r\n        this.bundleFilesGridModel = new GridModel(HttpGridHelper.createLoader<IBundleFile>($http, this.url.service(\"/api/bundles/\" + $scope.bundleId + \"/files\")));\r\n        this.bundleFilesGridModel.pageSize = 6;\r\n    }\r\n\r\n    public init($scope: IVhsSelectEmbeddedBundleDirectiveScope,\r\n                element: angular.IAugmentedJQuery) {\r\n        this.element = element;\r\n        this.richEditorParent = DomUtils.findParentWithClass(this.element, \"vhs-rich-editor-content\");\r\n    }\r\n\r\n    public onBundleFileSelect(bundleFile: IBundleFile) {\r\n        var html = \"\";\r\n        if (bundleFile.type == BundleFileTypeEnum[BundleFileTypeEnum.IMAGE]) {\r\n            html = StringBuilder.interpolate(VhsSelectEmbeddedBundleMaterialController.EMBEDDED_IMG_TA_HTML)\r\n                                       .with(\":bundleKey\", bundleFile.key)\r\n                                       .with(\":imageSrc\", bundleFile.url)\r\n                                       .build();\r\n        } else {\r\n            html = StringBuilder.interpolate(VhsSelectEmbeddedBundleMaterialController.EMBEDDED_BUNDLE_TA_HTML)\r\n                    .with(\":bundleKey\", bundleFile.key)\r\n                    .build();\r\n        }\r\n        this.lastEventData.callbackFunction(html);\r\n    }\r\n\r\n    private isEventProcessable(data: ITextAngularEventData) {\r\n        if (data.eventSourceButton != null) {\r\n            var parent = DomUtils.findParentWithClass(data.eventSourceButton, \"vhs-rich-editor-content\");\r\n            if (parent != null && parent.is(this.richEditorParent)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function VhsSelectEmbeddedBundleDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: IVhsSelectEmbeddedBundleDirectiveScope,\r\n                  element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes,\r\n                  controller: VhsSelectEmbeddedBundleMaterialController) {\r\n        controller.init($scope, element);\r\n    }\r\n\r\n    let directive: angular.IDirective = {\r\n        restrict: \"A\",\r\n        link: link,\r\n        controller: VhsSelectEmbeddedBundleMaterialController,\r\n        scope: {\r\n            bundleId: \"@vhsBundleId\"\r\n        },\r\n        templateUrl: url.template(\"components/vhs-select-embedded-bundle.html\"),\r\n    };\r\n    return directive;\r\n}\r\n\r\nVhsSelectEmbeddedBundleDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {UrlService} from \"../../utils/UrlService\"\r\n\r\nimport {IGridModel, GridModel, IGridLoadingListener} from \"../../IGridModel\";\r\nimport {HttpGridHelper} from \"../../IHttpGridService\";\r\n\r\nimport {IMaterial} from \"../../materials/models/IMaterial\"\r\nimport {Event} from \"../models/Event\"\r\nimport {ITextAngularEventData} from \"../models/ITextAngularEventData\"\r\nimport {StringBuilder} from \"../../utils/StringBuilder\"\r\nimport {RandomUtils} from \"../../utils/RandomUtils\";\r\nimport {DomUtils} from \"../../utils/DomUtils\";\r\n\r\nexport interface IVhsSelectMaterialDirectiveScope extends angular.IScope {\r\n    vm?: VhsSelectMaterialController;\r\n}\r\n\r\nexport class VhsSelectMaterialController {\r\n\r\n    public static EMBEDDED_MATERIAL_TA_HTML: string = '<p class=\"ta-vhs-embedded-material\" id=\":materialId\">:materialName</p>';\r\n\r\n    public materialsGridModel: IGridModel<IMaterial>;\r\n    public materialId: number;\r\n    private lastEventData: ITextAngularEventData;\r\n    private element: angular.IAugmentedJQuery;\r\n    private richEditorParent: angular.IAugmentedJQuery;\r\n    private loadPopupContent: boolean = undefined;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$timeout\",\r\n        \"$http\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $scope: IVhsSelectMaterialDirectiveScope,\r\n                private $timeout: angular.ITimeoutService,\r\n                private $http: angular.IHttpService,\r\n                private url: UrlService) {\r\n        $scope.vm = this;\r\n        $scope.$on(Event.TA_SELECT_EMBEDDED_MATERIAL, (event: ng.IAngularEvent, data: ITextAngularEventData) => {\r\n            if (this.isEventProcessable(data)) {\r\n                this.loadPopupContent = true;\r\n                this.lastEventData = data;\r\n                this.element.find(\"div.modal\").modal({\r\n                    backdrop: 'static',\r\n                    keyboard: false,\r\n                    show: true\r\n                });\r\n            }\r\n        });\r\n\r\n        this.materialsGridModel = new GridModel(HttpGridHelper.createLoader<IMaterial>($http, this.url.service(\"/api/materials\")));\r\n    }\r\n\r\n    public init($scope: IVhsSelectMaterialDirectiveScope,\r\n                element: angular.IAugmentedJQuery) {\r\n        this.element = element;\r\n        this.richEditorParent = DomUtils.findParentWithClass(this.element, \"vhs-rich-editor-content\");\r\n    }\r\n\r\n    public onMaterialSelect() {\r\n        if (this.materialId) {\r\n            let materialName = \"&nbsp;\";\r\n            for (let i = 0; i < this.materialsGridModel.entries.length; i++) {\r\n                let material = this.materialsGridModel.entries[i];\r\n                if (material.id == this.materialId) {\r\n                    materialName = material.topic;\r\n                    break;\r\n                }\r\n            }\r\n            this.lastEventData.callbackFunction(\r\n                StringBuilder.interpolate(VhsSelectMaterialController.EMBEDDED_MATERIAL_TA_HTML)\r\n                    .with(\":materialId\", RandomUtils.generateRandomId(\"\" + this.materialId + \"__\"))\r\n                    .with(\":materialName\", materialName)\r\n                    .build()\r\n            );\r\n        }\r\n    }\r\n\r\n    private isEventProcessable(data: ITextAngularEventData) {\r\n        if (data.eventSourceButton != null) {\r\n            var parent = DomUtils.findParentWithClass(data.eventSourceButton, \"vhs-rich-editor-content\");\r\n            if (parent != null && parent.is(this.richEditorParent)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function VhsSelectMaterialDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: IVhsSelectMaterialDirectiveScope,\r\n                  element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes,\r\n                  controller: VhsSelectMaterialController) {\r\n        controller.init($scope, element);\r\n    }\r\n\r\n    let directive: angular.IDirective = {\r\n        restrict: \"A\",\r\n        link: link,\r\n        controller: VhsSelectMaterialController,\r\n        scope: {},\r\n        templateUrl: url.template(\"components/vhs-select-material.html\"),\r\n    };\r\n    return directive;\r\n}\r\n\r\nVhsSelectMaterialDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {UrlService} from \"../../utils/UrlService\"\r\n\r\nimport {IGridModel, GridModel, IGridLoadingListener} from \"../../IGridModel\";\r\nimport {HttpGridHelper} from \"../../IHttpGridService\";\r\n\r\nimport {IPage} from \"../../IPage\";\r\nimport {IBundle} from \"../../bundles/models/IBundle\";\r\nimport {IBundleFile} from \"../../bundles/models/IBundleFile\";\r\nimport {BundleFileTypeEnum} from \"../../bundles/models/BundleFileType\";\r\nimport {Event} from \"../models/Event\"\r\nimport {ITextAngularEventData} from \"../models/ITextAngularEventData\"\r\nimport {StringBuilder} from \"../../utils/StringBuilder\"\r\nimport {RandomUtils} from \"../../utils/RandomUtils\";\r\nimport {DomUtils} from \"../../utils/DomUtils\";\r\nimport {BundleService} from \"../../bundles/BundleService\";\r\n\r\nexport interface IVhsSelectSandboxDirectiveScope extends angular.IScope {\r\n    vm?: VhsSelectSandboxController;\r\n    bundleId?: number;\r\n}\r\n\r\nexport class VhsSelectSandboxController {\r\n\r\n    public static EMBEDDED_IMG_TA_HTML: string = '<img class=\"ta-vhs-sandbox\" id=\":bundleId\" src=\":imageSrc\" width=\"600\" height=\"400\"/>';\r\n    private static SANDBOX_TA_IMG_PATH: string = \"./themes/default/img/ta_sandbox.png\";\r\n\r\n    public bundleFilesGridModel: IGridModel<IBundleFile>;\r\n    private lastEventData: ITextAngularEventData;\r\n    private element: angular.IAugmentedJQuery;\r\n    private richEditorParent: angular.IAugmentedJQuery;\r\n    private loadPopupContent: boolean = undefined;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$timeout\",\r\n        \"$http\",\r\n        BundleService.NAME,\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $scope: IVhsSelectSandboxDirectiveScope,\r\n                private $timeout: angular.ITimeoutService,\r\n                private $http: angular.IHttpService,\r\n                private bundleApi: BundleService,\r\n                private url: UrlService) {\r\n        $scope.vm = this;\r\n        $scope.$on(Event.TA_SELECT_SANDBOX, (event: ng.IAngularEvent, data: ITextAngularEventData) => {\r\n            if (this.isEventProcessable(data)) {\r\n                this.loadPopupContent = true;\r\n                this.lastEventData = data;\r\n                this.element.find(\"div.modal\").modal({\r\n                    backdrop: 'static',\r\n                    keyboard: false,\r\n                    show: true\r\n                });\r\n            }\r\n        });\r\n        this.bundleFilesGridModel = new GridModel(HttpGridHelper.createLoader<IBundleFile>($http, this.url.service(\"/api/bundles/\" + $scope.bundleId + \"/files\")));\r\n        this.bundleFilesGridModel.pageSize = 6;\r\n        this.bundleFilesGridModel.filter.bundleFileType = BundleFileTypeEnum[BundleFileTypeEnum.HTML];\r\n    }\r\n\r\n    public init($scope: IVhsSelectSandboxDirectiveScope,\r\n                element: angular.IAugmentedJQuery) {\r\n        this.element = element;\r\n        this.richEditorParent = DomUtils.findParentWithClass(this.element, \"vhs-rich-editor-content\");\r\n    }\r\n\r\n    public onBundleFileSelect(bundleFile: IBundleFile) {\r\n        var html = StringBuilder.interpolate(VhsSelectSandboxController.EMBEDDED_IMG_TA_HTML)\r\n                                       .with(\":bundleId\", RandomUtils.generateRandomId(bundleFile.key + \"___\"))\r\n                                       .with(\":imageSrc\", this.url.staticResourceUrl(VhsSelectSandboxController.SANDBOX_TA_IMG_PATH))\r\n                                       .build();\r\n\r\n        this.lastEventData.callbackFunction(html);\r\n    }\r\n\r\n    private isEventProcessable(data: ITextAngularEventData) {\r\n        if (data.eventSourceButton != null) {\r\n            var parent = DomUtils.findParentWithClass(data.eventSourceButton, \"vhs-rich-editor-content\");\r\n            if (parent != null && parent.is(this.richEditorParent)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function VhsSelectSandboxDirectiveFactory(url: UrlService): angular.IDirective {\r\n    function link($scope: IVhsSelectSandboxDirectiveScope,\r\n                  element: angular.IAugmentedJQuery,\r\n                  attributes: angular.IAttributes,\r\n                  controller: VhsSelectSandboxController) {\r\n        controller.init($scope, element);\r\n    }\r\n\r\n    let directive: angular.IDirective = {\r\n        restrict: \"A\",\r\n        link: link,\r\n        controller: VhsSelectSandboxController,\r\n        scope: {\r\n            bundleId: \"@vhsBundleId\"\r\n        },\r\n        templateUrl: url.template(\"components/vhs-select-sandbox.html\"),\r\n    };\r\n    return directive;\r\n}\r\n\r\nVhsSelectSandboxDirectiveFactory.$inject = [\r\n    UrlService.NAME\r\n];\r\n","import {CommonModule} from \"./../common/CommonModule\";\r\nimport {SecurityModule} from \"./../security/SecurityModule\";\r\nimport {UrlsModule} from \"./../urls/UrlsModule\";\r\n\r\nimport {ContentService} from \"./ContentService\";\r\n\r\nexport var ContentModule: angular.IModule = angular\r\n        .module(\"content\", [\r\n            CommonModule.name,\r\n            SecurityModule.name,\r\n            UrlsModule.name\r\n        ])\r\n        .service(ContentService.NAME, ContentService)\r\n    ;\r\n","import {UrlService} from \"./../utils/UrlService\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\nimport {IContentView} from \"./models/IContentView\";\r\n\r\nexport class ContentService {\r\n    public static NAME = \"content.ContentService\";\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private url: UrlService) {\r\n    }\r\n\r\n    public getContentView(objectId: number, objectType: any): angular.IPromise<IContentView> {\r\n        let myObjectType: string =\r\n            (typeof objectType === 'string') ? objectType :\r\n                (typeof objectType === 'number') ? ReferencedObjectType[objectType] : undefined;\r\n        return this.$http.get(this.url.base(\"/api/content/:type/:id\")\r\n            .param(\":id\", objectId)\r\n            .param(\":type\", myObjectType)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n}\r\n","import IPromise = angular.IPromise;\r\nimport IDeferred = angular.IDeferred;\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {SettingsService} from \"./../settings/SettingsService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {AuthManager} from \"./../authcore/AuthManager\";\r\nimport {AuthRedirect} from \"./../authcore/AuthRedirect\";\r\nimport {CommonNavigation} from \"../common/CommonNavigation\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\nimport {CoursesRouter} from \"./../urls/CoursesRouter\";\r\nimport {AuthRouter} from \"./../urls/AuthRouter\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {ICourse} from \"./models/ICourse\";\r\nimport {ILmsAPI} from \"./models/ILmsAPI\";\r\nimport {CourseService} from \"./CourseService\";\r\nimport {ProgressService} from \"./ProgressService\";\r\nimport {StringBuilder} from \"../utils/StringBuilder\";\r\nimport {IModule} from \"./models/IModule\";\r\nimport {IMaterial} from \"../materials/models/IMaterial\";\r\nimport {ISectionInHierarchyExtended} from \"./models/ISectionInHierarchy\";\r\nimport {ISection} from \"./models/ISection\";\r\nimport {SectionType} from \"./models/SectionType\";\r\nimport {IMultimediaSource} from \"../components/models/IMultimedia\";\r\nimport {ObjectTypeUtils} from \"../utils/ObjectTypeUtils\";\r\nimport {IQuiz} from \"./../quizzes/models/IQuiz\";\r\nimport {IQuizQuestion} from \"./../quizzes/models/IQuizQuestion\";\r\nimport {IQuizAnswer} from \"./../quizzes/models/IQuizAnswer\";\r\nimport {IQuizResult} from \"./../quizzes/models/IQuizResult\";\r\nimport {IQuizAnswerResult} from \"./../quizzes/models/IQuizAnswerResult\";\r\nimport {QuizService} from \"./../quizzes/QuizService\";\r\nimport {BundleService} from \"./../bundles/BundleService\";\r\nimport {CourseProgressStatus} from \"../courses/models/CourseProgressStatus\";\r\nimport {AuthService} from \"../auth/AuthService\";\r\nimport {IUserInfo} from \"../security/IUserInfo\";\r\nimport {ILandingPage} from \"../courses/models/ILandingPage\";\r\nimport {Moment} from \"./../utils/Moment\";\r\nimport {StorageWrapper, Storages} from \"./../infrastructure/Storage\";\r\nimport {ICourseProgress, ICourseProgressWithParticipantInfo} from \"./models/ICourseProgress\";\r\nimport {IBundle} from \"../bundles/models/IBundle\";\r\nimport {IBundleFile} from \"../bundles/models/IBundleFile\";\r\nimport {SectionProgressStatus} from \"./models/SectionProgressStatus\";\r\nimport {IFindRichTextBindControllerEventData} from \"../components/models/IFindRichTextBindControllerEventData\";\r\nimport {Event} from \"../components/models/Event\";\r\nimport {RichTextBindController} from \"../components/richtext/RichTextBindDirective\";\r\nimport {VhsSelectEmbeddedBundleMaterialController} from \"../components/richText/VhsSelectEmbeddedBundleDirective\";\r\nimport {RandomUtils} from \"../utils/RandomUtils\";\r\nimport {MaterialTypeKeyEnum} from \"../materials/models/MaterialType\";\r\nimport {ICourseParticipantInfo} from \"./models/ICourseParticipantInfo\";\r\nimport {PersonalRouter} from \"../urls/PersonalRouter\";\r\nimport moment = require(\"moment\");\r\nimport IRouteService = angular.route.IRouteService;\r\n\r\nexport class CourseDetailsController implements ILmsAPI {\r\n    public static NAME = \"courses.CourseDetailsController\";\r\n\r\n    public static SECTION_SUMMARY_RICH_TEXT_ID = \"section_summary_rich_text\";\r\n    public static LANDING_PAGE_RICH_TEXT_ID = \"landing_page_rich_text\";\r\n    public static COURSE_LOAD_AT_START_BUNDLES_RICH_TEXT_ID = \"course_load_at_start_bundles_rich_text\";\r\n    public static SLIDE_CHANGE_DELAY: number = 500;\r\n\r\n    private static MODULE_PREVIEW_IMAGE_BUNLE_FILE_TEMPLATE = \"module_:index_logo.png\";\r\n\r\n    public static MODULE_PARAMETER = \"module\";\r\n    public static SECTION_PARAMETER = \"section\";\r\n\r\n    private DEFAULT_TOP_MENU_ITEM: string = 'course';\r\n    private DEFAULT_LEFT_MENU_MODULE: number = 1;\r\n    private DEFAULT_INNER_MENU_ITEM: number = 1;\r\n\r\n    public ERROR_INTERNET_DISCONNECTED: string = \"error.internet.disconnected\";\r\n    public SUBMIT_SECTION_PROGRESS_RETRY_INTERVAL: number = 10000;\r\n\r\n    private sectionsMap: Map<number, Array<ISectionInHierarchyExtended>>;\r\n    private sectionsList: Array<ISectionInHierarchyExtended> = [];\r\n    public menuKey: any;\r\n    public courseId: number;\r\n    public courseLink: string;\r\n    public courseShareLink: string;\r\n    public isAuthenticated: boolean;\r\n    public isCourseLoaded: boolean = false;\r\n    public isSlideLoading: boolean = true;\r\n    public slideLoadingCounter: number = 0;\r\n    public isSlideRemoving: boolean = false;\r\n    public isSlideBack: boolean = false;\r\n    public searchSectionId: number;\r\n    public searchModuleId: number;\r\n    public showSectionNotAllowedMessage: boolean = false;\r\n    public showRePrintParameters: boolean = false;\r\n\r\n    public modules: Array<IModule> = [];\r\n    public modulesProgress: Map<number, number>;\r\n    public material: IMaterial = {};\r\n    public selectedModule: IModule = null;\r\n    public selectedSection: ISection = null;\r\n    public sectionMaterials: Array<IMaterial> = [];\r\n    public multimediaSources: IMultimediaSource[];\r\n    public selectedMaterialId: number;\r\n\r\n    public sectionQuiz: IQuiz = {};\r\n    public sectionQuizResults: Array<IQuizResult> = [];\r\n    public sectionQuizCurrentResult: IQuizResult = {};\r\n    public sectionQuizDuration: number;\r\n    public sectionQuizPassing: boolean = false;\r\n    public sectionQuizCurrentQuestion: IQuizQuestion = {};\r\n    public sectionQuizCurrentQuestionIndex: number;\r\n    public sectionQuizQuestionAnswered: boolean = false;\r\n\r\n    public disableCompleteQuizButton: boolean = false;\r\n    public courseStarted: boolean;\r\n    public courseJustStarted: boolean;\r\n    public coursePassed: boolean;\r\n    public courseCompleted: boolean;\r\n    public courseExpired: boolean;\r\n    public courseArchived: boolean;\r\n    public currentUserInOwners: boolean = false;\r\n    private currentUser: IUserInfo = {};\r\n    public nextSection: ISection = {};\r\n    public prevSection: ISection = {};\r\n\r\n    public showSplashPageForStartedCourse: boolean = false;\r\n    public showParticipationForm: boolean;\r\n    public isApplyForBasicMed: boolean;\r\n    public participationFormData: any;\r\n    public disableParticipationForm: boolean = false;\r\n    private participationInfo: ICourseParticipantInfo;\r\n    public dobDateString: string;\r\n    public examDateString: string;\r\n    public agreeReleaseDriverHistory: boolean = false;\r\n\r\n    public landingPage: ILandingPage;\r\n    public showStartButton: boolean;\r\n    private courseProgressId: number;\r\n    private courseProgress: ICourseProgress;\r\n    public progressHistory: ICourseProgressWithParticipantInfo[];\r\n    private lastFinishedCourseProgress: ICourseProgressWithParticipantInfo;\r\n\r\n    private course: ICourse = {};\r\n\r\n    public courseCertificates: Array<ISelectable>;\r\n    public certificateParameters: any = {\r\n        format: 'pdf',\r\n        certificateId: null\r\n    };\r\n    public certificateContent: string;\r\n    public certificateDownloadLink: string;\r\n\r\n    public materialLoaded: boolean = false;\r\n    public isCourseMenuVisible: boolean = false;\r\n    public isCourseShareMenuVisible: boolean = false;\r\n    public courseBundle: IBundle;\r\n    public courseLoadAtStartBundlesText: string;\r\n\r\n    public showQuizInfoSection = true;\r\n    public showQuizResultsSection = true;\r\n    public showQuizStartSection = true;\r\n    public showLandingPageStartCourseButton = true;\r\n    public showReturnUserPage = false;\r\n    private lmsQuizCompleteListeners: Array<()=>any> = [];\r\n\r\n    public isMaterialEmpty: boolean;\r\n    public isMaterialNotReady: boolean;\r\n    public isViewAllowed: boolean;\r\n    public materialType: string;\r\n    public isCourseStartInProgress: boolean = false;\r\n\r\n    private sectionStatusUpdatePromise: IPromise<any> = null;\r\n    private lastViewedSectionOnLoad: ISection;\r\n\r\n    public currentDate: number;\r\n    public minExamDateText: string = \"4/24/2017\";\r\n    public minExamDate: number = Moment.parse(this.minExamDateText).unix() * 1000;\r\n    public maxExamDate: number;\r\n    public fourYearsMilliseconds: number = (24*60*60*1000) * 1461;\r\n    public minBirthDate: number;\r\n    public maxBirthDate: number;\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        \"$route\",\r\n        \"$timeout\",\r\n        \"$q\",\r\n        \"$scope\",\r\n        SecurityService.NAME,\r\n        SettingsService.NAME,\r\n        \"$routeParams\",\r\n        \"$window\",\r\n        \"$sce\",\r\n        AuthManager.NAME,\r\n        AuthRedirect.NAME,\r\n        CommonNavigation.NAME,\r\n        UrlService.NAME,\r\n        CoursesRouter.NAME,\r\n        AuthRouter.NAME,\r\n        CourseService.NAME,\r\n        BundleService.NAME,\r\n        ProgressService.NAME,\r\n        QuizService.NAME,\r\n        AuthService.NAME,\r\n        Storages.SESSION_NAME,\r\n        PersonalRouter.NAME\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                private $route: IRouteService,\r\n                private $timeout: angular.ITimeoutService,\r\n                private $q: angular.IQService,\r\n                private $scope: angular.IScope,\r\n                private securityService: SecurityService,\r\n                private settingsService: SettingsService,\r\n                private $routeParams: angular.route.IRouteParamsService,\r\n                private $window: angular.IWindowService,\r\n                private $sce: angular.ISCEService,\r\n                private authManager: AuthManager,\r\n                public authRedirect: AuthRedirect,\r\n                private commonNavigation: CommonNavigation,\r\n                private url: UrlService,\r\n                private coursesRouter: CoursesRouter,\r\n                public authRouter: AuthRouter,\r\n                private courseService: CourseService,\r\n                private bundleService: BundleService,\r\n                private progressService: ProgressService,\r\n                private quizService: QuizService,\r\n                private authService: AuthService,\r\n                private sessionStorageWrapper: StorageWrapper,\r\n                private personalRouter: PersonalRouter) {\r\n\r\n        this.clearAll();\r\n\r\n        this.courseId = $routeParams[CoursesRouter.COURSE_ID_PARAM];\r\n        let baseApplicationUrl = $location.absUrl().substring(0, $location.absUrl().indexOf('#') + 1);\r\n        //console.log('base app url: ' + baseApplicationUrl);\r\n        this.courseLink = baseApplicationUrl + this.coursesRouter.detailsUrl(this.courseId);\r\n        // this.courseShareLink = this.courseLink.replace(\"#\", \"%23\");\r\n        this.courseShareLink = \"http://www.AirSafetyInstitute.org/MedicalAssessment\";\r\n        this.searchModuleId = parseInt($location.search()[CourseDetailsController.MODULE_PARAMETER]) || null;\r\n        this.searchSectionId = parseInt($location.search()[CourseDetailsController.SECTION_PARAMETER]) || null;\r\n        this.isAuthenticated = this.authManager.isAuthenticated();\r\n        let courseIdStr = String(this.courseId);\r\n\r\n        if (!this.securityService.isAuthenticated()) {\r\n            this.authRedirect.redirectToLogOn(); //todo: AOPA only\r\n            return; // will forward to logon, don't fetch server in this case\r\n        }\r\n\r\n        this.securityService\r\n            .demandCoursePermissions(courseIdStr, coursePermissions => coursePermissions.view);\r\n\r\n        this.authService.getCurrentUser().then(user => {\r\n            angular.copy(user, this.currentUser);\r\n            // todo: quick fix\r\n            let userInfo = this.currentUser.fullName.split(\"\\u00A0\");\r\n            this.currentUser[\"firstName\"] = userInfo[0];\r\n        });\r\n\r\n        let menuItemKey: string = MenuHelper.getCurrentMenuItemKey();\r\n        if (!menuItemKey || menuItemKey.length == 0) {\r\n            MenuHelper.setCurrentMenuItem(MenuHelper.EDUCATION_COURSES_MENU_KEY);\r\n        }\r\n\r\n        this.getCurrentDate();\r\n\r\n        // ATTENTION! this.getCourseProgress() method must be called before any other methods that use this.courseProgressId\r\n        this.getCourseProgress()\r\n            .then((progress: ICourseProgress) => {\r\n                if (this.courseExpired || this.courseArchived || (this.courseCompleted && !this.courseProgress.participantInfoSaved)) {\r\n                    this.searchModuleId = null;\r\n                    this.searchSectionId = null;\r\n                }\r\n                if (!this.searchModuleId && !this.searchSectionId && this.courseStarted) {\r\n                    this.showReturnUserPage = true;\r\n                }\r\n                return progress;\r\n            })\r\n            .then((progress: ICourseProgress) => {\r\n                return this.loadCourse();\r\n            })\r\n            .then((course: ICourse) => {\r\n                let loadDataPromises = [\r\n                    this.loadModules()\r\n                        .then(() => {\r\n                            return this.loadSections(true);\r\n                        })\r\n                        .then(() => {\r\n                            if (this.selectedSection.typeKey == SectionType[SectionType.QUIZ]) {\r\n                                return this.loadSectionQuiz();\r\n                            } else {\r\n                                return null;\r\n                            }\r\n                        }),\r\n                    this.loadBundle()\r\n                ];\r\n                loadDataPromises.push(this.loadLandingPage());\r\n                if (this.courseStarted && this.showReturnUserPage && this.courseProgress.participantInfoSaved) {\r\n                    loadDataPromises.push(this.loadCourseParticipantInfo());\r\n                }\r\n                //don't load if submitted to FAA, but opted out\r\n                if (!this.courseProgress.submittedToFaa || this.courseProgress.participantInfoSaved) {\r\n                    loadDataPromises.push(this.loadCourseProgressHistory());\r\n                }\r\n                return this.$q.all(loadDataPromises);\r\n            })\r\n            .then(() => {\r\n                this.checkCourseStartDate(); // sets 'Start Course' button visibility\r\n            })\r\n            .finally(() => {\r\n                //console.log('course loaded');\r\n                this.isCourseLoaded = true;\r\n            });\r\n\r\n        //set LMS api to window\r\n        $window[\"API\"] = this;\r\n    }\r\n\r\n    private getCurrentDate(): IPromise<any> {\r\n        return this.settingsService.getCurrentDate().then(result => {\r\n            this.currentDate = result;\r\n            this.minBirthDate = moment(this.currentDate).subtract(120, \"years\").valueOf();\r\n            this.maxBirthDate = moment(this.currentDate).subtract(14, \"years\").valueOf();\r\n        });\r\n    }\r\n\r\n    private loadModules(): IPromise<any> {\r\n        return this.courseService.getModules(this.courseId).then(result => {\r\n            angular.copy(result, this.modules);\r\n        });\r\n    }\r\n\r\n    private loadSections(setMenuItem: boolean): IPromise<void> {\r\n        if (this.modules.length > 0) {\r\n            return this.progressService.getCourseSections(this.courseId, this.courseProgressId).then(result => {\r\n                this.sectionsList = angular.copy(result);\r\n                this.modulesProgress = new Map<number, number>();\r\n                this.modules.forEach(module => {\r\n                    this.sectionsMap.set(module.id, result.filter((s: ISectionInHierarchyExtended) => s.section.moduleId == module.id));\r\n                    this.setModuleProgress(module.id);\r\n                });\r\n                if (setMenuItem) {\r\n                    let allowedSections = result.filter((s: ISectionInHierarchyExtended) => s.section.status == SectionProgressStatus[SectionProgressStatus.ALLOWED] ||\r\n                    s.section.status == SectionProgressStatus[SectionProgressStatus.STARTED] || s.section.status == SectionProgressStatus[SectionProgressStatus.FAILED]);\r\n                    let lastViewedSection = null;\r\n                    if (allowedSections.length > 0) {\r\n                        if (result.indexOf(allowedSections[0]) > 0 && allowedSections[0].section.status == SectionProgressStatus[SectionProgressStatus.ALLOWED]) {\r\n                            lastViewedSection = result[result.indexOf(allowedSections[0]) - 1].section;\r\n                        } else {\r\n                            lastViewedSection = allowedSections[0].section;\r\n                        }\r\n                    }\r\n                    this.setMenuItems(lastViewedSection);\r\n                } else {\r\n                    this.getNextSection();\r\n                }\r\n            });\r\n        } else {\r\n            return this.$q.when(null);\r\n        }\r\n    }\r\n\r\n    private loadBundle(): IPromise<any> {\r\n        if (this.course.bundleId) {\r\n            return this.bundleService.getBundle(this.course.bundleId)\r\n                .then(bundle => {\r\n                    this.courseBundle = bundle;\r\n                    this.composeRichTextFromLoadAtStartBundles();\r\n                    if (this.courseLoadAtStartBundlesText) {\r\n                        return this.$timeout(() => {\r\n                            return this.getRichTextLoadedPromise(CourseDetailsController.COURSE_LOAD_AT_START_BUNDLES_RICH_TEXT_ID);\r\n                        }, 0);\r\n                    }\r\n                    return null;\r\n                });\r\n        } else {\r\n            return this.$q.when(null);\r\n        }\r\n    }\r\n\r\n    private composeRichTextFromLoadAtStartBundles() {\r\n        if (this.courseBundle) {\r\n            this.courseLoadAtStartBundlesText = \"\";\r\n            for (let i = 0; i < this.courseBundle.files.length; i++) {\r\n                let bundleFile: IBundleFile = this.courseBundle.files[i];\r\n                if (bundleFile.loadAtStart) {\r\n                    this.courseLoadAtStartBundlesText += StringBuilder.interpolate(VhsSelectEmbeddedBundleMaterialController.EMBEDDED_BUNDLE_TA_HTML)\r\n                        .with(\":bundleId\", RandomUtils.generateRandomId(bundleFile.key + \"___\"))\r\n                        .with(\":bundleKey\", bundleFile.key)\r\n                        .build();\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private setModuleProgress(moduleId: number): void {\r\n        let completedSectionsCount = this.sectionsMap.get(moduleId).filter((section: ISectionInHierarchyExtended) =>\r\n        section.section.typeKey == SectionType[SectionType.INFORMATION] && section.section.status == SectionProgressStatus[SectionProgressStatus.OPENED] ||\r\n        section.section.typeKey == SectionType[SectionType.QUIZ] && section.section.status == SectionProgressStatus[SectionProgressStatus.COMPLETED]).length;\r\n        this.modulesProgress.set(moduleId, Math.round((completedSectionsCount / this.sectionsMap.get(moduleId).length) * 100));\r\n    }\r\n\r\n    // ATTENTION! this.courseProgressId must already be initialized and validated before calling loadCourse() and most other methods\r\n    private loadCourse(): IPromise<ICourse> {\r\n        //console.log(\"loadCourse - started\");\r\n        return this.courseService.get(this.courseId)\r\n            .then(result => {\r\n                this.course = angular.copy(result);\r\n                this.course.startDateText = Moment.isValidDate(result.startDate);\r\n                PageHeader.set().header(this.course.topic || this.course.subjectName).update();\r\n                this.isCurrentUserInOwners();\r\n                return this.course;\r\n            });\r\n    }\r\n\r\n    private checkCourseStartDate() {\r\n        if (this.course.startDate) {\r\n            var date = new Date();\r\n            if (moment(date).isAfter(this.course.startDate) || moment(date).isSame(this.course.startDate)) {\r\n                this.showStartButton = true;\r\n            } else {\r\n                this.showStartButton = false;\r\n            }\r\n        } else {\r\n            this.showStartButton = true;\r\n        }\r\n    }\r\n\r\n    private setMenuItems(lastViewedSection: ISection): void {\r\n        if (this.searchModuleId != null && this.searchSectionId != null &&\r\n            this.sectionsMap.get(this.searchModuleId) != null && this.sectionsMap.get(this.searchModuleId).filter(s => s.section.id == this.searchSectionId).length > 0 &&\r\n            this.sectionsMap.get(this.searchModuleId).filter(s => s.section.id == this.searchSectionId)[0].section.status != SectionProgressStatus[SectionProgressStatus.NOT_ALLOWED]) {\r\n            this.setLeftMenuModule(this.getModuleById(this.searchModuleId));\r\n            this.setLeftMenuItem(this.sectionsMap.get(this.searchModuleId).filter(s => s.section.id == this.searchSectionId)[0].section);\r\n        } else if (lastViewedSection != null) {\r\n            this.setLeftMenuModule(this.getModuleById(lastViewedSection.moduleId));\r\n            this.setLeftMenuItem(this.sectionsMap.get(lastViewedSection.moduleId).filter(s => s.section.id == lastViewedSection.id)[0].section);\r\n        } else {\r\n            this.setLeftMenuModule(this.modules[0]);\r\n            this.setLeftMenuItem(this.sectionsMap.get(this.modules[0].id)[0].section);\r\n        }\r\n    }\r\n\r\n    public setLeftMenuModule(leftModule: IModule): void {\r\n        // console.log(\"setLeftMenuModule - started\");\r\n        this.selectedModule = leftModule;\r\n        if (this.menuKey.leftMenuModuleExpanded === leftModule.id) return;\r\n        if (!this.checkQuizPassing()) {\r\n            this.menuKey.leftMenuModuleExpanded = leftModule.id;\r\n        }\r\n    }\r\n\r\n    public goToTheModule(module: IModule) {\r\n        if (!module || this.showParticipationForm) {\r\n            return;\r\n        }\r\n        if (this.courseStarted && !this.isCourseShouldBeRestarted()){\r\n            this.goToTheModuleInternal(module);\r\n        } else if (this.showStartButton && !this.isCourseStartInProgress  &&\r\n                    !this.sectionsMap.get(module.id)[0].section.lockUntilPreviousSectionsRead) {\r\n            this.startCourse( true /*skip set menu*/)\r\n                .then(() => {\r\n                    this.goToTheModuleInternal(module);\r\n                });\r\n        }\r\n    }\r\n\r\n    private goToTheModuleInternal(module: IModule) {\r\n        let sections = this.sectionsMap.get(module.id);\r\n        if (sections.length > 0) {\r\n            this.menuKey.leftMenuModuleExpanded = module.id;\r\n            this.setLeftMenuModule(module);\r\n            this.setLeftMenuItem(sections[0].section);\r\n            if (this.isCourseMenuVisible) {\r\n                this.showHideCourseMenu(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    private setLeftMenuItem(section: ISection): void {\r\n        //console.log(\"setLeftMenuItem - started: \" + section);\r\n        if (!section || !section.id) {\r\n            return;\r\n        }\r\n        if (!this.showSectionNotAllowedMessage && this.selectedSection && this.selectedSection.id === section.id\r\n            || this.isSlideRemoving ) {\r\n            return;\r\n        }\r\n        this.showSplashPageForStartedCourse = false;\r\n        this.isSlideBack = (this.prevSection && section.id == this.prevSection.id ||\r\n            this.courseStarted && this.showSectionNotAllowedMessage && this.selectedSection && this.selectedSection.id == section.id);\r\n        var newSection = angular.copy(section);\r\n        //console.log('Select section ' + newSection.id);\r\n        if (this.isCourseLoaded && CourseDetailsController.SLIDE_CHANGE_DELAY) {\r\n            this.isSlideRemoving = true;\r\n            this.$timeout(() => { // delay for slide change for AOPA only - hide previous page during 0.5s\r\n                this.isSlideRemoving = false;\r\n                this.scrollPageTop(0);\r\n                this.setLeftMenuItemInternal(newSection);\r\n            }, CourseDetailsController.SLIDE_CHANGE_DELAY); // delay for slide change for AOPA only\r\n        } else {\r\n            //console.log('Set left menu item during course loading...');\r\n            this.setLeftMenuItemInternal(newSection);\r\n        }\r\n    }\r\n\r\n    private setLeftMenuItemInternal(section: ISection) {\r\n        var beforeSectionChangePromises: Array<IPromise<any>> = [];\r\n        var sectionChangeDeferred: IDeferred<any> = null;\r\n        var sectionChangePromise: IPromise<any> = null;\r\n        var sectionStatusUpdateDeferred: IDeferred<any> = null;\r\n        var sectionStatusUpdatePromise: IPromise<any> = null;\r\n\r\n        let sectionViewAllowed: boolean = this.isSectionViewAllowed(section);\r\n        let quizPassing: boolean = this.courseStarted && this.checkQuizPassing();\r\n\r\n        if (!this.courseStarted) { // landing page show\r\n            sectionChangeDeferred = this.$q.defer();\r\n            sectionChangePromise = sectionChangeDeferred.promise.then(() => {\r\n                this.$location\r\n                    .search(CourseDetailsController.MODULE_PARAMETER, null)\r\n                    .search(CourseDetailsController.SECTION_PARAMETER, null)\r\n                    .replace();\r\n                return this.getRichTextLoadedPromise(CourseDetailsController.LANDING_PAGE_RICH_TEXT_ID);\r\n            });\r\n        } else if (this.showReturnUserPage) {\r\n            this.lastViewedSectionOnLoad = section;\r\n            this.$location\r\n                    .search(CourseDetailsController.MODULE_PARAMETER, null)\r\n                    .search(CourseDetailsController.SECTION_PARAMETER, null)\r\n                    .replace();\r\n        } else if (!quizPassing && sectionViewAllowed && this.selectedSection && this.selectedSection.id != section.id) {\r\n            this.isViewAllowed = false;\r\n            if (section.typeKey == SectionType[SectionType.QUIZ]) {\r\n                this.clearSectionQuizParameters();\r\n                beforeSectionChangePromises.push(this.loadSectionQuiz(section.id));\r\n            }\r\n\r\n            sectionChangeDeferred = this.$q.defer();\r\n            sectionChangePromise = sectionChangeDeferred.promise.then(() => {\r\n                this.selectedSection = angular.copy(section);\r\n                PageHeader.set().header(this.selectedSection.name + \": \" + (this.course.topic || this.course.subjectName)).update();\r\n                this.$location\r\n                    .search(CourseDetailsController.MODULE_PARAMETER, section.moduleId)\r\n                    .search(CourseDetailsController.SECTION_PARAMETER, section.id)\r\n                    .replace();\r\n                this.menuKey.leftMenuItem = section.id;\r\n                this.menuKey.leftMenuItemType = section.typeKey;\r\n                this.menuKey.leftMenuModule = this.menuKey.leftMenuModuleExpanded;\r\n                this.material = {};\r\n                this.resetLMSState();\r\n                this.getNextSection();\r\n                this.getPrevSection();\r\n\r\n                let onSectionChangePromises: Array<IPromise<any>> = [];\r\n                if (this.isSelectedSectionTypeInfo()) {\r\n                    onSectionChangePromises.push(this.loadSectionMaterials());\r\n                }\r\n                let richTextReadyPromise = this.getRichTextLoadedPromise(CourseDetailsController.SECTION_SUMMARY_RICH_TEXT_ID);\r\n                if (richTextReadyPromise) {\r\n                    onSectionChangePromises.push(richTextReadyPromise);\r\n                }\r\n                //var deferred: angular.IDeferred<any> = this.$q.defer<any>();\r\n                //onSectionChangePromises.push(deferred.promise);\r\n                //this.$timeout(() => {\r\n                //    deferred.resolve();\r\n                //}, 7000);\r\n\r\n                return this.$q.all(onSectionChangePromises);\r\n            });\r\n\r\n            if (section.typeKey == SectionType[SectionType.INFORMATION] &&\r\n                section.status == SectionProgressStatus[SectionProgressStatus.ALLOWED]) {\r\n                var openedSectionId = section.id;\r\n                var openedModuleId = section.moduleId;\r\n                sectionStatusUpdateDeferred = this.$q.defer();\r\n                sectionStatusUpdatePromise = sectionStatusUpdateDeferred.promise.then(() => {\r\n                    //console.log('Start set section status opened: ' + openedSectionId);\r\n                    return this.setSectionStatusOpened(openedSectionId, openedModuleId)\r\n                        .catch((error) => {\r\n                            if (error == this.ERROR_INTERNET_DISCONNECTED) {\r\n                                this.setStatusOpenedRetry(openedSectionId, openedModuleId);\r\n                            }\r\n                        });\r\n                });\r\n            }\r\n        } else if (!quizPassing && sectionViewAllowed) {\r\n            sectionChangeDeferred = this.$q.defer();\r\n            sectionChangePromise = sectionChangeDeferred.promise.then(() => {\r\n                PageHeader.set().header(this.selectedSection.name + \": \" + (this.course.topic || this.course.subjectName)).update();\r\n           });\r\n        } else if (!quizPassing && !sectionViewAllowed) {\r\n            sectionChangeDeferred = this.$q.defer();\r\n            sectionChangePromise = sectionChangeDeferred.promise.then(() => {\r\n                this.showSectionNotAllowedMessage = true;\r\n                PageHeader.set().header(\"Missing Prerequisites\").update();\r\n           });\r\n        }\r\n\r\n        this.showSectionNotAllowedMessage = false;\r\n\r\n        this.isSlideLoading = true;\r\n        this.slideLoadingCounter++;\r\n        this.$q.all(beforeSectionChangePromises)\r\n            .then(() => {\r\n                if (sectionChangeDeferred && sectionChangePromise) {\r\n                    //console.log('Start change sections after preload');\r\n                    sectionChangeDeferred.resolve();\r\n                    return sectionChangePromise;\r\n                } else {\r\n                    return null;\r\n                }\r\n            })\r\n            .finally(() => {\r\n                //console.log('Slide is loaded now');\r\n                this.slideLoadingCounter--;\r\n                if (this.slideLoadingCounter == 0) {\r\n                    this.isSlideLoading = false;\r\n                }\r\n            })\r\n            .then(() => {\r\n                // update section status only in it is displayed to user now\r\n                if (!this.isSlideLoading && sectionStatusUpdateDeferred && sectionStatusUpdatePromise) {\r\n                    //console.log(\"Set section status after rich text loaded...\");\r\n                    this.runSectionStatusUpdateDeferred(sectionStatusUpdateDeferred, sectionStatusUpdatePromise);\r\n                }\r\n            });\r\n    }\r\n\r\n    private runSectionStatusUpdateDeferred(deferred: IDeferred<any>, statusUpdatedPromise: IPromise<any>): void {\r\n        //wait for complete previous section status update\r\n        var newPromise = statusUpdatedPromise.then(() => {\r\n            if (this.sectionStatusUpdatePromise == newPromise) {\r\n                this.sectionStatusUpdatePromise = null;\r\n                //console.log('reset status update promise after resolve');\r\n            } else {\r\n                //console.log(\"Promises chained, don't clear\");\r\n            }\r\n        });\r\n        if (this.sectionStatusUpdatePromise) {\r\n            this.sectionStatusUpdatePromise.finally(() => {\r\n                //console.log('execute appended deferred');\r\n                deferred.resolve();\r\n                return newPromise;\r\n            });\r\n            this.sectionStatusUpdatePromise = newPromise;\r\n        } else {\r\n            this.sectionStatusUpdatePromise = newPromise;\r\n            deferred.resolve();\r\n        }\r\n    }\r\n\r\n    private getRichTextLoadedPromise(richTextId: string): IPromise<any> {\r\n        //if (this.selectedSection && this.selectedSection.summary) {\r\n        let deferred: angular.IDeferred<any> = this.$q.defer();\r\n\r\n        var eventData: IFindRichTextBindControllerEventData = {\r\n            richTextElementId: richTextId,\r\n            richTextBindController: null\r\n        };\r\n        var findRichTextController: ()=>RichTextBindController = () => {\r\n            this.$scope.$broadcast(Event.TA_FIND_RICH_TEXT_BIND_CONTROLLER, eventData);\r\n            return eventData.richTextBindController;\r\n        };\r\n        var waitForContentLoad: (richTextBindController: RichTextBindController)=>IPromise<any> =\r\n            (richTextBindController: RichTextBindController) => {\r\n                return richTextBindController.waitForContentLoaded()\r\n                    .finally(() => {\r\n                        deferred.resolve()\r\n                    });\r\n            };\r\n        var resolveDeferredInAnyCase = () => {\r\n            var richTextBindController: RichTextBindController = findRichTextController();\r\n            if (richTextBindController) {\r\n                waitForContentLoad(richTextBindController);\r\n            } else {\r\n                //console.log('Not found richText twice');\r\n                deferred.resolve();\r\n            }\r\n        };\r\n        let richTextBindController: RichTextBindController = findRichTextController();\r\n        if (richTextBindController) {\r\n            waitForContentLoad(richTextBindController);\r\n        } else if (this.isCourseLoaded) {\r\n            this.$timeout(() => {\r\n                resolveDeferredInAnyCase();\r\n            }, 0);\r\n            //console.log(' Strange... rich text not found');\r\n            //return null;\r\n        } else {\r\n            //console.log('Wait for course load');\r\n            var unbindWatcher: Function = this.$scope.$watch(\"vm.isCourseLoaded\", value => {\r\n                if (value) {\r\n                    unbindWatcher();\r\n                    //wait for DOM elements add\r\n                    this.$timeout(() => {\r\n                        resolveDeferredInAnyCase();\r\n                    }, 0);\r\n                }\r\n            });\r\n        }\r\n        return deferred.promise;\r\n    }\r\n\r\n    private isSectionViewAllowed(section: ISection): boolean {\r\n        return this.courseStarted && section.status !== 'NOT_ALLOWED'\r\n    }\r\n\r\n    private setSectionStatusOpened(sectionId: number, moduleId: number): IPromise<void> {\r\n        let error;\r\n        return this.progressService.setSectionProgress(this.courseId, sectionId, SectionProgressStatus[SectionProgressStatus.OPENED], this.courseProgressId)\r\n            .then(result => {\r\n                this.sectionsMap.get(moduleId).filter(s =>\r\n                s.section.id == sectionId)[0].section.status = SectionProgressStatus[SectionProgressStatus.OPENED];\r\n                this.sectionsList.filter(s => s.section.id == sectionId)[0].section.status = SectionProgressStatus[SectionProgressStatus.OPENED];\r\n                this.setModuleProgress(moduleId);\r\n                this.recalculateLockSectionsStatuses();\r\n                this.getNextSection();\r\n            })\r\n            .catch((response) => {\r\n                error = response;\r\n                if (response && response.data && response.data.error) {\r\n                    //do nothing\r\n                } else {\r\n                    return this.$q.reject(this.ERROR_INTERNET_DISCONNECTED);\r\n                }\r\n            }).finally(() => {\r\n                if(error === undefined) {\r\n                    this.progressService.getSectionProgress(this.courseId, sectionId, this.courseProgressId)\r\n                        .then(result => {\r\n                            if (result.status != SectionProgressStatus[SectionProgressStatus.OPENED]) {\r\n                                this.setSectionStatusOpened(sectionId, moduleId)\r\n                                    .catch((error) => {\r\n                                        if (error == this.ERROR_INTERNET_DISCONNECTED) {\r\n                                            this.setStatusOpenedRetry(sectionId, moduleId);\r\n                                        }\r\n                                    });\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n    }\r\n\r\n    private setStatusOpenedRetry(sectionId: number, moduleId: number): void {\r\n        this.$timeout(() => {\r\n            this.setSectionStatusOpened(sectionId, moduleId)\r\n                .catch((error) => {\r\n                    if (error == this.ERROR_INTERNET_DISCONNECTED) {\r\n                        this.setStatusOpenedRetry(sectionId, moduleId);\r\n                    }\r\n                });\r\n        }, this.SUBMIT_SECTION_PROGRESS_RETRY_INTERVAL);\r\n    }\r\n\r\n    private recalculateLockSectionsStatuses(): void {\r\n        let lockedSections = this.sectionsList.filter((section: ISectionInHierarchyExtended) =>\r\n        section.section.lockUntilPreviousSectionsRead && section.section.status == SectionProgressStatus[SectionProgressStatus.NOT_ALLOWED]);\r\n        if (lockedSections.length > 0) {\r\n            let firstLockedSection = lockedSections[0];\r\n            let lockedSectionIndex = this.sectionsList.indexOf(firstLockedSection);\r\n            let completedSections = this.sectionsList.filter((section, index) => index < lockedSectionIndex &&\r\n            (section.section.status == SectionProgressStatus[SectionProgressStatus.OPENED] ||\r\n            section.section.status == SectionProgressStatus[SectionProgressStatus.COMPLETED]));\r\n            if (completedSections.length == lockedSectionIndex) {\r\n                firstLockedSection.section.status = SectionProgressStatus[SectionProgressStatus.ALLOWED];\r\n                this.sectionsMap.get(firstLockedSection.section.moduleId).filter(section =>\r\n                section.section.id == firstLockedSection.section.id)[0].section.status = SectionProgressStatus[SectionProgressStatus.ALLOWED];\r\n            }\r\n        }\r\n    }\r\n\r\n    private getNextSection() {\r\n        this.nextSection = {};\r\n        let currentModuleId = this.selectedSection.moduleId;\r\n        let lastSectionInModuleId = (currentModuleId && this.sectionsMap.get(currentModuleId).length > 0)\r\n            ? this.sectionsMap.get(currentModuleId)[this.sectionsMap.get(currentModuleId).length - 1].section.id\r\n            : null;\r\n        if (lastSectionInModuleId == this.selectedSection.id) {\r\n            var nextModuleId = this.getNextModuleId(currentModuleId);\r\n            if (nextModuleId > 0) {\r\n                if (this.sectionsMap.get(nextModuleId)[0]) {\r\n                    this.nextSection = this.sectionsMap.get(nextModuleId)[0].section;\r\n                } else {\r\n                    this.nextSection = {};\r\n                }\r\n            }\r\n        } else {\r\n            for (let i = 0; i < this.sectionsMap.get(currentModuleId).length; i++) {\r\n                if (i != (this.sectionsMap.get(currentModuleId).length - 1)\r\n                    && this.sectionsMap.get(currentModuleId)[i].section.id == this.selectedSection.id) {\r\n                    angular.copy(this.sectionsMap.get(currentModuleId)[i + 1].section, this.nextSection);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private getModuleById(moduleId: number): IModule {\r\n        var module: IModule = {};\r\n        for (let i = 0; i < this.modules.length; i++) {\r\n            if (this.modules[i].id == moduleId) {\r\n                angular.copy(this.modules[i], module); //todo: is copy needed?\r\n            }\r\n        }\r\n        return module;\r\n    }\r\n\r\n    public redirectToNextSection() {\r\n       // if (!this.isSectionViewAllowed(this.nextSection)) {\r\n       //     return;\r\n       // }\r\n        this.menuKey.leftMenuModuleExpanded = this.nextSection.moduleId;\r\n        this.setLeftMenuModule(this.getModuleById(this.nextSection.moduleId));\r\n        this.setLeftMenuItem(this.nextSection);\r\n        if (this.isCourseMenuVisible) {\r\n            this.showHideCourseMenu(false);\r\n        }\r\n    }\r\n\r\n    private getNextModuleId(currentModuleId: number): number {\r\n        for (let i = 0; i < this.modules.length; i++) {\r\n            if (this.modules[i].id == currentModuleId) {\r\n                if (i != (this.modules.length - 1)) {\r\n                    return this.modules[i + 1].id;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    private getPrevSection() {\r\n        this.prevSection = {};\r\n        let moduleId = this.selectedSection.moduleId;\r\n        let firstSectionInModuleId = (this.sectionsMap.get(moduleId)[0])\r\n            ? this.sectionsMap.get(moduleId)[0].section.id\r\n            : null;\r\n        if (firstSectionInModuleId == this.selectedSection.id) {\r\n            var prevModuleId = this.getPrevModuleId(moduleId);\r\n            var prevModuleSections = this.sectionsMap.get(prevModuleId);\r\n            if (prevModuleId > 0 && prevModuleSections && prevModuleSections.length > 0) {\r\n                angular.copy(prevModuleSections[prevModuleSections.length - 1].section, this.prevSection);\r\n            } else {\r\n                this.prevSection = {};\r\n            }\r\n        } else {\r\n            for (let i = 0; i < this.sectionsMap.get(this.menuKey.leftMenuModuleExpanded).length; i++) {\r\n                if (i != 0 && this.sectionsMap.get(this.menuKey.leftMenuModuleExpanded)[i].section.id == this.selectedSection.id) {\r\n                    angular.copy(this.sectionsMap.get(this.menuKey.leftMenuModuleExpanded)[i - 1].section, this.prevSection);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public redirectToPrevSection() {\r\n        if (this.showSectionNotAllowedMessage) {\r\n            this.menuKey.leftMenuModuleExpanded = this.selectedSection.moduleId;\r\n            this.setLeftMenuItem(this.selectedSection);\r\n            return;\r\n        }\r\n        this.menuKey.leftMenuModuleExpanded = this.prevSection.moduleId;\r\n        this.setLeftMenuModule(this.getModuleById(this.prevSection.moduleId));\r\n        this.setLeftMenuItem(this.prevSection);\r\n        if (this.isCourseMenuVisible) {\r\n            this.showHideCourseMenu(false);\r\n        }\r\n    }\r\n\r\n    private getPrevModuleId(currentModuleId: number): number {\r\n        for (let i = 0; i < this.modules.length; i++) {\r\n            if (this.modules[i].id == currentModuleId) {\r\n                if (i != 0) {\r\n                    return this.modules[i - 1].id;\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    private checkQuizPassing(): boolean {\r\n        if (this.sectionQuizPassing && !this.disableCompleteQuizButton) {\r\n            notifier.error(\"Quiz not completed\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private clearSectionQuizParameters(): void {\r\n        this.sectionQuiz = {};\r\n        this.sectionQuizResults = [];\r\n        this.sectionQuizCurrentResult = {};\r\n        this.sectionQuizPassing = false;\r\n        this.commonNavigation.allowNavigation();\r\n    }\r\n\r\n    public isTopMenuActive(topMenuKey: string): boolean {\r\n        return this.DEFAULT_TOP_MENU_ITEM == topMenuKey;\r\n    }\r\n\r\n    public isShowProgressTab(): boolean {\r\n        return (this.courseStarted || this.currentUserInOwners || this.course.permissions && this.course.permissions.edit) && this.isAuthenticated;\r\n    }\r\n\r\n    public isLeftMenuModuleActive(topMenuKey: string, leftModule: number): boolean {\r\n        return this.menuKey.leftMenuModuleExpanded == leftModule;\r\n    }\r\n\r\n    public isLeftMenuItemActive(topMenuKey: string, leftModule: number, item: number): boolean {\r\n        return this.menuKey.leftMenuModule == leftModule\r\n            && this.menuKey.leftMenuItem == item;\r\n    }\r\n\r\n    public isSelectedSectionTypeInfo() {\r\n        return this.menuKey.leftMenuItemType === SectionType[SectionType.INFORMATION];\r\n    }\r\n\r\n    public isSelectedSectionTypeQuiz() {\r\n        return this.menuKey.leftMenuItemType === SectionType[SectionType.QUIZ];\r\n    }\r\n\r\n    public isSelectedSectionTypeProblemSolution() {\r\n        return this.menuKey.leftMenuItemType === SectionType[SectionType.PROBLEM_SOLUTION];\r\n    }\r\n\r\n    private loadSectionMaterials(): IPromise<void> {\r\n        // console.log(\"loadSectionMaterials - started\");\r\n        if (this.selectedSection.materialsCount > 0) {\r\n            return this.courseService.getSectionUploadedOrLinkMaterials(this.courseId, this.menuKey.leftMenuModule, this.selectedSection.id).then(result => {\r\n                this.sectionMaterials = angular.copy(result);\r\n                if (this.sectionMaterials.length > 0) {\r\n                    this.showMaterial(this.sectionMaterials[0]);\r\n                }\r\n            });\r\n        } else {\r\n            this.sectionMaterials = [];\r\n            this.material = {};\r\n            return this.$q.when();\r\n        }\r\n    }\r\n\r\n    public showMaterial(material: IMaterial): void {\r\n        // console.log(\"showMaterial - started\");\r\n        this.materialType = \"\";\r\n        this.materialLoaded = false;\r\n        angular.copy(material, this.material);\r\n        this.selectedMaterialId = material.id;\r\n\r\n        this.$timeout(() => {\r\n            this.materialLoaded = true;\r\n\r\n            if (this.isYoutubeLink(this.material)) {\r\n                this.materialType = 'YOUTUBE';\r\n            } else {\r\n                this.materialType = this.material.typeKey;\r\n            }\r\n\r\n            this.isMaterialEmpty = this.material.id && this.material.typeKey !== MaterialTypeKeyEnum[MaterialTypeKeyEnum.LINK] &&\r\n                (!this.material.fileStatus || this.material.fileStatus === 'EMPTY');\r\n            this.isMaterialNotReady = !this.isMaterialEmpty && this.material.id &&\r\n                this.material.typeKey !== MaterialTypeKeyEnum[MaterialTypeKeyEnum.LINK] && this.material.fileStatus\r\n                && this.material.fileStatus !== 'EMPTY' && this.material.fileStatus !== 'READY';\r\n            this.isViewAllowed = this.materialLoaded && !this.isMaterialEmpty && !this.isMaterialNotReady;\r\n\r\n            this.multimediaSources = [{\r\n                src: this.isYoutubeLink(this.material) ? this.material.link : (this.material.downloadUrl || ''),\r\n                type: this.isYoutubeLink(this.material) ? \"video/youtube\" : this.material.contentType\r\n            }];\r\n        }, 0);\r\n    }\r\n\r\n    public isYoutubeLink(material: IMaterial): boolean {\r\n        return material.typeId == 3 && ObjectTypeUtils.isYoutubeUrl(material.link);\r\n    }\r\n\r\n    public getMaterialTypeClass(materialTypeKey: string): string {\r\n        return ObjectTypeUtils.getMaterialGlyphiconClassFromKey(materialTypeKey);\r\n    }\r\n\r\n    private loadSectionQuiz(sectionId?: number): IPromise<any> {\r\n        return this.courseService.getSectionQuiz(this.courseId, this.menuKey.leftMenuModule, sectionId || this.selectedSection.id).then(result => {\r\n            angular.copy(result, this.sectionQuiz);\r\n            if (this.sectionQuiz.id) {\r\n                return this.loadSectionQuizResults(this.sectionQuiz.id, sectionId);\r\n            }\r\n            return result;\r\n        });\r\n    }\r\n\r\n    private loadSectionQuizResults(quizId: number, sectionId?: number): IPromise<any> {\r\n        return this.quizService.getUserQuizResults(quizId, \"COURSE\", sectionId || this.selectedSection.id, this.courseProgressId).then(result => {\r\n            //console.log('Quiz results are loaded');\r\n            angular.copy(result, this.sectionQuizResults);\r\n            // if (this.isLastSectionInCourse(sectionId || this.selectedSection.id) && this.isQuizPassed()) {\r\n            //     return this.loadCourseCertificates();\r\n            // }\r\n        })\r\n    }\r\n\r\n    public startSectionQuiz() {\r\n        this.disableCompleteQuizButton = true;\r\n        this.quizService.startQuizByUser(this.sectionQuiz.id, \"COURSE\", this.selectedSection.id, this.courseProgressId).then(result => {\r\n            angular.copy(result, this.sectionQuizCurrentResult);\r\n            this.disableCompleteQuizButton = false;\r\n            this.sectionQuizPassing = true;\r\n            angular.copy(this.sectionQuiz.questions[0], this.sectionQuizCurrentQuestion);\r\n            this.sectionQuizCurrentQuestionIndex = 0;\r\n            this.commonNavigation.preventNavigation();\r\n            this.sectionQuizCurrentResult.answers = [];\r\n            this.sectionQuizDuration = this.sectionQuiz.duration != null\r\n                ? Math.round(this.sectionQuiz.duration - (new Date().getTime() - result.startTime) / 1000)\r\n                : null;\r\n            if (this.sectionQuizDuration != null && this.sectionQuizDuration < 0) {\r\n                this.completeSectionQuiz();\r\n            } else if (this.sectionQuizDuration != null) {\r\n                this.$scope.$broadcast('timer-set-countdown', this.sectionQuizDuration);\r\n                this.$scope.$broadcast('timer-start');\r\n            }\r\n        });\r\n    }\r\n\r\n    public selectSectionQuizCurrentAnswer(question: IQuizQuestion, answer: IQuizAnswer): void {\r\n        question.answers.forEach((a: IQuizAnswer) => {\r\n            a.selected = false;\r\n        });\r\n        answer.selected = true;\r\n    }\r\n\r\n    public getSectionQuizNextQuestion(): void {\r\n        this.sectionQuizQuestionAnswered = false;\r\n        this.sectionQuizCurrentQuestionIndex += 1;\r\n        angular.copy(this.sectionQuiz.questions[this.sectionQuizCurrentQuestionIndex], this.sectionQuizCurrentQuestion);\r\n    }\r\n\r\n    public submitSectionQuizCurrentQuestionAnswer(): void {\r\n        this.sectionQuizQuestionAnswered = true;\r\n        angular.copy(this.sectionQuizCurrentQuestion, this.sectionQuiz.questions[this.sectionQuizCurrentQuestionIndex]);\r\n    }\r\n\r\n    public getIsAnsweredQuestionCorrect(index: number): boolean {\r\n        let questionAnswers = this.sectionQuiz.questions[index].answers;\r\n        return (questionAnswers.filter((a: IQuizAnswer) => a.isCorrect).length ==\r\n            questionAnswers.filter((a: IQuizAnswer) => a.selected).length) &&\r\n            (questionAnswers.filter((a: IQuizAnswer) => a.selected).length ==\r\n            questionAnswers.filter((a: IQuizAnswer) => a.isCorrect && a.selected).length);\r\n    }\r\n\r\n    public completeSectionQuiz() {\r\n        this.sectionQuizQuestionAnswered = false;\r\n        this.disableCompleteQuizButton = true;\r\n        this.sectionQuiz.questions.forEach((question: IQuizQuestion) => {\r\n            var result: IQuizAnswerResult = {\r\n                quizResultId: this.sectionQuizCurrentResult.id,\r\n                questionId: question.id,\r\n                answerIds: question.answers.filter((a: IQuizAnswer) => a.selected).map((a: IQuizAnswer) => {\r\n                    return a.id;\r\n                })\r\n            };\r\n            this.sectionQuizCurrentResult.answers.push(result);\r\n        });\r\n        this.quizService.completeQuizByUser(this.sectionQuizCurrentResult).then(result => {\r\n            this.sectionQuizPassing = false;\r\n            this.commonNavigation.allowNavigation();\r\n            this.disableCompleteQuizButton = false;\r\n            this.sectionQuizCurrentResult = {};\r\n            this.sectionQuiz.questions.forEach(q => {\r\n                q.answers.forEach((a: IQuizAnswer) => a.selected = false);\r\n            });\r\n            this.$scope.$broadcast('timer-clear');\r\n            this.sectionQuizDuration = null;\r\n\r\n            this.loadSections(false);\r\n            return result;\r\n        })\r\n            .then(result => {\r\n                return this.loadSectionQuizResults(this.sectionQuiz.id)\r\n                    .then(() => {\r\n                        if (this.isQuizPassed() && this.courseProgress.status == \"STARTED\") {\r\n                            return this.getCourseProgress();\r\n                        }\r\n                    })\r\n                    .then(() => {\r\n                        if (this.lmsQuizCompleteListeners) {\r\n                            for (var i = 0; i < this.lmsQuizCompleteListeners.length; i++) {\r\n                                try {\r\n                                    this.lmsQuizCompleteListeners[i]();\r\n                                } catch (e) {\r\n                                    //do nothing\r\n                                }\r\n                            }\r\n                            this.lmsQuizCompleteListeners = [];\r\n                        }\r\n                    });\r\n            });\r\n\r\n    }\r\n\r\n////////// course progress\r\n    private isCurrentUserInOwners(): void {\r\n        for (let i = 0; i < this.course.ownerIds.length; i++) {\r\n            if (this.course.ownerIds[i] == this.currentUser.id) {\r\n                this.currentUserInOwners = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    private getCourseProgress(progressId?: number): IPromise<ICourseProgress> {\r\n        this.courseProgressId = progressId\r\n            ? progressId\r\n            : this.sessionStorageWrapper.get<number>(this.progressService.COURSE_PROGRESS_ID_STORAGE_KEY);\r\n\r\n        return this.progressService.getCourseProgress(this.courseId, this.courseProgressId)\r\n            .then(result => {\r\n                this.initializeCourseProgress(result);\r\n                //console.log('course progress initialized');\r\n                return this.courseProgress;\r\n            });\r\n    }\r\n\r\n    private loadCourseProgressHistory(): IPromise<ICourseProgressWithParticipantInfo[]> {\r\n        return this.progressService.getCourseProgressHistory(this.courseId)\r\n            .then(result => {\r\n                this.progressHistory = result;\r\n                if (this.progressHistory && this.progressHistory.length > 0) {\r\n                    this.lastFinishedCourseProgress = <ICourseProgressWithParticipantInfo> this.progressHistory[0];\r\n                } else {\r\n                    this.lastFinishedCourseProgress = null;\r\n                }\r\n                return result;\r\n            });\r\n    }\r\n\r\n    public clearAll(): void {\r\n        this.menuKey = {\r\n            leftMenuModule: null, // this.DEFAULT_LEFT_MENU_MODULE,\r\n            leftMenuModuleExpanded: null, // this.DEFAULT_LEFT_MENU_MODULE,\r\n            leftMenuItem: null, // CourseModuleItemsKey.INTRO,\r\n            innerItem: null, // this.DEFAULT_INNER_MENU_ITEM\r\n        };\r\n        this.modules = [];\r\n        this.selectedModule = {};\r\n        this.sectionsMap = new Map<number, Array<ISectionInHierarchyExtended>>();\r\n        this.selectedSection = {};\r\n        this.prevSection = {};\r\n        this.nextSection = {};\r\n        this.sectionMaterials = [];\r\n        this.material = {};\r\n        this.multimediaSources = [];\r\n    }\r\n\r\n    public startCourse(skipSetMenu?: boolean): IPromise<any> {\r\n        if (this.isCourseStartInProgress) {\r\n            return this.$q.when(null);\r\n        }\r\n        this.showParticipationForm = false;\r\n        this.isCourseStartInProgress = true;\r\n        // this.participationFormData.dob = this.formatDateForSaving(this.dobDateString);\r\n        // this.participationFormData.examDate = this.formatDateForSaving(this.examDateString);\r\n\r\n        let promise: IPromise<any> = this.progressService.startCourse(this.courseId, {} /* this.participationFormData*/);\r\n        return promise.then(result => {\r\n            this.showSplashPageForStartedCourse = false;\r\n            this.initializeCourseProgress(result);\r\n            return this.loadSections(!skipSetMenu);\r\n            // notifier.success(\"Your information have been submitted\");\r\n        })\r\n        .finally(() => {\r\n            this.isCourseStartInProgress = false;\r\n        });\r\n    }\r\n\r\n    public reTakeCourse(): void {\r\n        if (this.isCourseStartInProgress) {\r\n            return;\r\n        }\r\n        this.showReturnUserPage = false;\r\n        this.showSplashPageForStartedCourse = true;\r\n    }\r\n\r\n    private isCourseShouldBeRestarted(): boolean {\r\n        return this.courseExpired || this.courseArchived || this.courseCompleted && !this.courseProgress.participantInfoSaved;\r\n    }\r\n\r\n    public reTakeQuiz(): void {\r\n        if (this.isRetakeQuizAllowed()) {\r\n            // find quiz section\r\n            let section: ISection = this.findFirstQuizSection();\r\n            if (section) {\r\n                this.showReturnUserPage = false;\r\n                this.setLeftMenuItem(section);\r\n            }\r\n        }\r\n    }\r\n\r\n    public isRetakeQuizAllowed(): boolean {\r\n        if (this.courseJustStarted) {\r\n            let section: ISection = this.findFirstQuizSection();\r\n            if (section) {\r\n                return section.status === SectionProgressStatus[SectionProgressStatus.FAILED]\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    public reEnterParticipationFormData() {\r\n        this.startEditCourseParticipationForm();\r\n    }\r\n\r\n    public applyForBasicMed() {\r\n        this.startEditCourseParticipationForm(true);\r\n    }\r\n\r\n    public continueWithCourse() {\r\n        this.showReturnUserPage = false;\r\n        if (this.lastViewedSectionOnLoad) {\r\n            this.setLeftMenuItem(this.lastViewedSectionOnLoad);\r\n            this.lastViewedSectionOnLoad = null;\r\n        }\r\n    }\r\n\r\n    private findFirstQuizSection(): ISection {\r\n        if (this.modules && this.modules.length > 0) {\r\n            for (let module of this.modules) {\r\n                let sections = this.sectionsMap.get(module.id);\r\n                if (sections && sections.length > 0) {\r\n                    for (let section of sections) {\r\n                        if (section.section.typeKey === SectionType[SectionType.QUIZ]) {\r\n                            return section.section;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    private initializeCourseProgress(courseProgress: ICourseProgress): void {\r\n        // console.log(\"initializeCourseProgress - started\");\r\n        this.courseProgress = angular.copy(courseProgress);\r\n        this.courseProgressId = this.courseProgress.id;\r\n        this.sessionStorageWrapper.put<number>(this.progressService.COURSE_PROGRESS_ID_STORAGE_KEY,\r\n            this.courseProgressId);\r\n        this.courseStarted = (courseProgress.status && courseProgress.status !== CourseProgressStatus[CourseProgressStatus.NOT_STARTED]);\r\n        this.courseJustStarted = (courseProgress.status && courseProgress.status === CourseProgressStatus[CourseProgressStatus.STARTED]);\r\n        this.coursePassed = courseProgress.status && courseProgress.status === CourseProgressStatus[CourseProgressStatus.PASSED];\r\n        this.courseCompleted = courseProgress.status && courseProgress.status === CourseProgressStatus[CourseProgressStatus.COMPLETED];\r\n        this.courseExpired = courseProgress.status && courseProgress.status === CourseProgressStatus[CourseProgressStatus.EXPIRED];\r\n        this.courseArchived = courseProgress.status && courseProgress.status === CourseProgressStatus[CourseProgressStatus.ARCHIVED];\r\n    }\r\n\r\n////////// redirect\r\n    private redirectToProgress(): void {\r\n        this.$location.url(this.coursesRouter.progressUrl(this.courseId));\r\n    }\r\n\r\n    private redirectToInfo(): void {\r\n        this.$location.url(this.coursesRouter.infoUrl(this.courseId));\r\n    }\r\n\r\n    public editCourse(): void {\r\n        this.$location.url(this.coursesRouter.updateUrl(this.courseId));\r\n    }\r\n\r\n    public redirectToSection($event): void {\r\n        if(this.courseStarted && this.modules.length > 0 && this.menuKey.leftMenuItem) {\r\n            if ($event.keyCode == 37 && !this.sectionQuizPassing && this.prevSection.id) {\r\n                this.redirectToPrevSection();\r\n            }\r\n            if ($event.keyCode == 39 && !this.sectionQuizPassing && this.nextSection.id && this.nextSection.status !== 'NOT_ALLOWED') {\r\n                this.redirectToNextSection();\r\n            }\r\n        }\r\n    }\r\n\r\n    public reprintForOptedOutUser(): void {\r\n        this.startEditCourseParticipationForm();\r\n    }\r\n\r\n////////// participation form\r\n    public startEditCourseParticipationForm(applyForBasicMed?: boolean): void {\r\n        if (!this.checkQuizPassing() && this.isParticipationFormAllowed()) {\r\n            if (this.isCourseMenuVisible) {\r\n                this.showHideCourseMenu(false);\r\n            }\r\n            this.isApplyForBasicMed = applyForBasicMed;\r\n            this.getCurrentDate()\r\n                .then(() => {\r\n                    let infoForEdit: ICourseParticipantInfo = applyForBasicMed ? this.getParticipantInfoForApply() : this.getParticipantInfoForEdit();\r\n                    this.maxExamDate = new Date().getTime();\r\n                    // check if info loaded already\r\n                    if (infoForEdit) {\r\n                        this.showReturnUserPage = false;\r\n                        this.startWithParticipationForm(infoForEdit);\r\n                    } else {\r\n                        this.loadCourseParticipantInfo().then(result => {\r\n                            if (result) {\r\n                                this.showReturnUserPage = false;\r\n                                this.startWithParticipationForm(applyForBasicMed ? this.getParticipantInfoForApply() : this.getParticipantInfoForEdit());\r\n                            }\r\n                        });\r\n                    }\r\n            });\r\n        }\r\n    }\r\n\r\n    public isParticipationFormAllowed(): boolean {\r\n        return this.courseProgress && (\r\n            this.coursePassed || //apply or edit\r\n            //edit last finished course progress\r\n            (this.courseJustStarted || this.courseCompleted || this.courseExpired || this.courseArchived) && this.isCompletedCourseInfoExists() ||\r\n            //reprint for opted out\r\n            this.courseCompleted && !this.courseProgress.participantInfoSaved);\r\n    }\r\n\r\n    public saveParticipationForm(participationForm: any, confirmation: boolean): void {\r\n        if (!participationForm.$valid || !this.participationFormData['agreeFourMandatoryAgreements'] || !this.agreeReleaseDriverHistory) {\r\n            $(\"#participation_form\").attr(\"validation\", \"\");\r\n            const popup: any = $(\"#form_validation_popup\");\r\n            popup.showPopup();\r\n            return;\r\n        }\r\n        if (confirmation && this.courseProgressId) {\r\n            const popup: any = $(\"#confirmation_popup\");\r\n            popup.showPopup();\r\n            return;\r\n        } else if (this.courseProgressId) {\r\n            this.updateCourseParticipantInfo();\r\n        }\r\n    }\r\n\r\n    private loadCourseParticipantInfo(): IPromise<ICourseParticipantInfo> {\r\n        if (this.currentUser.id != 2 || this.courseProgressId) {\r\n            let promise = this.courseService.getCourseParticipationInfo(this.courseId, this.courseProgressId);\r\n            promise.then(result => {\r\n                this.participationInfo = angular.copy(result);\r\n            });\r\n            return promise;\r\n        } else {\r\n            return this.$q.when(null);\r\n        }\r\n    }\r\n\r\n    private modifyParticipationFormDataFields(): void {\r\n        this.participationFormData.dob = this.dobDateString != \"\" && this.dobDateString != null\r\n            ? this.formatDateForSaving(this.dobDateString) : null;\r\n        this.participationFormData.examDate = this.formatDateForSaving(this.examDateString);\r\n        this.participationFormData.phone.replace(\"-\", \"\");\r\n        this.participationFormData.physicianPhone.replace(\"-\", \"\");\r\n        if (this.participationFormData.country !== \"USA\") {\r\n            this.participationFormData.state = \"\";\r\n        }\r\n    }\r\n\r\n    private updateCourseParticipantInfo(): IPromise<any> {\r\n        if (this.disableParticipationForm) {\r\n            return;\r\n        }\r\n        this.disableParticipationForm = true;\r\n        this.modifyParticipationFormDataFields();\r\n        let printCertificate = this.coursePassed && this.isApplyForBasicMed || this.courseCompleted && !this.courseProgress.participantInfoSaved;\r\n        let courseProgressIdForUpdate: number = this.coursePassed && this.isApplyForBasicMed\r\n            || this.courseCompleted && !this.courseProgress.participantInfoSaved\r\n            || !this.lastFinishedCourseProgress || !this.lastFinishedCourseProgress.id\r\n            ? this.courseProgressId\r\n            : this.lastFinishedCourseProgress.id;\r\n        //todo: should we update progress after 2 years?\r\n        return this.courseService.updateCourseParticipationInfo(this.courseId, courseProgressIdForUpdate, this.participationFormData)\r\n            .then((result: ICourseParticipantInfo) => {\r\n                if (courseProgressIdForUpdate == this.courseProgressId) {\r\n                    this.participationInfo = angular.copy(result);\r\n                } else {\r\n                    this.lastFinishedCourseProgress.participationInfo = result;\r\n                }\r\n                if (printCertificate) {\r\n                    this.getCertificate(true, this.participationFormData);\r\n                    return this.getCourseProgress(this.courseProgressId)\r\n                } else {\r\n                    return result;\r\n                }\r\n            })\r\n            .then(() => {\r\n                if (this.courseProgress.participantInfoSaved) {\r\n                    return this.loadCourseProgressHistory();\r\n                }\r\n            })\r\n            .then(() => {\r\n                notifier.success(\"Your information have been submitted\");\r\n                this.cancelParticipationForm();\r\n            })\r\n            .catch(response => {\r\n                if (response.data.error == \"error.parse.dob.date\") {\r\n                    notifier.error(\"Unable to parse Date of Birth\");\r\n                } else if (response.data.error == \"error.parse.exam.date\") {\r\n                    notifier.error(\"Unable to parse Date of BasicMed-Specific Exam\");\r\n                }\r\n            })\r\n            .finally(() => {\r\n                this.disableParticipationForm = false;\r\n            });\r\n    }\r\n\r\n    public startWithParticipationForm(userInfo?: ICourseParticipantInfo): void {\r\n        this.initializeParticipationForm();\r\n        this.showParticipationForm = true;\r\n    }\r\n\r\n    private initializeParticipationForm(userInfo?: ICourseParticipantInfo): void {\r\n        this.participationFormData = {};\r\n        this.participationFormData.country = \"USA\";\r\n        this.participationFormData.agreeFourMandatoryAgreements = false;\r\n        this.participationFormData.agreeSendReminder = false;\r\n        this.participationFormData.agreeSendSurvey = false;\r\n        this.participationFormData.agreeSendOtherCommunications = false;\r\n        this.agreeReleaseDriverHistory = false;\r\n        const infoForEdit = userInfo?  userInfo : this.getParticipantInfoForEdit();\r\n        if (this.isCompletedCourseInfoExists()) {\r\n            this.participationFormData = angular.copy(infoForEdit);\r\n            this.dobDateString = infoForEdit.dob != null ? this.formatDateForDisplay(infoForEdit.dob) : null;\r\n            this.examDateString = this.formatDateForDisplay(infoForEdit.examDate);\r\n            //if they want to store in the database, add separate fields in the participationFormData\r\n            if (!this.coursePassed || this.coursePassed && !this.isApplyForBasicMed) {\r\n                this.agreeReleaseDriverHistory = this.participationFormData.agreeFourMandatoryAgreements;\r\n            } else {\r\n                this.participationFormData.agreeSendReminder = infoForEdit.agreeSendReminder == \"true\";\r\n                this.participationFormData.agreeSendSurvey = infoForEdit.agreeSendSurvey == \"true\";\r\n                this.participationFormData.agreeSendOtherCommunications = infoForEdit.agreeSendOtherCommunications == \"true\";\r\n            }\r\n        } else if (this.currentUser.id != 2 && infoForEdit.fullName != null) {\r\n            this.participationFormData.email = infoForEdit.email;\r\n            let userInfo = infoForEdit.fullName.split(\"\\u00A0\");\r\n            this.participationFormData.firstName = userInfo[0];\r\n            this.participationFormData.lastName = userInfo.length > 1 ? userInfo[userInfo.length - 1]: \"\";\r\n            this.dobDateString = null;\r\n            this.examDateString = null;\r\n            //if (userInfo.length > 2) {\r\n            //    this.participationFormData.middleName = \"\";\r\n            //    for (let i = 1; i < userInfo.length - 1; i++) {\r\n            //        this.participationFormData.middleName += userInfo[i];\r\n            //        if (i != userInfo.length - 2) {\r\n            //            this.participationFormData.middleName += \" \";\r\n            //        }\r\n            //    }\r\n            //}\r\n        }\r\n        this.participationFormData.physicianState = \"\";\r\n    }\r\n\r\n    public cancelParticipationForm(): void {\r\n        this.showParticipationForm = false;\r\n        this.showReturnUserPage = true;\r\n    }\r\n\r\n    public loadCourseCertificates(): IPromise<any> {\r\n        // if (!this.courseCertificates) {\r\n        //     return this.courseService.getCourseCertificates(this.courseId, false).then(certificates => {\r\n        //         this.courseCertificates = certificates;\r\n        //         if (certificates.length > 0) {\r\n        //             this.certificateParameters.certificateId = certificates[0].id;\r\n        //         }\r\n        //     });\r\n        // } else {\r\n            return this.$q.when(this.courseCertificates);\r\n        // }\r\n    }\r\n\r\n    public isLastSectionInCourse(sectionId?: number): boolean {\r\n        return (this.menuKey.leftMenuModuleExpanded == this.modules[this.modules.length - 1].id &&\r\n        this.sectionsMap.get(this.menuKey.leftMenuModuleExpanded) != null &&\r\n        (sectionId || this.selectedSection.id) == this.sectionsMap.get(this.menuKey.leftMenuModuleExpanded)[this.sectionsMap.get(this.menuKey.leftMenuModuleExpanded).length - 1].section.id);\r\n\r\n    }\r\n\r\n    public isQuizPassed(): boolean {\r\n        var passedResults = this.sectionQuizResults.filter((p: IQuizResult) => p.passed);\r\n        return passedResults.length > 0;\r\n    }\r\n\r\n    public getCertificate(download: boolean, participationInfo?: any, progressId?: number) {\r\n        let parameters: any = {\r\n            courseId: this.courseId,\r\n            userId: this.currentUser.id,\r\n            progressId: progressId ? progressId : this.courseProgressId,\r\n            certificateId: this.certificateParameters.certificateId,\r\n            format: this.certificateParameters.format\r\n        };\r\n        if (participationInfo) {\r\n            parameters.participationData = JSON.stringify(participationInfo);\r\n        }\r\n        // if (parameters.certificateId == null) {\r\n        //     notifier.error(\"Impossible to generate the certificate. The template of certificate is not found\");\r\n        // } else {\r\n            if (download) {\r\n                this.courseService.downloadCertificate(parameters).then(result => {\r\n                    this.$window.open(result);\r\n                    this.certificateDownloadLink = result;\r\n                    this.$timeout(() => {\r\n                        const popup: any = $(\"#certificate_link_popup\");\r\n                        popup.showPopup();\r\n                    }, 300);\r\n                });\r\n            } else {\r\n                parameters.format = 'png';\r\n                this.courseService.downloadCertificate(parameters).then(result => this.certificateContent = \"<img style=\\\"width: 100%;\\\" src=\\\"\" + result + \"\\\"/>\");\r\n            }\r\n        // }\r\n    }\r\n\r\n    public showRePrintCertificateParams() {\r\n        // if (this.courseProgress && this.courseProgress.status && this.courseProgress.status == 'COMPLETED') {\r\n        //     this.loadCourseCertificates();\r\n        // }\r\n        // this.showRePrintParameters = !this.showRePrintParameters;\r\n    }\r\n\r\n    private loadLandingPage(): IPromise<void> {\r\n        return this.courseService.getLandingPage(this.courseId)\r\n            .then(result => {\r\n                this.landingPage = angular.copy(result);\r\n            });\r\n    }\r\n\r\n    public showHideCourseMenu(isShareMenuVisible: boolean) {\r\n        if (!this.isCourseMenuVisible || (this.isCourseMenuVisible && this.isCourseShareMenuVisible != isShareMenuVisible)) {\r\n            this.isCourseMenuVisible = true;\r\n            this.isCourseShareMenuVisible = isShareMenuVisible;\r\n            //fynjy\r\n            var courseContentContainer = $('.interface');\r\n            var top = courseContentContainer.offset().top;\r\n            var bot = top + courseContentContainer.outerHeight();\r\n            $(\"html, body\").animate({scrollTop: bot}, \"slow\");\r\n        } else {\r\n            //fynjy\r\n            $(\"html, body\").animate({scrollTop: 0}, \"slow\", () => {\r\n                // Animation complete.\r\n                this.isCourseMenuVisible = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    public isCompletedCourseInfoExists() {\r\n        return this.courseProgress.participantInfoSaved\r\n                || !this.courseProgress.submittedToFaa && this.lastFinishedCourseProgress\r\n            && this.lastFinishedCourseProgress.participantInfoSaved;\r\n    }\r\n\r\n    public getCourseCertificateExpirationDate() {\r\n        return this.courseProgress.submittedToFaa\r\n            ? this.courseProgress.archivingDate :\r\n            (this.lastFinishedCourseProgress ? this.lastFinishedCourseProgress.archivingDate : null);\r\n    }\r\n    \r\n    public isCourseCertificateExpired() {\r\n        return this.courseProgress.submittedToFaa && this.courseArchived ||\r\n            !this.courseProgress.submittedToFaa && this.lastFinishedCourseProgress &&\r\n            this.lastFinishedCourseProgress.status === CourseProgressStatus[CourseProgressStatus.ARCHIVED];\r\n    }\r\n\r\n    public getActualParticipantInfo() {\r\n        if (!this.courseProgress.submittedToFaa &&\r\n            this.lastFinishedCourseProgress && this.lastFinishedCourseProgress.participantInfoSaved) {\r\n            return this.lastFinishedCourseProgress.participationInfo;\r\n        }\r\n        return this.participationInfo;\r\n    }\r\n    //todo:\r\n    public getParticipantInfoForEdit() {\r\n        if (!this.courseProgress.submittedToFaa && this.lastFinishedCourseProgress\r\n            && this.lastFinishedCourseProgress.participantInfoSaved) {\r\n            return this.lastFinishedCourseProgress.participationInfo;\r\n        }\r\n        return this.participationInfo;\r\n    }\r\n\r\n    public getParticipantInfoForApply() {\r\n        return this.participationInfo;\r\n    }\r\n\r\n    private scrollPageTop(top: number) {\r\n        $(\"html, body\").scrollTop(top);\r\n    }\r\n\r\n    public goToFullScreenMode() {\r\n        this.$location.search('fullScreen');\r\n    }\r\n\r\n    public goToHome() {\r\n        if (!this.sectionQuizPassing) {\r\n            this.$location.url(this.courseLink);\r\n            this.$route.reload();\r\n        }\r\n    }\r\n\r\n    public getModulePreviewImageBundle(module: IModule): IBundleFile {\r\n        if (this.courseBundle == undefined) {\r\n            return undefined;\r\n        }\r\n        if (!this.courseBundle || !module || !module.id) {\r\n            return null;\r\n        }\r\n        let fileKey = StringBuilder.interpolate(CourseDetailsController.MODULE_PREVIEW_IMAGE_BUNLE_FILE_TEMPLATE)\r\n            .with(\":index\", module.sortIndex)\r\n            .build();\r\n        if (this.courseBundle.filesMap.has(fileKey)) {\r\n            return this.courseBundle.filesMap.get(fileKey);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private resetLMSState() {\r\n        this.showQuizInfoSection = true;\r\n        this.showQuizResultsSection = true;\r\n        this.showQuizStartSection = true;\r\n        this.showLandingPageStartCourseButton = true;\r\n    }\r\n\r\n    public getTemplateForInclude(templateName: string) {\r\n        return this.url.template(templateName);\r\n    }\r\n\r\n    private formatDateForSaving(pickerDate: string): string {\r\n        return Moment.parse(pickerDate).format(\"YYYYMMDD\");\r\n    }\r\n\r\n    private formatDateForDisplay(courseStoredDate: string) {\r\n        return courseStoredDate ? moment(courseStoredDate, \"YYYYMMDD\").format(Moment.DEFAULT_FORMAT) : \"\";\r\n    }\r\n\r\n    public showExamDateValidationDetails(): void {\r\n        const popup: any = $(\"#form_exam_date_validation_details_popup\");\r\n        popup.showPopup();\r\n    }\r\n\r\n    public showWarningMessageToFaaSubmissionForm(): boolean {\r\n        if (this.examDateString) {\r\n            let currentDate = new Date();\r\n            let date: Date = new Date(this.examDateString);\r\n            return (currentDate.getTime() - date.getTime()) >= this.fourYearsMilliseconds;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // LMS API\r\n\r\n    public LMSInitialize(): any {\r\n        return true;\r\n    }\r\n\r\n    public LMSFinish(): any {\r\n        return true;\r\n    }\r\n\r\n    public LMSGetValue(key: string): any {\r\n        //console.log('ask for ' + key);\r\n        switch (key) {\r\n            case \"vhs.current_section.status\":\r\n                return this.selectedSection.status;\r\n            case \"vhs.current_section.quiz_taken\":\r\n                return this.sectionQuizResults.length > 0;\r\n            case \"vhs.current_section.quiz_passed\":\r\n                //console.log('LMS: isQuizPassed(): ' + this.isQuizPassed());\r\n                return this.isQuizPassed();\r\n            case \"vhs.current_section.quiz_passed_score\":\r\n                //console.log('LMS: quiz_passed_score: ' + this.isQuizPassed());\r\n                let maxScore = 0;\r\n                for (let i = 0; i < this.sectionQuizResults.length; i++) {\r\n                    let currentScore = this.sectionQuizResults[i].correctAnswersPercentage;\r\n                    if (currentScore > maxScore) {\r\n                        maxScore = currentScore;\r\n                    }\r\n                }\r\n                //console.log('LMS: quiz_passed_score: ' + maxScore);\r\n                return maxScore;\r\n            case \"vhs.current_section.quiz_last_score\":\r\n                return this.sectionQuizResults[this.sectionQuizResults.length - 1].correctAnswersPercentage;\r\n            case \"vhs.current_section.quiz_last_passed\":\r\n                return this.sectionQuizResults[this.sectionQuizResults.length - 1].passed;\r\n            case \"vhs.current_section.quiz_last_correct_answers\":\r\n                return this.sectionQuizResults[this.sectionQuizResults.length - 1].correctAnswersCount;\r\n            case \"vhs.current_section.quiz_questions_count\":\r\n                //console.log('quizes count = ' + this.sectionQuiz.questions.length);\r\n                return this.sectionQuiz.questions.length;\r\n            case \"vhs.current_date\":\r\n                return this.currentDate;\r\n            case \"vhs.current_section.course-certificates\":\r\n                return this.courseCertificates ? this.courseCertificates : [];\r\n            case \"vhs.course.participation_form_allowed\":\r\n                return this.coursePassed;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public LMSSetValue(key: string, value: any): any {\r\n        switch (key) {\r\n            case \"vhs.current_section.quiz.complete.listener\":\r\n                if (typeof(value) == \"function\") {\r\n                    this.lmsQuizCompleteListeners.push(<()=>any> value);\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            case \"vhs.current_section.course-certificate-id\":\r\n                this.certificateParameters.certificateId = parseInt(value);\r\n                return parseInt(value);\r\n        }\r\n    }\r\n\r\n    public LMSCommit(key: string): any {\r\n        switch (key) {\r\n            case \"vhs.current_section.start_quiz\":\r\n                return this.startSectionQuiz();\r\n            case \"vhs.current_section.go_back\":\r\n                if (this.prevSection && this.prevSection.id) {\r\n                    return this.setLeftMenuItem(this.prevSection);\r\n                } else {\r\n                    return false;\r\n                }\r\n            case \"vhs.current_section.go_next\":\r\n                if (this.nextSection) {\r\n                    return this.setLeftMenuItem(this.nextSection);\r\n                } else {\r\n                    return false;\r\n                }\r\n            case \"vhs.current_section.go_to_start\":\r\n                if (this.modules && this.modules.length > 0 && this.sectionsMap.get(this.modules[0].id).length > 0) {\r\n                    this.setLeftMenuItem(this.sectionsMap.get(this.modules[0].id)[0].section);\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            case \"vhs.current_section.quiz.hide_info\":\r\n                return this.showQuizInfoSection = false;\r\n            case \"vhs.current_section.quiz.hide_results\":\r\n                return this.showQuizResultsSection = false;\r\n            case \"vhs.current_section.quiz.hide_start_section\":\r\n                return this.showQuizStartSection = false;\r\n            case \"vhs.current_section.landing_page.hide_start_section\":\r\n                return this.showLandingPageStartCourseButton = false;\r\n            case \"vhs.start_course\":\r\n                if (!this.showParticipationForm && this.showStartButton) {\r\n                    return this.startOrContinueCourse();\r\n                } else {\r\n                    return false;\r\n                }\r\n            case \"vhs.show_participation_form\":\r\n                if (!this.showParticipationForm) {\r\n                    this.startEditCourseParticipationForm(true);\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            case \"vhs.current_section.get_certificate\":\r\n                if (this.isQuizPassed() /* && this.courseCertificates && this.courseCertificates.length > 0*/) {\r\n                    return this.getCertificate(true);\r\n                } else {\r\n                    if (!this.courseCertificates || this.courseCertificates.length == 0) {\r\n                        notifier.error(\"Impossible to generate the certificate. The template of certificate is not found\");\r\n                    } else {\r\n                        notifier.error(\"Impossible to generate the certificate.\")\r\n                    }\r\n                    return false;\r\n                }\r\n        }\r\n    }\r\n\r\n    public startOrContinueCourse() {\r\n        if (!this.courseStarted || this.isCourseShouldBeRestarted()) {\r\n            this.startCourse();\r\n        } else {\r\n            if (this.modules && this.modules.length > 0 && this.sectionsMap.get(this.modules[0].id).length > 0) {\r\n                this.setLeftMenuItem(this.sectionsMap.get(this.modules[0].id)[0].section);\r\n            } else if (this.nextSection) {\r\n                this.setLeftMenuItem(this.nextSection);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public LMSGetLastError(): any {\r\n        console.log('Not implemente now');\r\n    }\r\n\r\n    public LMSGetErrorString(): any {\r\n        console.log('Not implemente now');\r\n    }\r\n\r\n    public LMSGetDiagnostic(): any {\r\n        console.log('Not implemente now');\r\n    }\r\n\r\n    // end LMS API\r\n\r\n}","import {MaterialsRouter} from \"./../urls/MaterialsRouter\";\r\nimport {CoursesRouter} from \"./../urls/CoursesRouter\";\r\nimport {ICourse} from \"./models/ICourse\";\r\nimport {IMaterial} from \"./../materials/models/IMaterial\";\r\n\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\n\r\nimport {AuthManager} from \"./../authcore/AuthManager\";\r\nimport {AuthRouter} from \"./../urls/AuthRouter\";\r\nimport {IPermissionWithUsersAndGroups} from \"./../security/permissions/IPermissionWithUsersAndGroups\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {SecuredObjectType} from \"./../security/permissions/SecuredObjectType\";\r\nimport {Moment} from \"./../utils/Moment\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {IGridModel, GridModel} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {CourseModuleItemsKey} from \"./CourseModuleItemsKey\";\r\nimport {CourseService} from \"./CourseService\";\r\nimport {ActionLogService} from \"./../statistics/ActionLogService\";\r\nimport {ActionType} from \"./../statistics/models/ActionType\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {AuthService} from \"./../auth/AuthService\";\r\nimport {IModule} from \"./models/IModule\";\r\nimport {ISection} from \"./models/ISection\";\r\nimport {ITreeElementInfo} from \"../tree/models/TreeElementInfo\";\r\nimport {ISectionInHierarchy} from \"./models/ISectionInHierarchy\";\r\nimport {SectionType} from \"./models/SectionType\"\r\nimport {IGridLoadingListener} from \"./../IGridModel\";\r\nimport {TreeElementsInfoFiller} from \"../tree/TreeElementsInfoFiller\";\r\nimport {ISectionInHierarchyExtended} from \"./models/ISectionInHierarchy\";\r\nimport IPromise = angular.IPromise;\r\nimport {IMultimediaSource} from \"../components/models/IMultimedia\";\r\nimport {ObjectTypeUtils} from \"../utils/ObjectTypeUtils\";\r\nimport {IQuiz} from \"../quizzes/models/IQuiz\";\r\nimport {CourseProgressStatus} from \"../courses/models/CourseProgressStatus\";\r\nimport {ISystemPermissions} from \"../security/permissions/ISystemPermissions\";\r\nimport {ILandingPage} from \"../courses/models/ILandingPage\";\r\nimport {MaterialTypeEnum} from \"../materials/models/MaterialType\";\r\nimport {UploadUtils} from \"../utils/UploadUtils\";\r\nimport {UploadsService} from \"../storage/UploadsService\";\r\nimport {IFileUploadInfo} from \"../storage/models/IFileUploadInfo\";\r\nimport {IBundle} from \"../bundles/models/IBundle\";\r\nimport {IBundleInput} from \"../bundles/models/IBundleInput\";\r\nimport {BundleService} from \"../bundles/BundleService\";\r\nimport {IBundleFile} from \"../bundles/models/IBundleFile\";\r\nimport {BundleFileTypeEnum} from \"../bundles/models/BundleFileType\";\r\nimport {MaterialTypeKeyEnum} from \"../materials/models/MaterialType\";\r\n\r\nexport interface IExtendedCertificateSelectable extends ISelectable{\r\n    removed?: boolean;\r\n}\r\n\r\ninterface AddedBundleFile {\r\n    file?: File;\r\n    relativePath?: string;\r\n}\r\n\r\nexport class CourseEditController implements IGridLoadingListener{\r\n    public static NAME = \"courses.CourseEditController\";\r\n    private DEFAULT_TOP_MENU_ITEM: string = 'info';\r\n    public MODULE: string = 'module';\r\n    public SECTION: string = 'section';\r\n\r\n    public courseId: number;\r\n    public course: ICourse;\r\n    public permissionsWithUsersAndGroups: Array<IPermissionWithUsersAndGroups> = [];\r\n    public menuKey: any;\r\n    public preview: File;\r\n    public disabledSaveButton: boolean;\r\n    public showMaterialCreationForm: boolean;\r\n    public isValidityInPerpetuity: boolean;\r\n    public currentUserId: number;\r\n    public currentUserName: string;\r\n    public systemPermissions: ISystemPermissions;\r\n    public isAuthenticated: boolean;\r\n\r\n    public previewUrl: string;\r\n    public hasPreviewUrlCanceled: boolean = false;\r\n\r\n    private owners: Array<ISelectable> = [];\r\n    private ownersMap: Map<number, ISelectable>;\r\n    private sectionsMap: Map<number, Array<ISectionInHierarchyExtended>>;\r\n    private formIsDirty: boolean = false;\r\n    public modules: Array<IModule> = [];\r\n    public creationKey: string;\r\n    public module: IModule = {};\r\n    public section: ISection = {};\r\n    public moduleId: number;\r\n    public typeKey: number;\r\n    public uploadMaterialsGridModel: IGridModel<IMaterial>;\r\n    public sectionMaterials: Array<IMaterial> = [];\r\n    public material: IMaterial = {};\r\n    public selectedSection: ISection = null;\r\n    public multimediaSources: IMultimediaSource[];\r\n    public selectedMaterialId: number;\r\n    public availableQuizzesGridModel: IGridModel<IQuiz>;\r\n    public sectionQuiz: IQuiz = {};\r\n    public availableSectionParent: Map<number, Array<ISectionInHierarchyExtended>>;\r\n    public availableCurrentSectionParent: Array<ISelectable>;\r\n    public isModuleEditing: boolean = false;\r\n    public editingModule: IModule = {};\r\n    public isSectionEditing: boolean = false;\r\n    public editingSection: ISection = {};\r\n    public landingPage: ILandingPage;\r\n\r\n    public hasCertificates: boolean = false;\r\n    public newCertificate: File;\r\n    public uploadCourseCertificates: Array<File> = [];\r\n    public courseCertificates: Array<IExtendedCertificateSelectable> = [];\r\n\r\n    public bundle: IBundle;\r\n    public bundleFilesGridModel: IGridModel<IBundleFile> = null;\r\n    public addedFile: Array<File> = [];\r\n    public addedBundleFiles: Array<AddedBundleFile> = [];\r\n    public removedBundleFiles: Array<IBundleFile> = [];\r\n    private loadOnStartFileIdsChanged: Array<number> = [];\r\n    public archive: File;\r\n\r\n    public bundleFilesSaving: boolean = false;\r\n    public archiveUploading: boolean = false;\r\n\r\n    public materialLoaded: boolean = false;\r\n    public disabledRemoveModuleButton: boolean = false;\r\n    public disabledRemoveSectionButton: boolean = false;\r\n    public removeCurrentUserSectionProgress = false;\r\n\r\n    public isMaterialEmpty: boolean;\r\n    public isMaterialNotReady: boolean;\r\n    public isViewAllowed: boolean;\r\n    public materialType: string;\r\n\r\n    private savingInProgress: boolean = false;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$http\",\r\n        \"$location\",\r\n        \"$routeParams\",\r\n        \"$timeout\",\r\n        UrlService.NAME,\r\n        SecurityService.NAME,\r\n        PermissionsService.NAME,\r\n        CoursesRouter.NAME,\r\n        CourseService.NAME,\r\n        \"Upload\",\r\n        UserService.NAME,\r\n        AuthService.NAME,\r\n        AuthManager.NAME,\r\n        UploadUtils.NAME,\r\n        BundleService.NAME\r\n    ];\r\n\r\n    constructor(private $scope,\r\n                private $http: angular.IHttpService,\r\n                private $location: angular.ILocationService,\r\n                private $routeParams: angular.route.IRouteParamsService,\r\n                private $timeout: angular.ITimeoutService,\r\n                private url: UrlService,\r\n                private securityService: SecurityService,\r\n                private permissionsService: PermissionsService,\r\n                private coursesRouter: CoursesRouter,\r\n                private courseService: CourseService,\r\n                private $uploader: ng.angularFileUpload.IUploadService,\r\n                private userService: UserService,\r\n                private authService: AuthService,\r\n                private authManager: AuthManager,\r\n                private uploadUtils: UploadUtils,\r\n                private bundleService: BundleService) {\r\n        this.courseId = $routeParams[CoursesRouter.COURSE_ID_PARAM];\r\n        let courseIdStr: string = String(this.courseId);\r\n        let hasCourseId: boolean = this.courseId != null;\r\n\r\n        this.securityService.demandAuthentication()\r\n            .demandSystemPermissionsIf(!hasCourseId, systemPermissions => systemPermissions.addCourses)\r\n            .demandCoursePermissionsIf(hasCourseId, courseIdStr, coursePermissions => coursePermissions.edit);\r\n\r\n        this.isValidityInPerpetuity = true;\r\n        this.course = {};\r\n        this.course.ownerIds = [];\r\n\r\n        this.menuKey = {\r\n            topMenu: this.DEFAULT_TOP_MENU_ITEM,\r\n        };\r\n        this.sectionsMap = new Map<number, Array<ISectionInHierarchyExtended>>();\r\n        this.availableSectionParent = new Map<number, Array<ISectionInHierarchyExtended>>();\r\n\r\n        if(hasCourseId) {\r\n            PageHeader.set().header(\"Edit a Course\").update();\r\n            this.loadCourse();\r\n            this.loadModules();\r\n            this.disabledSaveButton = false;\r\n            this.loadPermissionsWithUsersAndGroups(SecuredObjectType.COURSE, courseIdStr);\r\n            this.setTopMenu('course');\r\n        } else {\r\n            MenuHelper.setCurrentMenuItem(MenuHelper.EDUCATION_COURSES_MENU_KEY);\r\n            PageHeader.set().header(\"New Course\").update();\r\n            this.authService.getCurrentUser().then(user => {\r\n                this.currentUserId = user.id;\r\n                this.currentUserName = user.fullName;\r\n                this.course.ownerIds.push(user.id);\r\n            });\r\n            this.loadPermissionsWithUsersAndGroups(SecuredObjectType.COURSE);\r\n        }\r\n\r\n        this.userService.getUsersWithoutExcludedUsersForSelector().then(result =>{\r\n            this.owners = angular.copy(result);\r\n            this.ownersMap = new Map<number, ISelectable>();\r\n            this.owners.forEach((owner: ISelectable) => {\r\n                this.ownersMap.set(owner.id, owner);\r\n            });\r\n        });\r\n\r\n        this.$scope.$on('$locationChangeStart', (event, newLocation: string) => {\r\n            if (newLocation && newLocation.indexOf(AuthRouter.logonRoute) != -1) {\r\n                return;\r\n            }\r\n            if(this.courseId && !this.isCourseHasSections()) {\r\n                notifier.warning(\"The course should include at least one module and one section\");\r\n                event.preventDefault();\r\n            } else if (this.formIsDirty ||\r\n                this.$scope.landingPageForm.$dirty) {\r\n                if(!confirm(\"Unsaved data will be lost if you leave this page\")) {\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n\r\n        this.isAuthenticated = this.authManager.isAuthenticated();\r\n        if (this.isAuthenticated) {\r\n            this.permissionsService.getSystemPermissions().then(systemPermissions => {\r\n                this.systemPermissions = systemPermissions;\r\n            });\r\n        }\r\n\r\n        this.uploadMaterialsGridModel = new GridModel(HttpGridHelper.createLoader<IMaterial>(this.$http,\r\n            this.url.service(\"/api/courses/\" + this.courseId + \"/availableMaterials\")));\r\n        this.uploadMaterialsGridModel.addLoadingListener(this);\r\n\r\n        this.$scope.$watchCollection(() => this.addedFile, (newValue: Array<File>) => {\r\n            if (newValue) {\r\n                newValue.forEach((file: File) => {\r\n                    let bundleFile: AddedBundleFile = {file: file};\r\n                    this.addedBundleFiles.push(bundleFile);\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    private isCourseHasSections(): boolean {\r\n        if(this.sectionsMap.size == 0) {\r\n            return false;\r\n        } else {\r\n            for(let i = 0; i < this.sectionsMap.size; i++) {\r\n                if(this.sectionsMap.get(this.modules[i].id).length != 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private loadModules() {\r\n        this.courseService.getModules(this.courseId).then(result => {\r\n            angular.copy(result, this.modules);\r\n            if(this.modules.length > 0) {\r\n                if(!this.menuKey.leftMenuModuleExpanded) {\r\n                    this.setLeftMenuModule(this.modules[0].id);\r\n                } else {\r\n                    this.setLeftMenuModule(this.menuKey.leftMenuModuleExpanded);\r\n            }\r\n            }\r\n            result.forEach(r => {\r\n                this.loadSectionsForModule(r.id);\r\n            });\r\n        });\r\n    }\r\n\r\n    private loadSectionsForModule(moduleId: number) {\r\n        this.courseService.getModuleSections(this.courseId, moduleId).then(result => {\r\n            TreeElementsInfoFiller.fillHierarchyInfoWithMaxLevel(result, Number.MAX_VALUE);\r\n            this.sectionsMap.set(moduleId, result);\r\n            this.loadAvailableSectionParent(moduleId, result);\r\n        });\r\n    }\r\n\r\n    private loadAvailableSectionParent(moduleId: number, sections: Array<ISectionInHierarchy>) {\r\n        var parentSections = [];\r\n        sections.forEach(s => {\r\n            if(s.section.typeKey == SectionType[SectionType.INFORMATION] && s.level < 6) {\r\n                parentSections.push(s);\r\n            }\r\n        });\r\n        this.availableSectionParent.set(moduleId, parentSections);\r\n    }\r\n\r\n    private loadCourse() {\r\n        var promise: angular.IPromise<ICourse> = this.courseService.get(this.courseId);\r\n        promise.then(result => {\r\n            angular.copy(result, this.course);\r\n            this.course.endDateText = Moment.isValidDate(result.endDate);\r\n            this.course.startDateText = Moment.isValidDate(result.startDate);\r\n            if(this.course.endDateText) {\r\n                this.isValidityInPerpetuity = false;\r\n            }\r\n            this.previewUrl = this.course.previewUrl ? this.course.previewUrl : null;\r\n            this.loadCourseCertificates();\r\n        });\r\n    }\r\n\r\n    private loadPermissionsWithUsersAndGroups(securedObjectType: SecuredObjectType, objectId?: string): void {\r\n        this.permissionsService.getAllObjectPermissionsWithUsersAndGroups(securedObjectType, objectId).then(result => {\r\n            this.permissionsWithUsersAndGroups = result;\r\n        });\r\n    }\r\n\r\n    private loadCourseCertificates() {\r\n        this.courseService.getCourseCertificates(this.courseId, true /* edit course*/).then(certificates => {\r\n            if (certificates.length > 0) {\r\n                this.hasCertificates = true;\r\n            }\r\n            certificates.forEach(c => {\r\n                var extendedCertificateInfo: IExtendedCertificateSelectable = {removed: false};\r\n                angular.copy(c, extendedCertificateInfo);\r\n                extendedCertificateInfo.removed = false;\r\n                this.courseCertificates.push(extendedCertificateInfo);\r\n            });\r\n        });\r\n    }\r\n\r\n    //course create\r\n    private getDefaultModuleForCourse(courseId: number): IModule {\r\n        var module: IModule = {};\r\n        module.courseId = courseId;\r\n        module.name = \"Module 1\";\r\n        module.sortIndex = 1;\r\n        return module;\r\n    }\r\n\r\n    private getDefaultSectionForModule(courseId: number, moduleId: number): ISection {\r\n        var section: ISection = {};\r\n        section.courseId = courseId;\r\n        section.parentId = null;\r\n        section.name = \"Section 1\";\r\n        section.moduleId = moduleId;\r\n        section.typeKey = SectionType[SectionType.INFORMATION];\r\n        section.summary = \"\";\r\n        section.sortIndex = 1;\r\n        return section;\r\n    }\r\n\r\n    public save() {\r\n        this.disabledSaveButton = true;\r\n        let preview: File = this.preview;\r\n        let hasPreviewUrlCanceled: boolean = this.hasPreviewUrlCanceled;\r\n        this.preview = null;\r\n        this.hasPreviewUrlCanceled = false;\r\n        this.course.endDate = Moment.textToJavaDate(this.course.endDateText);\r\n        this.course.startDate = Moment.textToJavaDate(this.course.startDateText);\r\n        if (this.courseId) {\r\n            this.courseService.update(this.course, this.permissionsWithUsersAndGroups, hasPreviewUrlCanceled, preview)\r\n            .then(result => {\r\n                angular.copy(result[UploadsService.COURSE_KEY], this.course);\r\n                if (preview != null) {\r\n                    this.uploadUtils.cancelCoursePreviews(this.courseId);\r\n                    let previewUploadUrl: string = result[UploadsService.PREVIEW_UPLOAD_URL_KEY];\r\n                    let previewUploadMethod: string = result[UploadsService.PREVIEW_UPLOAD_METHOD_KEY];\r\n                    this.uploadUtils.uploadCourseByChunks(preview, this.course.previewId, this.course.id, previewUploadUrl, previewUploadMethod);\r\n                }\r\n                if (this.uploadCourseCertificates.length > 0) {\r\n                    this.uploadCertificates(0, result[UploadsService.COURSE_KEY].id);\r\n                } else {\r\n                    this.updateCourseCertificates();\r\n                }\r\n            }).catch(response => {\r\n                if (response.data.error == \"error.storage.not.available\") {\r\n                    notifier.error(\"No available storage. Thumbnail has not been saved\");\r\n                }\r\n            });\r\n        } else {\r\n            this.courseService.create(this.course, this.permissionsWithUsersAndGroups, preview)\r\n            .then(result => {\r\n                angular.copy(result[UploadsService.COURSE_KEY], this.course);\r\n                this.courseService.createModule(this.course.id, this.getDefaultModuleForCourse(this.course.id)).then(m => {\r\n                    this.courseService.createSection(this.course.id, m.id, this.getDefaultSectionForModule(this.course.id, m.id)).then(s => {\r\n                        if(preview != null) {\r\n                            let previewUploadUrl: string = result[UploadsService.PREVIEW_UPLOAD_URL_KEY];\r\n                            let previewUploadMethod: string = result[UploadsService.PREVIEW_UPLOAD_METHOD_KEY];\r\n                            this.uploadUtils.uploadCourseByChunks(preview, this.course.previewId, this.course.id, previewUploadUrl, previewUploadMethod);\r\n                        }\r\n                        if (this.uploadCourseCertificates.length > 0) {\r\n                            this.uploadCertificates(0, result[UploadsService.COURSE_KEY].id);\r\n                        } else {\r\n                            this.processSuccessCallback(result[UploadsService.COURSE_KEY].id);\r\n                        }\r\n                    });\r\n                });\r\n            }).catch(response => {\r\n                if (response.data.error == \"error.storage.not.available\") {\r\n                    notifier.error(\"No available storage. Thumbnail has not been saved\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private updateCourseCertificates() {\r\n        if (this.courseCertificates.length > 0) {\r\n            let courseCertificatesRemoved = this.courseCertificates.filter(\r\n                (c: IExtendedCertificateSelectable) => c.removed == true);\r\n            if (courseCertificatesRemoved.length > 0) {\r\n                let certIds = courseCertificatesRemoved.map(c => {\r\n                    return c.id;\r\n                });\r\n                this.courseService.removeCourseCertificates(this.courseId, certIds).then(c => {\r\n                    this.updateSuccessCallback(this.courseId);\r\n                });\r\n            } else {\r\n                this.updateSuccessCallback(this.courseId);\r\n            }\r\n        } else {\r\n            this.updateSuccessCallback(this.courseId);\r\n        }\r\n    }\r\n\r\n    private uploadCertificates(index: number, courseId: number) {\r\n        this.upload(this.uploadCourseCertificates[index], courseId, \"certificate\").then(c => {\r\n            if (index < this.uploadCourseCertificates.length - 1) {\r\n                this.uploadCertificates(index + 1, courseId);\r\n            } else {\r\n                if (this.courseCertificates.length > 0) {\r\n                    this.updateCourseCertificates();\r\n                } else {\r\n                    if (this.courseId == null) {\r\n                        this.processSuccessCallback(courseId);\r\n                    } else {\r\n                        this.updateSuccessCallback(courseId);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private processSuccessCallback(courseId: number): void {\r\n        notifier.success(\"The course has been saved\");\r\n        this.$location.url(this.coursesRouter.updateUrl(courseId));\r\n    }\r\n\r\n    private updateSuccessCallback(courseId: number): void {\r\n        this.disabledSaveButton = false;\r\n        notifier.success(\"Modifications of the course have been saved\");\r\n        this.courseCertificates = [];\r\n        this.uploadCourseCertificates = [];\r\n        this.loadCourse();\r\n        this.loadModules();\r\n        this.permissionsWithUsersAndGroups = [];\r\n        this.loadPermissionsWithUsersAndGroups(SecuredObjectType.COURSE, String(courseId));\r\n        this.setTopMenu('info');\r\n    }\r\n\r\n    public cleanValidity(): void {\r\n        this.course.endDateText = \"\";\r\n    }\r\n\r\n    private upload(file: File, courseId: number, fileType: string): angular.angularFileUpload.IUploadPromise<File> {\r\n        var urlBuilder = this.url.base(\"/api/courses/upload?courseId=:courseId&fileType=:fileType\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":fileType\", fileType);\r\n        return this.$uploader.upload({\r\n                method: \"POST\",\r\n                url: angular.copy(urlBuilder)\r\n                    .service(),\r\n                file: file\r\n            }\r\n        );\r\n    }\r\n\r\n    //menu\r\n    public setTopMenu(topMenuKey: string): void {\r\n        this.menuKey = {\r\n            topMenu: topMenuKey,\r\n            leftMenuModule: this.menuKey.leftMenuModule,\r\n            leftMenuModuleExpanded: this.menuKey.leftMenuModuleExpanded,\r\n            leftMenuItem: this.menuKey.leftMenuItem\r\n        };\r\n    }\r\n\r\n    public setLeftMenuModule(leftModule: number): void {\r\n        if(this.formIsDirty) {\r\n            this.updateSection(this.selectedSection).then(updatedSection => {\r\n                this.loadSectionsForModule(this.menuKey.leftMenuModuleExpanded);\r\n                this.setLeftMenuItem(updatedSection);\r\n                notifier.success(\"The section has been saved\");\r\n            });\r\n        }\r\n        this.menuKey.leftMenuModuleExpanded = leftModule;\r\n        if(this.sectionsMap.get(leftModule) == null) {\r\n            this.loadSectionsForModule(leftModule);\r\n        }\r\n    }\r\n\r\n    public saveSection(section: ISection): void {\r\n        if (this.selectedSection != null && this.formIsDirty) {\r\n            if (!this.savingInProgress) {\r\n                this.savingInProgress = true;\r\n                this.updateSection(this.selectedSection).then(updatedSection => {\r\n                    this.loadSectionsForModule(this.menuKey.leftMenuModule);\r\n                    this.savingInProgress = false;\r\n                    if (this.selectedSection.id == section.id) {\r\n                        this.setLeftMenuItem(updatedSection);\r\n                        notifier.success(\"The section has been saved\");\r\n                        if (this.isSectionEditing && this.editingSection.id == updatedSection.id) {\r\n                            angular.copy(updatedSection, this.editingSection);\r\n                        }\r\n                    } else {\r\n                        this.setLeftMenuItem(section);\r\n                    }\r\n                });\r\n            } else {\r\n                this.setLeftMenuItem(section);\r\n                notifier.error(\"This data has been modified by another user: please refresh the page and try again\");\r\n            }\r\n        } else {\r\n            this.setLeftMenuItem(section);\r\n        }\r\n    }\r\n\r\n    private setLeftMenuItem(section: ISection): void {\r\n        this.formIsDirty = false;\r\n        this.selectedSection = angular.copy(section);\r\n        this.menuKey.leftMenuItem = section.id;\r\n        this.menuKey.leftMenuItemType = section.typeKey;\r\n        this.menuKey.leftMenuModule = section.moduleId;\r\n        this.material = {};\r\n        if(section.typeKey == SectionType[SectionType.INFORMATION]) {\r\n            this.loadSectionMaterials();\r\n        }\r\n        if(section.typeKey == SectionType[SectionType.QUIZ]) {\r\n            this.loadSectionQuiz();\r\n            this.loadAvailableQuizzesForSection();\r\n        }\r\n    }\r\n\r\n    public isTopMenuActive(topMenuKey: string): boolean {\r\n        return this.menuKey.topMenu == topMenuKey;\r\n    }\r\n\r\n    public isLeftMenuModuleActive(topMenuKey: string, leftModule: number): boolean {\r\n        return this.menuKey.topMenu == topMenuKey && this.menuKey.leftMenuModuleExpanded == leftModule;\r\n    }\r\n\r\n    public isLeftMenuItemActive(topMenuKey: string, leftModule: number, item: number): boolean {\r\n        return this.menuKey.topMenu == topMenuKey\r\n            && (this.menuKey.leftMenuModule == leftModule || this.menuKey.leftMenuModuleExpanded == leftModule)\r\n            && this.menuKey.leftMenuItem == item;\r\n    }\r\n\r\n    public isSelectedSectionTypeInfo(){\r\n        return this.menuKey.leftMenuItemType === SectionType[SectionType.INFORMATION];\r\n    }\r\n    public isSelectedSectionTypeQuiz(){\r\n        return this.menuKey.leftMenuItemType === SectionType[SectionType.QUIZ];\r\n    }\r\n    public isSelectedSectionTypeProblemSolution(){\r\n        return this.menuKey.leftMenuItemType === SectionType[SectionType.PROBLEM_SOLUTION];\r\n    }\r\n\r\n    public showCreationModal(creationKey: string, moduleId: number): void {\r\n        this.creationKey = creationKey;\r\n        if(creationKey === this.SECTION) {\r\n            this.moduleId = moduleId;\r\n        }\r\n        $(\".modal-body\").css(\"overflow-y\",\"auto\");\r\n        $(\"#creationDialog\").modal({\r\n            backdrop: 'static',\r\n            keyboard: false,\r\n            show: true\r\n        });\r\n    }\r\n\r\n    public editCourse(): void {\r\n        this.$location.url(this.coursesRouter.detailsUrl(this.courseId));\r\n    }\r\n\r\n    //create module and section\r\n    public createModuleOrSection(): void {\r\n        if(this.creationKey === this.MODULE) {\r\n            this.module.courseId = this.courseId;\r\n            this.module.sortIndex = this.modules.length + 1;\r\n            this.courseService.createModule(this.courseId, this.module).then(m => {\r\n                this.module = {};\r\n                this.loadModules();\r\n            });\r\n        } else if(this.creationKey === this.SECTION) {\r\n            this.section.typeKey = SectionType[this.typeKey];\r\n            this.section.moduleId = this.moduleId;\r\n            this.section.allowResit = true;\r\n            this.section.blockingNextSections = false;\r\n            this.setSectionSortIndex(this.section);\r\n            this.courseService.createSection(this.courseId, this.moduleId, this.section).then(s => {\r\n                this.section = {};\r\n                this.typeKey = null;\r\n                this.loadSectionsForModule(this.moduleId);\r\n            });\r\n        }\r\n    }\r\n\r\n    private setSectionSortIndex(section: ISection) {\r\n        if(section.parentId != null) {\r\n            this.sectionsMap.get(this.moduleId).forEach(s => {\r\n                if(s.section.id == section.parentId) {\r\n                    section.sortIndex = s.children.length + 1;\r\n                }\r\n            });\r\n        } else {\r\n            if(this.sectionsMap.get(this.moduleId)) {\r\n                section.sortIndex = this.sectionsMap.get(this.moduleId).length + 1;\r\n            } else {\r\n                section.sortIndex = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n//////////////section materials\r\n    private loadSectionMaterials(): void {\r\n        this.sectionMaterials = null;\r\n        this.courseService.getSectionAllMaterials(this.courseId, this.menuKey.leftMenuModule, this.selectedSection.id).then(result => {\r\n            this.sectionMaterials = angular.copy(result);\r\n            if (this.sectionMaterials && this.sectionMaterials.length > 0) {\r\n                this.showMaterial(this.sectionMaterials[0]);\r\n            } else {\r\n                this.hideCurrentMaterial();\r\n            }\r\n            this.uploadMaterialsGridModel.loadPage(0);\r\n        });\r\n    }\r\n\r\n    startLoading() {\r\n        this.uploadMaterialsGridModel.filter.materialIds = this.sectionMaterials ?\r\n            this.sectionMaterials.map((material: IMaterial) => {\r\n                return material.id;\r\n            }) : [];\r\n        this.uploadMaterialsGridModel.pageSize = 5;\r\n    }\r\n\r\n    endLoading() {\r\n        //do nothing\r\n    }\r\n\r\n    public addMaterialToSection(material: IMaterial): void {\r\n        this.formIsDirty = true;\r\n        this.sectionMaterials.push(material);\r\n        this.showMaterial(this.sectionMaterials[0]);\r\n        this.uploadMaterialsGridModel.loadPage(0);\r\n    }\r\n\r\n    public removeMaterialFromSection(index: number, material: IMaterial): void {\r\n        this.formIsDirty = true;\r\n        this.sectionMaterials.splice(index, 1);\r\n        if (this.sectionMaterials.length == 0) {\r\n            this.material = {};\r\n        }\r\n        this.uploadMaterialsGridModel.loadPage(0);\r\n    }\r\n\r\n    public moveUp(index: number): void {\r\n        var placeholder = {};\r\n        var objectToMove = this.sectionMaterials.splice(index, 1, placeholder)[0];\r\n        this.sectionMaterials.splice(index - 1, 0, objectToMove);\r\n        this.sectionMaterials.splice(this.sectionMaterials.indexOf(placeholder), 1);\r\n    }\r\n\r\n    public moveDown(index: number): void {\r\n        var placeholder = {};\r\n        var objectToMove = this.sectionMaterials.splice(index + 1, 1, placeholder)[0];\r\n        this.sectionMaterials.splice(index, 0, objectToMove);\r\n        this.sectionMaterials.splice(this.sectionMaterials.indexOf(placeholder), 1);\r\n    }\r\n\r\n    public isMoveUp(index: number): boolean {\r\n        return index > 0;\r\n    }\r\n\r\n    public isMoveDown(index: number): boolean {\r\n        return index < this.sectionMaterials.length - 1;\r\n    }\r\n\r\n    public showMaterial(material: IMaterial): void {\r\n        this.materialType = \"\";\r\n        this.materialLoaded = false;\r\n        angular.copy(material, this.material);\r\n        this.selectedMaterialId = material.id;\r\n\r\n        this.$timeout(() => {\r\n            this.materialLoaded = true;\r\n\r\n            if (this.isYoutubeLink(this.material)) {\r\n                this.materialType = 'YOUTUBE';\r\n            } else {\r\n                this.materialType = this.material.typeKey;\r\n            }\r\n\r\n            this.isMaterialEmpty = this.material.id && this.material.typeKey !== MaterialTypeKeyEnum[MaterialTypeKeyEnum.LINK] &&\r\n                (!this.material.fileStatus || this.material.fileStatus === 'EMPTY');\r\n            this.isMaterialNotReady = !this.isMaterialEmpty && this.material.id &&\r\n                this.material.typeKey !== MaterialTypeKeyEnum[MaterialTypeKeyEnum.LINK] && this.material.fileStatus\r\n                && this.material.fileStatus !== 'EMPTY' && this.material.fileStatus !== 'READY';\r\n            this.isViewAllowed = this.materialLoaded && !this.isMaterialEmpty && !this.isMaterialNotReady;\r\n\r\n            this.multimediaSources = [{\r\n                src: this.isYoutubeLink(this.material) ? this.material.link : (this.material.downloadUrl || ''),\r\n                type: this.isYoutubeLink(this.material) ? \"video/youtube\" : this.material.contentType\r\n            }];\r\n        }, 0);\r\n    }\r\n\r\n    public hideCurrentMaterial(): void {\r\n        this.material = {};\r\n        this.isViewAllowed = false;\r\n    }\r\n\r\n    public isYoutubeLink(material: IMaterial): boolean {\r\n        return material.typeId == 3 && ObjectTypeUtils.isYoutubeUrl(material.link);\r\n    }\r\n\r\n    private updateSection(section: ISection): angular.IPromise<ISection> {\r\n        if(section.typeKey == SectionType[SectionType.INFORMATION]) {\r\n            section.materialIds = this.sectionMaterials.map((material: IMaterial) => {\r\n                return material.id;\r\n            });\r\n        } else if(section.typeKey == SectionType[SectionType.QUIZ]) {\r\n            section.quizId = this.sectionQuiz.id;\r\n        }\r\n        return this.courseService.updateSection(this.courseId, section.moduleId, section);\r\n    }\r\n\r\n    private updateSectionName(section: ISection): angular.IPromise<ISection> {\r\n        return this.courseService.updateSectionName(this.courseId, section.moduleId, section);\r\n    }\r\n\r\n    private redirect(): void {\r\n        if(this.courseId) {\r\n            if (this.course && this.course.permissions && this.course.permissions.view) {\r\n                this.$location.url(this.coursesRouter.detailsUrl(this.courseId));\r\n            } else {\r\n                this.$location.url(this.coursesRouter.indexUrl());\r\n            }\r\n        }\r\n    }\r\n\r\n    public setFormIsDirty(): void {\r\n        this.formIsDirty = true;\r\n    }\r\n\r\n    //delete module and section\r\n    public showRemovalModal(creationKey: string, module?: IModule, section?: ISection): void {\r\n        this.creationKey = creationKey;\r\n        if(module) {\r\n            angular.copy(module, this.module);\r\n        }\r\n        if(section) {\r\n            angular.copy(section, this.section);\r\n        }\r\n        $(\".modal-body\").css(\"overflow-y\",\"auto\");\r\n        $(\"#removalDialog\").modal({\r\n            backdrop: 'static',\r\n            keyboard: false,\r\n            show: true\r\n        });\r\n    }\r\n\r\n    public removeModule(module: IModule): void {\r\n        this.disabledRemoveModuleButton = true;\r\n        var deleteSelectedModule = false;\r\n        if(this.menuKey.leftMenuModuleExpanded  == module.id) {\r\n            deleteSelectedModule = true;\r\n        }\r\n        this.sectionsMap.delete(module.id);\r\n        this.courseService.deleteModule(this.courseId, module.id, module.version).then(result => {\r\n            notifier.success(\"The module has been removed\");\r\n            this.disabledRemoveModuleButton = false;\r\n            this.module = {};\r\n            this.formIsDirty = false;\r\n            if(deleteSelectedModule) {\r\n                this.selectedSection = {};\r\n                this.menuKey.leftMenuItem = {};\r\n                this.menuKey.leftMenuItemType = null;\r\n            }\r\n            this.loadModules();\r\n        });\r\n    }\r\n\r\n    public removeSection(section: ISection): void {\r\n        this.disabledRemoveSectionButton = true;\r\n        this.moduleId = section.moduleId;\r\n        var deleteSelectedSection = false;\r\n        if(this.selectedSection && this.selectedSection.id  == section.id) {\r\n            deleteSelectedSection = true;\r\n        }\r\n        this.courseService.deleteSection(this.courseId, section.moduleId, section.id, section.version, this.removeCurrentUserSectionProgress)\r\n        .then(result => {\r\n            notifier.success(\"The section has been removed\");\r\n            this.disabledRemoveSectionButton = false;\r\n            this.section = {};\r\n            this.formIsDirty = false;\r\n            if(deleteSelectedSection) {\r\n                this.selectedSection = {};\r\n                this.menuKey.leftMenuItem = {};\r\n                this.menuKey.leftMenuItemType = null;\r\n            }\r\n            this.loadSectionsForModule(this.moduleId);\r\n        })\r\n            .catch(response => {\r\n                if (response && response.data && response.data.error == \"error.delete.section.in.use\") {\r\n                   notifier.error(\"Section cannot be deleted automatically, because some users already started it. Please, ask system administrator to delete this section manually.\")\r\n                }\r\n                this.disabledRemoveSectionButton = false;\r\n            });\r\n    }\r\n\r\n    public toggleMaterialCreationForm(): void {\r\n        this.showMaterialCreationForm = !this.showMaterialCreationForm;\r\n    }\r\n\r\n    public callbackWhenMaterialCreated(material: IMaterial): void {\r\n        // console.log('A material has been created: id = ', material.id);\r\n        this.showMaterialCreationForm = false;\r\n        this.addMaterialToSection(material);\r\n    }\r\n\r\n    public getMaterialTypeClass(materialTypeKey: string): string {\r\n        return ObjectTypeUtils.getMaterialGlyphiconClassFromKey(materialTypeKey);\r\n    }\r\n\r\n    public reloadSection(section: ISection) {\r\n        this.loadSectionsForModule(section.moduleId);\r\n        this.sectionsMap.get(section.moduleId).forEach(s => {\r\n            if(s.section.id == section.id) {\r\n                this.setLeftMenuItem(s.section);\r\n            }\r\n        });\r\n    }\r\n\r\n    //tests\r\n    private loadAvailableQuizzesForSection(): void {\r\n        this.availableQuizzesGridModel = new GridModel(HttpGridHelper.createLoader<IQuiz>(this.$http,\r\n            this.url.service(\"/api/courses/\" + this.courseId + \"/modules/\" + this.menuKey.leftMenuModule + \"/sections/\" + this.selectedSection.id + \"/availableQuizzes\")));\r\n        this.availableQuizzesGridModel.filter.sectionId = this.selectedSection.id;\r\n        this.availableQuizzesGridModel.pageSize = 5;\r\n        this.availableQuizzesGridModel.loadCurrentPage();\r\n    }\r\n\r\n    private loadSectionQuiz(): void {\r\n        this.courseService.getSectionQuiz(this.courseId, this.menuKey.leftMenuModule, this.selectedSection.id)\r\n            .then(result => {\r\n                angular.copy(result, this.sectionQuiz);\r\n            });\r\n    }\r\n\r\n    public addQuizToSection(quiz: IQuiz): void {\r\n        this.formIsDirty = true;\r\n        if(this.sectionQuiz.id != null) {\r\n            this.removeQuizFromSection();\r\n        }\r\n        angular.copy(quiz, this.sectionQuiz);\r\n        var index = this.availableQuizzesGridModel.entries.indexOf(quiz);\r\n        this.availableQuizzesGridModel.entries.splice(index, 1);\r\n    }\r\n\r\n    public removeQuizFromSection(): void {\r\n        this.formIsDirty = true;\r\n        this.availableQuizzesGridModel.entries.push(this.sectionQuiz);\r\n        this.sectionQuiz = {};\r\n    }\r\n\r\n    public cleanCreationModal(): void {\r\n        this.module = {};\r\n        this.section = {}\r\n    }\r\n\r\n    public loadBundleForm(): void {\r\n        if (this.course.bundleId) {\r\n            this.bundleService.getBundle(this.course.bundleId).then(result => {\r\n                this.bundle = result;\r\n                if (this.bundleFilesGridModel == null) {\r\n                    this.bundleFilesGridModel = new GridModel(HttpGridHelper.createLoader<IBundleFile>(this.$http,\r\n                        this.url.base(\"/api/bundles/:bundleId/files\").param(\":bundleId\", this.bundle.id).service()));\r\n                    this.bundleFilesGridModel.filter.excludedBundleFileIds = [];\r\n                    this.bundleFilesGridModel.addLoadingListener({\r\n                        startLoading: () => {\r\n\r\n                        },\r\n                        endLoading: () => {\r\n                             for (let i = 0; i < this.bundleFilesGridModel.entries.length; i++) {\r\n                                 let bundleFile = this.bundleFilesGridModel.entries[i];\r\n                                 if (this.loadOnStartFileIdsChanged.indexOf(bundleFile.id) != -1) {\r\n                                     bundleFile.loadAtStart = !bundleFile.loadAtStart;\r\n                                 }\r\n                             }\r\n                        }\r\n                    })\r\n                } else {\r\n                    this.bundleFilesGridModel.filter.excludedBundleFileIds = [];\r\n                    this.bundleFilesGridModel.loadPage(0);\r\n                }\r\n            });\r\n        } else {\r\n            this.bundle = null;\r\n        }\r\n        this.addedFile = [];\r\n        this.addedBundleFiles = [];\r\n        this.removedBundleFiles = [];\r\n        this.loadOnStartFileIdsChanged = [];\r\n        this.archive = null;\r\n    }\r\n\r\n    /////////////////////// Landing Page /////////////////////////\r\n    public loadLandingPage(): void {\r\n        if (this.courseId) {\r\n            this.courseService.getLandingPage(this.courseId)\r\n                .then(result => {\r\n                    this.landingPage = angular.copy(result);\r\n                    this.$scope.landingPageForm.$setPristine();\r\n                });\r\n        } else {\r\n            this.landingPage = {richText: \"\"};\r\n            // console.log(\"No course. Created a fresh empty landing page.\");\r\n            this.$scope.landingPageForm.$setPristine();\r\n        }\r\n    }\r\n\r\n    public saveLandingPage(): void {\r\n        let promise: angular.IPromise<ILandingPage> = (this.landingPage.id)\r\n            ? this.courseService.updateLandingPage(this.courseId, this.landingPage)\r\n            : this.courseService.createLandingPage(this.courseId, this.landingPage);\r\n        promise.then(result => {\r\n            this.landingPage = angular.copy(result);\r\n            notifier.success(\"The course welcome page has been saved\");\r\n            this.$scope.landingPageForm.$setPristine();\r\n        });\r\n    }\r\n\r\n///////// edit section and module name\r\n    public startModuleInlineEdit(module: IModule) {\r\n        this.isModuleEditing = true;\r\n        angular.copy(module, this.editingModule);\r\n    }\r\n\r\n    public updateEditedModule() {\r\n        if(this.editingModule.name) {\r\n            this.courseService.updateModule(this.courseId, this.editingModule).then(result => {\r\n                this.editingModule = {};\r\n                this.isModuleEditing = false;\r\n                this.loadModules();\r\n            });\r\n        } else {\r\n            notifier.warning(\"Please specify module name\");\r\n        }\r\n    }\r\n\r\n    public startSectionInlineEdit(section: ISection) {\r\n        this.isSectionEditing = true;\r\n        angular.copy(section, this.editingSection);\r\n    }\r\n\r\n    public updateEditedSection() {\r\n        if(this.editingSection.name) {\r\n            this.updateSectionName(this.editingSection).then(updatedSection => {\r\n                this.editingSection = {};\r\n                this.isSectionEditing = false;\r\n                this.loadSectionsForModule(updatedSection.moduleId);\r\n                if(this.selectedSection && this.selectedSection.id == updatedSection.id) {\r\n                    angular.copy(updatedSection, this.selectedSection);\r\n                }\r\n            });\r\n        } else {\r\n            notifier.warning(\"Please specify section name\");\r\n        }\r\n    }\r\n\r\n/////////////// edit course hierarchy\r\n    public saveModulesHierarchy(index: number, item: IModule): void {\r\n        if (index != this.modules.length - 1) {\r\n            index++;\r\n        }\r\n        if (index != item.sortIndex) {\r\n            item.sortIndex = index;\r\n            this.courseService.updateModuleHierarchy(this.courseId, item).then(result => {\r\n                notifier.success(\"Course hierarchy has been changed\");\r\n                this.loadModules();\r\n            });\r\n        }\r\n    }\r\n\r\n    public saveSectionsHierarchy(index: number, item: ISectionInHierarchyExtended, newModuleId: number): void {\r\n        this.isSectionEditing = false;\r\n        this.editingSection = {};\r\n        let oldModuleId = item.section.moduleId;\r\n        if (item.parentId != null && newModuleId == oldModuleId) {\r\n            index = this.recalculateSectionWithParentIndex(index, item, newModuleId);\r\n        }\r\n        if (item.parentId == null && (index != item.section.sortIndex || oldModuleId != newModuleId) ||\r\n            item.parentId != null && index != item.section.sortIndex && oldModuleId == newModuleId) {\r\n            if (item.parentId == null && ( (oldModuleId == newModuleId && index != this.sectionsMap.get(newModuleId).length - 1) ||\r\n                (oldModuleId != newModuleId && index != this.sectionsMap.get(newModuleId).length) )) {\r\n                index++;\r\n            }\r\n            item.section.moduleId = newModuleId;\r\n            item.section.sortIndex = index;\r\n            this.courseService.updateSectionHierarchy(this.courseId, item.section.moduleId, item.section).then(result => {\r\n                notifier.success(\"Course hierarchy has been changed\");\r\n                this.loadSectionsForModule(newModuleId);\r\n                if (oldModuleId != newModuleId) {\r\n                    this.loadSectionsForModule(oldModuleId);\r\n                }\r\n            });\r\n        } else {\r\n            this.loadSectionsForModule(newModuleId);\r\n            if (oldModuleId != newModuleId) {\r\n                this.loadSectionsForModule(oldModuleId);\r\n            }\r\n        }\r\n    }\r\n\r\n    private recalculateSectionWithParentIndex(index: number, item: ISectionInHierarchyExtended, newModuleId: number): number {\r\n        let parentIndex: number = 0;\r\n        let children: Array<ISectionInHierarchyExtended> = null;\r\n        this.sectionsMap.get(newModuleId).forEach(section => {\r\n            if (section.id == item.parentId) {\r\n                parentIndex = this.sectionsMap.get(newModuleId).indexOf(section);\r\n                children = section.children;\r\n            }\r\n        });\r\n        if (index < parentIndex) {\r\n            index = 1;\r\n        } else if (index >= parentIndex + children.length) {\r\n            index = children[children.length - 1].section.sortIndex;\r\n        } else {\r\n            index = this.sectionsMap.get(newModuleId)[index + 1].section.sortIndex;\r\n        }\r\n        return index;\r\n    }\r\n\r\n    public showEditingModal(section: ISection): void {\r\n        this.availableCurrentSectionParent = [];\r\n        this.courseService.getAvailableSectionsNoChildren(this.courseId, section.moduleId, section.id).then(result => {\r\n            angular.copy(result, this.availableCurrentSectionParent);\r\n            angular.copy(section, this.editingSection);\r\n            $(\".modal-body\").css(\"overflow-y\",\"auto\");\r\n            $(\"#editingDialog\").modal({\r\n                backdrop: 'static',\r\n                keyboard: false,\r\n                show: true\r\n            });\r\n        });\r\n    }\r\n\r\n    public cleanEditingModal(): void {\r\n        this.editingSection = {};\r\n        this.availableCurrentSectionParent = [];\r\n    }\r\n\r\n    public editSectionParent() {\r\n        this.courseService.updateSectionHierarchy(this.courseId, this.editingSection.moduleId, this.editingSection)\r\n            .then(updatedSection => {\r\n                this.editingSection = {};\r\n                this.isSectionEditing = false;\r\n                this.loadSectionsForModule(updatedSection.moduleId);\r\n                if (this.selectedSection && this.selectedSection.id == updatedSection.id) {\r\n                    angular.copy(updatedSection, this.selectedSection);\r\n                }\r\n                notifier.success(\"The section has been saved\");\r\n            });\r\n    }\r\n\r\n/////////// certificate\r\n    public attachCertificate($error: string): void {\r\n        if (this.newCertificate != null && $error == null) {\r\n            this.uploadCourseCertificates.push(this.newCertificate);\r\n            this.newCertificate = null;\r\n        }\r\n    }\r\n\r\n    public removeCertificate(index: number): void {\r\n        this.uploadCourseCertificates.splice(index, 1);\r\n    }\r\n\r\n    public resetPreview(): void {\r\n        if (this.preview) {\r\n            this.preview = undefined;\r\n        } else if (this.previewUrl) {\r\n            this.previewUrl = undefined;\r\n            this.hasPreviewUrlCanceled = true;\r\n        }\r\n    }\r\n\r\n    public restorePreviewUrl(): void {\r\n        this.preview = undefined;\r\n        this.previewUrl = this.course.previewUrl;\r\n        this.hasPreviewUrlCanceled = false;\r\n    }\r\n\r\n    public cancelAddedBundleFile(index: number): void {\r\n        this.addedBundleFiles.splice(index, 1);\r\n    }\r\n\r\n    public removeBundleFile(index: number): void {\r\n        this.removedBundleFiles.push(this.bundleFilesGridModel.entries[index]);\r\n        this.bundleFilesGridModel.filter.excludedBundleFileIds = this.getRemovedBundleFileIds();\r\n        this.bundleFilesGridModel.loadCurrentPage();\r\n    }\r\n\r\n    public restoreBundleFile(index: number): void {\r\n        this.removedBundleFiles.splice(index, 1);\r\n        this.bundleFilesGridModel.filter.excludedBundleFileIds = this.getRemovedBundleFileIds();\r\n        this.bundleFilesGridModel.loadCurrentPage();\r\n    }\r\n\r\n    public changeBundleFileLoadAtStartValue(bundleFile: IBundleFile) {\r\n        console.log(bundleFile.loadAtStart);\r\n        var index = this.loadOnStartFileIdsChanged.indexOf(bundleFile.id);\r\n        if (index != -1) {\r\n            this.loadOnStartFileIdsChanged.splice(index, 1);\r\n        } else {\r\n            this.loadOnStartFileIdsChanged.push(bundleFile.id);\r\n        }\r\n        bundleFile.loadAtStart = !bundleFile.loadAtStart;\r\n    }\r\n\r\n    private getRemovedBundleFileIds(): Array<number> {\r\n        let result: Array<number> = [];\r\n        this.removedBundleFiles.forEach((bundleFile: IBundleFile) => {\r\n            result.push(bundleFile.id);\r\n        });\r\n        return result;\r\n    }\r\n\r\n    private updateBundleFromFiles(): void {\r\n        let addedBundleFiles: Array<any> = [];\r\n        let removedBundleFileIds: Array<number> = [];\r\n        this.addedBundleFiles.forEach((bundleFile) => {\r\n            addedBundleFiles.push({\r\n                name: bundleFile.file.name,\r\n                type: bundleFile.file.type,\r\n                size: bundleFile.file.size,\r\n                path: bundleFile.relativePath\r\n            });\r\n        });\r\n        this.removedBundleFiles.forEach((file) => {\r\n            removedBundleFileIds.push(file.fileId);\r\n        });\r\n        let bundleInput: IBundleInput = {\r\n            id: this.bundle.id,\r\n            version: this.bundle.version,\r\n            addedFiles: addedBundleFiles,\r\n            deletedFileIds: removedBundleFileIds,\r\n            loadOnStartFilesChangedIds: this.loadOnStartFileIdsChanged\r\n        };\r\n        this.bundleService.updateBundleFromFiles(bundleInput).then(result => {\r\n            let addedBundleFiles: Array<AddedBundleFile> = this.addedBundleFiles;\r\n            this.addedBundleFiles = [];\r\n            this.bundle = result[\"bundle\"];\r\n            this.bundleFilesGridModel.loadPage(0);\r\n            this.removedBundleFiles = [];\r\n            this.loadOnStartFileIdsChanged = [];\r\n            let fileUploadInfos: Array<IFileUploadInfo> = result[\"fileUploadInfos\"];\r\n\r\n            for (let i = 0, j = 0; i < addedBundleFiles.length || j < fileUploadInfos.length; ++i, ++j) {\r\n                let addedFile: File = addedBundleFiles[i].file;\r\n                let fileUploadInfo: IFileUploadInfo = fileUploadInfos[j];\r\n                this.uploadUtils.uploadBundleByChunks(addedFile, fileUploadInfo.fileId, this.bundle.id, fileUploadInfo.url,\r\n                    fileUploadInfo.method);\r\n            }\r\n        }).catch((response) => {\r\n            if (response.data.error == \"error.storage.not.available\") {\r\n                notifier.error(\"No available storage\");\r\n            }\r\n        }).finally(() => {\r\n            this.bundleFilesSaving = false;\r\n        });\r\n    }\r\n\r\n    private updateBundleFromArchive() {\r\n        this.$uploader.upload({\r\n            method: \"POST\",\r\n            url: this.url.base(\"/api/bundles/:bundleId/archive?bundleVersion=:bundleVersion\")\r\n                .param(\":bundleId\", this.bundle.id)\r\n                .param(\":bundleVersion\", this.bundle.version)\r\n                .service(),\r\n            file: this.archive\r\n        }).success(() => {\r\n            this.loadBundleForm();\r\n            this.archiveUploading = false;\r\n            notifier.success(\"The archive was successfully imported\");\r\n        }).error(() => {\r\n            this.loadBundleForm();\r\n            this.archiveUploading = false;\r\n            notifier.error(\"An error occurred during archive import\");\r\n        });\r\n    }\r\n\r\n    public saveBundleFiles(): void {\r\n        this.bundleFilesSaving = true;\r\n        if (!this.bundle) {\r\n            this.courseService.createCourseBundle(this.course.id, this.course.version).then(result => {\r\n                this.bundle = result[\"bundle\"];\r\n                this.bundleFilesGridModel = this.bundleFilesGridModel == null\r\n                    ? new GridModel(HttpGridHelper.createLoader<IBundleFile>(this.$http,\r\n                        this.url.base(\"/api/bundles/:bundleId/files\").param(\":bundleId\", this.bundle.id).service()))\r\n                    : this.bundleFilesGridModel;\r\n                this.bundleFilesGridModel.filter.excludedBundleFileIds = [];\r\n                this.course.bundleId = this.bundle.id;\r\n                this.course.version = result[\"course\"].version;\r\n                this.updateBundleFromFiles();\r\n            }).catch((response) => {\r\n                if (response.data.error == \"error.storage.not.available\") {\r\n                    notifier.error(\"No available storage\");\r\n                }\r\n                this.bundleFilesSaving = false;\r\n            });\r\n        } else {\r\n            this.updateBundleFromFiles();\r\n        }\r\n    }\r\n\r\n    public saveBundleArchive(): void {\r\n        if (!this.archive) {\r\n            return;\r\n        }\r\n        let fileExtension: RegExpMatchArray = this.archive.name.match(/\\.([0-9a-z]+)(?=[?#])|(\\.)(?:[\\w]+)$/);\r\n        if (fileExtension[0] != \".zip\") {\r\n            notifier.error(\"Invalid archive format. Only zip format is supported.\");\r\n            return;\r\n        }\r\n\r\n        this.archiveUploading = true;\r\n        if (!this.bundle) {\r\n            this.courseService.createCourseBundle(this.course.id, this.course.version).then(result => {\r\n                this.bundle = result[\"bundle\"];\r\n                this.bundleFilesGridModel = this.bundleFilesGridModel == null\r\n                    ? new GridModel(HttpGridHelper.createLoader<IBundleFile>(this.$http,\r\n                        this.url.base(\"/api/bundles/:bundleId/files\").param(\":bundleId\", this.bundle.id).service()))\r\n                    : this.bundleFilesGridModel;\r\n                this.bundleFilesGridModel.filter.excludedBundleFileIds = [];\r\n                this.course.bundleId = this.bundle.id;\r\n                this.course.version = result[\"course\"].version;\r\n                this.updateBundleFromArchive();\r\n            }).catch((response) => {\r\n                if (response.data.error == \"error.storage.not.available\") {\r\n                    notifier.error(\"No available storage\");\r\n                } else {\r\n                    notifier.error(\"An error occurred during archive import\");\r\n                }\r\n                this.archiveUploading = false;\r\n            });\r\n        } else {\r\n            this.updateBundleFromArchive();\r\n        }\r\n    }\r\n\r\n    public refreshBundleFiles(): void {\r\n        this.bundleFilesGridModel.loadPage(0);\r\n    }\r\n\r\n    public getDownloadBundleToArchiveUrl(bundleId: number): string {\r\n        return this.url.base(\"/api/bundles/:bundleId/archive\").param(\":bundleId\", bundleId).service();\r\n    }\r\n}","import {AuthService} from \"../auth/AuthService\";\r\nimport {CourseService} from \"./CourseService\";\r\nimport {ProgressService} from \"./ProgressService\";\r\nimport {CoursesRouter} from \"../urls/CoursesRouter\";\r\nimport {SecurityService} from \"../security/SecurityService\";\r\nimport {MenuHelper} from \"../utils/MenuHelper\";\r\nimport {ICourse} from \"./models/ICourse\";\r\nimport {PageHeader} from \"../utils/PageHeaderHelper\";\r\nimport {Moment} from \"../utils/Moment\";\r\nimport {ISelectable} from \"../ISelectable\";\r\nimport {IUserInfo} from \"../security/IUserInfo\";\r\nimport {CourseProgressStatus} from \"./models/CourseProgressStatus\";\r\nimport {AuthManager} from \"../authcore/AuthManager\";\r\nimport {ILandingPage} from \"../courses/models/ILandingPage\";\r\nimport {StorageWrapper, Storages} from \"./../infrastructure/Storage\";\r\nimport {ICourseProgress} from \"./models/ICourseProgress\";\r\n\r\nexport class CourseInfoController {\r\n    public static NAME = \"courses.CourseInfoController\";\r\n\r\n    public courseId: number;\r\n    public owners: Array<ISelectable> = [];\r\n    public course: ICourse = {};\r\n    public courseStarted: boolean;\r\n    public currentUserInOwners: boolean = false;\r\n    private currentUser: IUserInfo = {};\r\n    public isAuthenticated: boolean;\r\n    public landingPage: ILandingPage;\r\n    private courseProgressId: number;\r\n    private courseProgress: ICourseProgress;\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        SecurityService.NAME,\r\n        \"$routeParams\",\r\n        CoursesRouter.NAME,\r\n        CourseService.NAME,\r\n        ProgressService.NAME,\r\n        AuthService.NAME,\r\n        AuthManager.NAME,\r\n        Storages.SESSION_NAME\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                private securityService: SecurityService,\r\n                private $routeParams: ng.route.IRouteParamsService,\r\n                private coursesRouter: CoursesRouter,\r\n                private courseService: CourseService,\r\n                private progressService: ProgressService,\r\n                private authService: AuthService,\r\n                private authManager: AuthManager,\r\n                private sessionStorageWrapper: StorageWrapper) {\r\n        this.courseId = $routeParams[CoursesRouter.COURSE_ID_PARAM];\r\n        let courseIdStr = String(this.courseId);\r\n        this.isAuthenticated = this.authManager.isAuthenticated();\r\n        this.securityService\r\n            .demandCoursePermissions(courseIdStr, coursePermissions => coursePermissions.view);\r\n        var menuItemKey: string = MenuHelper.getCurrentMenuItemKey();\r\n        if (!menuItemKey || menuItemKey.length == 0) {\r\n            MenuHelper.setCurrentMenuItem(MenuHelper.EDUCATION_COURSES_MENU_KEY);\r\n        }\r\n        this.authService.getCurrentUser().then(user => {\r\n            angular.copy(user, this.currentUser);\r\n        });\r\n        this.loadCourse();\r\n    }\r\n\r\n    private loadCourse() {\r\n        var promise: angular.IPromise<ICourse> = this.courseService.get(this.courseId);\r\n        promise.then(result => {\r\n            this.course = angular.copy(result);\r\n            PageHeader.set().header(this.course.topic || this.course.subjectName).update();\r\n            this.course.endDateText = Moment.isValidDate(result.endDate);\r\n            this.course.startDateText = Moment.isValidDate(result.startDate);\r\n            this.loadOwners();\r\n        });\r\n    }\r\n\r\n    private loadOwners() {\r\n        this.courseService.getCourseOwners(this.courseId).then(result => {\r\n            angular.copy(result, this.owners);\r\n            this.isCurrentUserInOwners();\r\n            this.getCourseProgress();\r\n        });\r\n    }\r\n\r\n    private isCurrentUserInOwners(): void {\r\n        for (let i = 0; i < this.owners.length; i++) {\r\n            if (this.owners[i].id == this.currentUser.id) {\r\n                this.currentUserInOwners = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    // TODO: This method here is only to calculate 'courseStarted' boolean value, which determines whether to show 'Progress' tab.\r\n    // TODO: If we could eliminate this query, it would be good for performance.\r\n    private getCourseProgress(): void {\r\n        this.courseProgressId = this.sessionStorageWrapper.get<number>(this.progressService.COURSE_PROGRESS_ID_STORAGE_KEY);\r\n        this.progressService.getCourseProgress(this.courseId, this.courseProgressId)\r\n            .then(result => {\r\n                this.courseProgress = angular.copy(result);\r\n                this.courseProgressId = this.courseProgress.id;\r\n                this.sessionStorageWrapper.put<number>(this.progressService.COURSE_PROGRESS_ID_STORAGE_KEY, this.courseProgressId);\r\n                this.courseStarted = (result.status && result.status !== CourseProgressStatus[CourseProgressStatus.NOT_STARTED]);\r\n            });\r\n    }\r\n\r\n////////// redirect\r\n    private redirectToProgress(): void {\r\n        this.$location.url(this.coursesRouter.progressUrl(this.courseId));\r\n    }\r\n\r\n    private redirectToDetails(): void {\r\n        this.$location.url(this.coursesRouter.detailsUrl(this.courseId));\r\n    }\r\n\r\n    public editCourse(): void {\r\n        this.$location.url(this.coursesRouter.updateUrl(this.courseId));\r\n    }\r\n\r\n    public loadLandingPage(): void {\r\n        this.courseService.getLandingPage(this.courseId)\r\n            .then(result => {\r\n                this.landingPage = angular.copy(result);\r\n            });\r\n    }\r\n\r\n    public isTopMenuActive(topMenuKey: string): boolean {\r\n        return 'info' == topMenuKey;\r\n    }\r\n\r\n    public isShowProgressTab(): boolean {\r\n        return (this.courseStarted || this.currentUserInOwners || this.course.permissions && this.course.permissions.edit) && this.isAuthenticated;\r\n    }\r\n}","import {AuthManager} from \"../authcore/AuthManager\";\r\nimport {AuthRedirect} from \"../authcore/AuthRedirect\";\r\nimport {CoursesRouter} from \"../urls/CoursesRouter\";\r\nimport {CourseService} from \"./CourseService\";\r\nimport {ProgressService} from \"./ProgressService\";\r\nimport {PermissionsService} from \"../security/PermissionsService\";\r\nimport {QuizService} from \"../quizzes/QuizService\";\r\nimport {AuthService} from \"../auth/AuthService\";\r\nimport {IUserInfo} from \"../security/IUserInfo\";\r\nimport {ISelectable} from \"../ISelectable\";\r\nimport {ISectionProgress} from \"./models/ISectionProgress\";\r\nimport {ISectionsStatistics} from \"./models/ISectionStatistics\";\r\nimport {SectionProgressStatus} from \"./models/SectionProgressStatus\";\r\nimport {SectionResultStatistic} from \"./models/SectionResultStatistic\";\r\nimport {MenuHelper} from \"../utils/MenuHelper\";\r\nimport {SecurityService} from \"../security/SecurityService\";\r\nimport {PageHeader} from \"../utils/PageHeaderHelper\";\r\nimport {ICourse} from \"./models/ICourse\";\r\nimport {IGridModel} from \"../IGridModel\";\r\nimport {HttpGridHelper} from \"../IHttpGridService\";\r\nimport {UrlService} from \"../utils/UrlService\";\r\nimport {GridModel} from \"../IGridModel\";\r\n\r\nexport interface IExtendedSelectable extends ISelectable{\r\n    selected?: boolean;\r\n}\r\n\r\nexport interface IExtendedSectionStatistics extends ISectionsStatistics{\r\n    status?: string; //from SectionResultStatistic.ts\r\n}\r\n\r\nexport class CourseProgressController {\r\n    public static NAME = \"courses.CourseProgressController\";\r\n\r\n    private currentUser: IUserInfo = {};\r\n\r\n    public courseId: number;\r\n    public owners: Array<ISelectable> = [];\r\n    public userProgress: Array<ISectionProgress> = [];\r\n    public courseUsers: Array<IExtendedSelectable> = [];\r\n    public courseGroups: Array<IExtendedSelectable> = [];\r\n    public sectionsStatistics: Array<IExtendedSectionStatistics> = [];\r\n    public selectedUserIds: Array<number> = [];\r\n    public selectedGroupIds: Array<number> = [];\r\n    public selectedQuizProgress: ISectionProgress = {};\r\n    public currentUserInOwners: boolean = false;\r\n    public searchType: number;\r\n    public course: ICourse = {};\r\n    public sectionProgressGridModel: IGridModel<ISectionProgress>;\r\n    public isSectionSelected: boolean = false;\r\n    public selectedSectionStatistic: IExtendedSectionStatistics = {};\r\n    public isAuthenticated: boolean;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$location\",\r\n        \"$routeParams\",\r\n        UrlService.NAME,\r\n        SecurityService.NAME,\r\n        CoursesRouter.NAME,\r\n        CourseService.NAME,\r\n        ProgressService.NAME,\r\n        AuthService.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private $location: angular.ILocationService,\r\n                private $routeParams: ng.route.IRouteParamsService,\r\n                private url: UrlService,\r\n                private securityService: SecurityService,\r\n                private coursesRouter: CoursesRouter,\r\n                private courseService: CourseService,\r\n                private progressService: ProgressService,\r\n                private authService: AuthService) {\r\n        this.courseId = $routeParams[CoursesRouter.COURSE_ID_PARAM];\r\n        let courseIdStr = String(this.courseId);\r\n        this.securityService\r\n            .demandCoursePermissions(courseIdStr, coursePermissions => coursePermissions.view);\r\n\r\n        var menuItemKey: string = MenuHelper.getCurrentMenuItemKey();\r\n        if (!menuItemKey || menuItemKey.length == 0) {\r\n            MenuHelper.setCurrentMenuItem(MenuHelper.EDUCATION_COURSES_MENU_KEY);\r\n        }\r\n        this.searchType = 0;\r\n        this.loadCourse();\r\n        this.authService.getCurrentUser().then(user => {\r\n            angular.copy(user, this.currentUser);\r\n            this.loadProgressForCurrentUser();\r\n        });\r\n    }\r\n\r\n    private loadCourse() {\r\n        var promise: angular.IPromise<ICourse> = this.courseService.get(this.courseId);\r\n        promise.then(result => {\r\n            this.course = angular.copy(result);\r\n            PageHeader.set().header(this.course.topic || this.course.subjectName).update();\r\n        });\r\n    }\r\n\r\n    private loadProgressForCurrentUser() {\r\n        this.courseService.getCourseOwners(this.courseId).then(owners => {\r\n            angular.copy(owners, this.owners);\r\n            for(let i = 0; i < this.owners.length; i++) {\r\n                if (this.owners[i].id == this.currentUser.id) {\r\n                    this.currentUserInOwners = true;\r\n                }\r\n            }\r\n            this.loadProgress();\r\n        });\r\n    }\r\n\r\n    private loadProgress(){\r\n        if (this.currentUserInOwners) {\r\n            this.getUsers();\r\n            this.getGroups();\r\n        } else {\r\n            this.getUserProgress();\r\n        }\r\n    }\r\n\r\n////////// sections progress\r\n    private getUsers(){\r\n        this.progressService.getCourseUsers(this.courseId).then(users => {\r\n            users.forEach(u => {\r\n                var extendedUserInfo: IExtendedSelectable = {selected: false};\r\n                angular.copy(u, extendedUserInfo);\r\n                extendedUserInfo.selected = false;\r\n                this.courseUsers.push(extendedUserInfo);\r\n            });\r\n        });\r\n    }\r\n\r\n    private getGroups(){\r\n        this.progressService.getCourseGroups(this.courseId).then(groups => {\r\n            groups.forEach(g => {\r\n                var extendedGroupInfo: IExtendedSelectable = {selected: false};\r\n                angular.copy(g, extendedGroupInfo);\r\n                extendedGroupInfo.selected = false;\r\n                this.courseGroups.push(extendedGroupInfo);\r\n            });\r\n        });\r\n    }\r\n\r\n    public getSectionsStatistics(): void {\r\n        var userIds = [];\r\n        var groupIds = [];\r\n        if(this.searchType == 0) {\r\n            userIds = this.selectedUserIds.length > 0 ? this.selectedUserIds : [];\r\n        } else {\r\n            groupIds = this.selectedGroupIds.length > 0 ? this.selectedGroupIds : [];\r\n        }\r\n        this.sectionsStatistics = [];\r\n        this.progressService.getSectionsStatistics(this.courseId, userIds, groupIds).then(result => {\r\n            result.forEach(r => {\r\n                var extendedSectionStatisticsInfo: IExtendedSectionStatistics = {status: \"\"};\r\n                angular.copy(r, extendedSectionStatisticsInfo);\r\n                extendedSectionStatisticsInfo.status = this.getSectionResultStatus(r);\r\n                this.sectionsStatistics.push(extendedSectionStatisticsInfo);\r\n            });\r\n        });\r\n    }\r\n\r\n    private getSectionResultStatus(sectionStatistics: ISectionsStatistics): string {\r\n        if(sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.COMPLETED]] > 0\r\n            && sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.NOT_ALLOWED]] == 0\r\n            && sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.ALLOWED]] == 0\r\n            && sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.OPENED]] == 0\r\n            && sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.STARTED]] == 0\r\n            && sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.SUBMITTED]] == 0\r\n            && sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.FAILED]] == 0\r\n            && sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.SOS]] == 0 ) {\r\n            return SectionResultStatistic[SectionResultStatistic.COMPLETED];\r\n        } else if(sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.SUBMITTED]] > 0\r\n            || sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.FAILED]] > 0\r\n            || sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.SOS]] > 0\r\n            || sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.COMPLETED]] > 0) {\r\n            return SectionResultStatistic[SectionResultStatistic.SUBMITTED];\r\n        } else if(sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.FAILED]] > 0\r\n            && sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.NOT_ALLOWED]] == 0\r\n            && sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.ALLOWED]] == 0\r\n            && sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.OPENED]] == 0\r\n            && sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.STARTED]] == 0\r\n            && sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.SUBMITTED]] == 0\r\n            && sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.SOS]] == 0\r\n            && sectionStatistics.count[SectionProgressStatus[SectionProgressStatus.SUBMITTED]] == 0 ) {\r\n            return SectionResultStatistic[SectionResultStatistic.FAILED];\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n////////// user progress\r\n    public getUserProgress(): void {\r\n        this.progressService.getProgressForUser(this.courseId).then(result => {\r\n            angular.copy(result, this.userProgress);\r\n        });\r\n    }\r\n\r\n    public getProgressForUser(user: IExtendedSelectable): void {\r\n        if(!user.selected) {\r\n            this.selectedUserIds.push(user.id);\r\n            this.courseUsers[this.courseUsers.indexOf(user)].selected = true;\r\n            if(this.selectedUserIds.length == 1) {\r\n                this.progressService.getProgressForUser(this.courseId, user.id).then(result => {\r\n                    if(result) {\r\n                        angular.copy(result, this.userProgress);\r\n                    }\r\n                });\r\n            } else {\r\n                this.getSectionsStatistics();\r\n            }\r\n        } else {\r\n            var index = this.selectedUserIds.indexOf(user.id);\r\n            this.selectedUserIds.splice(index, 1);\r\n            this.courseUsers[this.courseUsers.indexOf(user)].selected = false;\r\n            if(this.selectedUserIds.length > 1) {\r\n                this.getSectionsStatistics();\r\n            } else if(this.selectedUserIds.length == 1){\r\n                this.progressService.getProgressForUser(this.courseId, this.selectedUserIds[0]).then(result => {\r\n                    if(result) {\r\n                        angular.copy(result, this.userProgress);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n////////// group progress\r\n    public getProgressForGroup(group: IExtendedSelectable) {\r\n        if(!group.selected) {\r\n            this.selectedGroupIds = [];\r\n            this.selectedGroupIds.push(group.id);\r\n            this.courseGroups[this.courseGroups.indexOf(group)].selected = true;\r\n            this.courseGroups.forEach(g => {\r\n               if(g.id != group.id) {\r\n                   this.courseGroups[this.courseGroups.indexOf(g)].selected = false;\r\n               }\r\n            });\r\n        } else {\r\n            var index = this.selectedGroupIds.indexOf(group.id);\r\n            this.selectedGroupIds.splice(index, 1);\r\n            this.courseGroups[this.courseGroups.indexOf(group)].selected = false;\r\n        }\r\n        this.cleanSelectedSection();\r\n        this.getSectionsStatistics();\r\n    }\r\n\r\n////////// quiz\\section progress\r\n    public getUserProgressForQuiz(sectionId: number): void {\r\n        this.userProgress.forEach(p => {\r\n            if(p.sectionId == sectionId) {\r\n                angular.copy(p, this.selectedQuizProgress);\r\n            }\r\n        });\r\n    }\r\n\r\n    public getSectionProgress(sectionStatistics: IExtendedSectionStatistics): void {\r\n        let isLoadingNeeded: boolean = (this.selectedSectionStatistic && !!this.selectedSectionStatistic.sectionId); // to eliminate double query when a grid is shown for the first time\r\n        angular.copy(sectionStatistics, this.selectedSectionStatistic);\r\n        this.isSectionSelected = true;\r\n        var userIds = [];\r\n        var groupIds = [];\r\n        if(this.searchType == 0) {\r\n            userIds = this.selectedUserIds.length > 0 ? this.selectedUserIds : [];\r\n        } else {\r\n            groupIds = this.selectedGroupIds.length > 0 ? this.selectedGroupIds : [];\r\n        }\r\n        this.sectionProgressGridModel = new GridModel(HttpGridHelper.createLoader<ISectionProgress>(this.$http,\r\n            this.url.service(\"/api/progress/course/\" + this.courseId + \"/sections/\" + sectionStatistics.sectionId)));\r\n        this.sectionProgressGridModel.filter.userIds = userIds;\r\n        this.sectionProgressGridModel.filter.groupIds = groupIds;\r\n        if (isLoadingNeeded) {\r\n            this.sectionProgressGridModel.loadPage(0);\r\n        } // when a grid is shown for the first time (when ng-if condition becomes true),\r\n        // its gridModel.loadPage() will be called automatically during initialization.\r\n    }\r\n\r\n    public getUserInSectionProgressStatus(status: string): string {\r\n        if (status === SectionProgressStatus[SectionProgressStatus.NOT_ALLOWED]) {\r\n            return \"Not started\";\r\n        } else if (status === SectionProgressStatus[SectionProgressStatus.ALLOWED]) {\r\n            return \"Not started yet\";\r\n        } else if (status === SectionProgressStatus[SectionProgressStatus.OPENED]) {\r\n            return \"Opened\";\r\n        } else if (status === SectionProgressStatus[SectionProgressStatus.STARTED]) {\r\n            return \"Started\";\r\n        } else if (status === SectionProgressStatus[SectionProgressStatus.SUBMITTED]) {\r\n            return \"Submitted\";\r\n        } else if (status === SectionProgressStatus[SectionProgressStatus.FAILED]) {\r\n            return \"Failed\";\r\n        } else if (status === SectionProgressStatus[SectionProgressStatus.SOS]) {\r\n            return \"Failed. No more attempts are allowed\";\r\n        } else if (status === SectionProgressStatus[SectionProgressStatus.COMPLETED]) {\r\n            return \"Passed\";\r\n        } else {\r\n            return \"N/A\";\r\n        }\r\n    }\r\n\r\n////////// redirect\r\n    private redirectToDetails(): void {\r\n        this.$location.url(this.coursesRouter.detailsUrl(this.courseId));\r\n    }\r\n\r\n    private redirectToInfo(): void {\r\n        this.$location.url(this.coursesRouter.infoUrl(this.courseId));\r\n    }\r\n\r\n    public editCourse(): void {\r\n        this.$location.url(this.coursesRouter.updateUrl(this.courseId));\r\n    }\r\n\r\n    public changeFilter(){\r\n        if(this.searchType == 0) {\r\n            this.courseUsers.forEach((u: IExtendedSelectable) => {\r\n               u.selected = false;\r\n            });\r\n            this.selectedGroupIds = [];\r\n        } else {\r\n            this.courseGroups.forEach((g: IExtendedSelectable) => {\r\n                g.selected = false;\r\n            });\r\n            this.selectedUserIds = [];\r\n        }\r\n        this.cleanSelectedSection();\r\n    }\r\n\r\n    public cleanSelectedSection(){\r\n        this.selectedSectionStatistic = {};\r\n        this.selectedQuizProgress = {};\r\n    }\r\n\r\n    public isTopMenuActive(topMenuKey: string): boolean {\r\n        return 'progress' == topMenuKey;\r\n    }\r\n\r\n    public isShowProgressTab(): boolean {\r\n        return true;\r\n    }\r\n}","import {IPermissionWithUsersAndGroups} from \"./../security/permissions/IPermissionWithUsersAndGroups\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {ICourse} from \"./models/ICourse\";\r\nimport {IMaterial} from \"./../materials/models/IMaterial\";\r\nimport {ICourseMaterial} from \"../courses/models/ICourseMaterial\";\r\nimport {IModule} from \"./models/IModule\";\r\nimport {ISection} from \"./models/ISection\";\r\nimport {ISectionInHierarchyExtended} from \"./models/ISectionInHierarchy\";\r\nimport IPromise = angular.IPromise;\r\nimport {ISelectable} from \"../ISelectable\";\r\nimport {IQuiz} from \"../quizzes/models/IQuiz\";\r\nimport {ICourseProgress} from \"../courses/models/ICourseProgress\";\r\nimport {ISectionProgress} from \"../courses/models/ISectionProgress\";\r\nimport {IUserInfo} from \"../security/IUserInfo\";\r\nimport {IGroup} from \"../users/models/IGroup\";\r\nimport {ISectionsStatistics} from \"./models/ISectionStatistics\";\r\nimport {ILandingPage} from \"./models/ILandingPage\";\r\nimport {IBundle} from \"../bundles/models/IBundle\";\r\nimport {ICourseParticipantInfo} from \"./models/ICourseParticipantInfo\";\r\n\r\ninterface IExtCourse extends ICourse {\r\n    preview?: any;\r\n    permissionsWithUsersAndGroups?: Array<IPermissionWithUsersAndGroups>;\r\n    resetPreview?: boolean;\r\n}\r\n\r\nexport class CourseService {\r\n    public static NAME = \"courses.CourseService\";\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$sce\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private $sce: angular.ISCEService,\r\n                private url: UrlService) {\r\n    }\r\n\r\n    public findCoursesByMaterial(materialId: number): angular.IPromise<Array<ICourse>> {\r\n        return this.$http.get(this.url.base(\"/api/courses/by/material/:materialId\")\r\n            .param(\":materialId\", materialId)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public get(id: number): angular.IPromise<ICourse> {\r\n        return this.$http.get(this.url.base(\"/api/courses/:id?\")\r\n            .param(\":id\", id)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public createCourseBundle(courseId: number, courseVersion: number): angular.IPromise<IBundle> {\r\n        return this.$http.post(this.url.base(\"/api/courses/:courseId/bundles?courseVersion=:courseVersion\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":courseVersion\", courseVersion)\r\n            .service(), null)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public create(course: IExtCourse, permissionsWithUsersAndGroups: Array<IPermissionWithUsersAndGroups>, preview?: File): angular.IPromise<ICourse> {\r\n        course.preview = preview != null\r\n            ? {name: preview.name, type: preview.type, size: preview.size}\r\n            : null;\r\n        course.permissionsWithUsersAndGroups = permissionsWithUsersAndGroups;\r\n        return this.$http.post(this.url.service(\"/api/courses\"), course).then(result => result.data);\r\n    }\r\n\r\n    public update(course: IExtCourse, permissionsWithUsersAndGroups: Array<IPermissionWithUsersAndGroups>, isResetPreview: boolean,\r\n                  preview?: File): angular.IPromise<ICourse> {\r\n        course.preview = preview != null\r\n            ? {name: preview.name, type: preview.type, size: preview.size}\r\n            : null;\r\n        course.permissionsWithUsersAndGroups = permissionsWithUsersAndGroups;\r\n        course.resetPreview = isResetPreview;\r\n        return this.$http.put(this.url.service(\"/api/courses\"), course).then(result => result.data);\r\n    }\r\n\r\n    public getModules(courseId: number): angular.IPromise<Array<IModule>> {\r\n        return this.$http.get(this.url.base(\"/api/courses/:id/modules\")\r\n            .param(\":id\", courseId)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getModuleSections(courseId: number, moduleId: number): angular.IPromise<Array<ISectionInHierarchyExtended>> {\r\n        return this.$http.get(this.url.base(\"/api/courses/:courseId/modules/:moduleId/sections\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":moduleId\", moduleId)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public createModule(courseId: number, module: IModule): angular.IPromise<IModule> {\r\n        return this.$http.post(this.url.base(\"/api/courses/:courseId/modules\").param(\":courseId\", courseId).service(), module)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public updateModule(courseId: number, module: IModule): angular.IPromise<IModule> {\r\n        return this.$http.put(this.url.base(\"/api/courses/:courseId/modules\")\r\n            .param(\":courseId\", courseId)\r\n            .service(),\r\n            module)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public updateModuleHierarchy(courseId: number, module: IModule): angular.IPromise<IModule> {\r\n        return this.$http.put(this.url.base(\"/api/courses/:courseId/modules/updateHierarchy\")\r\n                .param(\":courseId\", courseId)\r\n                .service(),\r\n            module)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public createSection(courseId: number, moduleId: number, section: ISection): angular.IPromise<ISection> {\r\n        return this.$http.post(this.url.base(\"/api/courses/:courseId/modules/:moduleId/sections\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":moduleId\", moduleId)\r\n            .service(),\r\n            section)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public updateSection(courseId: number, moduleId: number, section: ISection): angular.IPromise<ISection> {\r\n        return this.$http.put(this.url.base(\"/api/courses/:courseId/modules/:moduleId/sections\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":moduleId\", moduleId)\r\n            .service(),\r\n            section)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public updateSectionName(courseId: number, moduleId: number, section: ISection): angular.IPromise<ISection> {\r\n        return this.$http.put(this.url.base(\"/api/courses/:courseId/modules/:moduleId/sections/updateName\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":moduleId\", moduleId)\r\n            .service(),\r\n            section)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public updateSectionHierarchy(courseId: number, moduleId: number, section: ISection): angular.IPromise<ISection> {\r\n        return this.$http.put(this.url.base(\"/api/courses/:courseId/modules/:moduleId/sections/updateHierarchy\")\r\n                .param(\":courseId\", courseId)\r\n                .param(\":moduleId\", moduleId)\r\n                .service(),\r\n            section)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getAvailableSectionsNoChildren(courseId: number, moduleId: number, sectionId: number): ng.IPromise<Array<ISelectable>> {\r\n        return this.$http.get(this.url.base(\"/api/courses/:courseId/modules/:moduleId/sections/available/no/children/:sectionId\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":moduleId\", moduleId)\r\n            .param(\":sectionId\", sectionId).service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    // TODO: replace IMaterial with ICourseMaterial - add fields only if needed\r\n    public getSectionUploadedOrLinkMaterials(courseId: number, moduleId: number, sectionId: number): angular.IPromise<Array<IMaterial>> {\r\n        return this.$http.get(this.url.base(\"/api/courses/:courseId/modules/:moduleId/sections/:sectionId/materials/uploadedOrLink\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":moduleId\", moduleId)\r\n            .param(\":sectionId\", sectionId)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    // TODO: replace IMaterial with ICourseMaterial - add fields only if needed\r\n    public getSectionAllMaterials(courseId: number, moduleId: number, sectionId: number): angular.IPromise<Array<IMaterial>> {\r\n        return this.$http.get(this.url.base(\"/api/courses/:courseId/modules/:moduleId/sections/:sectionId/materials/all\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":moduleId\", moduleId)\r\n            .param(\":sectionId\", sectionId)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public deleteModule(courseId: number, moduleId: number, moduleVersion: number): angular.IPromise<any> {\r\n        return this.$http.delete(this.url.base(\"api/courses/:courseId/modules/:moduleId?version=:version\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":moduleId\", moduleId)\r\n            .param(\":version\", moduleVersion)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public deleteSection(courseId: number, moduleId: number, sectionId: number, sectionVersion: number,\r\n                         removeCurrentUserSectionProgress: boolean): angular.IPromise<any> {\r\n        return this.$http.delete(this.url.base(\"api/courses/:courseId/modules/:moduleId/sections/:sectionId?version=:version&removeProgress=:removeProgress\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":moduleId\", moduleId)\r\n            .param(\":sectionId\", sectionId)\r\n            .param(\":version\", sectionVersion)\r\n            .param(\":removeProgress\", removeCurrentUserSectionProgress)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getCourseOwners(courseId: number): IPromise<Array<ISelectable>> {\r\n        return this.$http.get(this.url.base(\"api/courses/:courseId/owners\")\r\n            .param(\":courseId\", courseId)\r\n            .service())\r\n            .then(result => result.data);\r\n\r\n    }\r\n\r\n    public getSectionQuiz(courseId: number, moduleId: number, sectionId: number): angular.IPromise<IQuiz> {\r\n        return this.$http.get(this.url.base(\"/api/courses/:courseId/modules/:moduleId/sections/:sectionId/quiz\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":moduleId\", moduleId)\r\n            .param(\":sectionId\", sectionId)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public createLandingPage(courseId: number,\r\n                             landingPage: ILandingPage): angular.IPromise<ILandingPage> {\r\n        return this.$http.post(this.url.base(\"/api/courses/:courseId/landingPage\")\r\n            .param(\":courseId\", courseId)\r\n            .service(), landingPage)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getLandingPage(courseId: number): angular.IPromise<ILandingPage> {\r\n        return this.$http.get(this.url.base(\"/api/courses/:courseId/landingPage\")\r\n            .param(\":courseId\", courseId)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public updateLandingPage(courseId: number,\r\n                             landingPage: ILandingPage): angular.IPromise<ILandingPage> {\r\n        return this.$http.put(this.url.base(\"/api/courses/:courseId/landingPage\")\r\n            .param(\":courseId\", courseId)\r\n            .service(), landingPage)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public downloadCertificate(parameters: any): ng.IPromise<string> {\r\n        let reportType = 'COURSE_CERTIFICATE';\r\n        return this.$http.post(\r\n            this.url.base(\"/api/reports/downloadToken/:reportType\")\r\n                .param(\":reportType\", reportType)\r\n                .service(), {\r\n                parameters: JSON.stringify(parameters)\r\n            }\r\n        ).then((result: any) =>  this.url.base(\"/api/reports/download/:token\").param(\":token\", result.data.token).service());\r\n    }\r\n\r\n    public viewCertificate(parameters: any): ng.IPromise<string> {\r\n        let reportType = 'COURSE_CERTIFICATE';\r\n        return this.$http.post(\r\n            this.url.base(\"/api/reports/preview/:reportType\")\r\n                .param(\":reportType\", reportType)\r\n                .service(),\r\n            JSON.stringify(parameters)\r\n        ).then(result => result.data);\r\n    }\r\n\r\n    public getCourseCertificates(courseId: number, editCourse: boolean): angular.IPromise<Array<ISelectable>> {\r\n        return this.$http.get(this.url.base(\"/api/courses/:courseId/certificates?editCourse=:editCourse\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":editCourse\", editCourse)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public removeCourseCertificates(courseId: number, certificatesIds: any): ng.IPromise<boolean> {\r\n        return this.$http.delete(this.url.base(\"/api/courses/:courseId/certificates\")\r\n            .param(\":courseId\", courseId)\r\n            .service(), {params: {\r\n            certificatesIds: certificatesIds\r\n        }}).then(result => result.data);\r\n    }\r\n\r\n    public getEmbeddedMaterial(materialId: number): angular.IPromise<ICourseMaterial> {\r\n        return this.$http.get(this.url.base(\"/api/courses/embedded/material/:materialId\")\r\n            .param(\":materialId\", materialId)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getCourseParticipationInfo(courseId: number, courseProgressId: number): angular.IPromise<ICourseParticipantInfo> {\r\n        return this.$http.get(this.url.base(\"/api/courses/:courseId/participationInfo\")\r\n            .param(\":courseId\", courseId)\r\n            .service(), {params: {\r\n            courseProgressId: courseProgressId\r\n        }}).then(result => result.data);\r\n    }\r\n\r\n    public updateCourseParticipationInfo(courseId: number, courseProgressId: number, participationFormData: any):\r\n                angular.IPromise<ICourseParticipantInfo> {\r\n        return this.$http.put(this.url.base(\"/api/courses/:courseId/participationInfo?courseProgressId=:courseProgressId\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":courseProgressId\", courseProgressId)\r\n            .service(), participationFormData)\r\n            .then(result => result.data);\r\n    }\r\n}","import {AuthManager} from \"./../authcore/AuthManager\";\r\nimport {CoursesRouter} from \"./../urls/CoursesRouter\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {IGridModel, GridModel} from \"./../IGridModel\";\r\nimport {ICourse} from \"./models/ICourse\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {ObjectTypeUtils} from \"./../utils/ObjectTypeUtils\";\r\nimport {PersonalService} from \"./../personal/PersonalService\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\n\r\nexport class CoursesController {\r\n    public static NAME = \"courses.CoursesController\";\r\n\r\n    private SUBJECT_MODULE: string = 'subject';\r\n    private COMPLEXITY_LEVEL_MODULE: string = 'complexityLevel';\r\n    private LANGUAGE_MODULE: string = 'language';\r\n    private SOURCE_MODULE: string = 'source';\r\n    private STUDENT_MODULE: string = 'student';\r\n    private DEFAULT_TOP_MENU_ITEM: string = 'course';\r\n\r\n    public selectedItemInModule: Map<string, number> = new Map<string, number>();\r\n    public menuKey: any;\r\n    public systemPermissions: ISystemPermissions;\r\n    public isAuthenticated: boolean;\r\n    public viewType: number;\r\n    public rowShow: Map<number, boolean> = new Map<number, boolean>();\r\n    public coursesGridModel: IGridModel<ICourse>;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$location\",\r\n        CoursesRouter.NAME,\r\n        PermissionsService.NAME,\r\n        AuthManager.NAME,\r\n        UrlService.NAME,\r\n        PersonalService.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private $location: ng.ILocationService,\r\n                public coursesRouter: CoursesRouter,\r\n                private permissionsApi: PermissionsService,\r\n                private authManager: AuthManager,\r\n                private url: UrlService,\r\n                private personalService: PersonalService) {\r\n        this.selectedItemInModule.set(this.SUBJECT_MODULE, 0);\r\n        this.selectedItemInModule.set(this.COMPLEXITY_LEVEL_MODULE, 0);\r\n        this.selectedItemInModule.set(this.LANGUAGE_MODULE, 0);\r\n        this.selectedItemInModule.set(this.SOURCE_MODULE, 0);\r\n        this.selectedItemInModule.set(this.STUDENT_MODULE, 1);\r\n\r\n        this.viewType = 1;\r\n        this.menuKey = {\r\n            topMenu: this.DEFAULT_TOP_MENU_ITEM\r\n        };\r\n        this.isAuthenticated = this.authManager.isAuthenticated();\r\n\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.EDUCATION_COURSES_MENU_KEY);\r\n        PageHeader.set().header(\"Courses\").update();\r\n\r\n        if (this.isAuthenticated) {\r\n            this.permissionsApi.getSystemPermissions().then(systemPermissions => {\r\n                this.systemPermissions = systemPermissions;\r\n            });\r\n        }\r\n\r\n        this.coursesGridModel = new GridModel(HttpGridHelper.createLoader<ICourse>($http, this.url.service(\"/api/courses\")));\r\n        this.coursesGridModel.pageSize = 8;\r\n    }\r\n\r\n    public setSearch(module: string, item: number): void {\r\n        if (this.selectedItemInModule.get(module) == item) {\r\n            this.selectedItemInModule.set(module, 0);\r\n        } else {\r\n            this.selectedItemInModule.set(module, item);\r\n        }\r\n        this.searchCourse();\r\n    }\r\n\r\n    public isSearchItemActive(module: string, searchItem: number): boolean {\r\n        return this.selectedItemInModule.get(module) == searchItem;\r\n    }\r\n\r\n    public isSearchItemHide(module: string, searchItem: number): boolean {\r\n        return !!(this.selectedItemInModule.get(module) != 0 && this.selectedItemInModule.get(module) != searchItem);\r\n    }\r\n\r\n    public isTopMenuActive(topMenuKey: string): boolean {\r\n        return this.menuKey.topMenu == topMenuKey;\r\n    }\r\n\r\n    public showDetails(index: number) {\r\n        this.rowShow.set(index, !this.rowShow.get(index));\r\n    }\r\n\r\n    public loadCourse(courseId: number): void {\r\n        this.$location.url(this.coursesRouter.detailsUrl(courseId));\r\n    }\r\n\r\n    public searchCourse(): void {\r\n        this.coursesGridModel.filter.searchString = null;\r\n        this.coursesGridModel.loadCurrentPage();\r\n    }\r\n\r\n    public addToFavorites(course: ICourse) {\r\n        this.rowShow.set(course.id, !this.rowShow.get(course.id));\r\n        this.personalService.addToFavorites(course.id, ReferencedObjectType.COURSE).then(result => {\r\n            notifier.success(\"The course has been added to your favorites\");\r\n            course.favorite = true;\r\n        }).catch(response => {\r\n            if(response.data.error == \"object.already.in.favorite\") {\r\n                notifier.error(\"This course is already in your favorites\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public removeFromFavorites(course: ICourse) {\r\n        this.rowShow.set(course.id, !this.rowShow.get(course.id));\r\n        this.personalService.removeFromFavorites(course.id, ReferencedObjectType.COURSE).then(result => {\r\n            notifier.success(\"The course has been removed from your favorites\");\r\n            course.favorite = false;\r\n        }).catch(response => {\r\n            if(response.data.error == \"object.not.in.favorite\") {\r\n                notifier.error(\"Failed to remove from your favorites\");\r\n            }\r\n        });\r\n    }\r\n}\r\n","import {CoursesController} from \"./CoursesController\";\r\nimport {CourseDetailsController} from \"./CourseDetailsController\";\r\nimport {QuizDetailsController} from \"./QuizDetailsController\";\r\nimport {CourseEditController} from \"./CourseEditController\";\r\nimport {CourseService} from \"./CourseService\";\r\nimport {ProgressService} from \"./ProgressService\";\r\n\r\nimport {SecurityModule} from \"./../security/SecurityModule\";\r\nimport {AuthCoreModule} from \"./../authcore/AuthCoreModule\";\r\nimport {UrlsModule} from \"./../urls/UrlsModule\";\r\nimport {QuizzesModule} from \"./../quizzes/QuizzesModule\";\r\nimport {CourseProgressController} from \"./CourseProgressController\";\r\nimport {CourseInfoController} from \"./CourseInfoController\";\r\n\r\nexport var CoursesModule: angular.IModule = angular\r\n    .module(\"courses\", [\r\n        SecurityModule.name,\r\n        AuthCoreModule.name,\r\n        UrlsModule.name,\r\n        QuizzesModule.name\r\n    ])\r\n    .service(CourseService.NAME, CourseService)\r\n    .service(ProgressService.NAME, ProgressService)\r\n    .controller(CoursesController.NAME, CoursesController)\r\n    .controller(CourseDetailsController.NAME, CourseDetailsController)\r\n    .controller(QuizDetailsController.NAME, QuizDetailsController)\r\n    .controller(CourseEditController.NAME, CourseEditController)\r\n    .controller(CourseProgressController.NAME, CourseProgressController)\r\n    .controller(CourseInfoController.NAME, CourseInfoController);","import {UrlService} from \"./../utils/UrlService\";\r\n\r\nimport {ISectionInHierarchyExtended} from \"./models/ISectionInHierarchy\";\r\nimport {ISelectable} from \"../ISelectable\";\r\nimport {ICourseProgress, ICourseProgressWithParticipantInfo} from \"./models/ICourseProgress\";\r\nimport {ISectionsStatistics} from \"./models/ISectionStatistics\";\r\nimport {ISectionProgress} from \"./models/ISectionProgress\";\r\n\r\nexport class ProgressService {\r\n    public static NAME = \"courses.ProgressService\";\r\n\r\n    public COURSE_PROGRESS_ID_STORAGE_KEY = \"vhs.application.courses.course.progress.id\";\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$sce\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private $sce: angular.ISCEService,\r\n                private url: UrlService) {\r\n    }\r\n\r\n    public startCourse(courseId: number, participationFormData?: any): angular.IPromise<ICourseProgress> {\r\n        return this.$http.post(this.url.base(\"/api/progress/course/:courseId/start\")\r\n            .param(\":courseId\", courseId)\r\n            .service(), participationFormData)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getCourseProgress(courseId: number, courseProgressId?: number, userId?: number): angular.IPromise<ICourseProgress> {\r\n        // userId MUST be empty (null or undefined) for calling this method while viewing a Course as a student\r\n        // specify userId only when viewing students' Progress as a Course owner\r\n        return this.$http.get(this.url.base(\"/api/progress/course/:courseId?userId=:userId&courseProgressId=:courseProgressId\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":userId\", userId || \"\")\r\n            .param(\":courseProgressId\", courseProgressId || \"\")\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n    public getCourseProgressHistory(courseId: number): angular.IPromise<ICourseProgressWithParticipantInfo[]> {\r\n        return this.$http.get(this.url.base(\"/api/progress/course/:courseId/history\")\r\n            .param(\":courseId\", courseId)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getCourseSections(courseId: number, courseProgressId: number): angular.IPromise<Array<ISectionInHierarchyExtended>> {\r\n        return this.$http.get(this.url.base(\"/api/progress/structure/courses/:courseId/sections?courseProgressId=:courseProgressId\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":courseProgressId\", courseProgressId || \"\")\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getModuleSections(courseId: number, moduleId: number, courseProgressId: number): angular.IPromise<Array<ISectionInHierarchyExtended>> {\r\n        return this.$http.get(this.url.base(\"/api/progress/structure/courses/:courseId/modules/:moduleId/sections?courseProgressId=:courseProgressId\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":moduleId\", moduleId)\r\n            .param(\":courseProgressId\", courseProgressId || \"\")\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getCourseUsers(courseId: number): angular.IPromise<Array<ISelectable>> {\r\n        return this.$http.get(this.url.base(\"/api/courses/:courseId/users\")\r\n            .param(\":courseId\", courseId)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getCourseGroups(courseId: number): angular.IPromise<Array<ISelectable>> {\r\n        return this.$http.get(this.url.base(\"/api/courses/:courseId/groups\")\r\n            .param(\":courseId\", courseId)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getProgressForUser(courseId: number, userId?: number): angular.IPromise<Array<ISectionProgress>> {\r\n        if (userId) {\r\n            return this.$http.get(this.url.base(\"/api/progress/course/:courseId/sections?userId=:userId\")\r\n                .param(\":courseId\", courseId)\r\n                .param(\":userId\", userId)\r\n                .service())\r\n                .then(result => result.data);\r\n        } else {\r\n            return this.$http.get(this.url.base(\"/api/progress/course/:courseId/sections\")\r\n                .param(\":courseId\", courseId)\r\n                .service())\r\n                .then(result => result.data);\r\n        }\r\n    }\r\n\r\n    public getProgressForQuiz(courseId: number, sectionId: number, userIds: Array<number>, groupIds: Array<number>): angular.IPromise<Array<ISectionProgress>> {\r\n        let requestConfig: angular.IRequestShortcutConfig = {\r\n            params: {\r\n                // TODO: limit the number of list items because URI length should not exceed 2083 characters\r\n                userIdsFilter: userIds,\r\n                groupIdsFilter: groupIds\r\n            }\r\n        };\r\n        // TODO: parameters 'page' and 'pageSize' are for debug purposes here,\r\n        // TODO: they should be removed later and replaced with our Grid\r\n        return this.$http.get(this.url.base(\"/api/progress/course/:courseId/sections/:sectionId?page=0&pageSize=1000\")\r\n                .param(\":courseId\", courseId)\r\n                .param(\":sectionId\", sectionId)\r\n                .service(),\r\n            requestConfig\r\n        ).then(result => result.data);\r\n    }\r\n\r\n    public getSectionsStatistics(courseId: number, userIds: Array<number>, groupIds: Array<number>): angular.IPromise<Array<ISectionsStatistics>> {\r\n        let requestConfig: angular.IRequestShortcutConfig = {\r\n            params: {\r\n                // TODO: limit the number of list items because URI length should not exceed 2083 characters\r\n                userIdsFilter: userIds,\r\n                groupIdsFilter: groupIds\r\n            }\r\n        };\r\n        return this.$http.get(this.url.base(\"/api/progress/course/:courseId/sections/statistics\")\r\n                .param(\":courseId\", courseId)\r\n                .service(),\r\n            requestConfig).then(result => result.data);\r\n    }\r\n\r\n    public setSectionProgress(courseId: number, sectionId: number, status: string, courseProgressId: number) {\r\n        return this.$http.put(this.url.base(\"/api/progress/course/:courseId/sections/:sectionId/status/:status\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":sectionId\", sectionId)\r\n            .param(\":status\", status.toUpperCase())\r\n            .service(), courseProgressId ? JSON.stringify(courseProgressId) : null)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getSectionProgress(courseId: number, sectionId: number, courseProgressId: number): angular.IPromise<ISectionProgress> {\r\n        return this.$http.get(this.url.base(\"/api/progress/course/:courseId/sections/:sectionId/progress/:courseProgressId\")\r\n            .param(\":courseId\", courseId)\r\n            .param(\":sectionId\", sectionId)\r\n            .param(\":courseProgressId\", courseProgressId)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n}","import {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {CoursesRouter} from \"./../urls/CoursesRouter\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\n\r\nexport class QuizDetailsController {\r\n    public static NAME = \"courses.QuizDetailsController\";\r\n\r\n    public quizNumber: number;\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        \"$routeParams\",\r\n        SecurityService.NAME\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                private $routeParams: ng.route.IRouteParamsService,\r\n                private securityService: SecurityService) {\r\n        this.quizNumber = $routeParams[CoursesRouter.COURSE_QUIZ_ID_PARAM];\r\n        let quizNumberStr = String(this.quizNumber);\r\n        this.securityService.demandAuthentication();\r\n        // TODO: Add a check permission \"evaluationQuiz\" when will be ready the server part\r\n            //.demandQuizPermissions(quizNumberStr, quizPermissions => quizPermissions.evaluation);\r\n\r\n        var menuItemKey: string = MenuHelper.getCurrentMenuItemKey();\r\n        if (!menuItemKey || menuItemKey.length == 0) {\r\n            MenuHelper.setCurrentMenuItem(MenuHelper.EDUCATION_COURSES_MENU_KEY);\r\n        }\r\n        PageHeader.set().header(\"Test #\" + this.quizNumber +\r\n            \" of English language\").update(); // TODO: real title\r\n\r\n    }\r\n\r\n    public isQuizNumberOdd(quizNumber): boolean {\r\n        return this.quizNumber % 2 != 0;\r\n    }\r\n}","export enum CourseProgressStatus {\r\n    NOT_STARTED,\r\n    STARTED,\r\n    FAILED,\r\n    PASSED,\r\n    COMPLETED,\r\n    EXPIRED,\r\n    ARCHIVED\r\n}","export enum SectionProgressStatus {\r\n    NOT_ALLOWED,\r\n    ALLOWED,\r\n    OPENED,\r\n    STARTED,\r\n    SUBMITTED,\r\n    FAILED,\r\n    SOS,\r\n    COMPLETED\r\n}","export enum SectionResultStatistic {\r\n    SUBMITTED,\r\n    FAILED,\r\n    COMPLETED\r\n}","export enum SectionType {\r\n    INFORMATION,\r\n    QUIZ,\r\n    PROBLEM_SOLUTION\r\n}","import {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\n\r\nexport class AccountManagementController {\r\n    public static NAME = \"finances.AccountManagementController\";\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        SecurityService.NAME\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                private securityService: SecurityService) {\r\n        this.securityService.demandAuthentication()\r\n            .demandSystemPermissions(systemPermissions => systemPermissions.managementAccount);\r\n\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.OPERATIONS_ACCOUNT_MANAGEMENT_MENU_KEY);\r\n        PageHeader.set().header(\"Money\").update();\r\n    }\r\n\r\n    public doSubmit(): void {\r\n        alert('Отправка денежных средств...');\r\n    }\r\n}\r\n","import {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\n\r\nexport class BalanceController {\r\n    public static NAME = \"finances.BalanceController\";\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        SecurityService.NAME\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                private securityService: SecurityService) {\r\n        this.securityService.demandAuthentication()\r\n            .demandSystemPermissions(systemPermissions => systemPermissions.rechargeAccount);\r\n\r\n        // TODO: this menu item was deleted, needs updating // MenuHelper.setCurrentMenuItem(MenuHelper.PURCHASES_BALANCE_MENU_KEY);\r\n        // TODO: // PageHeader.set().header(...).update();\r\n    }\r\n\r\n    public doSubmit(): void {\r\n        alert('Переход в сервис приёма платежей...');\r\n    }\r\n}\r\n","import {BalanceController} from \"./BalanceController\";\r\nimport {PurchaseHistoryController} from \"./PurchaseHistoryController\";\r\nimport {AccountManagementController} from \"./AccountManagementController\";\r\nimport {PurchaseController} from \"./PurchaseController\";\r\nimport {PurchaseService} from \"./PurchaseService\";\r\n\r\nimport {CommonModule} from \"./../common/CommonModule\";\r\nimport {SecurityModule} from \"./../security/SecurityModule\";\r\nimport {UrlsModule} from \"./../urls/UrlsModule\";\r\nimport {ContentModule} from \"./../content/ContentModule\";\r\n\r\nexport var FinancesModule: angular.IModule = angular\r\n        .module(\"finances\", [\r\n            CommonModule.name,\r\n            SecurityModule.name,\r\n            UrlsModule.name,\r\n            ContentModule.name\r\n        ])\r\n        .controller(BalanceController.NAME, BalanceController)\r\n        .controller(PurchaseHistoryController.NAME, PurchaseHistoryController)\r\n        .controller(AccountManagementController.NAME, AccountManagementController)\r\n        .controller(PurchaseController.NAME, PurchaseController)\r\n        .service(PurchaseService.NAME, PurchaseService)\r\n    ;\r\n","import {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {FinancesRouter} from \"./../urls/FinancesRouter\";\r\nimport {PurchaseService} from \"./PurchaseService\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {ActionLogService} from \"./../statistics/ActionLogService\";\r\nimport {ActionType} from \"./../statistics/models/ActionType\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\nimport {AuthManager} from \"./../authcore/AuthManager\";\r\nimport {AuthRedirect} from \"./../authcore/AuthRedirect\";\r\nimport {RedirectReason} from \"./../authcore/RedirectReason\";\r\nimport {ContentRouter} from \"./../urls/ContentRouter\";\r\nimport {ContentService} from \"./../content/ContentService\";\r\nimport {IContentView} from \"./../content/models/IContentView\";\r\nimport {MainRouter} from \"./../urls/MainRouter\";\r\n\r\nexport class PurchaseController {\r\n    public static NAME = \"finances.PurchaseController\";\r\n    private objectType: ReferencedObjectType;\r\n    private objectId: number;\r\n    public content: IContentView = {};\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        \"$window\",\r\n        \"$routeParams\",\r\n        PurchaseService.NAME,\r\n        ActionLogService.NAME,\r\n        AuthManager.NAME,\r\n        AuthRedirect.NAME,\r\n        ContentRouter.NAME,\r\n        ContentService.NAME,\r\n        MainRouter.NAME\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                private $window: angular.IWindowService,\r\n                private $routeParams: angular.route.IRouteParamsService,\r\n                private purchaseApi: PurchaseService,\r\n                private actionLogService: ActionLogService,\r\n                private authManager: AuthManager,\r\n                private authRedirect: AuthRedirect,\r\n                private contentRouter: ContentRouter,\r\n                private contentApi: ContentService,\r\n                private mainRouter: MainRouter) {\r\n\r\n        if (!authManager.isAuthenticated()) {\r\n            authRedirect.redirectToLogOn(RedirectReason.LOGON_REQUIRED);\r\n        }\r\n\r\n        if (!MenuHelper.getCurrentMenuItemKey()) {\r\n            MenuHelper.setCurrentMenuItem(MenuHelper.SEARCH_MENU_KEY);\r\n        }\r\n        this.objectType = ReferencedObjectType[<string> this.$routeParams[FinancesRouter.OBJECT_TYPE_PARAM].toUpperCase()];\r\n        this.objectId = this.$routeParams[FinancesRouter.OBJECT_ID_PARAM];\r\n\r\n        this.contentApi.getContentView(this.objectId, this.objectType).then(result => {\r\n            if (result.permissions.view) {\r\n                notifier.warning(\"You already have a permission to view this content, so you don’t need to buy it. Lucky you!\");\r\n                this.$location.url(this.contentRouter.detailsUrl(this.objectId, this.objectType));\r\n            }\r\n            angular.copy(result, this.content);\r\n        }).catch(response => {\r\n            this.content = {\r\n                typeName: '',\r\n                title: 'Failed to load'\r\n            };\r\n        }).finally(() => {\r\n            PageHeader.set().header((this.content.contentType || '') +\r\n                ' ‘' + (this.content.name || '') + '’' +\r\n                ' > Request of purchase confirmation'\r\n            ).update();\r\n        });\r\n    }\r\n\r\n    public doSubmit(): void {\r\n        this.purchaseApi.purchase(this.objectType, this.objectId).then(result => {\r\n            this.actionLogService.create(this.objectId, this.objectType, this.getPurchaseActionType(this.objectType));\r\n            notifier.success('Purchase has been successfully accomplished');\r\n            this.$location.url(this.contentRouter.detailsUrl(this.objectId, this.objectType));\r\n        });\r\n    }\r\n\r\n    public doCancel(): void {\r\n        if (this.$window.history.length > 1) {\r\n            this.$window.history.back();\r\n        } else {\r\n            this.$location.url(this.mainRouter.mainUrl());\r\n        }\r\n    }\r\n\r\n    private getPurchaseActionType(objectType: ReferencedObjectType): ActionType {\r\n        switch (objectType) {\r\n            case ReferencedObjectType.MATERIAL:\r\n                return ActionType.MATERIAL_PURCHASE;\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}","import {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {ContentRouter} from \"./../urls/ContentRouter\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {IPurchaseHistory} from \"./../finances/models/IPurchaseHistory\";\r\nimport {IGridModel, GridModel} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\n\r\nexport class PurchaseHistoryController {\r\n    public static NAME = \"finances.PurchaseHistoryController\";\r\n\r\n    public viewType: number;\r\n    public purchaseHistoryGridModel: IGridModel<IPurchaseHistory>;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$location\",\r\n        UrlService.NAME,\r\n        ContentRouter.NAME,\r\n        SecurityService.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private $location: angular.ILocationService,\r\n                private url: UrlService,\r\n                public contentRouter: ContentRouter, // used in the HTML\r\n                private securityService: SecurityService) {\r\n        this.securityService.demandAuthentication()\r\n            .demandSystemPermissions(systemPermissions => systemPermissions.viewPurchaseHistory);\r\n\r\n        this.purchaseHistoryGridModel = new GridModel(HttpGridHelper.createLoader<IPurchaseHistory>($http, this.url.service(\"/api/finance/purchaseHistory\")));\r\n        this.viewType = 0;\r\n\r\n        // TODO: this menu item was deleted, needs updating // MenuHelper.setCurrentMenuItem(MenuHelper.PURCHASES_PURCHASE_HISTORY_MENU_KEY);\r\n        // TODO: // PageHeader.set().header(...).update();\r\n    }\r\n}\r\n","import {UrlService} from \"./../utils/UrlService\";\r\nimport {IReferencedObjectInput} from \"./../IReferencedObjectInput\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\n\r\nexport class PurchaseService {\r\n    public static NAME = \"finances.PurchaseService\";\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private url: UrlService) {\r\n    }\r\n\r\n    public purchase(referencedObjectType: ReferencedObjectType, referencedObjectId: number): angular.IPromise<any> {\r\n        let purchasedObject: IReferencedObjectInput = {\r\n            objectType: referencedObjectType,\r\n            objectId: referencedObjectId\r\n        };\r\n        return this.$http.post(this.url.service('api/finance/purchase'), purchasedObject)\r\n            .then(result => result.data);\r\n    }\r\n}\r\n","import {AuthManager} from \"./../authcore/AuthManager\";\r\nimport {AuthRedirect} from \"./../authcore/AuthRedirect\";\r\nimport {RedirectReason} from \"./../authcore/RedirectReason\";\r\nimport {AuthRouter} from \"./../urls/AuthRouter\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {CommonNavigation} from \"../common/CommonNavigation\";\r\nimport {VIEWS_URL_PREFIX} from \"./../utils/UrlService\";\r\n\r\nexport class HttpInterceptor {\r\n    public static NAME = \"http.HttpInterceptor\";\r\n\r\n    public static Factory($q: angular.IQService,\r\n                          authRedirect: AuthRedirect,\r\n                          authManager: AuthManager,\r\n                          commonNavigation: CommonNavigation) {\r\n        return new HttpInterceptor($q, authRedirect, authManager, commonNavigation);\r\n    }\r\n\r\n    constructor(private $q: angular.IQService,\r\n                private authRedirect: AuthRedirect,\r\n                private authManager: AuthManager,\r\n                private commonNavigation: CommonNavigation) {\r\n    }\r\n\r\n    public request = (config) => {\r\n        config.headers = config.headers || {};\r\n        var token = this.authManager.getToken();\r\n        if (token != null && config.url.indexOf(VIEWS_URL_PREFIX) != 0 && !config.withoutAuthorization) {\r\n            config.headers.Authorization = token.tokenType + \" \" + token.accessToken;\r\n        }\r\n        config.headers[\"X-Timezone\"] = moment(new Date()).utcOffset();\r\n        return config;\r\n    };\r\n\r\n    public responseError = (rejection) => {\r\n        if (rejection.status === 401) {\r\n            this.redirectToLogOn(RedirectReason.ACCESS_DENIED);\r\n        } else if (rejection.status === 403) {\r\n            if (this.authManager.isAuthenticated()) {\r\n                this.authRedirect.forwardToAccessDenied();\r\n            } else if (!this.authManager.hasToken()) {\r\n                this.redirectToLogOn(RedirectReason.ACCESS_DENIED);\r\n            } else {\r\n                this.authManager.logOff();\r\n                this.redirectToLogOn(RedirectReason.TOKEN_EXPIRED);\r\n            }\r\n        } else if (rejection.status >= 500) {\r\n            notifier.error(\"Query has failed: please contact your system administrator or help desk\");\r\n        } else if (rejection.status === 409) {\r\n            if (rejection.data.error === \"InvalidState\" || rejection.data.error === \"OptimisticLock\")\r\n                notifier.error(\"This data has been modified by another user: please refresh the page and try again\");\r\n        } else if (rejection.status === 404 && true !== rejection.config.ignore404) {\r\n            this.commonNavigation.redirectToNotFound();\r\n        }\r\n        return this.$q.reject(rejection);\r\n    };\r\n\r\n    private redirectToLogOn(reason: RedirectReason): void {\r\n        this.authManager.eraseToken();\r\n        this.authRedirect.redirectToLogOn(reason);\r\n    }\r\n}\r\n\r\nHttpInterceptor.Factory.$inject = [\r\n    \"$q\",\r\n    AuthRedirect.NAME,\r\n    AuthManager.NAME,\r\n    CommonNavigation.NAME\r\n];","import {HttpInterceptor} from \"./HttpInterceptor\";\r\n\r\nimport {AuthCoreModule} from \"./../authcore/AuthCoreModule\";\r\nimport {CommonModule} from \"./../common/CommonModule\";\r\n\r\nexport var HttpModule: angular.IModule = angular\r\n    .module(\"http\", [\r\n        AuthCoreModule.name,\r\n        CommonModule.name\r\n    ])\r\n    .factory(HttpInterceptor.NAME, HttpInterceptor.Factory);","import {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\n\r\nexport class AboutCompanyController {\r\n    public static NAME = \"info.AboutCompanyController\";\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService) {\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.ABOUT_COMPANY_MENU_KEY);\r\n        PageHeader.set().header(\"About Us\").update();\r\n    }\r\n}","import {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\n\r\nexport class AboutProjectController {\r\n    public static NAME = \"info.AboutProjectController\";\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService) {\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.ABOUT_PROJECT_MENU_KEY);\r\n        PageHeader.set().header(\"About the System\").update();\r\n    }\r\n}\r\n","import {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\n\r\nexport class ContactsController {\r\n    public static NAME = \"info.ContactsController\";\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService) {\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.CONTACTS_MENU_KEY);\r\n        PageHeader.set().header(\"Contacts\").update();\r\n    }\r\n}\r\n","import {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {UrlService} from \"../utils/UrlService\";\r\n\r\nexport class FAQController {\r\n    public static NAME = \"info.FAQController\";\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                private url: UrlService) {\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.FAQ_MENU_KEY);\r\n        PageHeader.set().header(\"FAQ\").update();\r\n    }\r\n}\r\n","import {AboutProjectController} from \"./AboutProjectController\";\r\nimport {AboutCompanyController} from \"./AboutCompanyController\";\r\nimport {FAQController} from \"./FAQController\";\r\nimport {ContactsController} from \"./ContactsController\";\r\n\r\nexport var InfoModule: angular.IModule = angular\r\n    .module(\"info\", [])\r\n    .controller(AboutProjectController.NAME, AboutProjectController)\r\n    .controller(AboutCompanyController.NAME, AboutCompanyController)\r\n    .controller(FAQController.NAME, FAQController)\r\n    .controller(ContactsController.NAME, ContactsController);","export class EventService {\r\n    public static NAME = \"infrastructure.EventService\";\r\n\r\n    private listeners: Map<string, Array<() => void>> = new Map<string, Array<() => void>>();\r\n\r\n    public registerListener(event: string, listener: () => void): void {\r\n        event = event || \"\";\r\n        if (!this.listeners.has(event)) {\r\n            this.listeners.set(event, []);\r\n        }\r\n        this.listeners.get(event).push(listener);\r\n    }\r\n\r\n    public unregisterListener(event: string, listener: () => void): void {\r\n        event = event || \"\";\r\n        if (!this.listeners.has(event)) {\r\n            return;\r\n        }\r\n        for (var i = 0; i < this.listeners.get(event).length; ++i) {\r\n            var l = this.listeners.get(event)[i];\r\n            if (l == listener) {\r\n                this.listeners.get(event).splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n        if (this.listeners.get(event).length == 0) {\r\n            this.listeners.delete(event);\r\n        }\r\n    }\r\n\r\n    public notify(event: string): void {\r\n        event = event || \"\";\r\n        var listeners: Array<any> = this.listeners.get(event);\r\n        angular.forEach(listeners, listener => listener());\r\n    }\r\n}","import {Storages} from \"./Storage\";\r\nimport {EventService} from \"./EventService\";\r\n\r\nexport var InfrastructureModule: angular.IModule = angular\r\n    .module(\"infrastructure\", [])\r\n    .constant(Storages.LOCAL_NAME, Storages.LOCAL)\r\n    .constant(Storages.SESSION_NAME, Storages.SESSION)\r\n    .service(EventService.NAME, EventService);","export class StorageWrapper {\r\n    constructor(private storage: Storage) {\r\n    }\r\n\r\n    public put<T>(key: string, value: T) {\r\n        var stringified = JSON.stringify(value);\r\n        this.storage.setItem(key, stringified);\r\n    }\r\n\r\n    public get<T>(key: string): T {\r\n        var stringified = this.storage.getItem(key);\r\n        return stringified && stringified.length > 0\r\n            ? $.parseJSON(stringified)\r\n            : null;\r\n    }\r\n\r\n    public contains(key: string): boolean {\r\n        var stringified = this.storage.getItem(key);\r\n        return stringified && stringified.length > 0;\r\n    }\r\n\r\n    public remove(key: string) {\r\n        this.storage.removeItem(key);\r\n    }\r\n}\r\n\r\nexport class Storages {\r\n    public static LOCAL_NAME = \"infrastructure.LocalStorage\";\r\n    public static SESSION_NAME = \"infrastructure.SessionStorage\";\r\n\r\n    public static LOCAL: StorageWrapper = new StorageWrapper(localStorage);\r\n    public static SESSION: StorageWrapper = new StorageWrapper(sessionStorage);\r\n}\r\n","export interface ISecurityLog {\r\n    userId?: number;\r\n    logonId?: number;\r\n    sessionUuid?: string;\r\n    ip?: string;\r\n    action?: SecurityLogActionEnum;\r\n    actionDate?: number;\r\n    logonName?: string;\r\n    status?: SecurityLogStatusEnum;\r\n    description?: string;\r\n}\r\n\r\nexport enum SecurityLogStatusEnum {\r\n    SUCCESS,\r\n    FAILED,\r\n    FAILED_INVALID_CREDENTIALS,\r\n    FAILED_UNKNOWN_CREDENTIALS,\r\n    FAILED_ACCESS_DENIED\r\n}\r\nexport var SECURITY_LOG_STATUS_ENUM_VALUES = [\r\n    SecurityLogStatusEnum.SUCCESS,\r\n    SecurityLogStatusEnum.FAILED,\r\n    SecurityLogStatusEnum.FAILED_INVALID_CREDENTIALS,\r\n    SecurityLogStatusEnum.FAILED_UNKNOWN_CREDENTIALS,\r\n    SecurityLogStatusEnum.FAILED_ACCESS_DENIED\r\n];\r\n\r\nexport enum SecurityLogActionEnum {\r\n    AUTHENTICATION,\r\n    LOGOUT,\r\n    AUTHORIZATION\r\n}\r\nexport var SECURITY_LOG_ACTION_ENUM_VALUES = [\r\n    SecurityLogActionEnum.AUTHENTICATION,\r\n    SecurityLogActionEnum.LOGOUT,\r\n    SecurityLogActionEnum.AUTHORIZATION\r\n\r\n];","export interface ISystemLog {\r\n    userId?: number;\r\n    sessionUuid?: string;\r\n    level?: SystemLogLevelEnum;\r\n    eventDate?: number;\r\n    source?: SystemLogSourceEnum;\r\n    description?: string;\r\n}\r\n\r\nexport enum SystemLogSourceEnum {\r\n    SERVER,\r\n    CLIENT,\r\n    USER_REPORT\r\n}\r\nexport var SYSTEM_LOG_SOURCE_ENUM_VALUES = [\r\n    SystemLogSourceEnum.SERVER,\r\n    SystemLogSourceEnum.CLIENT,\r\n    SystemLogSourceEnum.USER_REPORT\r\n];\r\n\r\nexport enum SystemLogLevelEnum {\r\n    ERROR,\r\n    WARN,\r\n    INFO,\r\n    DEBUG\r\n}\r\nexport var SYSTEM_LOG_LEVEL_ENUM_VALUES = [\r\n    SystemLogLevelEnum.ERROR,\r\n    SystemLogLevelEnum.WARN,\r\n    SystemLogLevelEnum.INFO,\r\n    SystemLogLevelEnum.DEBUG\r\n\r\n];","import {SecurityLogController} from \"./SecurityLogController\";\r\nimport {SystemLogController} from \"./SystemLogController\";\r\n\r\nimport {UrlsModule} from \"./../urls/UrlsModule\";\r\n\r\nexport var LogsModule: angular.IModule = angular\r\n    .module(\"logs\", [\r\n        UrlsModule.name\r\n    ])\r\n    .controller(SecurityLogController.NAME, SecurityLogController)\r\n    .controller(SystemLogController.NAME, SystemLogController);","import {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {Moment} from \"./../utils/Moment\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {IGridModel, GridModel, IGridLoadingListener} from \"./../IGridModel\";\r\nimport {ISecurityLog, SecurityLogStatusEnum, SecurityLogActionEnum, SECURITY_LOG_ACTION_ENUM_VALUES, SECURITY_LOG_STATUS_ENUM_VALUES} from \"./ISecurityLog\";\r\nimport {UsersRouter} from \"./../urls/UsersRouter\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\nimport {PageMode} from \"../PageMode\";\r\n\r\nexport class SecurityLogController implements IGridLoadingListener{\r\n\r\n    public static NAME = \"logs.SecurityLogController\";\r\n\r\n    public securityLogsGridModel: GridModel<ISecurityLog>;\r\n    public forDateFilter: string;\r\n    public securityActionTypes: Array<ISelectable> = [];\r\n    public securityLogStatuses: Array<ISelectable> = [];\r\n    public actionsFilter: Array<number> = [];\r\n    public statusesFilter: Array<number> = [];\r\n    private systemPermissions: ISystemPermissions;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        PermissionsService.NAME,\r\n        UrlService.NAME,\r\n        UsersRouter.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private permissionsApi: PermissionsService,\r\n                private url: UrlService,\r\n                public usersRouter: UsersRouter\r\n    ) {\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.ADMINISTRATION_SECURITY_LOGS_KEY);\r\n        PageHeader.set().header(\"Security logs\").update();\r\n\r\n\r\n        this.securityLogsGridModel = new GridModel(HttpGridHelper.createLoader<ISecurityLog>($http, this.url.service(\"/api/logs/security\")));\r\n        this.securityLogsGridModel.addLoadingListener(this);\r\n\r\n        this.permissionsApi.getSystemPermissions().then(p => {\r\n            this.systemPermissions = p;\r\n        });\r\n        this.fillSecurityActionTypes();\r\n        this.fillSecurityLogStatuses();\r\n    }\r\n\r\n    public startLoading() {\r\n        var dateValue = null;\r\n        if (this.forDateFilter) {\r\n            dateValue = Moment.textToJavaDate(this.forDateFilter);\r\n        }\r\n        this.securityLogsGridModel.filter[\"forDate\"] = dateValue;\r\n\r\n        var statuses: Array<string> = [];\r\n        for (var i = 0; i < this.statusesFilter.length; i++) {\r\n            statuses.push(SecurityLogStatusEnum[this.statusesFilter[i]]);\r\n        }\r\n        this.securityLogsGridModel.filter[\"statuses\"] = statuses;\r\n\r\n        var actionTypes: Array<string> = [];\r\n        for (var i = 0; i < this.actionsFilter.length; i++) {\r\n            actionTypes.push(SecurityLogActionEnum[this.actionsFilter[i]]);\r\n        }\r\n        this.securityLogsGridModel.filter[\"actions\"] = actionTypes;\r\n    }\r\n\r\n    public endLoading() {\r\n        //do nothing\r\n    }\r\n\r\n    private fillSecurityActionTypes() {\r\n        for (var i = 0; i < SECURITY_LOG_ACTION_ENUM_VALUES.length; i++) {\r\n            this.securityActionTypes.push({\r\n                id: i,\r\n                name: SecurityLogActionEnum[SECURITY_LOG_ACTION_ENUM_VALUES[i]]\r\n            });\r\n        }\r\n    }\r\n\r\n    private fillSecurityLogStatuses() {\r\n        for (var i = 0; i < SECURITY_LOG_STATUS_ENUM_VALUES.length; i++) {\r\n            this.securityLogStatuses.push({\r\n                id: i,\r\n                name: SecurityLogStatusEnum[SECURITY_LOG_STATUS_ENUM_VALUES[i]]\r\n            });\r\n        }\r\n    }\r\n}","import {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {Moment} from \"./../utils/Moment\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {IGridModel, GridModel, IGridLoadingListener} from \"./../IGridModel\";\r\nimport {ISystemLog, SystemLogLevelEnum, SystemLogSourceEnum, SYSTEM_LOG_LEVEL_ENUM_VALUES, SYSTEM_LOG_SOURCE_ENUM_VALUES} from \"./ISystemLog\";\r\nimport {UsersRouter} from \"./../urls/UsersRouter\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\nimport {PageMode} from \"../PageMode\";\r\n\r\nexport class SystemLogController implements IGridLoadingListener {\r\n\r\n    public static NAME = \"logs.SystemLogController\";\r\n\r\n    public systemLogsGridModel: GridModel<ISystemLog>;\r\n    public forDateFilter: string;\r\n    public systemLogLevels: Array<ISelectable> = [];\r\n    public systemLogSources: Array<ISelectable> = [];\r\n    public levelsFilter: Array<number> = [];\r\n    public sourcesFilter: Array<number> = [];\r\n    private systemPermissions: ISystemPermissions;\r\n\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        PermissionsService.NAME,\r\n        UrlService.NAME,\r\n        UsersRouter.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private permissionsApi: PermissionsService,\r\n                private url: UrlService,\r\n                public usersRouter: UsersRouter) {\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.ADMINISTRATION_SYSTEM_LOGS_KEY);\r\n        PageHeader.set().header(\"System logs\").update();\r\n        this.url = url;\r\n        this.permissionsApi = permissionsApi;\r\n        this.usersRouter = usersRouter;\r\n\r\n        this.systemLogsGridModel = new GridModel(HttpGridHelper.createLoader<ISystemLog>($http, this.url.service(\"/api/logs/system\")));\r\n        this.systemLogsGridModel.addLoadingListener(this);\r\n\r\n        this.permissionsApi.getSystemPermissions().then(p => {\r\n            this.systemPermissions = p;\r\n        });\r\n        this.fillSystemActionTypes();\r\n        this.fillSystemLogStatuses();\r\n    }\r\n\r\n    public startLoading() {\r\n        var dateValue = null;\r\n        if (this.forDateFilter) {\r\n            dateValue = Moment.textToJavaDate(this.forDateFilter);\r\n        }\r\n        this.systemLogsGridModel.filter[\"forDate\"] = dateValue;\r\n\r\n        var sources: Array<string> = [];\r\n        for (var i = 0; i < this.sourcesFilter.length; i++) {\r\n            sources.push(SystemLogSourceEnum[this.sourcesFilter[i]]);\r\n        }\r\n        this.systemLogsGridModel.filter[\"sources\"] = sources;\r\n\r\n        var levels: Array<string> = [];\r\n        for (var i = 0; i < this.levelsFilter.length; i++) {\r\n            levels.push(SystemLogLevelEnum[this.levelsFilter[i]]);\r\n        }\r\n        this.systemLogsGridModel.filter[\"levels\"] = levels;\r\n    }\r\n\r\n    public endLoading() {\r\n        //do nothing\r\n    }\r\n\r\n    private fillSystemActionTypes() {\r\n        for (var i = 0; i < SYSTEM_LOG_LEVEL_ENUM_VALUES.length; i++) {\r\n            this.systemLogLevels.push({\r\n                id: i,\r\n                name: SystemLogLevelEnum[SYSTEM_LOG_LEVEL_ENUM_VALUES[i]]\r\n            });\r\n        }\r\n    }\r\n\r\n    private fillSystemLogStatuses() {\r\n        for (var i = 0; i < SYSTEM_LOG_SOURCE_ENUM_VALUES.length; i++) {\r\n            this.systemLogSources.push({\r\n                id: i,\r\n                name: SystemLogSourceEnum[SYSTEM_LOG_SOURCE_ENUM_VALUES[i]]\r\n            });\r\n        }\r\n    }\r\n}\r\n","import {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\n\r\nexport class MainController {\r\n    public static NAME = \"main.MainController\";\r\n\r\n    public static $inject = [];\r\n\r\n    constructor() {\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.MAIN_MENU_KEY);\r\n        PageHeader.set().header(\"\").update();\r\n    }\r\n}","import {MainService} from \"./MainService\";\r\nimport {MainController} from \"./MainController\";\r\n\r\nimport {UrlsModule} from \"./../urls/UrlsModule\";\r\n\r\nexport var MainModule: angular.IModule = angular\r\n    .module(\"main\", [\r\n        UrlsModule.name\r\n    ])\r\n    .service(MainService.NAME, MainService)\r\n    .controller(MainController.NAME, MainController);","import {UrlService} from \"./../utils/UrlService\";\r\n\r\nexport class MainService {\r\n    public static NAME = \"main.MainService\";\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private url: UrlService) {\r\n    }\r\n}\r\n","import {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {IPermissionWithUsersAndGroups} from \"./../security/permissions/IPermissionWithUsersAndGroups\";\r\nimport {SecuredObjectType} from \"./../security/permissions/SecuredObjectType\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {Moment} from \"./../utils/Moment\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {ActionLogService} from \"./../statistics/ActionLogService\";\r\nimport {ActionType} from \"./../statistics/models/ActionType\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {AuthService} from \"./../auth/AuthService\";\r\nimport {UploadUtils} from \"./../utils/UploadUtils\";\r\nimport {UploadsService} from \"./../storage/UploadsService\";\r\nimport {ContentUtils} from \"./../utils/ContentUtils\";\r\n\r\nimport {IMultimediaSource} from \"./../components/models/IMultimedia\";\r\n\r\nimport {IMaterial} from \"./models/IMaterial\";\r\nimport {MaterialType, MaterialTypeEnum} from \"./models/MaterialType\";\r\nimport {MaterialService} from \"./MaterialService\";\r\nimport {MaterialsRouter} from \"./../urls/MaterialsRouter\";\r\nimport {StringBuilder} from \"./../utils/StringBuilder\";\r\nimport {ObjectTypeUtils} from \"../utils/ObjectTypeUtils\";\r\n\r\nexport interface IFile extends File {\r\n    title?: string;\r\n}\r\n\r\nexport class EditMaterialController {\r\n    public static NAME = \"materials.EditMaterialController\";\r\n\r\n    public isValidityInPerpetuity: boolean;\r\n    public attachFormat: string;\r\n    public file: File;\r\n    public preview: IFile;\r\n    public material: IMaterial;\r\n    public disabledSaveButton: boolean;\r\n    public disabledUploadButton: boolean;\r\n    public permissionsWithUsersAndGroups: Array<IPermissionWithUsersAndGroups> = [];\r\n    public showUploadButton: boolean;\r\n    public typeId: number;\r\n    public uploadContentType: number;\r\n    public multimediaSources: IMultimediaSource[];\r\n    public youtubeMultimediaSources: IMultimediaSource[];\r\n\r\n    public hasFile: boolean;\r\n    public isMaterialFileStatusReady: boolean;\r\n    public isAudioOrVideo: boolean;\r\n    public isPhoto: boolean;\r\n    public isYoutube: boolean;\r\n\r\n    public materialId: number;\r\n    public fileName: string;\r\n    public previewUrl: string;\r\n    public hasPreviewUrlCanceled: boolean = false;\r\n    private owners: Array<ISelectable> = [];\r\n    private ownersMap: Map<number, ISelectable>;\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        UrlService.NAME,\r\n        MaterialService.NAME,\r\n        SecurityService.NAME,\r\n        PermissionsService.NAME,\r\n        \"$routeParams\",\r\n        MaterialsRouter.NAME,\r\n        ActionLogService.NAME,\r\n        UserService.NAME,\r\n        AuthService.NAME,\r\n        UploadUtils.NAME,\r\n        \"$http\"\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                private url: UrlService,\r\n                private materialService: MaterialService,\r\n                private securityService: SecurityService,\r\n                private permissionsService: PermissionsService,\r\n                private $routeParams: angular.route.IRouteParamsService,\r\n                private materialsRouter: MaterialsRouter,\r\n                private actionLogService: ActionLogService,\r\n                private userService: UserService,\r\n                private authService: AuthService,\r\n                private uploadUtils: UploadUtils,\r\n                private $http: angular.IHttpService) {\r\n        this.materialId = $routeParams[MaterialsRouter.MATERIAL_ID_PARAM];\r\n        let materialIdStr: string = String(this.materialId);\r\n        let hasMaterialId: boolean = this.materialId != null;\r\n\r\n        this.securityService.demandAuthentication()\r\n            .demandSystemPermissionsIf(!hasMaterialId, systemPermissions => systemPermissions.addMaterial)\r\n            .demandMaterialPermissionsIf(hasMaterialId, materialIdStr, materialPermissions => materialPermissions.edit);\r\n\r\n        this.isValidityInPerpetuity = true;\r\n        this.attachFormat = \"\";\r\n        this.material = {};\r\n        this.disabledSaveButton = true;\r\n        this.disabledUploadButton = false;\r\n\r\n        this.userService.getUsersWithoutExcludedUsersForSelector().then(result =>{\r\n            this.owners = angular.copy(result);\r\n            this.ownersMap = new Map<number, ISelectable>();\r\n            this.owners.forEach((owner: ISelectable) => {\r\n                this.ownersMap.set(owner.id, owner);\r\n            });\r\n        });\r\n\r\n        if(hasMaterialId) {\r\n            this.showUploadButton = false;\r\n            PageHeader.set().header(\"Edit a Material\").update();\r\n            this.loadMaterial();\r\n            this.enableButtonForLinkUpload();\r\n            this.disabledSaveButton = false;\r\n            this.loadPermissionsWithUsersAndGroups(SecuredObjectType.MATERIAL, materialIdStr);\r\n        } else {\r\n            this.showUploadButton = true;\r\n            MenuHelper.setCurrentMenuItem(MenuHelper.OPERATIONS_UPLOADS_MENU_KEY);\r\n            PageHeader.set().header(\"Uploads\").update();\r\n            this.typeId = 1;\r\n            this.uploadContentType = 1;\r\n            this.authService.getCurrentUser().then(user => {\r\n                this.material.ownerId = user.id;\r\n                this.material.ownerName = user.fullName;\r\n            });\r\n            this.loadPermissionsWithUsersAndGroups(SecuredObjectType.MATERIAL);\r\n        }\r\n    }\r\n\r\n    private loadMaterial(): angular.IPromise<IMaterial> {\r\n        var promise: angular.IPromise<IMaterial> = this.materialService.get(this.materialId);\r\n        promise.then(result => {\r\n            angular.copy(result, this.material);\r\n            this.material.validityText =  Moment.isValidDate(result.validity);\r\n            if(this.material.validityText) {\r\n                this.isValidityInPerpetuity = false;\r\n            }\r\n            this.previewUrl = this.material.previewUrl ? this.material.previewUrl : null;\r\n            this.fileName = result.fileName;\r\n            this.typeId = result.typeId;\r\n            if(result.link == null) {\r\n                this.uploadContentType = 1;\r\n            } else {\r\n                this.uploadContentType = 2;\r\n            }\r\n            if (this.material.typeId != 3) {\r\n                this.showUploadButton = !this.material.fileId;\r\n            }\r\n            this.multimediaSources = [{\r\n                src: this.material.downloadUrl || '',\r\n                type: this.material.contentType\r\n            }];\r\n        });\r\n        return promise;\r\n    }\r\n\r\n    private loadPermissionsWithUsersAndGroups(securedObjectType: SecuredObjectType, objectId?: string): void {\r\n        this.permissionsService.getAllObjectPermissionsWithUsersAndGroups(securedObjectType, objectId).then(result => {\r\n            this.permissionsWithUsersAndGroups = result;\r\n        });\r\n    }\r\n\r\n    public saveOrUpdateMaterial(material: IMaterial, permissionsWithUsersAndGroups: Array<IPermissionWithUsersAndGroups>): void {\r\n        this.disabledSaveButton = true;\r\n        this.disabledUploadButton = true;\r\n        let file: File = this.file;\r\n        let preview: File = this.preview;\r\n        this.material.validity = Moment.textToJavaDate(material.validityText);\r\n        this.material.typeId = this.typeId;\r\n\r\n        if(this.material.typeId == MaterialType.LINK || file == null) {\r\n            var promise = this.materialId\r\n                ? this.materialService.update(material, permissionsWithUsersAndGroups, this.hasPreviewUrlCanceled, file, preview)\r\n                : this.materialService.create(material, permissionsWithUsersAndGroups, file, preview);\r\n            promise.then(result => {\r\n                this.material = angular.copy(result[UploadsService.MATERIAL_KEY]);\r\n                if (preview) {\r\n                    if (this.materialId) {\r\n                        this.uploadUtils.cancelMaterialPreviews(material.id);\r\n                    }\r\n                    let previewUploadUrl: string = result[UploadsService.PREVIEW_UPLOAD_URL_KEY];\r\n                    let previewUploadMethod: string = result[UploadsService.PREVIEW_UPLOAD_METHOD_KEY];\r\n                    this.uploadUtils.uploadMaterialByChunks(preview, this.material.previewId, this.material.id, previewUploadUrl, previewUploadMethod);\r\n                }\r\n                this.processSuccessCallback(this.material.id);\r\n            }).catch(response => {\r\n                this.enableButton();\r\n                if (response.data.error == \"error.storage.not.available\") {\r\n                    notifier.error(\"No available storage\");\r\n                }\r\n            });\r\n        } else {\r\n            var fileExt = ContentUtils.getFileExt(file.name);\r\n            if (ContentUtils.checkFileExt(material.typeId, fileExt)) {\r\n                var promise = this.materialId\r\n                    ? this.materialService.update(material, permissionsWithUsersAndGroups, this.hasPreviewUrlCanceled, file, preview)\r\n                    : this.materialService.create(material, permissionsWithUsersAndGroups, file, preview);\r\n                promise.then(result => {\r\n                    this.material = angular.copy(result[UploadsService.MATERIAL_KEY]);\r\n                    if (preview != null) {\r\n                        if (this.materialId) {\r\n                            this.uploadUtils.cancelMaterialPreviews(material.id);\r\n                        }\r\n                        let previewUploadUrl: string = result[UploadsService.PREVIEW_UPLOAD_URL_KEY];\r\n                        let previewUploadMethod: string = result[UploadsService.PREVIEW_UPLOAD_METHOD_KEY];\r\n                        this.uploadUtils.uploadMaterialByChunks(preview, this.material.previewId, this.material.id, previewUploadUrl, previewUploadMethod);\r\n                    }\r\n\r\n                    if (this.materialId) {\r\n                        this.uploadUtils.cancelMaterialFiles(material.id);\r\n                    }\r\n                    let fileUploadUrl: string = result[UploadsService.FILE_UPLOAD_URL_KEY];\r\n                    let fileUploadMethod: string = result[UploadsService.FILE_UPLOAD_METHOD_KEY];\r\n                    this.uploadUtils.uploadMaterialByChunks(file, this.material.fileId, this.material.id, fileUploadUrl, fileUploadMethod);\r\n                    this.processSuccessCallback(this.material.id);\r\n                }).catch(response => {\r\n                    this.enableButton();\r\n                    if (response.data.error == \"error.storage.not.available\") {\r\n                        notifier.error(\"No available storage\");\r\n                    }\r\n                });\r\n            } else { // TODO: a specific error code should be caught here instead of all possible exceptions\r\n                notifier.error(\"Failed to upload this file: please check whether the file format is valid\");\r\n                this.enableButton();\r\n            }\r\n        }\r\n    }\r\n\r\n    private processSuccessCallback(materialId: number): void {\r\n        this.actionLogService.create(materialId, ReferencedObjectType.MATERIAL, ActionType.MATERIAL_CREATION);\r\n        notifier.success(\"The material has been saved\");\r\n        this.redirectOrClearFields();\r\n    }\r\n\r\n    private redirectOrClearFields(): void {\r\n        if(this.materialId) {\r\n            if (this.material && this.material.permissions && this.material.permissions.view) {\r\n                this.$location.url(this.materialsRouter.watchUrl(this.materialId));\r\n            } else {\r\n                this.$location.url(this.materialsRouter.searchUrl());\r\n            }\r\n        } else {\r\n            this.cleanFields();\r\n        }\r\n    }\r\n\r\n    public enableButton(): void {\r\n        this.disabledSaveButton = false;\r\n        this.disabledUploadButton = false;\r\n    }\r\n\r\n    public enableButtonForLinkUpload(): void {\r\n        this.disabledSaveButton = false;\r\n    }\r\n\r\n    private cleanFields() : void {\r\n        this.isValidityInPerpetuity = true;\r\n        this.material = {};\r\n        this.uploadContentType = 1;\r\n        this.authService.getCurrentUser().then(user => {\r\n            this.material.ownerId = user.id;\r\n            this.material.ownerName = user.fullName;\r\n        });\r\n        this.file = undefined;\r\n        this.preview = undefined;\r\n        this.disabledUploadButton = false;\r\n        this.permissionsWithUsersAndGroups = [];\r\n        this.loadPermissionsWithUsersAndGroups(SecuredObjectType.MATERIAL);\r\n    }\r\n\r\n    public cleanValidity(): void {\r\n        this.material.validityText = \"\";\r\n    }\r\n\r\n    public resetPreview(): void {\r\n        if (this.preview) {\r\n            this.preview = undefined;\r\n        } else if (this.previewUrl) {\r\n            this.previewUrl = undefined;\r\n            this.hasPreviewUrlCanceled = true;\r\n        }\r\n    }\r\n\r\n    public restorePreviewUrl(): void {\r\n        this.preview = undefined;\r\n        this.previewUrl = this.material.previewUrl;\r\n        this.hasPreviewUrlCanceled = false;\r\n    }\r\n\r\n    public reupload(): void {\r\n        if(this.showUploadButton) {\r\n            this.fileName = this.material.fileName;\r\n        } else {\r\n            this.fileName = \"\";\r\n        }\r\n        this.showUploadButton = !this.showUploadButton;\r\n        this.file = undefined;\r\n    }\r\n\r\n    public setMaterialType(): void {\r\n        if (this.file) {\r\n            let fileExt = ContentUtils.getFileExt(this.file.name);\r\n            this.typeId = this.material.typeId = ContentUtils.findMaterialTypeByFileExtension(fileExt);\r\n            // console.log('setMaterialType', fileExt, MaterialTypeEnum[this.material.typeId]);\r\n        }\r\n    }\r\n\r\n    public setFileOrLinkType(): void {\r\n        if(this.uploadContentType == 1) {\r\n            this.typeId = MaterialType.AUDIO; //default value\r\n            this.showUploadButton = true;\r\n        } else {\r\n            this.typeId = MaterialType.LINK;\r\n        }\r\n    }\r\n\r\n    public showPreview(): void {\r\n        $(\".modal-body\").css(\"overflow-y\",\"auto\");\r\n        $(\"#previewDialog\").modal({\r\n            keyboard: false,\r\n            show: true\r\n        });\r\n        $(\"#previewDialog\").on('hide.bs.modal', function() {\r\n            $('video').trigger('pause');\r\n            $('audio').trigger('pause');\r\n        });\r\n\r\n        this.hasFile = !!this.file;\r\n        this.isMaterialFileStatusReady = this.materialId && this.material.fileStatus == 'READY';\r\n        this.isAudioOrVideo = this.material.typeKey === 'VIDEO' || this.material.typeKey === 'AUDIO';\r\n        this.isPhoto = this.material.typeKey === 'PHOTO';\r\n        this.isYoutube = this.typeId === MaterialType.LINK && ObjectTypeUtils.isYoutubeUrl(this.material.link);\r\n        this.youtubeMultimediaSources = [{\r\n            src: this.material.link,\r\n            type: \"video/youtube\"\r\n        }];\r\n    }\r\n\r\n    public stopVideoAndAudioOnHidePreview(): void {\r\n        this.hasFile = false;\r\n        this.isMaterialFileStatusReady = false;\r\n        this.isAudioOrVideo = false;\r\n        this.isPhoto = false;\r\n        this.isYoutube = false;\r\n\r\n        $(\"#previewDialog\").on('hidden.bs.modal', function() {\r\n            $('video').trigger('pause');\r\n            $('audio').trigger('pause');\r\n        });\r\n    }\r\n\r\n    public materialSubjectChangeCallback = (name: string) => {\r\n        this.material.subjectName = name;\r\n    };\r\n\r\n    public materialLanguageChangeCallback = (name: string) => {\r\n        this.material.languageName = name;\r\n    };\r\n\r\n    public materialOwnerChangeCallback = () => {\r\n        this.material.ownerName = this.ownersMap.get(this.material.ownerId).name;\r\n    };\r\n\r\n    public multimediaErrorCallback(code: number, message: string): angular.IPromise<IMaterial> {\r\n        return this.loadMaterial();\r\n    }\r\n\r\n    public getMaterialValidity(): number {\r\n        this.material.validityText ? this.material.validity = Moment.textToJavaDate(this.material.validityText)\r\n        : this.material.validity = null;\r\n        return this.material.validity;\r\n    }\r\n}\r\n","import {MaterialsRouter} from \"./../urls/MaterialsRouter\";\r\nimport {MaterialService} from \"./MaterialService\";\r\nimport {IMaterial} from \"./models/IMaterial\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\n\r\nimport {AuthManager} from \"./../authcore/AuthManager\";\r\nimport {AuthRedirect} from \"./../authcore/AuthRedirect\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {ObjectTypeUtils} from \"./../utils/ObjectTypeUtils\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {IMultimediaSource} from \"./../components/models/IMultimedia\";\r\nimport {PersonalService} from \"./../personal/PersonalService\";\r\nimport {SocialService} from \"./../social/SocialService\";\r\nimport {Moment} from \"./../utils/Moment\";\r\nimport {IGridModel, GridModel, IGridLoadingListener} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {IComment} from \"./../social/models/IComment\";\r\nimport {ICommentInHierarchy} from \"./../social/models/ICommentInHierarchy\";\r\nimport {ITreeElementInfo} from \"./../tree/models/TreeElementInfo\";\r\nimport {TreeElementsInfoFiller} from \"./../tree/TreeElementsInfoFiller\";\r\nimport {IPage} from \"./../IPage\";\r\nimport {ActionLogService} from \"./../statistics/ActionLogService\";\r\nimport {ActionType} from \"./../statistics/models/ActionType\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\nimport {FinancesRouter} from \"./../urls/FinancesRouter\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {CourseService} from \"./../courses/CourseService\";\r\nimport {ICourse} from \"./../courses/models/ICourse\";\r\nimport {PlaylistService} from \"./PlaylistService\";\r\nimport {IPlaylist} from \"./models/IPlaylist\";\r\nimport {StringBuilder} from \"../utils/StringBuilder\";\r\nimport {UploadUtils} from \"../utils/UploadUtils\";\r\nimport {MaterialTypeKeyEnum} from \"./models/MaterialType\";\r\n\r\ninterface ICommentInHierarchyExtended extends ITreeElementInfo<ICommentInHierarchyExtended>, ICommentInHierarchy {\r\n    reply?: boolean;\r\n}\r\n\r\nexport class MaterialController implements IGridLoadingListener {\r\n    public static NAME = \"materials.MaterialController\";\r\n\r\n    public materialId: number;\r\n    public material: IMaterial = {};\r\n    public multimediaSources: IMultimediaSource[];\r\n    public isAuthenticated: boolean;\r\n    public relatedMaterials: IMaterial[];\r\n    public commentsGridModel: IGridModel<ICommentInHierarchyExtended>;\r\n    public newComment: IComment;\r\n    public newReplyComment: IComment;\r\n    public anchorComplete: boolean;\r\n    public commentsCount: number;\r\n    public systemPermissions: ISystemPermissions;\r\n    public disabledRemoveButton: boolean = false;\r\n\r\n    public isMaterialEmpty: boolean;\r\n    public isMaterialNotReady: boolean;\r\n    public isViewAllowed: boolean;\r\n    public materialType: string;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$location\",\r\n        \"$anchorScroll\",\r\n        \"$timeout\",\r\n        UrlService.NAME,\r\n        \"$routeParams\",\r\n        \"$q\",\r\n        MaterialsRouter.NAME,\r\n        FinancesRouter.NAME,\r\n        MaterialService.NAME,\r\n        PersonalService.NAME,\r\n        SocialService.NAME,\r\n        AuthRedirect.NAME,\r\n        AuthManager.NAME,\r\n        \"$window\",\r\n        ActionLogService.NAME,\r\n        PermissionsService.NAME,\r\n        CourseService.NAME,\r\n        PlaylistService.NAME,\r\n        UploadUtils.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private $location: angular.ILocationService,\r\n                private $anchorScroll: angular.IAnchorScrollService,\r\n                private $timeout: angular.ITimeoutService,\r\n                private url: UrlService,\r\n                private $routeParams: angular.route.IRouteParamsService,\r\n                private $q: angular.IQService,\r\n                public materialsRouter: MaterialsRouter,\r\n                public financeRouter: FinancesRouter,\r\n                public materialService: MaterialService,\r\n                public personalService: PersonalService,\r\n                public socialService: SocialService,\r\n                public authRedirect: AuthRedirect,\r\n                private authManager: AuthManager,\r\n                private $window: angular.IWindowService,\r\n                private actionLogService: ActionLogService,\r\n                private permissionsApi: PermissionsService,\r\n                private courseService: CourseService,\r\n                private playlistService: PlaylistService,\r\n                private uploadUtils: UploadUtils) {\r\n        this.materialId = $routeParams[MaterialsRouter.MATERIAL_ID_PARAM];\r\n        this.isAuthenticated = this.authManager.isAuthenticated();\r\n        this.anchorComplete = false;\r\n\r\n        if (this.isAuthenticated) {\r\n            this.permissionsApi.getSystemPermissions().then(systemPermissions => {\r\n                this.systemPermissions = systemPermissions;\r\n            });\r\n        }\r\n\r\n        if (!MenuHelper.getCurrentMenuItemKey()) {\r\n            MenuHelper.setCurrentMenuItem(MenuHelper.SEARCH_MENU_KEY);\r\n        }\r\n        this.loadMaterial(this.materialId);\r\n        this.materialService.getRelatedMaterials(this.materialId).then(resultRelated => {\r\n            this.relatedMaterials = resultRelated;\r\n        });\r\n\r\n        this.commentsGridModel = new GridModel(HttpGridHelper.createLoader<ICommentInHierarchyExtended>($http,\r\n            this.url.base(\"/api/social/comments?objectId=:objectId&objectType=:objectType\")\r\n                .param(\":objectId\", this.materialId)\r\n                .param(\":objectType\", ReferencedObjectType[ReferencedObjectType.MATERIAL])\r\n                .service()));\r\n        this.commentsGridModel.addLoadingListener(this);\r\n        this.loadCommentsCount();\r\n    }\r\n\r\n    public startLoading() {\r\n        //do nothing\r\n    }\r\n\r\n    public endLoading() {\r\n        TreeElementsInfoFiller.fillHierarchyInfoWithMaxLevel(this.commentsGridModel.entries, Number.MAX_VALUE);\r\n        this.$timeout(()=> {\r\n            this.scrollAnchor();\r\n        }, 0);\r\n\r\n    }\r\n\r\n    public scrollAnchor() {\r\n        if (!this.anchorComplete) {\r\n            this.$anchorScroll(this.$location.hash());\r\n            this.anchorComplete = true;\r\n        }\r\n    }\r\n\r\n    public getFileTypeName(format: string): string {\r\n        switch (format) {\r\n            case 'video':\r\n                return \"video\";\r\n            case 'audio':\r\n                return \"audio\";\r\n            case 'presentation':\r\n                return \"presentation\";\r\n            case 'text':\r\n                return \"text file\";\r\n            default:\r\n                return \"video\";\r\n        }\r\n    }\r\n\r\n    public isYoutubeLink(material: IMaterial): boolean {\r\n        return material.typeId == 3 && ObjectTypeUtils.isYoutubeUrl(material.link);\r\n    }\r\n\r\n    public loadMaterial(materialId: number): angular.IPromise<IMaterial> {\r\n        this.newComment = {text: \"\"};\r\n        this.newReplyComment = {text: \"\"};\r\n\r\n        let promise: angular.IPromise<IMaterial> = this.materialService.get(materialId);\r\n        promise.then(result => {\r\n            this.material = angular.copy(result);\r\n\r\n            if (this.isYoutubeLink(this.material)) {\r\n                this.materialType = 'YOUTUBE';\r\n            } else {\r\n                this.materialType = this.material.typeKey;\r\n            }\r\n\r\n            this.isMaterialEmpty = this.material.id && this.material.typeKey !== MaterialTypeKeyEnum[MaterialTypeKeyEnum.LINK] &&\r\n                (!this.material.fileStatus || this.material.fileStatus === 'EMPTY');\r\n            this.isMaterialNotReady = !this.isMaterialEmpty && this.material.id &&\r\n                this.material.typeKey !== MaterialTypeKeyEnum[MaterialTypeKeyEnum.LINK] && this.material.fileStatus\r\n                && this.material.fileStatus !== 'EMPTY' && this.material.fileStatus !== 'READY';\r\n            this.isViewAllowed = this.material.permissions.view && !this.isMaterialEmpty && !this.isMaterialNotReady;\r\n\r\n            this.multimediaSources = [{\r\n                src: this.isYoutubeLink(this.material) ? this.material.link : (this.material.downloadUrl || ''),\r\n                type: this.isYoutubeLink(this.material) ? \"video/youtube\" : this.material.contentType\r\n            }];\r\n            if (this.material.permissions.view) {\r\n                this.actionLogService.create(this.material.id, ReferencedObjectType.MATERIAL, ActionType.MATERIAL_VIEW);\r\n            }\r\n        }).catch(response => {\r\n            if (response.data.error == \"material.is.not.available\") {\r\n                notifier.error(\"Access to the material is restricted\");\r\n                let savedUrl: string = this.$location.url();\r\n                this.$timeout(() => {\r\n                    if (savedUrl === this.$location.url()) {\r\n                        this.goBack();\r\n                    }\r\n                }, 5000); // TODO: peer review\r\n            }\r\n            else {\r\n                this.material = {\r\n                    typeName: '',\r\n                    title: 'Failed to retrieve the material details'\r\n                };\r\n            }\r\n        }).finally(() => {\r\n            PageHeader.set().header((this.material.typeName || '') +\r\n                ' ‘' + (this.material.title || '') + '’'\r\n            ).update();\r\n        });\r\n        return promise;\r\n    }\r\n\r\n    private loadCommentsCount() {\r\n        this.socialService.getCommentsCount(this.materialId, ReferencedObjectType.MATERIAL).then(result => {\r\n            this.commentsCount = result;\r\n        });\r\n    }\r\n\r\n    public addToFavorites() {\r\n        this.personalService.addToFavorites(this.materialId, ReferencedObjectType.MATERIAL).then(result => {\r\n            notifier.success(\"The material has been added to your favorites\");\r\n            this.material.favorite = true;\r\n        }).catch(response => {\r\n            if (response.data.error == \"object.already.in.favorite\") {\r\n                notifier.error(\"This material is already in your favorites\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public removeFromFavorites() {\r\n        this.personalService.removeFromFavorites(this.materialId, ReferencedObjectType.MATERIAL).then(result => {\r\n            notifier.success(\"The material has been removed from your favorites\");\r\n            this.material.favorite = false;\r\n        }).catch(response => {\r\n            if (response.data.error == \"object.not.in.favorite\") {\r\n                notifier.error(\"Failed to remove from favorites\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public changeMaterialRating(isLike: boolean) {\r\n        if (!this.isAuthenticated) {\r\n            this.authRedirect.redirectToLogOn();\r\n        } else {\r\n            this.socialService.changeObjectRating(this.materialId, ReferencedObjectType.MATERIAL, isLike).then(result => {\r\n                this.material.likesCount = result.likesCount;\r\n                this.material.dislikesCount = result.dislikesCount;\r\n                if (isLike) {\r\n                    this.material.liked = !this.material.liked;\r\n                    this.material.disliked = false;\r\n                }\r\n                if (!isLike) {\r\n                    this.material.disliked = !this.material.disliked;\r\n                    this.material.liked = false;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public multimediaErrorCallback(code: number, message: string): angular.IPromise<IMaterial> {\r\n        return this.loadMaterial(this.materialId);\r\n    }\r\n\r\n    public addComment(reply: boolean, parentId: number) {\r\n        if (reply) {\r\n            this.newReplyComment.parentId = parentId;\r\n        }\r\n        this.socialService.addComment(this.materialId, ReferencedObjectType.MATERIAL, reply ? this.newReplyComment : this.newComment).then(result => {\r\n            notifier.success(\"Comment has been added\");\r\n            this.commentsGridModel.loadCurrentPage();\r\n            this.newComment.text = \"\";\r\n            this.newReplyComment.text = \"\";\r\n            this.newReplyComment.parentId = null;\r\n            this.loadCommentsCount();\r\n        });\r\n    }\r\n\r\n    public cleanComment() {\r\n        this.newComment.text = \"\";\r\n        this.newReplyComment.text = \"\";\r\n        this.newReplyComment.parentId = null;\r\n    }\r\n\r\n    public replyComment(commentId: number) {\r\n        this.commentsGridModel.entries.forEach((c: ICommentInHierarchyExtended) => {\r\n            c.reply = c.id == commentId;\r\n        });\r\n    }\r\n\r\n    public editMaterial(material: IMaterial) {\r\n        this.$location.url(this.materialsRouter.updateUrl(material.id));\r\n    }\r\n\r\n    public deleteMaterial(material: IMaterial) {\r\n        this.disabledRemoveButton = true;\r\n        this.courseService.findCoursesByMaterial(material.id).then(courses => {\r\n            if (courses.length == 0) {\r\n                this.materialService.isMaterialPurchased(material.id).then(purchased => {\r\n                    if (!purchased) {\r\n                        this.playlistService.findPlaylistsByMaterial(material.id).then(playlists => {\r\n                            let formattedFunc: (playlist: ISelectable, index: number) => string = (playlist: IPlaylist, index: number) => {\r\n                                return (index + 1) + \". \" + playlist.name;\r\n                            };\r\n                            let message: string = playlists.length == 0\r\n                                ? \"This material will be completely removed from the system. Continue?\" + \"\\n\"\r\n                                : StringBuilder.interpolate(\"The material is included into the following playlists: :lists Confirm removing the material?\")\r\n                                .with(\":lists\", \"\\n\\n\" + this.getItemsFormattedString<IPlaylist>(playlists, formattedFunc, \"\\n\") + \"\\n\")\r\n                                .build() + \"\\n\";\r\n                            if (confirm(message)) {\r\n                                this.materialService.delete(material.id).then(() => {\r\n                                    notifier.success(\"The material has been removed\");\r\n                                    this.disabledRemoveButton = false;\r\n                                    this.$location.url(this.materialsRouter.searchUrl());\r\n                                });\r\n                                this.uploadUtils.cancelMaterialPreviews(material.id);\r\n                                this.uploadUtils.cancelMaterialFiles(material.id);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        alert(\"This material has been purchased. Impossible to remove\");\r\n                    }\r\n                });\r\n            } else {\r\n                let formattedFunc: (course: ICourse, index: number) => string = (course: ICourse, index: number) => {\r\n                    return (index + 1) + \". \" + course.subjectName + \". \" + course.topic;\r\n                };\r\n                let message: string = StringBuilder.interpolate(\"The material can not be removed. It is used in courses::courses\")\r\n                    .with(\":courses\", \"\\n\\n\" + this.getItemsFormattedString<ICourse>(courses, formattedFunc, \"\\n\"))\r\n                    .build();\r\n                alert(message);\r\n            }\r\n        });\r\n    }\r\n\r\n    private getItemsFormattedString<T>(items: Array<T>, formattedFunc: (item: T, index: number) => string, separator: string): string {\r\n        let result = \"\";\r\n        items.forEach((item: T, index: number) => {\r\n            result += formattedFunc(item, index) + separator;\r\n        });\r\n        return result;\r\n    }\r\n\r\n    public createMaterialDownloadActionLog(materialId: number): void {\r\n        this.actionLogService.create(materialId, ReferencedObjectType.MATERIAL, ActionType.MATERIAL_DOWNLOAD);\r\n    }\r\n\r\n    public goBack(): void {\r\n        if (this.$window.history.length > 1) {\r\n            this.$window.history.back();\r\n        } else {\r\n            this.authRedirect.forwardToAccessDenied();\r\n        }\r\n    }\r\n\r\n    public changeAuthorSubscription() {\r\n        this.personalService.changeAuthorSubscription(this.material.ownerId).then(result => {\r\n            result\r\n                ? notifier.success(\"You successfully subscribed to publications of\" + \" \" + this.material.ownerName)\r\n                : notifier.success(\"You successfully unsubscribed from publications of\" + \" \" + this.material.ownerName);\r\n\r\n            this.material.subscribe = result;\r\n        })\r\n    }\r\n}","import {IPermissionWithUsersAndGroups} from \"./../security/permissions/IPermissionWithUsersAndGroups\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {IMaterial} from \"./models/IMaterial\";\r\n\r\ninterface IExtMaterial extends IMaterial {\r\n    file?: any;\r\n    preview?: any;\r\n    permissionsWithUsersAndGroups?: Array<IPermissionWithUsersAndGroups>;\r\n    isResetPreview?: boolean;\r\n}\r\n\r\nexport class MaterialService {\r\n    public static NAME = \"materials.MaterialService\";\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$sce\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private $sce: angular.ISCEService,\r\n                private url: UrlService) {\r\n    }\r\n\r\n    public get(id: number): angular.IPromise<IMaterial> {\r\n        return this.$http.get(this.url.base(\"/api/materials/:id\")\r\n            .param(\":id\", id)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getPublicInfo(materialId: number): angular.IPromise<IMaterial> {\r\n        return this.$http.get(this.url.base(\"/api/materials/:id/publicInfo\")\r\n            .param(\":id\", materialId)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public create(material: IExtMaterial, permissionsWithUsersAndGroups: Array<IPermissionWithUsersAndGroups>, file?: File, preview?: File):\r\n            ng.IPromise<IMaterial> {\r\n        material.file = file != null\r\n            ? {name: file.name, type: file.type, size: file.size}\r\n            : null;\r\n        material.preview = preview != null\r\n            ? {name: preview.name, type: preview.type, size: preview.size}\r\n            : null;\r\n        material.permissionsWithUsersAndGroups = permissionsWithUsersAndGroups;\r\n        return this.$http.post(this.url.service(\"/api/materials\"), material)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public update(material: IExtMaterial, permissionsWithUsersAndGroups: Array<IPermissionWithUsersAndGroups>, isResetPreview: boolean,\r\n                  file?: File, preview?: File): ng.IPromise<IMaterial> {\r\n        material.file = file != null\r\n            ? {name: file.name, type: file.type, size: file.size}\r\n            : null;\r\n        material.preview = preview != null\r\n            ? {name: preview.name, type: preview.type, size: preview.size}\r\n            : null;\r\n        material.permissionsWithUsersAndGroups = permissionsWithUsersAndGroups;\r\n        material.isResetPreview = isResetPreview;\r\n        return this.$http.put(this.url.service(\"/api/materials\"), material)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public delete(materialId: number): ng.IPromise<any> {\r\n        return this.$http.delete(this.url.base(\"/api/materials/:id\").param(\":id\", materialId).service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getRelatedMaterials(id: number): angular.IPromise<IMaterial[]> {\r\n        return this.$http.get(this.url.base(\"/api/materials/:id/related\").param(\":id\", id).service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public isMaterialPurchased(materialId: number): angular.IPromise<boolean> {\r\n        return this.$http.get(this.url.base(\"/api/materials/:id/is/purchased\").param(\":id\", materialId).service())\r\n            .then(result => result.data);\r\n    }\r\n}\r\n","import {MaterialService} from \"./MaterialService\";\r\nimport {SearchController} from \"./SearchController\";\r\nimport {MaterialController} from \"./MaterialController\";\r\nimport {MyDownloadsController} from \"./MyDownloadsController\";\r\nimport {EditMaterialController} from \"./EditMaterialController\";\r\nimport {PlaylistsController} from \"./PlaylistsController\";\r\nimport {PlaylistDetailsController} from \"./PlaylistDetailsController\";\r\nimport {PlaylistEditController} from \"./PlaylistEditController\";\r\nimport {PlaylistService} from \"./PlaylistService\";\r\n\r\nimport {AuthCoreModule} from \"./../authcore/AuthCoreModule\";\r\nimport {SecurityModule} from \"./../security/SecurityModule\";\r\nimport {UrlsModule} from \"./../urls/UrlsModule\";\r\nimport {PersonalModule} from \"./../personal/PersonalModule\";\r\nimport {SocialModule} from \"./../social/SocialModule\";\r\nimport {StorageModule} from \"./../storage/StorageModule\";\r\nimport {UsersModule} from \"./../users/UsersModule\";\r\nimport {CoursesModule} from \"./../courses/CoursesModule\";\r\n\r\nexport var MaterialsModule: angular.IModule = angular\r\n        .module(\"materials\", [\r\n            AuthCoreModule.name,\r\n            SecurityModule.name,\r\n            UrlsModule.name,\r\n            PersonalModule.name,\r\n            SocialModule.name,\r\n            StorageModule.name,\r\n            UsersModule.name,\r\n            CoursesModule.name\r\n        ])\r\n        .service(MaterialService.NAME, MaterialService)\r\n        .service(PlaylistService.NAME, PlaylistService)\r\n        .controller(SearchController.NAME, SearchController)\r\n        .controller(MaterialController.NAME, MaterialController)\r\n        .controller(MyDownloadsController.NAME, MyDownloadsController)\r\n        .controller(EditMaterialController.NAME, EditMaterialController)\r\n        .controller(PlaylistsController.NAME, PlaylistsController)\r\n        .controller(PlaylistDetailsController.NAME, PlaylistDetailsController)\r\n        .controller(PlaylistEditController.NAME, PlaylistEditController);\r\n","import {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MaterialsRouter} from \"./../urls/MaterialsRouter\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\n\r\nexport class MyDownloadsController {\r\n    public static NAME = \"materials.MyDownloadsController\";\r\n\r\n    public rowShow: Map<number, boolean> = new Map<number, boolean>();\r\n    public viewType: number;\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        MaterialsRouter.NAME,\r\n        SecurityService.NAME\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                public materialsRouter: MaterialsRouter,\r\n                private securityService: SecurityService) {\r\n        this.securityService.demandAuthentication()\r\n            .demandSystemPermissions(systemPermissions => systemPermissions.addMaterial);\r\n\r\n        this.rowShow.set(1, false);\r\n        this.rowShow.set(2, false);\r\n        this.rowShow.set(3, false);\r\n        this.rowShow.set(4, false);\r\n\r\n        this.viewType = 0;\r\n\r\n        // TODO: this menu item was deleted, needs updating // MenuHelper.setCurrentMenuItem(MenuHelper.PURCHASES_DOWNLOADED_FILES_MENU_KEY);\r\n        // TODO: // PageHeader.set().header(...).update();\r\n    }\r\n\r\n    public showDetails(index: number) {\r\n        this.rowShow.set(index, !this.rowShow.get(index));\r\n    }\r\n\r\n    public watch(materialId: number) {\r\n        this.$location.url(this.materialsRouter.watchUrl(materialId));\r\n    }\r\n}\r\n","import {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {MaterialsRouter} from \"./../urls/MaterialsRouter\";\r\nimport {IGridModel, GridModel} from \"./../IGridModel\";\r\nimport {IMaterial} from \"./models/IMaterial\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {PlaylistService} from \"./PlaylistService\";\r\nimport {IPlaylist} from \"./models/IPlaylist\";\r\nimport {ObjectTypeUtils} from \"./../utils/ObjectTypeUtils\";\r\nimport {ActionLogService} from \"./../statistics/ActionLogService\";\r\nimport {ActionType} from \"./../statistics/models/ActionType\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\nimport {notifier} from \"./../INotifier\";\r\n\r\nexport class PlaylistDetailsController {\r\n    public static NAME = \"materials.PlaylistDetailsController\";\r\n\r\n    public rowShow: Map<number, boolean> = new Map<number, boolean>();\r\n    public viewType: number;\r\n    public playlistId: number;\r\n    public materialsGridModel: IGridModel<IMaterial>;\r\n\r\n    private playlist: IPlaylist = {};\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        \"$routeParams\",\r\n        \"$http\",\r\n        MaterialsRouter.NAME,\r\n        SecurityService.NAME,\r\n        UrlService.NAME,\r\n        PlaylistService.NAME,\r\n        ActionLogService.NAME\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                private $routeParams: angular.route.IRouteParamsService,\r\n                $http: angular.IHttpService,\r\n                public materialsRouter: MaterialsRouter,\r\n                private securityService: SecurityService,\r\n                private url: UrlService,\r\n                private playlistService: PlaylistService,\r\n                private actionLogService: ActionLogService) {\r\n        this.playlistId = $routeParams[MaterialsRouter.PLAYLIST_ID_PARAM];\r\n\r\n        this.materialsGridModel = new GridModel(HttpGridHelper.createLoader<IMaterial>($http, this.url.service(\"/api/playlists/\" + this.playlistId + \"/materials\")));\r\n        this.materialsGridModel.entries.forEach(e => {\r\n            this.rowShow.set(e.id, false);\r\n        });\r\n        var menuItemKey: string = MenuHelper.getCurrentMenuItemKey();\r\n        if (!menuItemKey || menuItemKey.length == 0) {\r\n            MenuHelper.setCurrentMenuItem(MenuHelper.EDUCATION_PLAYLISTS_MENU_KEY);\r\n        }\r\n        this.loadPlaylist();\r\n        this.viewType = 0;\r\n    }\r\n\r\n    private loadPlaylist(): void {\r\n        var promise: angular.IPromise<IPlaylist> = this.playlistService.get(this.playlistId);\r\n        promise.then(result => {\r\n            angular.copy(result, this.playlist);\r\n            this.actionLogService.create(this.playlist.id, ReferencedObjectType.PLAYLIST, ActionType.PLAYLIST_VIEW);\r\n            PageHeader.set().header(' ‘' + result.name + '’').update(); // TODO: real title\r\n        });\r\n    }\r\n\r\n    public getMaterialTypeClass(materialTypeId: number): string {\r\n        return ObjectTypeUtils.getMaterialGlyphiconClass(materialTypeId);\r\n    }\r\n\r\n    public loadMaterialPage(material: IMaterial) {\r\n        if(!material.available) {\r\n            notifier.error(\"Access to the material is restricted\");\r\n        } else {\r\n            this.$location.url(this.materialsRouter.watchUrl(material.id));\r\n        }\r\n    }\r\n\r\n    public showDetails(index: number): void {\r\n        this.rowShow.set(index, !this.rowShow.get(index));\r\n    }\r\n}\r\n","import {PlaylistService} from \"./PlaylistService\";\r\nimport {MaterialsRouter} from \"./../urls/MaterialsRouter\";\r\nimport {IPlaylist} from \"./models/IPlaylist\";\r\nimport {IMaterial} from \"./models/IMaterial\";\r\n\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {AuthService} from \"./../auth/AuthService\";\r\n\r\nimport {IPermissionWithUsersAndGroups} from \"./../security/permissions/IPermissionWithUsersAndGroups\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {SecuredObjectType} from \"./../security/permissions/SecuredObjectType\";\r\nimport {Moment} from \"./../utils/Moment\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {IGridModel, GridModel} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\n\r\ninterface IMaterialExtended extends IMaterial {\r\n    number?: number;\r\n}\r\n\r\nexport interface IFile extends File {\r\n    title?: string;\r\n}\r\n\r\nexport class PlaylistEditController {\r\n    public static NAME = \"materials.PlaylistEditController\";\r\n\r\n    public playlistId: number;\r\n    public playlist: IPlaylist;\r\n    public permissionsWithUsersAndGroups: Array<IPermissionWithUsersAndGroups> = [];\r\n    public playlistMaterials: Array<IMaterial> = [];\r\n    public userMaterialsGridModel: IGridModel<IMaterial>;\r\n    public preview: IFile;\r\n\r\n    public disabledSaveButton: boolean;\r\n    public isValidityInPerpetuity: boolean;\r\n\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$location\",\r\n        \"$routeParams\",\r\n        \"Upload\",\r\n        UrlService.NAME,\r\n        AuthService.NAME,\r\n        PlaylistService.NAME,\r\n        SecurityService.NAME,\r\n        PermissionsService.NAME,\r\n        MaterialsRouter.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private $location: angular.ILocationService,\r\n                private $routeParams: angular.route.IRouteParamsService,\r\n                private $uploader: ng.angularFileUpload.IUploadService,\r\n                private url: UrlService,\r\n                private authService: AuthService,\r\n                private playlistService: PlaylistService,\r\n                private securityService: SecurityService,\r\n                private permissionsService: PermissionsService,\r\n                private materialsRouter: MaterialsRouter) {\r\n        this.playlistId = $routeParams[MaterialsRouter.PLAYLIST_ID_PARAM];\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.EDUCATION_PLAYLISTS_MENU_KEY);\r\n\r\n        let playlistIdStr: string = String(this.playlistId);\r\n        let hasPlaylistId: boolean = this.playlistId != null;\r\n\r\n        this.securityService.demandAuthentication()\r\n            .demandSystemPermissionsIf(!hasPlaylistId, systemPermissions => systemPermissions.addPlaylists)\r\n            .demandPlaylistPermissionsIf(hasPlaylistId, playlistIdStr, playlistPermissions => playlistPermissions.edit);\r\n\r\n        this.isValidityInPerpetuity = true;\r\n        this.playlist = {};\r\n\r\n        if(hasPlaylistId) {\r\n            PageHeader.set().header(\"Edit a Playlist\").update();\r\n            this.loadPlaylist();\r\n            this.loadPlaylistMaterials();\r\n            this.disabledSaveButton = false;\r\n            this.loadPermissionsWithUsersAndGroups(SecuredObjectType.PLAYLIST, playlistIdStr);\r\n        } else {\r\n            PageHeader.set().header(\"New Playlist\").update();\r\n            this.authService.getCurrentUser().then(user => {\r\n                this.playlist.ownerId = user.id;\r\n                this.playlist.ownerFullName = user.fullName;\r\n            });\r\n            this.loadPermissionsWithUsersAndGroups(SecuredObjectType.PLAYLIST);\r\n        }\r\n\r\n        this.userMaterialsGridModel = new GridModel(HttpGridHelper.createLoader<IMaterial>($http,\r\n            this.url.service(\"/api/playlists/userMaterials\")));\r\n        this.userMaterialsGridModel.filter.playlistId = this.playlistId;\r\n        this.userMaterialsGridModel.loadCurrentPage();\r\n    }\r\n\r\n    private loadPlaylist() {\r\n        var promise: angular.IPromise<IPlaylist> = this.playlistService.get(this.playlistId);\r\n        promise.then(result => {\r\n            angular.copy(result, this.playlist);\r\n            this.playlist.validityText = Moment.isValidDate(result.validity);\r\n            if(this.playlist.validityText) {\r\n                this.isValidityInPerpetuity = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    private loadPlaylistMaterials() {\r\n        this.playlistService.getMaterials(this.playlistId).then(result => {\r\n            angular.copy(result, this.playlistMaterials);\r\n        })\r\n    }\r\n\r\n    private loadPermissionsWithUsersAndGroups(securedObjectType: SecuredObjectType, objectId?: string): void {\r\n        this.permissionsService.getAllObjectPermissionsWithUsersAndGroups(securedObjectType, objectId).then(result => {\r\n            this.permissionsWithUsersAndGroups = result;\r\n        });\r\n    }\r\n\r\n    public save() {\r\n        this.disabledSaveButton = true;\r\n        this.playlist.validity = this.getValidity();\r\n        this.playlist.materialIds = this.playlistMaterials.map((material: IMaterial) => {\r\n            return material.id;\r\n        });\r\n        var promise = this.playlistId\r\n            ? this.playlistService.update(this.playlist, this.permissionsWithUsersAndGroups)\r\n            : this.playlistService.create(this.playlist, this.permissionsWithUsersAndGroups);\r\n        promise.then(playlist => {\r\n            if(this.preview != null) {\r\n                this.upload(this.preview, playlist.id, \"preview\").then(r => {\r\n                    this.processSuccessCallback(playlist.id);\r\n                }).catch(response => {\r\n                    if (response.data.error == \"error.storage.not.available\") {\r\n                        notifier.error(\"No available storage. Thumbnail has not been saved\");\r\n                    }\r\n                    this.processSuccessCallback(playlist.id);\r\n                });\r\n            } else {\r\n                this.processSuccessCallback(playlist.id);\r\n            }\r\n        }).catch(err => {\r\n            notifier.error(err);\r\n        });\r\n    }\r\n\r\n    private processSuccessCallback(playlistId: number): void {\r\n        this.disabledSaveButton = false;\r\n        notifier.success(\"The playlist has been saved\");\r\n        this.$location.url(this.materialsRouter.playlistDetailsUrl(playlistId));\r\n    }\r\n\r\n    private upload(file: File, playlistId: number, fileType: string): angular.angularFileUpload.IUploadPromise<File> {\r\n        var urlBuilder = this.url.base(\"/api/playlists/upload?playlistId=:playlistId&fileType=:fileType\")\r\n            .param(\":playlistId\", playlistId)\r\n            .param(\":fileType\", fileType);\r\n        return this.$uploader.upload({\r\n                method: \"POST\",\r\n                url: angular.copy(urlBuilder)\r\n                    .service(),\r\n                file: file}\r\n        );\r\n    }\r\n\r\n    private getValidity(): number {\r\n        this.playlist.validityText ? this.playlist.validity = Moment.textToJavaDate(this.playlist.validityText)\r\n            : this.playlist.validity = null;\r\n        return this.playlist.validity;\r\n    }\r\n\r\n    private redirectOrClearFields(): void {\r\n        if(this.playlistId) {\r\n            this.$location.url(this.materialsRouter.playlistDetailsUrl(this.playlistId));\r\n        } else {\r\n            this.cleanFields();\r\n        }\r\n    }\r\n\r\n    private cleanFields() : void {\r\n        this.isValidityInPerpetuity = true;\r\n        this.playlist = {};\r\n        this.authService.getCurrentUser().then(user => {\r\n            this.playlist.ownerId = user.id;\r\n            this.playlist.ownerFullName = user.fullName;\r\n        });\r\n        this.permissionsWithUsersAndGroups = [];\r\n        this.preview = null;\r\n        this.loadPermissionsWithUsersAndGroups(SecuredObjectType.PLAYLIST);\r\n    }\r\n\r\n    public cleanValidity(): void {\r\n        this.playlist.validityText = \"\";\r\n    }\r\n\r\n    public addMaterialToPlaylist(material: IMaterial) {\r\n        this.playlistMaterials.push(material);\r\n        var index = this.userMaterialsGridModel.entries.indexOf(material);\r\n        this.userMaterialsGridModel.entries.splice(index, 1);\r\n    }\r\n\r\n    public removeMaterialFromPlaylist(index: number, material: IMaterial) {\r\n        this.playlistMaterials.splice(index, 1);\r\n        this.userMaterialsGridModel.entries.push(material);\r\n    }\r\n\r\n    public moveUp(index: number): void {\r\n        var placeholder = {};\r\n        var objectToMove = this.playlistMaterials.splice(index, 1, placeholder)[0];\r\n        this.playlistMaterials.splice(index - 1, 0, objectToMove);\r\n        this.playlistMaterials.splice(this.playlistMaterials.indexOf(placeholder), 1);\r\n    }\r\n\r\n    public moveDown(index: number): void {\r\n        var placeholder = {};\r\n        var objectToMove = this.playlistMaterials.splice(index + 1, 1, placeholder)[0];\r\n        this.playlistMaterials.splice(index, 0, objectToMove);\r\n        this.playlistMaterials.splice(this.playlistMaterials.indexOf(placeholder), 1);\r\n    }\r\n\r\n    public isMoveUp(index: number): boolean {\r\n        return index > 0;\r\n    }\r\n\r\n    public isMoveDown(index: number): boolean {\r\n        return index < this.playlistMaterials.length - 1;\r\n    }\r\n}","import {IPermissionWithUsersAndGroups} from \"./../security/permissions/IPermissionWithUsersAndGroups\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\nimport {IPlaylist} from \"./models/IPlaylist\";\r\nimport {IMaterial} from \"./models/IMaterial\";\r\n\r\ninterface IExtPlaylist extends IPlaylist {\r\n    permissionsWithUsersAndGroups?: Array<IPermissionWithUsersAndGroups>;\r\n}\r\n\r\nexport class PlaylistService {\r\n    public static NAME = \"materials.PlaylistService\";\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$sce\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private $sce: angular.ISCEService,\r\n                private url: UrlService) {\r\n    }\r\n\r\n    public findPlaylistsByMaterial(materialId: number): angular.IPromise<Array<ISelectable>> {\r\n        return this.$http.get(this.url.base(\"/api/playlists/by/material/:materialId\")\r\n            .param(\":materialId\", materialId)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public get(id: number): angular.IPromise<IPlaylist> {\r\n        return this.$http.get(this.url.base(\"/api/playlists/:id?\")\r\n            .param(\":id\", id)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public create(playlist: IExtPlaylist, permissionsWithUsersAndGroups: Array<IPermissionWithUsersAndGroups>): angular.IPromise<IPlaylist> {\r\n        playlist.permissionsWithUsersAndGroups = permissionsWithUsersAndGroups;\r\n        return this.$http.post(this.url.service(\"/api/playlists\"), playlist).then(result => result.data);\r\n    }\r\n\r\n    public update(playlist: IExtPlaylist, permissionsWithUsersAndGroups: Array<IPermissionWithUsersAndGroups>): angular.IPromise<IPlaylist> {\r\n        playlist.permissionsWithUsersAndGroups = permissionsWithUsersAndGroups;\r\n        return this.$http.put(this.url.service(\"/api/playlists\"), playlist).then(result => result.data);\r\n    }\r\n\r\n    public getMaterials(id: number): angular.IPromise<Array<IMaterial>> {\r\n        return this.$http.get(this.url.base(\"/api/playlists/:id/materialsList\")\r\n            .param(\":id\", id)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n}\r\n","import {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {MaterialsRouter} from \"./../urls/MaterialsRouter\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {IPlaylist} from \"./models/IPlaylist\";\r\nimport {IGridModel, GridModel} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {ObjectTypeUtils} from \"./../utils/ObjectTypeUtils\";\r\nimport {PersonalService} from \"./../personal/PersonalService\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {AuthManager} from \"./../authcore/AuthManager\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\n\r\nexport class PlaylistsController {\r\n    public static NAME = \"materials.PlaylistsController\";\r\n\r\n    public viewType: number;\r\n    public rowShow: Map<number, boolean> = new Map<number, boolean>();\r\n    public isAuthenticated: boolean;\r\n    public systemPermissions: ISystemPermissions;\r\n    public playlistsGridModel: IGridModel<IPlaylist>;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$location\",\r\n        MaterialsRouter.NAME,\r\n        PermissionsService.NAME,\r\n        UrlService.NAME,\r\n        PersonalService.NAME,\r\n        AuthManager.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private $location: ng.ILocationService,\r\n                public materialsRouter: MaterialsRouter,\r\n                private permissionsApi: PermissionsService,\r\n                private url: UrlService,\r\n                private personalService: PersonalService,\r\n                private authManager: AuthManager) {\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.EDUCATION_PLAYLISTS_MENU_KEY);\r\n        PageHeader.set().header(\"Playlists\").update();\r\n\r\n        this.isAuthenticated = this.authManager.isAuthenticated();\r\n        if (this.isAuthenticated) {\r\n            this.permissionsApi.getSystemPermissions().then(systemPermissions => {\r\n                this.systemPermissions = systemPermissions;\r\n            });\r\n        }\r\n\r\n        this.playlistsGridModel = new GridModel(HttpGridHelper.createLoader<IPlaylist>($http, this.url.service(\"/api/playlists\")));\r\n        this.playlistsGridModel.pageSize = 8;\r\n        this.viewType = 1;\r\n    }\r\n\r\n    public getLanguages(languages: Array<string>): string {\r\n        var languagesStr: string = \"\";\r\n        languages.forEach(l => {\r\n            languagesStr +=  l + \", \";\r\n        });\r\n        return languagesStr.substring(0, languagesStr.length-2);\r\n    }\r\n\r\n    public searchPlaylists(): void {\r\n        this.playlistsGridModel.loadCurrentPage();\r\n    }\r\n\r\n    public loadPlaylist(playlistId: number): void {\r\n        this.$location.url(this.materialsRouter.playlistDetailsUrl(playlistId));\r\n    }\r\n\r\n    public showDetails(index: number) {\r\n        this.rowShow.set(index, !this.rowShow.get(index));\r\n    }\r\n\r\n    public addToFavorites(playlist: IPlaylist) {\r\n        this.rowShow.set(playlist.id, !this.rowShow.get(playlist.id));\r\n        this.personalService.addToFavorites(playlist.id, ReferencedObjectType.PLAYLIST).then(result => {\r\n            notifier.success(\"The playlist has been added to your favorites\");\r\n            playlist.favorite = true;\r\n        }).catch(response => {\r\n            if(response.data.error == \"object.already.in.favorite\") {\r\n                notifier.error(\"This playlist is already in your favorites\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public removeFromFavorites(playlist: IPlaylist) {\r\n        this.rowShow.set(playlist.id, !this.rowShow.get(playlist.id));\r\n        this.personalService.removeFromFavorites(playlist.id, ReferencedObjectType.PLAYLIST).then(result => {\r\n            notifier.success(\"The playlist has been removed from your favorites\");\r\n            playlist.favorite = false;\r\n        }).catch(response => {\r\n            if(response.data.error == \"object.not.in.favorite\") {\r\n                notifier.error(\"Failed to remove from your favorites\");\r\n            }\r\n        });\r\n    }\r\n}\r\n","import {MaterialsRouter} from \"./../urls/MaterialsRouter\";\r\nimport {FinancesRouter} from \"./../urls/FinancesRouter\";\r\n\r\nimport {VhsSearchController} from \"./../components/VhsSearchDirective\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {IGridModel, GridModel, IGridLoadingListener} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {Moment} from \"./../utils/Moment\";\r\nimport {ObjectTypeUtils} from \"./../utils/ObjectTypeUtils\";\r\nimport {MaterialType} from \"./models/MaterialType\";\r\nimport {IMaterial} from \"./models/IMaterial\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\nimport {MaterialService} from \"./MaterialService\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\n\r\ninterface IExtMaterial extends IMaterial {\r\n    shown?: boolean;\r\n}\r\n\r\nexport class SearchController {\r\n    public static NAME = \"materials.SearchController\";\r\n\r\n    private searchType: string;\r\n    private searchQuery: string;\r\n\r\n    public materialsGridModel: IGridModel<IMaterial>;\r\n    public viewType: number;\r\n    public searchViewType: number;\r\n    public owners: Array<ISelectable> = [];\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$location\",\r\n        \"$timeout\",\r\n        UrlService.NAME,\r\n        UserService.NAME,\r\n        MaterialsRouter.NAME,\r\n        FinancesRouter.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private $location: angular.ILocationService,\r\n                private $timeout: angular.ITimeoutService,\r\n                private url: UrlService,\r\n                private userService: UserService,\r\n                public materialsRouter: MaterialsRouter,\r\n                public financesRouter: FinancesRouter) {\r\n        this.searchType = $location.search()[VhsSearchController.FILE_FORMAT_PARAMETER];\r\n        this.searchQuery = $location.search()[VhsSearchController.SEARCH_STRING_PARAMETER];\r\n\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.SEARCH_MENU_KEY);\r\n        PageHeader.set().header(\"Search\").update();\r\n\r\n        this.materialsGridModel = new GridModel(HttpGridHelper.createLoader<IMaterial>($http, this.url.service(\"/api/materials\")));\r\n        this.materialsGridModel.pageSize = 9;\r\n        this.searchType != null ? this.materialsGridModel.filter.fileType = this.searchType : \"\";\r\n        this.searchQuery != null ? this.materialsGridModel.filter.searchString = this.searchQuery : \"\";\r\n        this.searchViewType = 1;\r\n        this.viewType = null;\r\n\r\n        this.userService.getUsersWithoutExcludedUsersForSelector().then(result =>{\r\n            this.owners = angular.copy(result);\r\n        });\r\n    }\r\n\r\n    public searchMaterial(): void {\r\n        this.materialsGridModel.filter.dateFrom = Moment.textToJavaDate(this.materialsGridModel.filter.dateFromText);\r\n        this.materialsGridModel.filter.dateTo = Moment.textToJavaDate(this.materialsGridModel.filter.dateToText);\r\n        this.materialsGridModel.filter.viewType = this.viewType;\r\n        this.materialsGridModel.loadPage(0);\r\n    }\r\n\r\n    public filterMaterialViewType(viewType: number): void {\r\n        this.viewType = viewType;\r\n        this.searchMaterial();\r\n    }\r\n\r\n    public clearSearch() {\r\n        this.viewType = null;\r\n        this.materialsGridModel.filter.searchString = null;\r\n        this.materialsGridModel.filter.viewType = null;\r\n        this.materialsGridModel.filter.ownerId = \"\";\r\n        this.materialsGridModel.filter.subjectId = \"\";\r\n        this.materialsGridModel.filter.topic = null;\r\n        this.materialsGridModel.filter.languageId = \"\";\r\n        this.materialsGridModel.filter.fileType = \"\";\r\n        this.materialsGridModel.filter.dateFrom = null;\r\n        this.materialsGridModel.filter.dateFromText = null;\r\n        this.materialsGridModel.filter.dateTo = null;\r\n        this.materialsGridModel.filter.dateToText = null;\r\n        this.materialsGridModel.loadPage(0);\r\n    }\r\n\r\n    public loadMaterialPage(materialId: number) {\r\n        this.$location.url(this.materialsRouter.watchUrl(materialId));\r\n    }\r\n\r\n    public doPurchase(materialId: number): void {\r\n        this.$location.url(this.financesRouter.purchaseUrl(materialId, ReferencedObjectType.MATERIAL));\r\n    }\r\n\r\n    public showPuchaseHint(id: number): void {\r\n        $('#button-purchase-' + id).popover('show');\r\n        this.$timeout(() => $('#button-purchase-' + id).popover('hide'), 5000);\r\n    }\r\n\r\n    public getMaterialTypeClass(materialTypeId: number): string {\r\n        return ObjectTypeUtils.getMaterialGlyphiconClass(materialTypeId);\r\n    }\r\n\r\n    public getMaterialTypeTitle(materialTypeId: number): string {\r\n        return ObjectTypeUtils.getMaterialTypeTitle(materialTypeId);\r\n    }\r\n\r\n    public showDetails(material: IExtMaterial) {\r\n        material.shown = !material.shown;\r\n    }\r\n}","export enum MaterialTypeEnum {\r\n    AUDIO = 1,\r\n    VIDEO = 2,\r\n    LINK = 3,\r\n    PHOTO = 4,\r\n    DOCUMENTS = 5\r\n}\r\n\r\nexport enum MaterialTypeKeyEnum {\r\n    AUDIO,\r\n    VIDEO,\r\n    LINK,\r\n    PHOTO,\r\n    DOCUMENTS\r\n}\r\n\r\nexport class MaterialType {\r\n    public static AUDIO: number = 1;\r\n    public static VIDEO: number = 2;\r\n    public static LINK: number = 3;\r\n    public static PHOTO: number = 4;\r\n    public static DOCUMENTS: number = 5;\r\n}\r\n\r\nexport interface IMaterialType {\r\n    id?: number;\r\n    name?: string;\r\n}","import {NewsRouter} from \"./../urls/NewsRouter\";\r\nimport {NewsService} from \"./NewsService\";\r\n\r\nimport {AuthManager} from \"./../authcore/AuthManager\";\r\nimport {AuthRedirect} from \"./../authcore/AuthRedirect\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\n\r\nimport {INews} from \"./models/INews\";\r\n\r\nexport class NewsEditController {\r\n    public static NAME = \"news.NewsEditController\";\r\n\r\n    public newsId: number;\r\n    public news: INews = {type: \"ALL\"};\r\n\r\n    public isAuthenticated: boolean;\r\n    public disabledSaveButton: boolean;\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        \"$routeParams\",\r\n        AuthManager.NAME,\r\n        AuthRedirect.NAME,\r\n        NewsService.NAME,\r\n        SecurityService.NAME,\r\n        NewsRouter.NAME\r\n    ];\r\n\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                private $routeParams: angular.route.IRouteParamsService,\r\n                private authManager: AuthManager,\r\n                public authRedirect: AuthRedirect,\r\n                public newsService: NewsService,\r\n                private securityService: SecurityService,\r\n                public newsRouter: NewsRouter) {\r\n        this.newsId = $routeParams[NewsRouter.ONE_NEWS_ID_PARAM];\r\n\r\n        this.isAuthenticated = this.authManager.isAuthenticated();\r\n        if (!this.isAuthenticated) {\r\n            authRedirect.redirectToLogOn();\r\n        }\r\n        this.securityService.demandAuthentication()\r\n            .demandSystemPermissionsIf(this.newsId == null, systemPermissions => systemPermissions.addNews)\r\n            .demandNewsPermissionsIf(this.newsId != null, String(this.newsId), newsPermissions => newsPermissions.edit);\r\n\r\n        if (this.newsId) {\r\n            this.loadNews();\r\n        } else {\r\n            PageHeader.set().header(\"Add News\").update();\r\n        }\r\n    }\r\n\r\n    public loadNews() {\r\n        this.newsService.getNews(this.newsId).then(n => {\r\n            angular.copy(n, this.news);\r\n            PageHeader.set().header(\"Edit This News\").update();\r\n        })\r\n    }\r\n\r\n    public save() {\r\n        this.disabledSaveButton = true;\r\n        var promise = this.newsId\r\n            ? this.newsService.update(this.news)\r\n            : this.newsService.create(this.news);\r\n        promise.then(n => {\r\n            this.disabledSaveButton = false;\r\n            notifier.success(\"News has been saved\");\r\n            this.$location.url(this.newsRouter.oneNewsUrl(n.id));\r\n        })\r\n    }\r\n\r\n    public redirectOrClearFields(): void {\r\n        if(this.newsId) {\r\n            this.$location.url(this.newsRouter.oneNewsUrl(this.newsId));\r\n        } else {\r\n            this.cleanFields();\r\n        }\r\n    }\r\n\r\n    private cleanFields() : void {\r\n        this.news = {};\r\n        this.news.type = \"ALL\";\r\n    }\r\n}","import {NewsService} from \"./NewsService\";\r\nimport {NewsRouter} from \"./../urls/NewsRouter\";\r\nimport {NewsSearchController} from \"./NewsSearchController\";\r\nimport {OneNewsController} from \"./OneNewsController\";\r\nimport {NewsEditController} from \"./NewsEditController\";\r\n\r\nimport {AuthCoreModule} from \"./../authcore/AuthCoreModule\";\r\nimport {SocialModule} from \"./../social/SocialModule\";\r\nimport {SecurityModule} from \"./../security/SecurityModule\";\r\n\r\nexport var NewsModule: angular.IModule = angular\r\n    .module(\"news\", [\r\n        AuthCoreModule.name,\r\n        SocialModule.name,\r\n        SecurityModule.name\r\n    ])\r\n    .service(NewsService.NAME, NewsService)\r\n    .controller(NewsSearchController.NAME, NewsSearchController)\r\n    .controller(OneNewsController.NAME, OneNewsController)\r\n    .controller(NewsEditController.NAME, NewsEditController);","import {NewsRouter} from \"./../urls/NewsRouter\";\r\nimport {NewsService} from \"./NewsService\";\r\n\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {IGridModel, GridModel} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {Moment} from \"./../utils/Moment\";\r\nimport {notifier} from \"./../INotifier\";\r\n\r\nimport {AuthManager} from \"./../authcore/AuthManager\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {PersonalService} from \"./../personal/PersonalService\";\r\n\r\nimport {INews} from \"./models/INews\"\r\n\r\nexport class NewsSearchController {\r\n    public static NAME = \"news.NewsSearchController\";\r\n\r\n    private systemPermissions: ISystemPermissions;\r\n\r\n    public isAuthenticated: boolean;\r\n\r\n    public newsType: string;\r\n    public newsGridModel: IGridModel<INews>;\r\n    public subscribe: boolean = false;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$location\",\r\n        \"$routeParams\",\r\n        AuthManager.NAME,\r\n        UrlService.NAME,\r\n        PermissionsService.NAME,\r\n        SecurityService.NAME,\r\n        PersonalService.NAME,\r\n        NewsService.NAME,\r\n        NewsRouter.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private $location: angular.ILocationService,\r\n                private $routeParams: angular.route.IRouteParamsService,\r\n                private authManager: AuthManager,\r\n                private url: UrlService,\r\n                private permissionsService: PermissionsService,\r\n                private securityService: SecurityService,\r\n                private personalService: PersonalService,\r\n                private newsService: NewsService,\r\n                private newsRouter: NewsRouter) {\r\n        this.isAuthenticated = this.authManager.isAuthenticated();\r\n        this.newsType = $routeParams[NewsRouter.NEWS_TYPE_PARAM];\r\n\r\n        switch (this.newsType) {\r\n            case \"all\":\r\n                MenuHelper.setCurrentMenuItem(MenuHelper.ALL_NEWS_MENU_KEY);\r\n                PageHeader.set().header(\"All News\").update();\r\n                break;\r\n            case \"students\":\r\n                MenuHelper.setCurrentMenuItem(MenuHelper.STUDENTS_OFFERS_MENU_KEY);\r\n                PageHeader.set().header(\"News for Students\").update();\r\n                this.securityService.demandAuthentication();\r\n                break;\r\n        }\r\n\r\n        permissionsService.getSystemPermissions().then(p => {\r\n            PageHeader.set().preserveHeader()\r\n                .addActionLinkIf(p.addNews, '+&nbsp;New',\r\n                this.newsRouter.oneNewsCreateUrl()).update();\r\n            this.systemPermissions = p;\r\n        });\r\n\r\n        this.newsGridModel = new GridModel(HttpGridHelper.createLoader<INews>($http, this.url.service(\"/api/news\")));\r\n        this.newsGridModel.filter.type = this.newsType.toUpperCase();\r\n        this.newsGridModel.loadCurrentPage();\r\n\r\n        this.checkSubscription();\r\n    }\r\n\r\n    public openOneNews(oneNewsId: number) {\r\n        this.$location.url(this.newsRouter.oneNewsUrl(oneNewsId));\r\n    }\r\n\r\n    public applyFilter() {\r\n        this.newsGridModel.filter.dateFrom = Moment.textToJavaDate(this.newsGridModel.filter.dateFromText);\r\n        this.newsGridModel.filter.dateTo = Moment.textToJavaDate(this.newsGridModel.filter.dateToText);\r\n        this.newsGridModel.loadCurrentPage();\r\n    }\r\n\r\n    public clearFilter() {\r\n        this.newsGridModel.filter.searchString = null;\r\n        this.newsGridModel.filter.tags = null;\r\n        this.newsGridModel.filter.authorName = null;\r\n        this.newsGridModel.filter.dateFrom = null;\r\n        this.newsGridModel.filter.dateFromText = null;\r\n        this.newsGridModel.filter.dateTo = null;\r\n        this.newsGridModel.filter.dateToText = null;\r\n        this.newsGridModel.loadCurrentPage();\r\n    }\r\n\r\n    public checkSubscription() {\r\n        this.newsService.checkNewsSubscription(this.newsType.toUpperCase()).then(result => {\r\n            this.subscribe = result;\r\n        })\r\n    }\r\n\r\n    public changeNewsSubscription() {\r\n        this.personalService.changeNewsSubscription(this.newsType.toUpperCase()).then(result => {\r\n            result\r\n                ? this.newsType == \"all\"\r\n                ? notifier.success(\"You successfully subscribed to all news\")\r\n                : notifier.success(\"You successfully subscribed to news for students\")\r\n                : this.newsType == \"all\"\r\n                ? notifier.success(\"You successfully unsubscribed from all news\")\r\n                : notifier.success(\"You successfully unsubscribed from news for students\");\r\n            this.subscribe = result;\r\n        })\r\n    }\r\n}\r\n","import {UrlService} from \"./../utils/UrlService\";\r\n\r\nimport {INews} from \"./models/INews\";\r\n\r\nexport class NewsService {\r\n    public static NAME = \"news.NewsService\";\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private url: UrlService) {\r\n    }\r\n\r\n    public getNews(id: number): angular.IPromise<INews> {\r\n        return this.$http.get(this.url.base(\"/api/news/:id\").param(\":id\", id).service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public create(news: INews): ng.IPromise<INews> {\r\n        return this.$http.post(this.url.service(\"/api/news\"), news)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public update(news: INews): ng.IPromise<INews> {\r\n        return this.$http.put(this.url.service(\"/api/news\"), news)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public checkNewsSubscription(newsType: string): angular.IPromise<boolean> {\r\n        return this.$http.get(this.url.base(\"/api/news/subscription?newsType=:newsType\")\r\n            .param(\":newsType\", newsType).service())\r\n            .then(result => result.data);\r\n    }\r\n}","import {NewsRouter} from \"./../urls/NewsRouter\";\r\nimport {NewsService} from \"./NewsService\";\r\n\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {SocialService} from \"./../social/SocialService\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\n\r\nimport {AuthManager} from \"./../authcore/AuthManager\";\r\nimport {AuthRedirect} from \"./../authcore/AuthRedirect\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {ITreeElementInfo} from \"./../tree/models/TreeElementInfo\";\r\nimport {TreeElementsInfoFiller} from \"./../tree/TreeElementsInfoFiller\";\r\nimport {IGridModel, GridModel, IGridLoadingListener} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {notifier} from \"./../INotifier\";\r\n\r\nimport {INews} from \"./models/INews\";\r\nimport {IComment} from \"./../social/models/IComment\";\r\nimport {ICommentInHierarchy} from \"./../social/models/ICommentInHierarchy\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\nimport {PermissionsService} from \"../security/PermissionsService\";\r\nimport {ISystemPermissions} from \"../security/permissions/ISystemPermissions\";\r\n\r\ninterface ICommentInHierarchyExtended extends ITreeElementInfo<ICommentInHierarchyExtended>, ICommentInHierarchy {\r\n    reply?: boolean;\r\n}\r\n\r\nexport class OneNewsController implements IGridLoadingListener {\r\n    public static NAME = \"news.OneNewsController\";\r\n\r\n    private newsId: number;\r\n    public news: INews = {};\r\n    public commentsGridModel: IGridModel<ICommentInHierarchyExtended>;\r\n    public newComment: IComment = {};\r\n    public newReplyComment: IComment = {};\r\n    public anchorComplete: boolean;\r\n    public commentsCount: number;\r\n\r\n    public isAuthenticated: boolean;\r\n    public systemPermissions: ISystemPermissions;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$anchorScroll\",\r\n        \"$timeout\",\r\n        \"$location\",\r\n        \"$routeParams\",\r\n        UrlService.NAME,\r\n        AuthManager.NAME,\r\n        AuthRedirect.NAME,\r\n        NewsService.NAME,\r\n        SocialService.NAME,\r\n        SecurityService.NAME,\r\n        NewsRouter.NAME,\r\n        PermissionsService.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private $anchorScroll: angular.IAnchorScrollService,\r\n                private $timeout: angular.ITimeoutService,\r\n                private $location: angular.ILocationService,\r\n                private $routeParams: angular.route.IRouteParamsService,\r\n                private url: UrlService,\r\n                private authManager: AuthManager,\r\n                public authRedirect: AuthRedirect,\r\n                public newsService: NewsService,\r\n                public socialService: SocialService,\r\n                private securityService: SecurityService,\r\n                public newsRouter: NewsRouter,\r\n                private permissionsApi: PermissionsService) {\r\n        this.newsId = $routeParams[NewsRouter.ONE_NEWS_ID_PARAM];\r\n        this.isAuthenticated = this.authManager.isAuthenticated();\r\n        this.anchorComplete = false;\r\n        if (this.isAuthenticated) {\r\n            this.permissionsApi.getSystemPermissions().then(systemPermissions => {\r\n                this.systemPermissions = systemPermissions;\r\n            });\r\n        }\r\n\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.ALL_NEWS_MENU_KEY);\r\n\r\n        this.loadNews();\r\n\r\n        this.commentsGridModel = new GridModel(HttpGridHelper.createLoader<ICommentInHierarchyExtended>($http,\r\n            this.url.base(\"/api/social/comments?objectId=:objectId&objectType=:objectType\")\r\n                .param(\":objectId\", this.newsId)\r\n                .param(\":objectType\", ReferencedObjectType[ReferencedObjectType.NEWS])\r\n                .service()));\r\n        this.commentsGridModel.addLoadingListener(this);\r\n        this.loadCommentsCount();\r\n    }\r\n\r\n    public startLoading() {\r\n        //do nothing\r\n    }\r\n\r\n    public endLoading() {\r\n        TreeElementsInfoFiller.fillHierarchyInfoWithMaxLevel(this.commentsGridModel.entries, Number.MAX_VALUE);\r\n        this.$timeout(()=> {\r\n            this.scrollAnchor();\r\n        }, 0);\r\n\r\n    }\r\n\r\n    public scrollAnchor() {\r\n        if (!this.anchorComplete) {\r\n            this.$anchorScroll(this.$location.hash());\r\n            this.anchorComplete = true;\r\n        }\r\n    }\r\n\r\n    public loadNews() {\r\n        this.newsService.getNews(this.newsId).then(n => {\r\n            angular.copy(n, this.news);\r\n            if (n.type == \"STUDENTS\") {\r\n                MenuHelper.setCurrentMenuItem(MenuHelper.STUDENTS_OFFERS_MENU_KEY);\r\n                this.securityService.demandAuthentication();\r\n            }\r\n            PageHeader.set().header(n.title).update();\r\n        });\r\n    }\r\n\r\n    private loadCommentsCount() {\r\n        this.socialService.getCommentsCount(this.newsId, ReferencedObjectType.NEWS).then(result => {\r\n            this.commentsCount = result;\r\n        });\r\n    }\r\n\r\n    public addComment(reply: boolean, parentId: number) {\r\n        if (reply) {\r\n            this.newReplyComment.parentId = parentId;\r\n        }\r\n        this.socialService.addComment(this.newsId, ReferencedObjectType.NEWS, reply ? this.newReplyComment : this.newComment).then(result => {\r\n            notifier.success(\"Comment has been added\");\r\n            this.commentsGridModel.loadCurrentPage();\r\n            this.newComment.text = \"\";\r\n            this.newReplyComment.text = \"\";\r\n            this.newReplyComment.parentId = null;\r\n            this.loadCommentsCount();\r\n        });\r\n    }\r\n\r\n    public cleanComment() {\r\n        this.newComment.text = \"\";\r\n        this.newReplyComment.text = \"\";\r\n        this.newReplyComment.parentId = null;\r\n    }\r\n\r\n    public replyComment(commentId: number) {\r\n        this.commentsGridModel.entries.forEach(c => {\r\n            c.reply = c.id == commentId;\r\n        });\r\n    }\r\n}\r\n","import {IUser} from \"./../users/models/IUser\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\n\r\nexport class BalanceController {\r\n    public static NAME = \"personal.BalanceController\";\r\n\r\n    public userProfile: IUser;\r\n\r\n    public static $inject = [\r\n        SecurityService.NAME,\r\n        UserService.NAME\r\n    ];\r\n\r\n    constructor(private securityService: SecurityService,\r\n                private userService: UserService) {\r\n        this.securityService.demandAuthentication()\r\n            .demandSystemPermissions(systemPermissions => systemPermissions.rechargeAccount);\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.PERSONAL_ACCOUNT_BALANCE_MENU_KEY);\r\n\r\n        this.loadUserProfile();\r\n    }\r\n\r\n    private loadUserProfile(): void {\r\n        this.userService.getCurrentUserProfile().then(u => {\r\n            this.userProfile = u;\r\n        })\r\n    }\r\n}","import {IUser} from \"./../users/models/IUser\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\n\r\nexport class CouponsController {\r\n    public static NAME = \"personal.CouponsController\";\r\n\r\n    public userProfile: IUser;\r\n\r\n    public static $inject = [\r\n        SecurityService.NAME,\r\n        UserService.NAME\r\n    ];\r\n\r\n    constructor(private securityService: SecurityService,\r\n                private userService: UserService) {\r\n        this.securityService.demandAuthentication();\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.PERSONAL_ACCOUNT_COUPONS_MENU_KEY);\r\n\r\n        this.loadUserProfile();\r\n    }\r\n\r\n    private loadUserProfile(): void {\r\n        this.userService.getCurrentUserProfile().then(u => {\r\n            this.userProfile = u;\r\n        })\r\n    }\r\n}","import {PersonalService} from \"./PersonalService\";\r\n\r\nimport {IUser} from \"./../users/models/IUser\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {ICourse} from \"./../courses/models/ICourse\";\r\nimport {CoursesRouter} from \"./../urls/CoursesRouter\";\r\nimport {IGridModel, GridModel} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\nimport {notifier} from \"./../INotifier\";\r\n\r\nexport class CoursesController {\r\n    public static NAME = \"personal.CoursesController\";\r\n\r\n    public userProfile: IUser;\r\n    public coursesGridModel: IGridModel<ICourse>;\r\n    public rowShow: Map<number, boolean> = new Map<number, boolean>();\r\n    public viewType: number;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$location\",\r\n        UrlService.NAME,\r\n        SecurityService.NAME,\r\n        UserService.NAME,\r\n        PersonalService.NAME,\r\n        CoursesRouter.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private $location: angular.ILocationService,\r\n                private url: UrlService,\r\n                private securityService: SecurityService,\r\n                private userService: UserService,\r\n                private personalService: PersonalService,\r\n                public coursesRouter: CoursesRouter) {\r\n        this.securityService.demandAuthentication();\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.PERSONAL_ACCOUNT_COURSES_MENU_KEY);\r\n\r\n        this.viewType = 0;\r\n\r\n        this.loadUserProfile();\r\n\r\n        this.coursesGridModel = new GridModel(HttpGridHelper.createLoader<ICourse>($http, this.url.service(\"/api/courses/my\")));\r\n        this.coursesGridModel.entries.forEach(e => {\r\n            this.rowShow.set(e.id, false);\r\n        });\r\n    }\r\n\r\n    public showDetails(index: number): void {\r\n        this.rowShow.set(index, !this.rowShow.get(index));\r\n    }\r\n\r\n    public loadCourse(courseId: number): void {\r\n        this.$location.url(this.coursesRouter.detailsUrl(courseId));\r\n    }\r\n\r\n    public addCourseToFavorites(course: ICourse) {\r\n        this.addToFavorites(course.id, ReferencedObjectType.COURSE).then(result => {\r\n            notifier.success(\"The course has been added to your favorites\");\r\n            course.favorite = true;\r\n        }).catch(response => {\r\n            if(response.data.error == \"object.already.in.favorite\") {\r\n                notifier.error(\"This course is already in your favorites\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public removeCourseFromFavorites(course: ICourse) {\r\n        this.removeFromFavorites(course.id, ReferencedObjectType.COURSE).then(result => {\r\n            notifier.success(\"The course has been removed from your favorites\");\r\n            course.favorite = false;\r\n        }).catch(response => {\r\n            if(response.data.error == \"object.not.in.favorite\") {\r\n                notifier.error(\"Failed to remove from your favorites\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private addToFavorites(id: number, type: ReferencedObjectType) {\r\n        this.rowShow.set(id, !this.rowShow.get(id));\r\n        return this.personalService.addToFavorites(id, type);\r\n    }\r\n\r\n    private removeFromFavorites(id: number, type: ReferencedObjectType) {\r\n        this.rowShow.set(id, !this.rowShow.get(id));\r\n        return this.personalService.removeFromFavorites(id, type);\r\n    }\r\n\r\n    private loadUserProfile(): void {\r\n        this.userService.getCurrentUserProfile().then(u => {\r\n            this.userProfile = u;\r\n        })\r\n    }\r\n}","import {AuthManager} from \"./../authcore/AuthManager\";\r\nimport {PersonalService} from \"./PersonalService\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {MaterialsRouter} from \"./../urls/MaterialsRouter\";\r\nimport {CoursesRouter} from \"./../urls/CoursesRouter\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {IGridModel, GridModel} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {IFavorite} from \"./models/IFavorite\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {ObjectTypeUtils} from \"./../utils/ObjectTypeUtils\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\n\r\nexport class FavoritesController {\r\n    public static NAME = \"personal.FavoritesController\";\r\n\r\n    public rowShow: Map<number, boolean> = new Map<number, boolean>();\r\n    public viewType: number;\r\n    public favoritesGridModel: IGridModel<IFavorite>;\r\n    public disableRemoveButton: boolean = false;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$location\",\r\n        UrlService.NAME,\r\n        AuthManager.NAME,\r\n        PersonalService.NAME,\r\n        MaterialsRouter.NAME,\r\n        SecurityService.NAME,\r\n        CoursesRouter.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private $location: angular.ILocationService,\r\n                private url: UrlService,\r\n                private authManager: AuthManager,\r\n                public personalService: PersonalService,\r\n                public materialsRouter: MaterialsRouter,\r\n                private securityService: SecurityService,\r\n                public coursesRouter: CoursesRouter) {\r\n        this.securityService.demandAuthentication();\r\n\r\n        this.viewType = 1;\r\n\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.FAVORITES_MENU_KEY);\r\n        PageHeader.set().header(\"Favorites\").update();\r\n\r\n        this.favoritesGridModel = new GridModel(HttpGridHelper.createLoader<IFavorite>($http, this.url.service(\"/api/personal/favorites\")));\r\n        this.favoritesGridModel.pageSize = 8;\r\n    }\r\n\r\n    public showDetails(index: number, favorite: IFavorite) {\r\n        if(favorite.available) {\r\n            this.rowShow.set(index, !this.rowShow.get(index));\r\n        }\r\n    }\r\n\r\n    public loadFavoritePage(favorite: IFavorite) {\r\n        if (favorite.objectType == ReferencedObjectType[ReferencedObjectType.MATERIAL]) {\r\n            if(!favorite.available) {\r\n                notifier.error(\"Access to this material is restricted\");\r\n            } else {\r\n                this.$location.url(this.materialsRouter.watchUrl(favorite.objectId));\r\n            }\r\n        }\r\n        if (favorite.objectType == ReferencedObjectType[ReferencedObjectType.PLAYLIST]) {\r\n            if(!favorite.available) {\r\n                notifier.error(\"Access to this playlist is restricted\");\r\n            } else {\r\n                this.$location.url(this.materialsRouter.playlistDetailsUrl(favorite.objectId));\r\n            }\r\n        }\r\n        if (favorite.objectType == ReferencedObjectType[ReferencedObjectType.COURSE]) {\r\n            if(!favorite.available) {\r\n                notifier.error(\"Access to this course is restricted\");\r\n            } else {\r\n                this.$location.url(this.coursesRouter.detailsUrl(favorite.objectId));\r\n            }\r\n        }\r\n    }\r\n\r\n    public isMaterialObject(referenceObjectType: string): boolean {\r\n        return ObjectTypeUtils.isMaterialObject(referenceObjectType);\r\n    }\r\n\r\n    public isPlaylistObject(referenceObjectType: string): boolean {\r\n        return ObjectTypeUtils.isPlaylistObject(referenceObjectType);\r\n    }\r\n\r\n    public isCourseObject(referenceObjectType: string): boolean {\r\n        return ObjectTypeUtils.isCourseObject(referenceObjectType);\r\n    }\r\n\r\n    public getMaterialTypeClass(materialTypeKey: string): string {\r\n        return ObjectTypeUtils.getMaterialGlyphiconClassFromKey(materialTypeKey);\r\n    }\r\n\r\n    public getContentTypeTitle(contentTypeKey: string): string {\r\n        return ObjectTypeUtils.getContentTypeTitle(contentTypeKey);\r\n    }\r\n\r\n    public removeFromFavorites(favoriteId: number, favoriteType: string) {\r\n        this.disableRemoveButton = true;\r\n        this.personalService.removeFromFavorites(favoriteId, ObjectTypeUtils.getReferenceObjectTypeFromString(favoriteType)).then(result => {\r\n            notifier.success(this.getRemoveMessage(favoriteType));\r\n            this.favoritesGridModel.loadCurrentPage();\r\n            this.disableRemoveButton = false;\r\n        }).catch(response => {\r\n            notifier.error(\"Failed to remove it from your favorites\");\r\n            this.disableRemoveButton = false;\r\n        });\r\n    }\r\n\r\n    private getRemoveMessage(favoriteType: string): string {\r\n        switch (favoriteType) {\r\n            case \"MATERIAL\":\r\n                return \"Material removed from your favorites\";\r\n            case \"PLAYLIST\":\r\n                return \"Playlist removed from your favorites\";\r\n            case \"COURSE\":\r\n                return \"Course removed from your favorites\";\r\n            default:\r\n                return \"Material removed from your favorites\";\r\n        }\r\n    }\r\n\r\n    public getLanguages(languages: Array<string>): string {\r\n        var languagesStr: string = \"\";\r\n        languages.forEach(l => {\r\n            languagesStr +=  l + \", \";\r\n        });\r\n        return languagesStr.substring(0, languagesStr.length-2);\r\n    }\r\n}\r\n","import {IObjectWithComments} from \"./models/IObjectWithComments\";\r\nimport {PersonalService} from \"./PersonalService\";\r\n\r\nimport {IUser} from \"./../users/models/IUser\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {ObjectTypeUtils} from \"./../utils/ObjectTypeUtils\";\r\nimport {IComment} from \"./../social/models/IComment\";\r\nimport {MaterialsRouter} from \"./../urls/MaterialsRouter\";\r\nimport {NewsRouter} from \"./../urls/NewsRouter\";\r\nimport {IGridModel, GridModel} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\nimport {notifier} from \"./../INotifier\";\r\n\r\n\r\nexport class NewCommentsController {\r\n    public static NAME = \"personal.NewCommentsController\";\r\n\r\n    public userProfile: IUser;\r\n    public objectsWithCommentsGridModel: IGridModel<IObjectWithComments>;\r\n    public rowShow: Map<number, boolean> = new Map<number, boolean>();\r\n    public objectComments: Map<number, Array<IComment>> = new Map<number, Array<IComment>>();\r\n    public disableGetCommentsButton: boolean;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$location\",\r\n        UrlService.NAME,\r\n        SecurityService.NAME,\r\n        UserService.NAME,\r\n        PersonalService.NAME,\r\n        MaterialsRouter.NAME,\r\n        NewsRouter.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private $location: angular.ILocationService,\r\n                private url: UrlService,\r\n                private securityService: SecurityService,\r\n                private userService: UserService,\r\n                private personalService: PersonalService,\r\n                public materialsRouter: MaterialsRouter,\r\n                public newsRouter: NewsRouter) {\r\n        this.securityService.demandAuthentication();\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.PERSONAL_ACCOUNT_NEW_COMMENTS_MENU_KEY);\r\n\r\n        this.disableGetCommentsButton = false;\r\n\r\n        this.loadUserProfile();\r\n\r\n        this.objectsWithCommentsGridModel = new GridModel(HttpGridHelper.createLoader<IObjectWithComments>($http,\r\n            this.url.service(\"/api/personal/comments/objects\")));\r\n        this.objectsWithCommentsGridModel.entries.forEach(e => {\r\n            this.rowShow.set(e.objectId, false);\r\n        });\r\n    }\r\n\r\n    public showComments(objectId: number, objectType: string): void {\r\n        if (!this.rowShow.get(objectId) && !this.disableGetCommentsButton) {\r\n            if (!this.objectComments.has(objectId)) {\r\n                this.disableGetCommentsButton = true;\r\n                this.personalService.getUserCommentsForObject(objectId, ObjectTypeUtils.getReferenceObjectTypeFromString(objectType)).then(result => {\r\n                    this.objectComments.set(objectId, result);\r\n                    this.rowShow.set(objectId, !this.rowShow.get(objectId));\r\n                    this.disableGetCommentsButton = false;\r\n                });\r\n            }\r\n        } else {\r\n            this.rowShow.set(objectId, !this.rowShow.get(objectId));\r\n        }\r\n    }\r\n\r\n    public getObjectRoute(object: IObjectWithComments) {\r\n        if (object.objectType == ReferencedObjectType[ReferencedObjectType.MATERIAL]) {\r\n            if (!object.available) {\r\n                notifier.error(\"Access to the material is restricted\");\r\n            } else {\r\n                this.$location.url(this.materialsRouter.watchUrl(object.objectId));\r\n            }\r\n        } else if (object.objectType == ReferencedObjectType[ReferencedObjectType.NEWS]) {\r\n            this.$location.url(this.newsRouter.oneNewsUrl(object.objectId));\r\n        }\r\n    }\r\n\r\n    public getGlyphiconClass(objectType: string, materialTypeId?: number): string {\r\n        switch (objectType) {\r\n            case ReferencedObjectType[ReferencedObjectType.MATERIAL]: return ObjectTypeUtils.getMaterialGlyphiconClass(materialTypeId);\r\n            case ReferencedObjectType[ReferencedObjectType.NEWS]: return ObjectTypeUtils.getNewsGlyphiconClass();\r\n        }\r\n    }\r\n\r\n    public getTypeTitle(objectType: string, materialTypeId: number): string {\r\n        switch (objectType) {\r\n            case ReferencedObjectType[ReferencedObjectType.MATERIAL]: return ObjectTypeUtils.getMaterialTypeTitle(materialTypeId);\r\n            default: return ObjectTypeUtils.getReferenceObjectTypeTitle(objectType);\r\n        }\r\n    }\r\n\r\n    public getObjectRouteForComment(object:IObjectWithComments, commentId: number) {\r\n        if (object.permissions.view) {\r\n            if (object.objectType == ReferencedObjectType[ReferencedObjectType.MATERIAL]) {\r\n                this.$location.url(this.materialsRouter.watchUrl(object.objectId)).hash(\"comment\" + commentId);\r\n            } else if (object.objectType == ReferencedObjectType[ReferencedObjectType.NEWS]) {\r\n                this.$location.url(this.newsRouter.oneNewsUrl(object.objectId)).hash(\"comment\" + commentId);\r\n            }\r\n        }\r\n    }\r\n\r\n    private loadUserProfile(): void {\r\n        this.userService.getCurrentUserProfile().then(u => {\r\n            this.userProfile = u;\r\n        })\r\n    }\r\n}","import {PersonalService} from \"./PersonalService\";\r\nimport {ProfileController} from \"./ProfileController\";\r\nimport {FavoritesController} from \"./FavoritesController\";\r\nimport {UploadsController} from \"./UploadsController\";\r\nimport {CoursesController} from \"./CoursesController\";\r\nimport {QuizzesController} from \"./QuizzesController\";\r\nimport {PlaylistsController} from \"./PlaylistsController\";\r\nimport {SubscriptionsController} from \"./SubscriptionsController\";\r\nimport {NewCommentsController} from \"./NewCommentsController\";\r\nimport {SupportController} from \"./SupportController\";\r\nimport {CouponsController} from \"./CouponsController\";\r\nimport {PurchasesHistoryController} from \"./PurchasesHistoryController\";\r\nimport {BalanceController} from \"./BalanceController\";\r\nimport {SettingsController} from \"./SettingsController\";\r\n\r\nimport {SecurityModule} from \"./../security/SecurityModule\";\r\nimport {UrlsModule} from \"./../urls/UrlsModule\";\r\nimport {SettingsModule} from \"./../settings/SettingsModule\";\r\nimport {ReferenceModule} from \"./../reference/ReferenceModule\";\r\nimport {UsersModule} from \"./../users/UsersModule\";\r\n\r\nexport var PersonalModule: angular.IModule = angular\r\n    .module(\"personal\", [\r\n        SecurityModule.name,\r\n        UrlsModule.name,\r\n        SettingsModule.name,\r\n        ReferenceModule.name,\r\n        UsersModule.name\r\n    ])\r\n    .service(PersonalService.NAME, PersonalService)\r\n    .controller(ProfileController.NAME, ProfileController)\r\n    .controller(FavoritesController.NAME, FavoritesController)\r\n    .controller(UploadsController.NAME, UploadsController)\r\n    .controller(CoursesController.NAME, CoursesController)\r\n    .controller(QuizzesController.NAME, QuizzesController)\r\n    .controller(PlaylistsController.NAME, PlaylistsController)\r\n    .controller(NewCommentsController.NAME, NewCommentsController)\r\n    .controller(SubscriptionsController.NAME, SubscriptionsController)\r\n    .controller(SupportController.NAME, SupportController)\r\n    .controller(CouponsController.NAME, CouponsController)\r\n    .controller(PurchasesHistoryController.NAME, PurchasesHistoryController)\r\n    .controller(BalanceController.NAME, BalanceController)\r\n    .controller(SettingsController.NAME, SettingsController);","import {UrlService} from \"./../utils/UrlService\";\r\nimport {IComment} from \"./../social/models/IComment\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\n\r\nexport class PersonalService {\r\n    public static NAME = \"personal.PersonalService\";\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private url: UrlService) {\r\n    }\r\n\r\n    public addToFavorites(objectId: number, objectType: ReferencedObjectType) {\r\n        return this.$http.post(this.url.base(\"/api/personal/favorites?objectId=:objectId&objectType=:objectType\")\r\n            .param(\":objectId\", objectId)\r\n            .param(\":objectType\", ReferencedObjectType[objectType])\r\n            .service(), null)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public removeFromFavorites(objectId: number, objectType: ReferencedObjectType) {\r\n        return this.$http.delete(this.url.service(\"/api/personal/favorites\"), {params: {\r\n            objectId: objectId,\r\n            objectType: ReferencedObjectType[objectType]\r\n        }}).then(result => result.data);\r\n    }\r\n\r\n    public getUserCommentsForObject(objectId: number, objectType: ReferencedObjectType): angular.IPromise<Array<IComment>> {\r\n        return this.$http.get(this.url.base(\"/api/personal/comments?objectId=:objectId&objectType=:objectType\")\r\n            .param(\":objectId\", objectId)\r\n            .param(\":objectType\", ReferencedObjectType[objectType])\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public changeAuthorSubscription(authorId: number): angular.IPromise<boolean> {\r\n        return this.$http.post(this.url.base(\"/api/personal/subscribe/author?authorId=:authorId\")\r\n            .param(\":authorId\", authorId)\r\n            .service(), null)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public changeNewsSubscription(newsType: string): angular.IPromise<boolean> {\r\n        return this.$http.post(this.url.service(\"/api/personal/subscribe/news\"), newsType)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public loadSubscriptions(): angular.IPromise<any> {\r\n        return this.$http.get(this.url.service(\"/api/personal/subscriptions\"))\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public changeSubscriptions(subscriptions: any) {\r\n        return this.$http.post(this.url.service(\"/api/personal/subscribe/all\"), subscriptions)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public sendMessageToSupport(messageToSupport: string) {\r\n        return this.$http.post(this.url.service(\"/api/personal/support\"), messageToSupport)\r\n            .then(result => result.data);\r\n    }\r\n}\r\n","import {PersonalService} from \"./PersonalService\";\r\n\r\nimport {IUser} from \"./../users/models/IUser\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {IPlaylist} from \"./../materials/models/IPlaylist\";\r\nimport {MaterialsRouter} from \"./../urls/MaterialsRouter\";\r\nimport {IGridModel, GridModel} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\nimport {notifier} from \"./../INotifier\";\r\n\r\nexport class PlaylistsController {\r\n    public static NAME = \"personal.PlaylistsController\";\r\n\r\n    public userProfile: IUser;\r\n    public playlistsGridModel: IGridModel<IPlaylist>;\r\n    public rowShow: Map<number, boolean> = new Map<number, boolean>();\r\n    public viewType: number;\r\n    public playlistViewType: number;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$location\",\r\n        UrlService.NAME,\r\n        SecurityService.NAME,\r\n        UserService.NAME,\r\n        PersonalService.NAME,\r\n        MaterialsRouter.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private $location: angular.ILocationService,\r\n                private url: UrlService,\r\n                private securityService: SecurityService,\r\n                private userService: UserService,\r\n                private personalService: PersonalService,\r\n                public materialsRouter: MaterialsRouter) {\r\n        this.securityService.demandAuthentication();\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.PERSONAL_ACCOUNT_PLAYLISTS_MENU_KEY);\r\n\r\n        this.viewType = 0;\r\n        this.playlistViewType = 1;\r\n\r\n        this.loadUserProfile();\r\n\r\n        this.playlistsGridModel = new GridModel(HttpGridHelper.createLoader<IPlaylist>($http, this.url.service(\"/api/playlists/profilePlaylists\")));\r\n        this.playlistsGridModel.entries.forEach(e => {\r\n            this.rowShow.set(e.id, false);\r\n        });\r\n    }\r\n\r\n    public showDetails(index: number): void {\r\n        this.rowShow.set(index, !this.rowShow.get(index));\r\n    }\r\n\r\n    public loadPlaylist(playlistId: number): void {\r\n        this.$location.url(this.materialsRouter.playlistDetailsUrl(playlistId));\r\n    }\r\n\r\n    public setPlaylistViewType(viewType: number): void {\r\n        this.playlistViewType = viewType;\r\n        this.searchGridModelObjects(this.playlistsGridModel, this.playlistViewType);\r\n    }\r\n\r\n    public addPlaylistToFavorites(playlist: IPlaylist) {\r\n        this.addToFavorites(playlist.id, ReferencedObjectType.PLAYLIST).then(result => {\r\n            notifier.success(\"The playlist has been added to your favorites\");\r\n            playlist.favorite = true;\r\n        }).catch(response => {\r\n            if(response.data.error == \"object.already.in.favorite\") {\r\n                notifier.error(\"This playlist is already in your favorites\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public removePlaylistFromFavorites(playlist: IPlaylist) {\r\n        this.removeFromFavorites(playlist.id, ReferencedObjectType.PLAYLIST).then(result => {\r\n            notifier.success(\"The playlist has been removed from your favorites\");\r\n            playlist.favorite = false;\r\n        }).catch(response => {\r\n            if(response.data.error == \"object.not.in.favorite\") {\r\n                notifier.error(\"Failed to remove from your favorites\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public getLanguages(languages: Array<string>): string {\r\n        var languagesStr: string = \"\";\r\n        languages.forEach(l => {\r\n            languagesStr +=  l + \", \";\r\n        });\r\n        return languagesStr.substring(0, languagesStr.length-2);\r\n    }\r\n\r\n    private searchGridModelObjects(gridModel: IGridModel<any>, viewType: number): void {\r\n        gridModel.filter.viewType = viewType;\r\n        gridModel.loadCurrentPage();\r\n    }\r\n\r\n    private addToFavorites(id: number, type: ReferencedObjectType) {\r\n        this.rowShow.set(id, !this.rowShow.get(id));\r\n        return this.personalService.addToFavorites(id, type);\r\n    }\r\n\r\n    private removeFromFavorites(id: number, type: ReferencedObjectType) {\r\n        this.rowShow.set(id, !this.rowShow.get(id));\r\n        return this.personalService.removeFromFavorites(id, type);\r\n    }\r\n\r\n    private loadUserProfile(): void {\r\n        this.userService.getCurrentUserProfile().then(u => {\r\n            this.userProfile = u;\r\n        })\r\n    }\r\n}","import {ProfileMenuItemsKey} from \"./ProfileMenuItemsKey\";\r\nimport {MaterialType} from \"./../materials/models/MaterialType\";\r\n\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {PersonalService} from \"./PersonalService\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {MaterialService} from \"./../materials/MaterialService\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {SettingsService} from \"./../settings/SettingsService\";\r\nimport {QuizService} from \"./../quizzes/QuizService\";\r\nimport {ReferenceService} from \"./../reference/ReferenceService\";\r\n\r\nimport {MaterialsRouter} from \"./../urls/MaterialsRouter\";\r\nimport {CoursesRouter} from \"./../urls/CoursesRouter\";\r\nimport {NewsRouter} from \"./../urls/NewsRouter\";\r\nimport {QuizzesRouter} from \"./../urls/QuizzesRouter\";\r\n\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {ObjectTypeUtils} from \"./../utils/ObjectTypeUtils\";\r\nimport {IGridModel, GridModel, IGridLoadingListener} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {notifier} from \"./../INotifier\";\r\n\r\nimport {IMaterial} from \"./../materials/models/IMaterial\";\r\nimport {IObjectWithComments} from \"./models/IObjectWithComments\";\r\nimport {IComment} from \"./../social/models/IComment\";\r\nimport {IUser, PredefinedUsersEnum} from \"./../users/models/IUser\";\r\nimport {IUserLogon} from \"./../users/models/IUserLogon\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\nimport {ISystemLocale} from \"./../settings/models/ISystemLocale\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\nimport {IPlaylist} from \"./../materials/models/IPlaylist\";\r\nimport {ISubject} from \"./../ISubject\";\r\nimport {IQuiz} from \"./../quizzes/models/IQuiz\";\r\nimport {IQuizResult} from \"./../quizzes/models/IQuizResult\";\r\nimport {ICourse} from \"./../courses/models/ICourse\";\r\n\r\nexport class ProfileController {\r\n    public static NAME = \"personal.ProfileController\";\r\n\r\n    public isAuthenticated: boolean;\r\n    private systemPermissions: ISystemPermissions;\r\n\r\n    public leftMenu: Array<any>;\r\n    public currentMenuItem: number;\r\n    public rowShow: Map<number, boolean> = new Map<number, boolean>();\r\n    public viewType: number;\r\n    public uploadsGridModel: IGridModel<IMaterial>;\r\n    public objectsWithCommentsGridModel: IGridModel<IObjectWithComments>;\r\n    public objectComments: Map<number, Array<IComment>> = new Map<number, Array<IComment>>();\r\n    public disableGetCommentsButton: boolean;\r\n    public coursesGridModel: IGridModel<ICourse>;\r\n    public playlistsGridModel: IGridModel<IPlaylist>;\r\n    public createdQuizzesGridModel: IGridModel<IQuiz>;\r\n    public passedQuizzesGridModel: IGridModel<IQuizResult>;\r\n    public quizResults: Map<number, Array<IQuizResult>> = new Map<number, Array<IQuizResult>>();\r\n    public disableGetQuizResultsButton: boolean;\r\n\r\n    public userProfile: IUser;\r\n    public newUserProfile: IUser;\r\n    public userLogon: IUserLogon;\r\n    public confirmPassword: string;\r\n    public groups: Array<ISelectable>;\r\n    public availableLocales: Array<ISystemLocale>;\r\n    public disableSaveButton: boolean = false;\r\n    public isEverythingDisabled: boolean;\r\n    public playlistViewType: number;\r\n    public quizViewType: number;\r\n    public subscriptions: any;\r\n    public users: Array<ISelectable> = [];\r\n    public messageToSupport: string;\r\n    public notificationsFrequency: Array<ISelectable>;\r\n    public hasCreatedQuizzes: boolean = false;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$location\",\r\n        UrlService.NAME,\r\n        PermissionsService.NAME,\r\n        ReferenceService.NAME,\r\n        PersonalService.NAME,\r\n        SecurityService.NAME,\r\n        UserService.NAME,\r\n        SettingsService.NAME,\r\n        QuizService.NAME,\r\n        MaterialsRouter.NAME,\r\n        CoursesRouter.NAME,\r\n        NewsRouter.NAME,\r\n        QuizzesRouter.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private $location: angular.ILocationService,\r\n                private url: UrlService,\r\n                private permissionsApi: PermissionsService,\r\n                private referenceApi: ReferenceService,\r\n                private personalService: PersonalService,\r\n                private securityService: SecurityService,\r\n                private userService: UserService,\r\n                private settingsService: SettingsService,\r\n                private quizService: QuizService,\r\n                public materialsRouter: MaterialsRouter,\r\n                public coursesRouter: CoursesRouter,\r\n                public newsRouter: NewsRouter,\r\n                public quizzesRouter: QuizzesRouter) {\r\n        this.securityService.demandAuthentication();\r\n        this.isAuthenticated = true;\r\n\r\n        this.currentMenuItem = 0;\r\n        this.viewType = 0;\r\n        this.disableGetCommentsButton = false;\r\n        this.disableGetQuizResultsButton = false;\r\n        this.rowShow.set(1, false);\r\n        this.rowShow.set(2, false);\r\n        this.rowShow.set(3, false);\r\n        this.rowShow.set(4, false);\r\n\r\n        this.permissionsApi.getSystemPermissions().then(systemPermissions => {\r\n            this.systemPermissions = systemPermissions;\r\n            this.loadLeftMenu();\r\n        });\r\n\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.PROFILE_MENU_KEY);\r\n        PageHeader.set().header(\"My Profile\").update();\r\n\r\n        this.newUserProfile = {\r\n            fullName: \"\",\r\n            locale: null\r\n        };\r\n        this.userLogon = {\r\n            name: \"\",\r\n            password: \"\"\r\n        };\r\n        this.loadUserProfile();\r\n        this.loadUserLogon();\r\n\r\n        this.uploadsGridModel = new GridModel(HttpGridHelper.createLoader<IMaterial>($http, this.url.service(\"/api/materials/uploads\")));\r\n        this.uploadsGridModel.entries.forEach(e => {\r\n            this.rowShow.set(e.id, false);\r\n        });\r\n\r\n        this.objectsWithCommentsGridModel = new GridModel(HttpGridHelper.createLoader<IObjectWithComments>($http,\r\n            this.url.service(\"/api/personal/comments/objects\")));\r\n        this.objectsWithCommentsGridModel.entries.forEach(e => {\r\n            this.rowShow.set(e.objectId, false);\r\n        });\r\n\r\n        this.coursesGridModel = new GridModel(HttpGridHelper.createLoader<ICourse>($http, this.url.service(\"/api/courses/my\")));\r\n        this.coursesGridModel.entries.forEach(e => {\r\n            this.rowShow.set(e.id, false);\r\n        });\r\n\r\n        this.playlistsGridModel = new GridModel(HttpGridHelper.createLoader<IPlaylist>($http, this.url.service(\"/api/playlists/profilePlaylists\")));\r\n        this.playlistsGridModel.entries.forEach(e => {\r\n            this.rowShow.set(e.id, false);\r\n        });\r\n\r\n        this.playlistViewType = 1;\r\n\r\n        this.createdQuizzesGridModel = new GridModel(HttpGridHelper.createLoader<IQuiz>($http, this.url.service(\"/api/quizzes/profileQuizzes/created\")));\r\n        this.createdQuizzesGridModel.entries.forEach(e => {\r\n            this.rowShow.set(e.id, false);\r\n        });\r\n\r\n        this.passedQuizzesGridModel = new GridModel(HttpGridHelper.createLoader<IQuizResult>($http, this.url.service(\"/api/quizzes/profileQuizzes/passed\")));\r\n        this.passedQuizzesGridModel.entries.forEach(e => {\r\n            this.rowShow.set(e.id, false);\r\n        });\r\n\r\n        this.quizViewType = 1;\r\n\r\n        this.subscriptions = {\r\n            authorsIds: [],\r\n            subjectsIds: [],\r\n            allNewsSubscription: false,\r\n            studentsNewsSubscription: false,\r\n            commentsSubscription: false\r\n        };\r\n\r\n        this.loadSubscriptions();\r\n        this.loadNotificationsFrequency();\r\n        this.getUserHasCreatedQuizzes();\r\n    }\r\n\r\n    private loadLeftMenu(): void {\r\n        this.leftMenu = [\r\n            {key: ProfileMenuItemsKey.MY_COURSES, value: \"My courses\"},\r\n            {key: ProfileMenuItemsKey.MY_QUIZZES, value: \"My quizzes\"},\r\n            {key: ProfileMenuItemsKey.MY_PLAYLISTS, value: \"My playlists\"},\r\n            {key: ProfileMenuItemsKey.SUBSCRIPTIONS, value: \"My subscriptions\"},\r\n            {key: ProfileMenuItemsKey.NEW_COMMENTS, value: \"New comments\"},\r\n            {key: ProfileMenuItemsKey.SUPPORT, value: \"Support\"},\r\n            {key: ProfileMenuItemsKey.COUPONS, value: \"Coupons\"},\r\n            {key: ProfileMenuItemsKey.SETTINGS, value: \"Settings\"},\r\n        ];\r\n        if (this.systemPermissions.addMaterial) {\r\n            this.leftMenu.push({\r\n                key: ProfileMenuItemsKey.MY_UPLOADS,\r\n                value: \"My uploads\"\r\n            });\r\n            /* Hidden as per VHS-95\r\n             this.leftMenu.push({\r\n             key: ProfileMenuItemsKey.ACCOUNT_MANAGEMENT,\r\n             value: \"Withdraw\"\r\n             });\r\n             */\r\n        }\r\n        if (this.systemPermissions.rechargeAccount) {\r\n            this.leftMenu.push({key: ProfileMenuItemsKey.BALANCE, value: \"Top-up\"});\r\n        }\r\n        if (this.systemPermissions.viewPurchaseHistory) {\r\n            this.leftMenu.push({\r\n                key: ProfileMenuItemsKey.HISTORY,\r\n                value: \"History of purchases\"\r\n            });\r\n        }\r\n        this.leftMenu.sort(function compare(a, b) {\r\n            if (a.key < b.key) {\r\n                return -1;\r\n            }\r\n            if (a.key > b.key) {\r\n                return 1;\r\n            }\r\n            return 0;\r\n        })\r\n    }\r\n\r\n    private loadUserProfile(): void {\r\n        this.confirmPassword = \"\";\r\n        this.userService.getCurrentUserProfile().then(u => {\r\n            this.userProfile = u;\r\n            angular.copy(u, this.newUserProfile);\r\n            this.isEverythingDisabled = (u.id == PredefinedUsersEnum.GUEST);\r\n            this.loadAvailableLocales();\r\n        })\r\n    }\r\n\r\n    private loadUserLogon(): void {\r\n        this.userService.getCurrentUserLocalLogon().then(logon => {\r\n            if (logon) {\r\n                angular.copy(logon, this.userLogon);\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    private loadAvailableLocales(): void {\r\n        this.settingsService.getAvailableLocales().then(locales => {\r\n            this.availableLocales = locales;\r\n        });\r\n    }\r\n\r\n    private loadNotificationsFrequency(): void {\r\n        this.referenceApi.getActiveReferenceEntitiesForSelectorWithoutParams(\"calendarPeriods\", [])\r\n        .then(frequency => {\r\n            this.notificationsFrequency = frequency;\r\n        })\r\n    }\r\n\r\n    private getUserHasCreatedQuizzes(): void {\r\n        this.quizService.hasUserCreatedQuizzes().then(result => {\r\n            this.hasCreatedQuizzes = result;\r\n        })\r\n    }\r\n\r\n    public saveProfileSettings() {\r\n        this.disableSaveButton = true;\r\n        this.confirmPassword = null;\r\n\r\n        var promise = this.userService.updateCurrentUserProfile(this.newUserProfile, this.userLogon.password);\r\n        promise.then(u => {\r\n            this.disableSaveButton = false;\r\n            notifier.success(\"Settings are successfully saved\");\r\n            this.loadUserProfile();\r\n        }).catch(response => {\r\n            this.disableSaveButton = false;\r\n            if (response.data.error == \"error.email.not.unique\") {\r\n                notifier.error(\"This email has already been registered in the system\")\r\n            } else if (response.data.error == \"error.try.update.another.user\") {\r\n                notifier.error(\"You can change only your own profile settings\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public cancelProfileSettings() {\r\n        this.loadUserProfile();\r\n        this.loadUserLogon();\r\n    }\r\n\r\n    public setLeftMenuItem(item: number): void {\r\n        this.currentMenuItem = item;\r\n    }\r\n\r\n    public isLeftMenuItemActive(item: number): boolean {\r\n        return this.currentMenuItem == item;\r\n    }\r\n\r\n    public showDetails(index: number): void {\r\n        this.rowShow.set(index, !this.rowShow.get(index));\r\n    }\r\n\r\n    public watch(materialId: number): void {\r\n        this.$location.url(this.materialsRouter.watchUrl(materialId));\r\n    }\r\n\r\n    public getObjectRoute(object: IObjectWithComments) {\r\n        if (object.objectType == ReferencedObjectType[ReferencedObjectType.MATERIAL]) {\r\n            if (!object.available) {\r\n                notifier.error(\"Access to the material is restricted\");\r\n            } else {\r\n                this.$location.url(this.materialsRouter.watchUrl(object.objectId));\r\n            }\r\n        } else if (object.objectType == ReferencedObjectType[ReferencedObjectType.NEWS]) {\r\n            this.$location.url(this.newsRouter.oneNewsUrl(object.objectId));\r\n        }\r\n    }\r\n\r\n    public getObjectRouteForComment(object:IObjectWithComments, commentId: number) {\r\n        if (object.permissions.view) {\r\n            if (object.objectType == ReferencedObjectType[ReferencedObjectType.MATERIAL]) {\r\n                this.$location.url(this.materialsRouter.watchUrl(object.objectId)).hash(\"comment\" + commentId);\r\n            } else if (object.objectType == ReferencedObjectType[ReferencedObjectType.NEWS]) {\r\n                this.$location.url(this.newsRouter.oneNewsUrl(object.objectId)).hash(\"comment\" + commentId);\r\n            }\r\n        }\r\n    }\r\n\r\n    public getGlyphiconClass(objectType: string, materialTypeId?: number): string {\r\n        switch (objectType) {\r\n            case ReferencedObjectType[ReferencedObjectType.MATERIAL]: return ObjectTypeUtils.getMaterialGlyphiconClass(materialTypeId);\r\n            case ReferencedObjectType[ReferencedObjectType.NEWS]: return ObjectTypeUtils.getNewsGlyphiconClass();\r\n        }\r\n    }\r\n\r\n    public getTypeTitle(objectType: string, materialTypeId: number): string {\r\n        switch (objectType) {\r\n            case ReferencedObjectType[ReferencedObjectType.MATERIAL]: return ObjectTypeUtils.getMaterialTypeTitle(materialTypeId);\r\n            default: return ObjectTypeUtils.getReferenceObjectTypeTitle(objectType);\r\n        }\r\n    }\r\n\r\n    public showComments(objectId: number, objectType: string): void {\r\n        if (!this.rowShow.get(objectId) && !this.disableGetCommentsButton) {\r\n            if (!this.objectComments.has(objectId)) {\r\n                this.disableGetCommentsButton = true;\r\n                this.personalService.getUserCommentsForObject(objectId, ObjectTypeUtils.getReferenceObjectTypeFromString(objectType)).then(result => {\r\n                    this.objectComments.set(objectId, result);\r\n                    this.rowShow.set(objectId, !this.rowShow.get(objectId));\r\n                    this.disableGetCommentsButton = false;\r\n                });\r\n            }\r\n        } else {\r\n            this.rowShow.set(objectId, !this.rowShow.get(objectId));\r\n        }\r\n    }\r\n\r\n    public showQuizResults(id: number, quizId: number, sourceType: string, sectionId?: number): void {\r\n        if (!this.rowShow.get(id) && !this.disableGetQuizResultsButton && this.quizViewType == 1 && !this.quizResults.has(id)) {\r\n            this.disableGetQuizResultsButton = true;\r\n            this.quizService.getUserQuizResults(quizId, sourceType, sectionId).then(result => {\r\n                this.quizResults.set(id, result);\r\n                this.rowShow.set(id, !this.rowShow.get(id));\r\n                this.disableGetQuizResultsButton = false;\r\n            });\r\n        } else {\r\n            this.rowShow.set(id, !this.rowShow.get(id));\r\n        }\r\n    }\r\n\r\n    public getLanguages(languages: Array<string>): string {\r\n        var languagesStr: string = \"\";\r\n        languages.forEach(l => {\r\n            languagesStr +=  l + \", \";\r\n        });\r\n        return languagesStr.substring(0, languagesStr.length-2);\r\n    }\r\n\r\n    public loadPlaylist(playlistId: number): void {\r\n        this.$location.url(this.materialsRouter.playlistDetailsUrl(playlistId));\r\n    }\r\n\r\n    public loadCourse(courseId: number): void {\r\n        this.$location.url(this.coursesRouter.detailsUrl(courseId));\r\n    }\r\n\r\n    public loadQuiz(quizId: number): void {\r\n        this.$location.url(this.quizzesRouter.detailsUrl(quizId));\r\n    }\r\n\r\n    public addCourseToFavorites(course: ICourse) {\r\n        this.addToFavorites(course.id, ReferencedObjectType.COURSE).then(result => {\r\n            notifier.success(\"The course has been added to your favorites\");\r\n            course.favorite = true;\r\n        }).catch(response => {\r\n            if(response.data.error == \"object.already.in.favorite\") {\r\n                notifier.error(\"This course is already in your favorites\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public removeCourseFromFavorites(course: ICourse) {\r\n       this.removeFromFavorites(course.id, ReferencedObjectType.COURSE).then(result => {\r\n           notifier.success(\"The course has been removed from your favorites\");\r\n           course.favorite = false;\r\n       }).catch(response => {\r\n           if(response.data.error == \"object.not.in.favorite\") {\r\n               notifier.error(\"Failed to remove from your favorites\");\r\n           }\r\n       });\r\n    }\r\n\r\n    public addPlaylistToFavorites(playlist: IPlaylist) {\r\n        this.addToFavorites(playlist.id, ReferencedObjectType.PLAYLIST).then(result => {\r\n            notifier.success(\"The playlist has been added to your favorites\");\r\n            playlist.favorite = true;\r\n        }).catch(response => {\r\n            if(response.data.error == \"object.already.in.favorite\") {\r\n                notifier.error(\"This playlist is already in your favorites\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public removePlaylistFromFavorites(playlist: IPlaylist) {\r\n        this.removeFromFavorites(playlist.id, ReferencedObjectType.PLAYLIST).then(result => {\r\n            notifier.success(\"The playlist has been removed from your favorites\");\r\n            playlist.favorite = false;\r\n        }).catch(response => {\r\n            if(response.data.error == \"object.not.in.favorite\") {\r\n                notifier.error(\"Failed to remove from your favorites\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private addToFavorites(id: number, type: ReferencedObjectType) {\r\n        this.rowShow.set(id, !this.rowShow.get(id));\r\n        return this.personalService.addToFavorites(id, type);\r\n    }\r\n\r\n    private removeFromFavorites(id: number, type: ReferencedObjectType) {\r\n        this.rowShow.set(id, !this.rowShow.get(id));\r\n        return this.personalService.removeFromFavorites(id, type);\r\n    }\r\n\r\n    public setPlaylistViewType(viewType: number): void {\r\n        this.playlistViewType = viewType;\r\n        this.searchGridModelObjects(this.playlistsGridModel, this.playlistViewType);\r\n    }\r\n\r\n    public setQuizViewType(viewType: number): void {\r\n        this.quizViewType = viewType;\r\n    }\r\n\r\n    private searchGridModelObjects(gridModel: IGridModel<any>, viewType: number): void {\r\n        gridModel.filter.viewType = viewType;\r\n        gridModel.loadCurrentPage();\r\n    }\r\n\r\n    public loadSubscriptions(): void {\r\n        this.personalService.loadSubscriptions().then(result => {\r\n            angular.copy(result, this.subscriptions);\r\n            this.loadUsers();\r\n        });\r\n    }\r\n\r\n    private loadUsers(): void {\r\n        this.userService.getUsersWithoutExcludedUsersForSelector().then(result => {\r\n            angular.copy(result, this.users);\r\n        });\r\n    }\r\n\r\n    public changeSubscriptionsSettings(): void {\r\n        this.personalService.changeSubscriptions(this.subscriptions).then(result => {\r\n            this.userService.changeUserNotificationFrequency(this.userProfile.notificationFrequencyId).then(result => {\r\n                notifier.success(\"Subscriptions are successfully saved\");\r\n            });\r\n        });\r\n    }\r\n\r\n    public cancelSubscriptionsSettings(): void {\r\n        this.loadSubscriptions();\r\n    }\r\n\r\n    public sendMessageToSupport(): void {\r\n        this.personalService.sendMessageToSupport(this.messageToSupport).then(result => {\r\n            notifier.success(\"Your message has been sent to the help desk, you will hear from them soon\");\r\n            this.messageToSupport = \"\";\r\n        });\r\n    }\r\n}","export class ProfileMenuItemsKey {\r\n    public static MY_UPLOADS: number = 1;\r\n    public static MY_COURSES: number = 2;\r\n    public static MY_QUIZZES: number = 3;\r\n    public static MY_PLAYLISTS: number = 4;\r\n    public static SUBSCRIPTIONS: number = 5;\r\n    public static NEW_COMMENTS: number = 6;\r\n    public static SUPPORT: number = 7;\r\n    public static COUPONS: number = 8;\r\n    public static HISTORY: number = 9;\r\n    public static BALANCE: number = 10;\r\n    public static ACCOUNT_MANAGEMENT: number = 11;\r\n    public static SETTINGS: number = 12;\r\n}","import {IUser} from \"./../users/models/IUser\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\n\r\nexport class PurchasesHistoryController {\r\n    public static NAME = \"personal.PurchasesHistoryController\";\r\n\r\n    public userProfile: IUser;\r\n\r\n    public static $inject = [\r\n        SecurityService.NAME,\r\n        UserService.NAME\r\n    ];\r\n\r\n    constructor(private securityService: SecurityService,\r\n                private userService: UserService) {\r\n        this.securityService.demandAuthentication()\r\n            .demandSystemPermissions(systemPermissions => systemPermissions.viewPurchaseHistory);\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.PERSONAL_ACCOUNT_PURCHASES_HISTORY_MENU_KEY);\r\n\r\n        this.loadUserProfile();\r\n    }\r\n\r\n    private loadUserProfile(): void {\r\n        this.userService.getCurrentUserProfile().then(u => {\r\n            this.userProfile = u;\r\n        })\r\n    }\r\n}","import {IUser} from \"./../users/models/IUser\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {QuizService} from \"./../quizzes/QuizService\";\r\nimport {IQuiz} from \"./../quizzes/models/IQuiz\";\r\nimport {IQuizResult} from \"./../quizzes/models/IQuizResult\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {QuizzesRouter} from \"./../urls/QuizzesRouter\";\r\nimport {IGridModel, GridModel} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\n\r\nexport class QuizzesController {\r\n    public static NAME = \"personal.QuizzesController\";\r\n\r\n    public userProfile: IUser;\r\n    public createdQuizzesGridModel: IGridModel<IQuiz>;\r\n    public passedQuizzesGridModel: IGridModel<IQuizResult>;\r\n    public rowShow: Map<number, boolean> = new Map<number, boolean>();\r\n    public quizResults: Map<number, Array<IQuizResult>> = new Map<number, Array<IQuizResult>>();\r\n    public viewType: number;\r\n    public quizViewType: number;\r\n    public hasCreatedQuizzes: boolean = false;\r\n    public disableGetQuizResultsButton: boolean;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$location\",\r\n        UrlService.NAME,\r\n        SecurityService.NAME,\r\n        UserService.NAME,\r\n        QuizService.NAME,\r\n        QuizzesRouter.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private $location: angular.ILocationService,\r\n                private url: UrlService,\r\n                private securityService: SecurityService,\r\n                private userService: UserService,\r\n                private quizService: QuizService,\r\n                public quizzesRouter: QuizzesRouter) {\r\n        this.securityService.demandAuthentication();\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.PERSONAL_ACCOUNT_QUIZZES_MENU_KEY);\r\n\r\n        this.viewType = 0;\r\n        this.quizViewType = 1;\r\n        this.disableGetQuizResultsButton = false;\r\n\r\n        this.loadUserProfile();\r\n        this.hasUserCreatedQuizzes();\r\n\r\n        this.createdQuizzesGridModel = new GridModel(HttpGridHelper.createLoader<IQuiz>($http, this.url.service(\"/api/quizzes/profileQuizzes/created\")));\r\n        this.createdQuizzesGridModel.entries.forEach(e => {\r\n            this.rowShow.set(e.id, false);\r\n        });\r\n\r\n        this.passedQuizzesGridModel = new GridModel(HttpGridHelper.createLoader<IQuizResult>($http, this.url.service(\"/api/quizzes/profileQuizzes/passed\")));\r\n        this.passedQuizzesGridModel.entries.forEach(e => {\r\n            this.rowShow.set(e.id, false);\r\n        });\r\n    }\r\n\r\n    public setQuizViewType(viewType: number): void {\r\n        this.quizViewType = viewType;\r\n    }\r\n\r\n    public showDetails(index: number): void {\r\n        this.rowShow.set(index, !this.rowShow.get(index));\r\n    }\r\n\r\n    public showQuizResults(id: number, quizId: number, sourceType: string, sectionId?: number): void {\r\n        if (!this.rowShow.get(id) && !this.disableGetQuizResultsButton && this.quizViewType == 1 && !this.quizResults.has(id)) {\r\n            this.disableGetQuizResultsButton = true;\r\n            this.quizService.getUserQuizResults(quizId, sourceType, sectionId).then(result => {\r\n                this.quizResults.set(id, result);\r\n                this.rowShow.set(id, !this.rowShow.get(id));\r\n                this.disableGetQuizResultsButton = false;\r\n            });\r\n        } else {\r\n            this.rowShow.set(id, !this.rowShow.get(id));\r\n        }\r\n    }\r\n\r\n    public loadQuiz(quizId: number): void {\r\n        this.$location.url(this.quizzesRouter.detailsUrl(quizId));\r\n    }\r\n\r\n    private hasUserCreatedQuizzes(): void {\r\n        this.quizService.hasUserCreatedQuizzes().then(result => {\r\n            this.hasCreatedQuizzes = result;\r\n        })\r\n    }\r\n\r\n    private loadUserProfile(): void {\r\n        this.userService.getCurrentUserProfile().then(u => {\r\n            this.userProfile = u;\r\n        })\r\n    }\r\n}","import {IUser} from \"./../users/models/IUser\";\r\nimport {IUserLogon} from \"../users/models/IUserLogon\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {PredefinedUsersEnum} from \"./../users/models/IUser\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {ISystemLocale} from \"./../settings/models/ISystemLocale\";\r\nimport {SettingsService} from \"./../settings/SettingsService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {MainRouter} from \"../urls/MainRouter\";\r\nimport ILocationService = angular.ILocationService;\r\nimport {UrlService} from \"../utils/UrlService\";\r\n\r\nexport class SettingsController {\r\n    public static NAME = \"personal.SettingsController\";\r\n\r\n    public userProfile: IUser;\r\n    public newUserProfile: IUser;\r\n    public userLogon: IUserLogon;\r\n    public availableLocales: Array<ISystemLocale>;\r\n    public disableSaveButton: boolean = false;\r\n    public confirmPassword: string;\r\n    public isEverythingDisabled: boolean;\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        SecurityService.NAME,\r\n        UserService.NAME,\r\n        SettingsService.NAME,\r\n        MainRouter.NAME,\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $location: ILocationService,\r\n                private securityService: SecurityService,\r\n                private userService: UserService,\r\n                private settingsService: SettingsService,\r\n                private mainRouter: MainRouter,\r\n                private url: UrlService) {\r\n        this.securityService.demandAuthentication();\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.PERSONAL_ACCOUNT_SETTINGS_MENU_KEY);\r\n\r\n        this.newUserProfile = {\r\n            fullName: \"\",\r\n            locale: null\r\n        };\r\n        this.userLogon = {\r\n            name: \"\",\r\n            password: \"\"\r\n        };\r\n\r\n        this.loadUserProfile();\r\n        this.loadUserLogon();\r\n    }\r\n\r\n    public saveProfileSettings() {\r\n        this.disableSaveButton = true;\r\n        this.confirmPassword = null;\r\n        this.newUserProfile.fullName = this.newUserProfile.firstName + \"\\u00A0\" + this.newUserProfile.lastName;\r\n\r\n\r\n        var promise = this.userService.updateCurrentUserProfile(this.newUserProfile, this.userLogon.password);\r\n        promise.then(u => {\r\n            this.disableSaveButton = false;\r\n            notifier.success(\"Settings are successfully saved\");\r\n            // this.loadUserProfile();\r\n            this.$location.url(this.mainRouter.mainUrl());\r\n        }).catch(response => {\r\n            this.disableSaveButton = false;\r\n            if (response.data.error == \"error.email.not.unique\") {\r\n                notifier.error(\"This email has already been registered in the system\")\r\n            } else if (response.data.error == \"error.try.update.another.user\") {\r\n                notifier.error(\"You can change only your own profile settings\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public cancelProfileSettings() {\r\n        this.loadUserProfile();\r\n        this.loadUserLogon();\r\n    }\r\n\r\n    private loadUserProfile(): void {\r\n        this.confirmPassword = \"\";\r\n        this.userService.getCurrentUserProfile().then(u => {\r\n            u.firstName = u.fullName.split(\"\\u00A0\")[0];\r\n            u.lastName = u.fullName.split(\"\\u00A0\").length > 1 ? u.fullName.split(\"\\u00A0\")[1] : \"\";\r\n            this.userProfile = u;\r\n            angular.copy(u, this.newUserProfile);\r\n            this.isEverythingDisabled = (u.id == PredefinedUsersEnum.GUEST);\r\n            this.loadAvailableLocales();\r\n        })\r\n    }\r\n\r\n    private loadUserLogon(): void {\r\n        this.userService.getCurrentUserLocalLogon().then(logon => {\r\n            if (logon) {\r\n                angular.copy(logon, this.userLogon);\r\n            }\r\n        })\r\n    }\r\n\r\n    private loadAvailableLocales(): void {\r\n        this.settingsService.getAvailableLocales().then(locales => {\r\n            this.availableLocales = locales;\r\n        });\r\n    }\r\n}","import {PersonalService} from \"./PersonalService\";\r\n\r\nimport {IUser} from \"./../users/models/IUser\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {ReferenceService} from \"./../reference/ReferenceService\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\n\r\nexport class SubscriptionsController {\r\n    public static NAME = \"personal.SubscriptionsController\";\r\n\r\n    public userProfile: IUser;\r\n    public subscriptions: any;\r\n    public users: Array<ISelectable> = [];\r\n    public notificationsFrequency: Array<ISelectable>;\r\n    public disableSaveButton: boolean = false;\r\n\r\n    public static $inject = [\r\n        SecurityService.NAME,\r\n        UserService.NAME,\r\n        PersonalService.NAME,\r\n        ReferenceService.NAME\r\n    ];\r\n\r\n    constructor(private securityService: SecurityService,\r\n                private userService: UserService,\r\n                private personalService: PersonalService,\r\n                private referenceApi: ReferenceService) {\r\n        this.securityService.demandAuthentication();\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.PERSONAL_ACCOUNT_SUBSCRIPTIONS_MENU_KEY);\r\n\r\n        this.subscriptions = {\r\n            authorsIds: [],\r\n            subjectsIds: [],\r\n            allNewsSubscription: false,\r\n            studentsNewsSubscription: false,\r\n            commentsSubscription: false\r\n        };\r\n\r\n        this.loadUserProfile();\r\n        this.loadSubscriptions();\r\n        this.loadNotificationsFrequency();\r\n    }\r\n\r\n    public changeSubscriptionsSettings(): void {\r\n        this.personalService.changeSubscriptions(this.subscriptions).then(result => {\r\n            this.userService.changeUserNotificationFrequency(this.userProfile.notificationFrequencyId).then(result => {\r\n                notifier.success(\"Subscriptions are successfully saved\");\r\n            });\r\n        });\r\n    }\r\n\r\n    private loadUserProfile(): void {\r\n        this.userService.getCurrentUserProfile().then(u => {\r\n            this.userProfile = u;\r\n        });\r\n    }\r\n\r\n    public loadSubscriptions(): void {\r\n        this.personalService.loadSubscriptions().then(result => {\r\n            angular.copy(result, this.subscriptions);\r\n            this.loadUsers();\r\n        });\r\n    }\r\n\r\n    public cancelSubscriptionsSettings(): void {\r\n        this.loadSubscriptions();\r\n        this.loadUserProfile();\r\n    }\r\n\r\n    private loadNotificationsFrequency(): void {\r\n        this.referenceApi.getActiveReferenceEntitiesForSelectorWithoutParams(\"calendarPeriods\", [])\r\n            .then(frequency => {\r\n                this.notificationsFrequency = frequency;\r\n            })\r\n    }\r\n\r\n    private loadUsers(): void {\r\n        this.userService.getUsersWithoutExcludedUsersForSelector().then(result => {\r\n            angular.copy(result, this.users);\r\n        });\r\n    }\r\n}","import {PersonalService} from \"./PersonalService\";\r\n\r\nimport {IUser} from \"./../users/models/IUser\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {notifier} from \"./../INotifier\";\r\n\r\nexport class SupportController {\r\n    public static NAME = \"personal.SupportController\";\r\n\r\n    public userProfile: IUser;\r\n    public messageToSupport: string;\r\n\r\n    public static $inject = [\r\n        SecurityService.NAME,\r\n        UserService.NAME,\r\n        PersonalService.NAME\r\n    ];\r\n\r\n    constructor(private securityService: SecurityService,\r\n                private userService: UserService,\r\n                private personalService: PersonalService) {\r\n        this.securityService.demandAuthentication();\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.PERSONAL_ACCOUNT_SUPPORT_MENU_KEY);\r\n\r\n        this.loadUserProfile();\r\n    }\r\n\r\n    public sendMessageToSupport(): void {\r\n        this.personalService.sendMessageToSupport(this.messageToSupport).then(result => {\r\n            notifier.success(\"Your message has been sent to the help desk, you will hear from them soon\");\r\n            this.messageToSupport = \"\";\r\n        });\r\n    }\r\n\r\n    private loadUserProfile(): void {\r\n        this.userService.getCurrentUserProfile().then(u => {\r\n            this.userProfile = u;\r\n        })\r\n    }\r\n}","import {IUser} from \"./../users/models/IUser\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {ObjectTypeUtils} from \"./../utils/ObjectTypeUtils\";\r\nimport {IMaterial} from \"./../materials/models/IMaterial\";\r\nimport {MaterialsRouter} from \"./../urls/MaterialsRouter\";\r\nimport {IGridModel, GridModel} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\n\r\nexport class UploadsController {\r\n    public static NAME = \"personal.UploadsController\";\r\n\r\n    public userProfile: IUser;\r\n    public uploadsGridModel: IGridModel<IMaterial>;\r\n    public rowShow: Map<number, boolean> = new Map<number, boolean>();\r\n    public viewType: number;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$location\",\r\n        UrlService.NAME,\r\n        SecurityService.NAME,\r\n        UserService.NAME,\r\n        MaterialsRouter.NAME,\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private $location: angular.ILocationService,\r\n                private url: UrlService,\r\n                private securityService: SecurityService,\r\n                private userService: UserService,\r\n                public materialsRouter: MaterialsRouter) {\r\n        this.securityService.demandAuthentication()\r\n            .demandSystemPermissions(systemPermissions => systemPermissions.addMaterial);\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.PERSONAL_ACCOUNT_UPLOADS_MENU_KEY);\r\n\r\n        this.viewType = 0;\r\n\r\n        this.loadUserProfile();\r\n\r\n        this.uploadsGridModel = new GridModel(HttpGridHelper.createLoader<IMaterial>($http, this.url.service(\"/api/materials/uploads\")));\r\n        this.uploadsGridModel.entries.forEach(e => {\r\n            this.rowShow.set(e.id, false);\r\n        });\r\n    }\r\n\r\n    public showDetails(index: number): void {\r\n        this.rowShow.set(index, !this.rowShow.get(index));\r\n    }\r\n\r\n    public watch(materialId: number): void {\r\n        this.$location.url(this.materialsRouter.watchUrl(materialId));\r\n    }\r\n\r\n    public getGlyphiconClass(objectType: string, materialTypeId?: number): string {\r\n        switch (objectType) {\r\n            case ReferencedObjectType[ReferencedObjectType.MATERIAL]: return ObjectTypeUtils.getMaterialGlyphiconClass(materialTypeId);\r\n            case ReferencedObjectType[ReferencedObjectType.NEWS]: return ObjectTypeUtils.getNewsGlyphiconClass();\r\n        }\r\n    }\r\n\r\n    public getTypeTitle(objectType: string, materialTypeId: number): string {\r\n        switch (objectType) {\r\n            case ReferencedObjectType[ReferencedObjectType.MATERIAL]: return ObjectTypeUtils.getMaterialTypeTitle(materialTypeId);\r\n            default: return ObjectTypeUtils.getReferenceObjectTypeTitle(objectType);\r\n        }\r\n    }\r\n\r\n    private loadUserProfile(): void {\r\n        this.userService.getCurrentUserProfile().then(u => {\r\n            this.userProfile = u;\r\n        })\r\n    }\r\n}","import {IQuiz} from \"./models/IQuiz\";\r\nimport {IQuizResult} from \"./models/IQuizResult\";\r\nimport {QuizzesRouter} from \"./../urls/QuizzesRouter\";\r\nimport {QuizService} from \"./QuizService\";\r\n\r\nimport {AuthManager} from \"./../authcore/AuthManager\";\r\nimport {AuthRedirect} from \"./../authcore/AuthRedirect\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {notifier} from \"./../INotifier\";\r\n\r\nexport class QuizController {\r\n    public static NAME = \"quizzes.QuizController\";\r\n\r\n    public isAuthenticated: boolean;\r\n    private quizId: number;\r\n    public quiz: IQuiz = {};\r\n    public quizResults: Array<IQuizResult> = [];\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        \"$routeParams\",\r\n        AuthManager.NAME,\r\n        AuthRedirect.NAME,\r\n        QuizService.NAME,\r\n        QuizzesRouter.NAME\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                private $routeParams: angular.route.IRouteParamsService,\r\n                private authManager: AuthManager,\r\n                public authRedirect: AuthRedirect,\r\n                private quizService: QuizService,\r\n                private quizzesRouter: QuizzesRouter) {\r\n        this.quizId = $routeParams[QuizzesRouter.QUIZ_ID_PARAM];\r\n        this.isAuthenticated = this.authManager.isAuthenticated();\r\n\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.EDUCATION_QUIZZES_MENU_KEY);\r\n\r\n        this.loadQuiz();\r\n    }\r\n\r\n    private loadQuiz() {\r\n        this.quizService.get(this.quizId).then(q => {\r\n            angular.copy(q, this.quiz);\r\n            PageHeader.set().header(q.title).update();\r\n            this.loadUserQuizResult();\r\n        })\r\n    }\r\n\r\n    private loadUserQuizResult() {\r\n        this.quizService.getUserQuizResults(this.quizId, \"QUIZ\").then(result => {\r\n            angular.copy(result, this.quizResults);\r\n        });\r\n    }\r\n\r\n    public startQuiz() {\r\n        if (!this.isAuthenticated) {\r\n            this.authRedirect.redirectToLogOn();\r\n        } else {\r\n            if (this.quizResults.length == 0) {\r\n                this.quizService.startQuizByUser(this.quizId, \"QUIZ\").then(result => {\r\n                    this.$location.url(this.quizzesRouter.passingUrl(this.quizId));\r\n                });\r\n            } else {\r\n                notifier.error(\"You have reached the limit of retries for this quiz\");\r\n            }\r\n        }\r\n    }\r\n}","import {IQuiz} from \"./models/IQuiz\";\r\nimport {IQuizQuestion} from \"./models/IQuizQuestion\";\r\nimport {IQuizAnswer} from \"./models/IQuizAnswer\";\r\nimport {QuizzesRouter} from \"./../urls/QuizzesRouter\";\r\nimport {QuizService} from \"./QuizService\";\r\n\r\nimport {IPermissionWithUsersAndGroups} from \"./../security/permissions/IPermissionWithUsersAndGroups\";\r\nimport {SecuredObjectType} from \"./../security/permissions/SecuredObjectType\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {AuthService} from \"./../auth/AuthService\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\nimport {UserService} from \"./../users/UserService\";\r\n\r\nexport interface IFile extends File {\r\n    title?: string;\r\n}\r\n\r\nexport class QuizEditController {\r\n    public static NAME = \"quizzes.QuizEditController\";\r\n\r\n    public static PERCENTAGE_TYPE = \"PERCENTAGE\";\r\n\r\n    public quiz: IQuiz;\r\n    public quizQuestions: Array<IQuizQuestion> = [];\r\n    public currentQuestion: IQuizQuestion = {};\r\n    public currentAnswers: Array<IQuizAnswer> = [];\r\n    public isEditQuestion: boolean = false;\r\n    public editQuestionIndex: number;\r\n    public percentageNumber: number;\r\n    public pointsNumber: number;\r\n\r\n    public quizId: number;\r\n    public preview: IFile;\r\n    public disabledSaveButton: boolean = false;\r\n    public owners: Array<ISelectable> = [];\r\n    public permissionsWithUsersAndGroups: Array<IPermissionWithUsersAndGroups> = [];\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$scope\",\r\n        \"$location\",\r\n        \"$routeParams\",\r\n        \"Upload\",\r\n        UrlService.NAME,\r\n        SecurityService.NAME,\r\n        PermissionsService.NAME,\r\n        AuthService.NAME,\r\n        QuizService.NAME,\r\n        UserService.NAME,\r\n        QuizzesRouter.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private $scope,\r\n                private $location: angular.ILocationService,\r\n                private $routeParams: angular.route.IRouteParamsService,\r\n                private $uploader: ng.angularFileUpload.IUploadService,\r\n                private url: UrlService,\r\n                private securityService: SecurityService,\r\n                private permissionsService: PermissionsService,\r\n                private authService: AuthService,\r\n                private quizService: QuizService,\r\n                private userService: UserService,\r\n                private quizzesRouter: QuizzesRouter) {\r\n        this.quizId = $routeParams[QuizzesRouter.QUIZ_ID_PARAM];\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.EDUCATION_QUIZZES_MENU_KEY);\r\n\r\n        let quizIdStr: string = String(this.quizId);\r\n        let hasQuizId: boolean = this.quizId != null;\r\n\r\n        this.securityService.demandAuthentication()\r\n            .demandSystemPermissionsIf(!hasQuizId, systemPermissions => systemPermissions.addQuizzes)\r\n            .demandQuizPermissionsIf(hasQuizId, quizIdStr, quizPermissions => quizPermissions.edit);\r\n\r\n        this.quiz = {\r\n            questions: [],\r\n            correctAnswersType: 'PERCENTAGE'\r\n        };\r\n        this.currentQuestion = {\r\n            text: \"\",\r\n            isMultiple: false,\r\n            answers: []\r\n        };\r\n\r\n        this.userService.getUsersWithoutExcludedUsersForSelector().then(result =>{\r\n            this.owners = angular.copy(result);\r\n        });\r\n        this.authService.getCurrentUser().then(user => {\r\n            this.quiz.ownerId = user.id;\r\n            this.quiz.ownerName = user.fullName;\r\n        });\r\n\r\n        if(hasQuizId) {\r\n            PageHeader.set().header(\"Edit a quiz\").update();\r\n            this.loadQuiz();\r\n            this.disabledSaveButton = false;\r\n            this.loadPermissionsWithUsersAndGroups(SecuredObjectType.QUIZ, quizIdStr);\r\n        } else {\r\n            PageHeader.set().header(\"New quiz\").update();\r\n            this.loadPermissionsWithUsersAndGroups(SecuredObjectType.QUIZ);\r\n        }\r\n\r\n        this.$scope.$on('$locationChangeStart', (event) => {\r\n            if(this.$scope.quiz_form.$dirty && this.disabledSaveButton == false) {\r\n                if(!confirm(\"Unsaved data will be lost if you leave this page\")) {\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private loadQuiz() {\r\n        var promise: angular.IPromise<IQuiz> = this.quizService.get(this.quizId);\r\n        promise.then(result => {\r\n            angular.copy(result, this.quiz);\r\n            if (result.duration != null) {\r\n                this.quiz.duration = result.duration / 60;\r\n            }\r\n            angular.copy(result.questions, this.quizQuestions);\r\n            if (result.correctAnswersType == QuizEditController.PERCENTAGE_TYPE) {\r\n                this.percentageNumber = result.correctAnswersNumber;\r\n            } else {\r\n                this.pointsNumber = result.correctAnswersNumber;\r\n            }\r\n        });\r\n    }\r\n\r\n    private loadPermissionsWithUsersAndGroups(securedObjectType: SecuredObjectType, objectId?: string): void {\r\n        this.permissionsService.getAllObjectPermissionsWithUsersAndGroups(securedObjectType, objectId).then(result => {\r\n            this.permissionsWithUsersAndGroups = result;\r\n        });\r\n    }\r\n\r\n    public save() {\r\n        if (this.quiz.hasProgress) {\r\n            notifier.warning(\"Your changes were saved, but some users have already completed this quiz. Results for completed quizzes were not modified and can be inconsistent with new version of quiz.\");\r\n        }\r\n        this.disabledSaveButton = true;\r\n        this.writeIndexes(this.quizQuestions);\r\n        angular.copy(this.quizQuestions, this.quiz.questions);\r\n        this.quiz.correctAnswersNumber = this.quiz.correctAnswersType == QuizEditController.PERCENTAGE_TYPE ? this.percentageNumber : this.pointsNumber;\r\n        var promise = this.quizId\r\n            ? this.quizService.update(this.quiz, this.permissionsWithUsersAndGroups)\r\n            : this.quizService.create(this.quiz, this.permissionsWithUsersAndGroups);\r\n        promise.then(quiz => {\r\n            if(this.preview != null) {\r\n                this.upload(this.preview, quiz.id, \"preview\").then(r => {\r\n                    this.processSuccessCallback(quiz.id);\r\n                }).catch(response => {\r\n                    if (response.data.error == \"error.storage.not.available\") {\r\n                        notifier.error(\"No available storage. Thumbnail has not been saved\");\r\n                    }\r\n                    this.processSuccessCallback(quiz.id);\r\n                });\r\n            } else {\r\n                this.processSuccessCallback(quiz.id);\r\n            }\r\n        }).catch(err => {\r\n            notifier.error(err);\r\n        });\r\n    }\r\n\r\n    private processSuccessCallback(quizId: number): void {\r\n        notifier.success(\"The quiz is successfully saved\");\r\n        this.$location.url(this.quizzesRouter.detailsUrl(quizId));\r\n    }\r\n\r\n    private upload(file: File, quizId: number, fileType: string): angular.angularFileUpload.IUploadPromise<File> {\r\n        var urlBuilder = this.url.base(\"/api/quizzes/upload?quizId=:quizId&fileType=:fileType\")\r\n            .param(\":quizId\", quizId)\r\n            .param(\":fileType\", fileType);\r\n        return this.$uploader.upload({\r\n                method: \"POST\",\r\n                url: angular.copy(urlBuilder)\r\n                    .service(),\r\n                file: file}\r\n        );\r\n    }\r\n\r\n    public redirectOrClearFields(): void {\r\n        if(this.quizId) {\r\n            this.$location.url(this.quizzesRouter.detailsUrl(this.quizId));\r\n        } else {\r\n            this.cleanFields();\r\n        }\r\n    }\r\n\r\n    private cleanFields() : void {\r\n        this.quiz = {};\r\n        this.loadPermissionsWithUsersAndGroups(SecuredObjectType.QUIZ);\r\n    }\r\n\r\n    public clearCurrentQuestionFields(): void {\r\n        this.currentQuestion = {\r\n            text: \"\",\r\n            isMultiple: false,\r\n            answers: []\r\n        };\r\n        this.currentAnswers = [];\r\n        this.isEditQuestion = false;\r\n        this.editQuestionIndex = null;\r\n    }\r\n\r\n    public currentQuestionValid(): boolean {\r\n        return this.currentQuestion.text != \"\" && this.currentAnswers.every(a => a.text != \"\")\r\n            && this.currentAnswers.filter((a: IQuizAnswer) => a.isCorrect).length > 0;\r\n    }\r\n\r\n    public checkCurrentCorrectAnswer(answer: IQuizAnswer): void {\r\n        this.currentAnswers.forEach((a: IQuizAnswer) => {\r\n            a.isCorrect = false;\r\n        });\r\n        answer.isCorrect = true;\r\n    }\r\n\r\n    public toggleQuestionMultiple(): void {\r\n        if (!this.currentQuestion.isMultiple && this.currentAnswers.filter((a: IQuizAnswer) => a.isCorrect).length > 1) {\r\n            this.currentAnswers.forEach((a: IQuizAnswer) => {\r\n                a.isCorrect = false;\r\n            });\r\n        }\r\n    }\r\n\r\n    public editQuestion(index: number, question: IQuizQuestion) {\r\n        angular.copy(question, this.currentQuestion);\r\n        angular.copy(question.answers, this.currentAnswers);\r\n        this.currentQuestion.answers = [];\r\n        this.isEditQuestion = true;\r\n        this.editQuestionIndex = index;\r\n    }\r\n\r\n    public addAnswerToQuestion() {\r\n        var answer = {\r\n            text: \"\",\r\n            isCorrect: false\r\n        };\r\n        this.currentAnswers.push(answer);\r\n    }\r\n\r\n    public removeAnswerFromQuestion(index: number) {\r\n        this.currentAnswers.splice(index, 1);\r\n    }\r\n\r\n    public addQuestionToQuiz() {\r\n        angular.copy(this.currentAnswers, this.currentQuestion.answers);\r\n        if (this.currentQuestion.points == null) {\r\n            this.currentQuestion.points = 1;\r\n        }\r\n        this.isEditQuestion\r\n            ? this.quizQuestions.splice(this.editQuestionIndex, 1, this.currentQuestion)\r\n            : this.quizQuestions.push(this.currentQuestion);\r\n        this.clearCurrentQuestionFields();\r\n    }\r\n\r\n    public removeQuestionFromQuiz(index: number) {\r\n        this.quizQuestions.splice(index, 1);\r\n    }\r\n\r\n    private writeIndexes(questions: Array<IQuizQuestion>): void {\r\n        questions.forEach((question: IQuizQuestion) => {\r\n            question.indexNumber = questions.indexOf(question);\r\n            question.answers.forEach((answer: IQuizAnswer) => answer.indexNumber = question.answers.indexOf(answer));\r\n        });\r\n    }\r\n\r\n    public getQuizPointsSum(): number {\r\n        var sum = 0;\r\n            this.quizQuestions.forEach((q: IQuizQuestion) => {\r\n                sum += q.points;\r\n            });\r\n        return sum;\r\n    }\r\n\r\n    public moveUp(index: number, objectArray: any): void {\r\n        var placeholder = {};\r\n        var objectToMove = objectArray.splice(index, 1, placeholder)[0];\r\n        objectArray.splice(index - 1, 0, objectToMove);\r\n        objectArray.splice(objectArray.indexOf(placeholder), 1);\r\n    }\r\n\r\n    public moveDown(index: number, objectArray: any): void {\r\n        var placeholder = {};\r\n        var objectToMove = objectArray.splice(index + 1, 1, placeholder)[0];\r\n        objectArray.splice(index, 0, objectToMove);\r\n        objectArray.splice(objectArray.indexOf(placeholder), 1);\r\n    }\r\n\r\n    public isMoveUp(index: number): boolean {\r\n        return index > 0;\r\n    }\r\n\r\n    public isMoveDown(index: number, objectArray: any): boolean {\r\n        return index < objectArray.length - 1;\r\n    }\r\n}","import {IQuiz} from \"./models/IQuiz\";\r\nimport {IQuizQuestion} from \"./models/IQuizQuestion\";\r\nimport {IQuizAnswer} from \"./models/IQuizAnswer\";\r\nimport {IQuizResult} from \"./models/IQuizResult\";\r\nimport {IQuizAnswerResult} from \"./models/IQuizAnswerResult\";\r\nimport {QuizzesRouter} from \"./../urls/QuizzesRouter\";\r\nimport {QuizService} from \"./QuizService\";\r\n\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\n\r\nexport class QuizPassingController {\r\n    public static NAME = \"quizzes.QuizPassingController\";\r\n\r\n    private quizId: number;\r\n    public quiz: IQuiz = {};\r\n    public quizResult: IQuizResult = {};\r\n    public duration: number;\r\n    public disableCompleteButton: boolean = false;\r\n\r\n    public static $inject = [\r\n        \"$scope\",\r\n        \"$location\",\r\n        \"$routeParams\",\r\n        QuizService.NAME,\r\n        QuizzesRouter.NAME\r\n    ];\r\n\r\n    constructor(private $scope: angular.IScope,\r\n                private $location: angular.ILocationService,\r\n                private $routeParams: angular.route.IRouteParamsService,\r\n                private quizService: QuizService,\r\n                private quizzesRouter: QuizzesRouter) {\r\n        this.quizId = $routeParams[QuizzesRouter.QUIZ_ID_PARAM];\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.EDUCATION_QUIZZES_MENU_KEY);\r\n\r\n        this.loadQuiz();\r\n\r\n        this.$scope.$on('$locationChangeStart', (event) => {\r\n            if (!this.disableCompleteButton && this.quizResult && this.quizResult.id) {\r\n                alert(\"Quiz not completed\");\r\n                event.preventDefault();\r\n            }\r\n        });\r\n    }\r\n\r\n    private loadUserQuizResult() {\r\n        this.quizService.getUserQuizCurrentResult(this.quizId, this.quizResult.attempt).then(result => {\r\n            this.quizResult = angular.copy(result);\r\n            if (this.quizResult && this.quizResult.id) {\r\n                this.duration = (this.quiz.duration != null)\r\n                    ? Math.round(this.quiz.duration - (new Date().getTime() - result.startTime) / 1000)\r\n                    : null;\r\n                if (this.duration) {\r\n                    if (this.duration <= 0) {\r\n                        this.completeQuiz();\r\n                    } else {\r\n                        this.$scope.$broadcast('timer-set-countdown', this.duration);\r\n                        this.$scope.$broadcast('timer-start');\r\n                    }\r\n                }\r\n            } else {\r\n                console.log(\"Cannot find your unfinished session for this Quiz.\");\r\n                this.$location.url(this.quizzesRouter.detailsUrl(this.quizId));\r\n            }\r\n        });\r\n    }\r\n\r\n    private loadQuiz() {\r\n        this.quizService.get(this.quizId).then(q => {\r\n            angular.copy(q, this.quiz);\r\n            PageHeader.set().header(q.title).update();\r\n            this.loadUserQuizResult();\r\n        });\r\n    }\r\n\r\n    public selectCurrentAnswer(question: IQuizQuestion, answer: IQuizAnswer): void {\r\n        question.answers.forEach((a: IQuizAnswer) => {\r\n            a.selected = false;\r\n        });\r\n        answer.selected = true;\r\n    }\r\n\r\n    public completeQuiz() {\r\n        this.disableCompleteButton = true;\r\n        this.quizResult.answers = [];\r\n        this.quiz.questions.forEach((question: IQuizQuestion) => {\r\n            var result: IQuizAnswerResult = {\r\n                quizResultId: this.quizResult.id,\r\n                questionId: question.id,\r\n                answerIds: question.answers.filter((a: IQuizAnswer) => a.selected).map((a: IQuizAnswer) => {\r\n                    return a.id;\r\n                })\r\n            };\r\n            this.quizResult.answers.push(result);\r\n        });\r\n        this.quizService.completeQuizByUser(this.quizResult).then(result => {\r\n            this.$location.url(this.quizzesRouter.detailsUrl(this.quizId));\r\n        })\r\n    }\r\n}","import {IPermissionWithUsersAndGroups} from \"./../security/permissions/IPermissionWithUsersAndGroups\";\r\nimport {UrlService, IUrlBuilder} from \"./../utils/UrlService\";\r\n\r\nimport {IQuiz} from \"./models/IQuiz\";\r\nimport {IQuizResult} from \"./models/IQuizResult\";\r\nimport {IQuizAnswerResult} from \"./models/IQuizAnswerResult\";\r\n\r\ninterface IExtQuiz extends IQuiz {\r\n    permissionsWithUsersAndGroups?: Array<IPermissionWithUsersAndGroups>;\r\n}\r\n\r\nexport class QuizService {\r\n    public static NAME = \"quizzes.QuizService\";\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$sce\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private $sce: angular.ISCEService,\r\n                private url: UrlService) {\r\n    }\r\n\r\n    public get(id: number): angular.IPromise<IQuiz> {\r\n        return this.$http.get(this.url.base(\"/api/quizzes/:id?\")\r\n            .param(\":id\", id)\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public create(quiz: IExtQuiz, permissionsWithUsersAndGroups: Array<IPermissionWithUsersAndGroups>): angular.IPromise<any> {\r\n        quiz.permissionsWithUsersAndGroups = permissionsWithUsersAndGroups;\r\n        return this.$http.post(this.url.service(\"/api/quizzes\"), quiz).then(result => result.data);\r\n    }\r\n\r\n    public update(quiz: IExtQuiz, permissionsWithUsersAndGroups: Array<IPermissionWithUsersAndGroups>): angular.IPromise<any> {\r\n        quiz.permissionsWithUsersAndGroups = permissionsWithUsersAndGroups;\r\n        return this.$http.put(this.url.service(\"/api/quizzes\"), quiz).then(result => result.data);\r\n    }\r\n\r\n    public startQuizByUser(quizId: number, sourceType: string, sectionId?: number, courseProgressId?: number): angular.IPromise<IQuizResult> {\r\n        return this.$http.post(this.url.service(\"/api/quizzes/results\"),\r\n            {quizId: quizId, sourceType: sourceType, sectionId: sectionId, courseProgressId: courseProgressId})\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public completeQuizByUser(quizResult: IQuizResult) {\r\n        return this.$http.put(this.url.service(\"/api/quizzes/results\"), quizResult).then(result => result.data);\r\n    }\r\n\r\n    public getUserQuizResults(quizId: number, sourceType?: string, sectionId?: number, courseProgressId?: number): angular.IPromise<IQuizResult[]> {\r\n        let url: string = \"/api/quizzes/results/:quizId\";\r\n        if (sourceType != null) {\r\n            url += \"?sourceType=:sourceType\";\r\n        }\r\n        if (sectionId != null) {\r\n            url += \"&sectionId=:sectionId\";\r\n        }\r\n        if (courseProgressId) {\r\n            url += \"&courseProgressId=:courseProgressId\";\r\n        }\r\n        let urlBuilder: IUrlBuilder = this.url.base(url)\r\n            .param(\":quizId\", quizId);\r\n        if (sourceType != null) {\r\n            urlBuilder.param(\":sourceType\", sourceType);\r\n        }\r\n        if (sectionId != null) {\r\n            urlBuilder.param(\":sectionId\", sectionId);\r\n        }\r\n        if (courseProgressId) {\r\n            urlBuilder.param(\":courseProgressId\", courseProgressId);\r\n        }\r\n        return this.$http.get(urlBuilder.service())\r\n            .then(result => {\r\n                return result.data;\r\n            });\r\n    }\r\n\r\n    public getUserQuizCurrentResult(quizId: number, attempt: number): angular.IPromise<IQuizResult> {\r\n        return this.$http.get(this.url.base(\"/api/quizzes/results/current/:quizId?attempt=:attempt\")\r\n            .param(\":quizId\", quizId)\r\n            .param(\":attempt\", attempt || \"\")\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public hasUserCreatedQuizzes(): angular.IPromise<boolean> {\r\n        return this.$http.get(this.url.service(\"/api/quizzes/profileQuizzes/hasCreated\"))\r\n            .then(result => result.data);\r\n    }\r\n}","import {IQuiz} from \"./models/IQuiz\";\r\nimport {QuizzesRouter} from \"./../urls/QuizzesRouter\";\r\n\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {IGridModel, GridModel} from \"./../IGridModel\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\n\r\nexport class QuizzesController {\r\n    public static NAME = \"quizzes.QuizzesController\";\r\n\r\n    public systemPermissions: ISystemPermissions;\r\n    public rowShow: Map<number, boolean> = new Map<number, boolean>();\r\n    public quizzesGridModel: IGridModel<IQuiz>;\r\n    public viewType: number;\r\n    public owners: Array<ISelectable> = [];\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$location\",\r\n        QuizzesRouter.NAME,\r\n        PermissionsService.NAME,\r\n        UrlService.NAME,\r\n        UserService.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private $location: ng.ILocationService,\r\n                public quizzesRouter: QuizzesRouter,\r\n                private permissionsApi: PermissionsService,\r\n                private url: UrlService,\r\n                private userService: UserService) {\r\n\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.EDUCATION_QUIZZES_MENU_KEY);\r\n        PageHeader.set().header(\"Quizzes\").update();\r\n\r\n        this.viewType = 1;\r\n        this.quizzesGridModel = new GridModel(HttpGridHelper.createLoader<IQuiz>($http, this.url.service(\"/api/quizzes\")));\r\n        this.quizzesGridModel.pageSize = 8;\r\n\r\n        this.userService.getUsersWithoutExcludedUsersForSelector().then(result => {\r\n            this.owners = angular.copy(result);\r\n        });\r\n\r\n        this.permissionsApi.getSystemPermissions().then(systemPermissions => {\r\n            this.systemPermissions = systemPermissions;\r\n        });\r\n    }\r\n\r\n    public showDetails(index: number) {\r\n        this.rowShow.set(index, !this.rowShow.get(index));\r\n    }\r\n\r\n    public searchQuiz(): void {\r\n        this.quizzesGridModel.loadCurrentPage();\r\n    }\r\n\r\n    public loadQuizDetails(quizId: number) {\r\n        this.$location.url(this.quizzesRouter.detailsUrl(quizId));\r\n    }\r\n}","import {QuizService} from \"./QuizService\";\r\nimport {QuizzesController} from \"./QuizzesController\";\r\nimport {QuizEditController} from \"./QuizEditController\";\r\nimport {QuizController} from \"./QuizController\";\r\nimport {QuizPassingController} from \"./QuizPassingController\";\r\n\r\nimport {AuthModule} from \"./../auth/AuthModule\";\r\nimport {AuthCoreModule} from \"./../authcore/AuthCoreModule\";\r\nimport {SecurityModule} from \"./../security/SecurityModule\";\r\nimport {UsersModule} from \"./../users/UsersModule\";\r\nimport {UrlsModule} from \"./../urls/UrlsModule\";\r\n\r\nexport var QuizzesModule: angular.IModule = angular\r\n    .module(\"quizzes\", [\r\n        AuthModule.name,\r\n        AuthCoreModule.name,\r\n        SecurityModule.name,\r\n        UsersModule.name,\r\n        UrlsModule.name\r\n    ])\r\n    .service(QuizService.NAME, QuizService)\r\n    .controller(QuizzesController.NAME, QuizzesController)\r\n    .controller(QuizEditController.NAME, QuizEditController)\r\n    .controller(QuizController.NAME, QuizController)\r\n    .controller(QuizPassingController.NAME, QuizPassingController);","import {ReferenceUtils} from \"./ReferenceUtils\";\r\nimport {ReferenceService} from \"./ReferenceService\";\r\nimport {IReferenceEntityMetadata} from \"./models/ReferenceMetadata\";\r\nimport {IGridModel, GridModel} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {ReferenceRouter} from \"./../urls/ReferenceRouter\";\r\nimport {StringBuilder} from \"./../utils/StringBuilder\";\r\n\r\nexport class ReferenceController {\r\n    public static NAME = \"reference.ReferenceController\";\r\n\r\n    public referenceEntitiesGridModel: IGridModel<Map<string, any>>;\r\n    public referenceMetadata: IReferenceEntityMetadata;\r\n\r\n    public systemPermissions: ISystemPermissions;\r\n    protected referenceDefaultValues: string;\r\n    protected referenceFilter: string;\r\n    protected referenceAssociationFilters: string;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$routeParams\",\r\n        \"$location\",\r\n        UrlService.NAME,\r\n        ReferenceRouter.NAME,\r\n        ReferenceUtils.NAME,\r\n        ReferenceService.NAME,\r\n        PermissionsService.NAME,\r\n        SecurityService.NAME\r\n    ];\r\n\r\n    constructor(protected $http: ng.IHttpService,\r\n                protected $routeParams: ng.route.IRouteParamsService,\r\n                protected $location: angular.ILocationService,\r\n                protected url: UrlService,\r\n                protected referenceRouter: ReferenceRouter,\r\n                public referenceUtils: ReferenceUtils,\r\n                protected referenceApi: ReferenceService,\r\n                protected permissionsApi: PermissionsService,\r\n                private securityService: SecurityService) {\r\n        this.securityService.demandAuthentication()\r\n            .demandSystemPermissions(systemPermissions => systemPermissions.viewReferenceData);\r\n\r\n        let referenceName: string = this.$routeParams[ReferenceRouter.REFERENCE_NAME_PARAM];\r\n        MenuHelper.setCurrentMenuItem(\"administration_\" + referenceName);\r\n\r\n        this.referenceDefaultValues = this.$location.search()[ReferenceRouter.REFERENCE_DEFAULT_VALUES_PARAM];\r\n        this.referenceFilter = this.$location.search()[ReferenceRouter.REFERENCE_FILTER_PARAM];\r\n        this.referenceAssociationFilters = this.$location.search()[ReferenceRouter.REFERENCE_ASSOCIATION_FILTERS_PARAM];\r\n\r\n        this.referenceEntitiesGridModel = new GridModel(HttpGridHelper.createLoader<Map<string, any>>(this.$http,\r\n            this.url.base(\"/api/reference/:name/entities\")\r\n                .param(\":name\", referenceName).service()));\r\n        this.referenceEntitiesGridModel.filter.referenceFilter = this.referenceFilter;\r\n        this.referenceEntitiesGridModel.filter.referenceSearchString = \"\";\r\n        this.referenceEntitiesGridModel.filter.referenceSplitParam = false;\r\n\r\n        this.permissionsApi.getSystemPermissions().then(p => {\r\n            this.systemPermissions = p;\r\n            this.referenceApi.getReferenceMetadata(referenceName)\r\n                .then(result => {\r\n                    this.referenceMetadata = result;\r\n                    PageHeader.set().addActionLinkIf(this.systemPermissions.addReferenceData && !this.referenceMetadata.isInternal,\r\n                            '+ New', this.getReferenceEditUrl('new'))\r\n                        .update();\r\n                });\r\n        });\r\n    }\r\n\r\n    public getReferenceEditUrl(id: any): string {\r\n        return this.referenceMetadata\r\n            ? StringBuilder.interpolate(this.referenceRouter.editUrl(this.referenceMetadata.key, id))\r\n                .add(\"?\")\r\n                .addIf(this.referenceDefaultValues != null, ReferenceRouter.REFERENCE_DEFAULT_VALUES_PARAM, \"=\",\r\n                    this.referenceUtils.getStringInBrowserFormat(this.referenceDefaultValues), \"&\")\r\n                .addIf(this.referenceFilter != null, ReferenceRouter.REFERENCE_FILTER_PARAM, \"=\",\r\n                    this.referenceUtils.getStringInBrowserFormat(this.referenceFilter), \"&\")\r\n                .addIf(this.referenceAssociationFilters != null, ReferenceRouter.REFERENCE_ASSOCIATION_FILTERS_PARAM, \"=\",\r\n                    this.referenceUtils.getStringInBrowserFormat(this.referenceAssociationFilters), \"&\")\r\n                .build()\r\n            : null;\r\n    }\r\n\r\n    public activateEntity(index: number, entity: Map<string, any>): void {\r\n        let referenceName: string = this.referenceMetadata.key;\r\n        let id: number = entity[ReferenceUtils.entityIdProperty];\r\n        let version: number = entity[ReferenceUtils.entityVersionProperty];\r\n        this.referenceApi.setActiveReferenceEntity(referenceName, id, version, true).then(result => {\r\n            this.referenceEntitiesGridModel.entries[index] = result;\r\n        });\r\n    }\r\n}\r\n","import {ReferenceUtils} from \"./ReferenceUtils\";\r\nimport {ReferenceService} from \"./ReferenceService\";\r\nimport {ReferenceRedirect} from \"./ReferenceRedirect\";\r\nimport {IReferenceEntityMetadata} from \"./models/ReferenceMetadata\";\r\nimport {ReferenceIsRequiredValidator} from \"./validators/ReferenceIsRequiredValidator\";\r\nimport {ReferenceMaxLengthValidator} from \"./validators/ReferenceMaxLengthValidator\";\r\nimport {ReferenceRequiredAttributesGroupValidator} from \"./validators/ReferenceRequiredAttributesGroupValidator\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {ReferenceRouter} from \"./../urls/ReferenceRouter\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\n\r\nexport class ReferenceEditController {\r\n    public static NAME = \"reference.ReferenceEditController\";\r\n\r\n    public referenceEntity: Map<string, any>;\r\n    public referenceMetadata: IReferenceEntityMetadata;\r\n    public referenceAssociationFiltersMap: Map<string, string>;\r\n    public referenceValidationErrorsMap: Map<string, string>;\r\n    public systemPermissions: ISystemPermissions;\r\n    public disableSaveButton: boolean = false;\r\n\r\n    protected referenceDefaultValues: string;\r\n    protected referenceFilter: string;\r\n    protected referenceAssociationFilters: string;\r\n    protected referenceDefaultValuesMap: Map<string, string>;\r\n\r\n    private redirectStorageUrl: string;\r\n\r\n    public static $inject = [\r\n        \"$routeParams\",\r\n        \"$location\",\r\n        ReferenceRouter.NAME,\r\n        ReferenceUtils.NAME,\r\n        ReferenceService.NAME,\r\n        ReferenceRedirect.NAME,\r\n        PermissionsService.NAME,\r\n        SecurityService.NAME\r\n    ];\r\n\r\n    constructor(protected $routeParams: ng.route.IRouteParamsService,\r\n                protected $location: angular.ILocationService,\r\n                protected referenceRouter: ReferenceRouter,\r\n                public referenceUtils: ReferenceUtils,\r\n                protected referenceApi: ReferenceService,\r\n                protected referenceRedirect: ReferenceRedirect,\r\n                protected permissionsApi: PermissionsService,\r\n                private securityService: SecurityService) {\r\n        let referenceId: number = parseInt(this.$routeParams[ReferenceRouter.REFERENCE_ID_PARAM], 10);\r\n        let referenceName: string = this.$routeParams[ReferenceRouter.REFERENCE_NAME_PARAM];\r\n        let hasReferenceId: boolean = !isNaN(referenceId);\r\n\r\n        this.securityService.demandAuthentication()\r\n            .demandSystemPermissionsIf(hasReferenceId, systemPermissions => systemPermissions.editReferenceData)\r\n            .demandSystemPermissionsIf(!hasReferenceId, systemPermissions => systemPermissions.addReferenceData);\r\n        MenuHelper.setCurrentMenuItem(\"administration_\" + referenceName);\r\n\r\n        this.permissionsApi.getSystemPermissions().then(p => {\r\n            this.systemPermissions = p;\r\n        });\r\n\r\n        this.referenceDefaultValues = this.$location.search()[ReferenceRouter.REFERENCE_DEFAULT_VALUES_PARAM];\r\n        this.referenceFilter = this.$location.search()[ReferenceRouter.REFERENCE_FILTER_PARAM];\r\n        this.referenceAssociationFilters = this.$location.search()[ReferenceRouter.REFERENCE_ASSOCIATION_FILTERS_PARAM];\r\n        this.referenceDefaultValuesMap = this.getReferenceDefaultValuesMap(this.referenceDefaultValues);\r\n        this.referenceAssociationFiltersMap = this.getReferenceAssociationFiltersMap(this.referenceAssociationFilters);\r\n        this.referenceValidationErrorsMap = new Map<string, string>();\r\n\r\n        this.redirectStorageUrl = this.referenceRedirect.getAndRemoveStorageUrl();\r\n\r\n        if (hasReferenceId) {\r\n            this.referenceApi.getReferenceEntity(referenceName, referenceId).then(result => {\r\n                this.referenceEntity = result.entity;\r\n                this.referenceMetadata = result.metadata;\r\n                this.referenceUtils.fixInputReferenceEntityAttributes(this.referenceEntity, this.referenceMetadata);\r\n                PageHeader.set().header(this.referenceEntity[this.referenceMetadata.selectorAttribute.systemName])\r\n                    .update();\r\n            });\r\n        } else {\r\n            this.referenceApi.getEmptyReferenceEntity(referenceName).then(result => {\r\n                this.referenceEntity = result.entity;\r\n                this.referenceMetadata = result.metadata;\r\n                this.referenceUtils.fixInputReferenceEntityAttributes(this.referenceEntity, this.referenceMetadata);\r\n                this.setDefaultReferenceEntityAttributesValues();\r\n                PageHeader.set().header('New referenced data entry')\r\n                    .update();\r\n            });\r\n        }\r\n    }\r\n\r\n    public redirectToBack(): void {\r\n        if (this.redirectStorageUrl) {\r\n            this.$location.url(this.redirectStorageUrl);\r\n        } else {\r\n            let referenceName: string = this.referenceMetadata.key;\r\n            this.$location.url(this.referenceRouter.indexUrl(referenceName))\r\n                .search(ReferenceRouter.REFERENCE_DEFAULT_VALUES_PARAM, this.referenceUtils.getStringInBrowserFormat(this.referenceDefaultValues))\r\n                .search(ReferenceRouter.REFERENCE_FILTER_PARAM, this.referenceUtils.getStringInBrowserFormat(this.referenceFilter))\r\n                .search(ReferenceRouter.REFERENCE_ASSOCIATION_FILTERS_PARAM, this.referenceUtils.getStringInBrowserFormat(this.referenceAssociationFilters));\r\n        }\r\n    }\r\n\r\n    public saveEntity(): void {\r\n        this.disableSaveButton = true;\r\n        let referenceName: string = this.referenceMetadata.key;\r\n        let id: number = this.referenceEntity[ReferenceUtils.entityIdProperty];\r\n        let call: ng.IPromise<any> = id != null\r\n            ? this.referenceApi.updateReferenceEntity(referenceName, id, this.referenceEntity)\r\n            : this.referenceApi.createReferenceEntity(referenceName, this.referenceEntity);\r\n\r\n        call.then(result => {\r\n            this.redirectToBack();\r\n        }).finally(() => {\r\n            this.disableSaveButton = false;\r\n        });\r\n    }\r\n\r\n    public deactivateEntity(): void {\r\n        let referenceName: string = this.referenceMetadata.key;\r\n        let id: number = this.referenceEntity[ReferenceUtils.entityIdProperty];\r\n        let version: number = this.referenceEntity[ReferenceUtils.entityVersionProperty];\r\n        this.referenceApi.setActiveReferenceEntity(referenceName, id, version, false).then(result => {\r\n            this.redirectToBack();\r\n        });\r\n    }\r\n\r\n    public entityValid(): boolean {\r\n        this.referenceValidationErrorsMap.clear();\r\n        return new ReferenceMaxLengthValidator(this.referenceUtils, this.referenceEntity, this.referenceMetadata,\r\n                this.referenceValidationErrorsMap)\r\n                .valid()\r\n            && (this.referenceMetadata.requiredAttributesGroup\r\n                    ? new ReferenceRequiredAttributesGroupValidator(this.referenceUtils, this.referenceEntity, this.referenceMetadata,\r\n                        this.referenceValidationErrorsMap)\r\n                        .valid()\r\n                    : new ReferenceIsRequiredValidator(this.referenceUtils, this.referenceEntity, this.referenceMetadata,\r\n                        this.referenceValidationErrorsMap)\r\n                        .valid());\r\n    }\r\n\r\n    private getReferenceDefaultValuesMap(referenceDefaultValues: string): Map<string, string> {\r\n        let result: Map<string, string> = new Map<string, string>();\r\n        if (referenceDefaultValues && referenceDefaultValues.length > 0) {\r\n            let defaultValues: string[] = referenceDefaultValues.split(\";\");\r\n            defaultValues.forEach(defaultValue => {\r\n                let defaultValueParts: string[] = defaultValue.split(\"=\");\r\n                let property: string = defaultValueParts[0];\r\n                let value: string = defaultValueParts[1];\r\n                result.set(property, value);\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private getReferenceAssociationFiltersMap(referenceAssociationFilters: string): Map<string, string> {\r\n        let result: Map<string, string> = new Map<string, string>();\r\n        if (referenceAssociationFilters && referenceAssociationFilters.length > 0) {\r\n            let associationFilters: string[] = referenceAssociationFilters.split(\"|\");\r\n            associationFilters.forEach(associationFilter => {\r\n                let associationFilterParts: string[] = associationFilter.split(\"=>\");\r\n                let association: string = associationFilterParts[0];\r\n                let filter: string = associationFilterParts[1];\r\n                result.set(association, filter);\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private setDefaultReferenceEntityAttributesValues() {\r\n        this.referenceMetadata.defaultAttributes.forEach(attr => {\r\n            let attrType: string = attr.type;\r\n            let attrSysName: string = attr.systemName;\r\n            let defaultValue: string = this.referenceDefaultValuesMap.get(attrSysName);\r\n\r\n            if (this.referenceUtils.isTextAttributeType(attrType)) {\r\n                this.referenceEntity[attrSysName] = this.referenceUtils.convertStringDefaultValue(defaultValue);\r\n            } else if (this.referenceUtils.isBooleanAttributeType(attrType)) {\r\n                this.referenceEntity[attrSysName] = this.referenceUtils.convertBooleanDefaultValue(defaultValue);\r\n            } else if (this.referenceUtils.isDateAttributeType(attrType)) {\r\n                this.referenceEntity[attrSysName] = this.referenceUtils.convertDateDefaultValue(defaultValue);\r\n            } else if (this.referenceUtils.isMoneyAttributeType(attrType)) {\r\n                this.referenceEntity[attrSysName] = this.referenceUtils.convertMoneyDefaultValue(defaultValue);\r\n            } else if (this.referenceUtils.isOneAssociationAttributeType(attrType)) {\r\n                this.referenceEntity[attrSysName] = this.referenceUtils.convertOneAssociationDefaultValue(defaultValue);\r\n            } else if (this.referenceUtils.isManyAssociationAttributeType(attrType)) {\r\n                this.referenceEntity[attrSysName] = this.referenceUtils.convertManyAssociationDefaultValue(defaultValue);\r\n            }\r\n        });\r\n    }\r\n}\r\n","import {ReferenceUtils} from \"./ReferenceUtils\";\r\nimport {ReferenceService} from \"./ReferenceService\";\r\nimport {ReferenceRedirect} from \"./ReferenceRedirect\";\r\nimport {ReferenceController} from \"./ReferenceController\";\r\nimport {ReferenceEditController} from \"./ReferenceEditController\";\r\n\r\nimport {SecurityModule} from \"./../security/SecurityModule\";\r\nimport {UrlsModule} from \"./../urls/UrlsModule\";\r\nimport {InfrastructureModule} from \"./../infrastructure/InfrastructureModule\";\r\n\r\nexport var ReferenceModule: angular.IModule = angular\r\n    .module(\"reference\", [\r\n        SecurityModule.name,\r\n        UrlsModule.name,\r\n        InfrastructureModule.name\r\n    ])\r\n    .service(ReferenceUtils.NAME, ReferenceUtils)\r\n    .service(ReferenceService.NAME, ReferenceService)\r\n    .service(ReferenceRedirect.NAME, ReferenceRedirect)\r\n    .controller(ReferenceController.NAME, ReferenceController)\r\n    .controller(ReferenceEditController.NAME, ReferenceEditController);","import {ReferenceUtils} from \"./ReferenceUtils\";\r\n\r\nimport {StorageWrapper, Storages} from \"./../infrastructure/Storage\";\r\nimport {ReferenceRouter} from \"./../urls/ReferenceRouter\";\r\n\r\nexport class ReferenceRedirect {\r\n    public static NAME = \"reference.ReferenceRedirect\";\r\n    private static KEY = \"reference-redirect\";\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        Storages.SESSION_NAME,\r\n        ReferenceRouter.NAME,\r\n        ReferenceUtils.NAME\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                private sessionStorage: StorageWrapper,\r\n                private referenceRouter: ReferenceRouter,\r\n                private referenceUtils: ReferenceUtils) {\r\n        this.sessionStorage.remove(ReferenceRedirect.KEY);\r\n    }\r\n\r\n    public redirectToEditReferenceItem(referenceName: string, referenceId?: number, referenceDefaultValues?: string,\r\n                                       referenceFilter?: string, referenceAssociationFilters?: string): void {\r\n        let currentUrl: string = this.$location.path();\r\n        if (!this.sessionStorage.contains(ReferenceRedirect.KEY)) {\r\n            this.sessionStorage.put(ReferenceRedirect.KEY, currentUrl);\r\n        }\r\n        this.$location.url(this.referenceRouter.editUrl(referenceName, referenceId))\r\n            .search(ReferenceRouter.REFERENCE_DEFAULT_VALUES_PARAM, this.referenceUtils.getStringInBrowserFormat(referenceDefaultValues))\r\n            .search(ReferenceRouter.REFERENCE_FILTER_PARAM, this.referenceUtils.getStringInBrowserFormat(referenceFilter))\r\n            .search(ReferenceRouter.REFERENCE_ASSOCIATION_FILTERS_PARAM, this.referenceUtils.getStringInBrowserFormat(referenceAssociationFilters));\r\n    }\r\n\r\n    public getAndRemoveStorageUrl(): string {\r\n        let url: string = this.sessionStorage.get<string>(ReferenceRedirect.KEY);\r\n        this.sessionStorage.remove(ReferenceRedirect.KEY);\r\n        return url;\r\n    }\r\n}","import {IReferenceEntityMetadata} from \"./models/ReferenceMetadata\";\r\nimport {ReferenceEntitiesParams, IReferenceEntitiesParams} from \"./models/IReferenceEntitiesParams\";\r\nimport {IReferenceEntityAndMetadataResult} from \"./models/IReferenceEntityAndMetadataResult\";\r\nimport {IReferenceEntitiesAndMetadataResult} from \"./models/IReferenceEntitiesAndMetadataResult\";\r\nimport {ISelectableReferenceEntity} from \"./models/ISelectableReferenceEntity\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\n\r\nexport class ReferenceService {\r\n    public static NAME = \"reference.ReferenceService\";\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$q\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $http: ng.IHttpService,\r\n                private $q: ng.IQService,\r\n                private url: UrlService) {\r\n    }\r\n\r\n    public getActiveReferenceEntities(referenceName: string, referenceParams: IReferenceEntitiesParams): ng.IPromise<IReferenceEntitiesAndMetadataResult> {\r\n        return this.$http.get(\r\n            this.url.base(\"/api/reference/:name/entities/active\")\r\n                .param(\":name\", referenceName).service(), this.createReferenceFilterParams(referenceParams))\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getActiveReferenceEntitiesForSelector(referenceName: string, referenceParams: IReferenceEntitiesParams, includedIds: Array<number>): ng.IPromise<Array<ISelectableReferenceEntity>> {\r\n        var params = this.createReferenceFilterParams(referenceParams);\r\n        if (includedIds && includedIds.length > 0) {\r\n            params.params[\"includedIds\"] = includedIds;\r\n        }\r\n        return this.$http.get(\r\n            this.url.base(\"/api/reference/:name/entities/forSelector\")\r\n                .param(\":name\", referenceName).service(), params)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getActiveReferenceEntitiesForSelectorWithoutParams(referenceName: string, includedIds: Array<number>): ng.IPromise<Array<ISelectableReferenceEntity>> {\r\n        var params = this.createReferenceFilterParams(new ReferenceEntitiesParams(undefined, undefined, undefined, undefined));\r\n        if (includedIds && includedIds.length > 0) {\r\n            params.params[\"includedIds\"] = includedIds;\r\n        }\r\n        return this.$http.get(\r\n            this.url.base(\"/api/reference/:name/entities/forSelector\")\r\n                .param(\":name\", referenceName).service(), params)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getHierarchicalReferenceEntities(referenceName: string, referenceHierarchicalProperty: string): ng.IPromise<IReferenceEntitiesAndMetadataResult> {\r\n        return this.$http.get(\r\n            this.url.base(\"/api/reference/:name/entities/hierarchical/:hierarchy\")\r\n                .param(\":name\", referenceName)\r\n                .param(\":hierarchy\", referenceHierarchicalProperty).service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getReferenceEntity(referenceName: string, id: number): ng.IPromise<IReferenceEntityAndMetadataResult> {\r\n        return this.$http.get(\r\n            this.url.base(\"/api/reference/:name/entity/:id\")\r\n                .param(\":name\", referenceName)\r\n                .param(\":id\", id).service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getEmptyReferenceEntity(referenceName: string): ng.IPromise<IReferenceEntityAndMetadataResult> {\r\n        return this.$http.get(this.url.base(\"/api/reference/:name/entity/empty\")\r\n            .param(\":name\", referenceName).service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getEmptyReferenceEntityNoMetadata(referenceName: string): ng.IPromise<Map<string, any>> {\r\n        return this.$http.get(this.url.base(\"/api/reference/:name/entity/empty/no/metadata\")\r\n            .param(\":name\", referenceName).service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getReferenceMetadata(referenceName: string): ng.IPromise<IReferenceEntityMetadata> {\r\n        return this.$http.get(this.url.base(\"/api/reference/:name/metadata\").param(\":name\", referenceName).service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getAssociationReferencesMetadata(referenceName: string): ng.IPromise<Map<string, IReferenceEntityMetadata>> {\r\n        return this.$http.get(this.url.base(\"/api/reference/:name/metadata/association\")\r\n            .param(\":name\", referenceName).service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public createReferenceEntity(referenceName: string, map: Map<string, any>): ng.IPromise<Map<string, any>> {\r\n        return this.$http.post(this.url.base(\"/api/reference/:name/entity/create\")\r\n            .param(\":name\", referenceName).service(), map)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public updateReferenceEntity(referenceName: string, id: number, map: Map<string, any>): ng.IPromise<Map<string, any>> {\r\n        return this.$http.put(this.url.base(\"/api/reference/:name/entity/update/:id\")\r\n            .param(\":name\", referenceName)\r\n            .param(\":id\", id).service(), map)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public setActiveReferenceEntity(referenceName: string, id: number, version: number, isActive: boolean): ng.IPromise<Map<string, any>> {\r\n        return this.$http.put(this.url.base(\"/api/reference/:referenceName/entity/:id?isActive=:isActive&version=:version\")\r\n            .param(\":referenceName\", referenceName)\r\n            .param(\":id\", id)\r\n            .param(\":version\", version)\r\n            .param(\":isActive\", isActive).service(), null)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    private createReferenceFilterParams(referenceParams: IReferenceEntitiesParams): any {\r\n        return {\r\n            params: {\r\n                referenceFilter: referenceParams.referenceFilter,\r\n                referenceSorting: referenceParams.referenceSorting,\r\n                referenceSearchString: referenceParams.referenceSearchString,\r\n                referenceSplitParam: referenceParams.referenceSplitParam\r\n            }\r\n        }\r\n    }\r\n}","import {IReferenceAttributeMetadata, IReferenceEntityMetadata} from \"./models/ReferenceMetadata\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\n\r\nexport interface IAttributeConverter {\r\n    convertStringAttribute(value: string): string;\r\n    convertNumberAttribute(value: number): string;\r\n    convertBooleanAttribute(value: boolean): string;\r\n    convertDateAttribute(value: number): string;\r\n    convertMoneyAttribute(value: number): string;\r\n    convertGroupAttribute(entity: Map<string, any>, groupTemplate: string,\r\n                          childAttributes: Array<IReferenceAttributeMetadata>): string;\r\n    convertOneAssociationAttribute(entity: Map<string, any>, associationEntity: IReferenceEntityMetadata): string;\r\n    convertOneAssociationAttributeToNumber(entity: Map<string, any>): number;\r\n    convertManyAssociationAttributeToNumbers(entities: Array<Map<string, any>>): Array<number>;\r\n    convertOneAssociationAttributeForGrid(entity: Map<string, any>, associationAttribute: IReferenceAttributeMetadata): string;\r\n}\r\n\r\nexport interface IDefaultValueConvert {\r\n    convertStringDefaultValue(value: string): string;\r\n    convertBooleanDefaultValue(value: string): boolean;\r\n    convertDateDefaultValue(value: string): string;\r\n    convertMoneyDefaultValue(value: string): string;\r\n    convertOneAssociationDefaultValue(value: string): number;\r\n    convertManyAssociationDefaultValue(value: string): Array<number>;\r\n}\r\n\r\nexport interface IAttributeValidator {\r\n    validStringAttribute(value: string): boolean;\r\n    validBooleanAttribute(value: boolean): boolean;\r\n    validDateAttribute(value: string): boolean;\r\n    validMoneyAttribute(value: string): boolean;\r\n    validOneAssociationAttribute(value: number): boolean;\r\n    validManyAssociationAttribute(value: Array<number>): boolean;\r\n    validAttribute(attrType: string, value: any): boolean;\r\n}\r\n\r\nexport interface IAttributeTypeIdentifier {\r\n    isTextAttributeType(attributeType: string): boolean;\r\n    isNumberAttributeType(attributeType: string): boolean;\r\n    isBooleanAttributeType(attributeType: string): boolean;\r\n    isDateAttributeType(attributeType: string): boolean;\r\n    isMoneyAttributeType(attributeType: string): boolean;\r\n    isGroupAttributeType(attributeType: string): boolean;\r\n    isOneAssociationAttributeType(attributeType: string): boolean;\r\n    isManyAssociationAttributeType(attributeType: string): boolean;\r\n}\r\n\r\nexport interface ILogicalOperatorTypeIdentifier {\r\n    isAndLogicalOperatorType(logicalOperatorType: string): boolean;\r\n    isOrLogicalOperatorType(logicalOperatorType: string): boolean;\r\n}\r\n\r\nexport interface IEntityManipulator {\r\n    getEntityNameByAttribute(entity: Map<string, any>, attribute: IReferenceAttributeMetadata) : string;\r\n    fixInputReferenceEntityAttributes(referenceEntity: Map<string, any>,\r\n                                      referenceMetadata: IReferenceEntityMetadata): void;\r\n}\r\n\r\nexport class ReferenceUtils implements IAttributeConverter, IDefaultValueConvert, IAttributeValidator,\r\n        IAttributeTypeIdentifier, ILogicalOperatorTypeIdentifier, IEntityManipulator {\r\n    public static NAME = \"reference.ReferenceUtils\";\r\n    public static entityIdProperty = \"id\";\r\n    public static entityVersionProperty = \"version\";\r\n    public static entityIsActiveProperty = \"isActive\";\r\n\r\n    public getEntityIdProperty(): string {\r\n        return ReferenceUtils.entityIdProperty;\r\n    }\r\n\r\n    public getEntityIsActiveProperty(): string {\r\n        return ReferenceUtils.entityIsActiveProperty;\r\n    }\r\n\r\n    public getIsActiveGridStyle(isActive: boolean): any {\r\n        return isActive\r\n            ? {}\r\n            : {\"color\": \"#999999\"};\r\n    }\r\n\r\n    public getReferenceName(meta: IReferenceEntityMetadata): string {\r\n        if (!meta) {\r\n            return null;\r\n        }\r\n        return meta.title;\r\n    }\r\n\r\n    public convertStringAttribute(value: string): string {\r\n        return value;\r\n    }\r\n\r\n    public convertNumberAttribute(value: number): string {\r\n        return value.toString();\r\n    }\r\n\r\n    public convertBooleanAttribute(value: boolean): string {\r\n        return value != undefined\r\n            ? value ? 'Yes' : 'No'\r\n            : undefined;\r\n    }\r\n\r\n    public convertDateAttribute(value: number): string {\r\n        return value != undefined\r\n            ? moment(value).format(\"M/D/YYYY\")\r\n            : undefined;\r\n    }\r\n\r\n    public convertMoneyAttribute(value: number): string {\r\n        return new String(value).toString();\r\n    }\r\n\r\n    public convertGroupAttribute(entity: Map<string, any>, groupTemplate: string,\r\n                                 childAttributes: Array<IReferenceAttributeMetadata>): string {\r\n        var result = \"\";\r\n        var templateParts = groupTemplate.split(\"|\");\r\n        for (var i = 0, j = 0; i < templateParts.length || j < childAttributes.length; ++i) {\r\n            var part = templateParts[i];\r\n            if (part.indexOf(\"?\", 0) == 0) {\r\n                var attr = childAttributes[j];\r\n                var attrType = attr.type;\r\n                var attrSysName = attr.systemName;\r\n                var value;\r\n                if (this.isTextAttributeType(attrType)) {\r\n                    value = this.convertStringAttribute(entity[attrSysName]);\r\n                } else if (this.isBooleanAttributeType(attrType)) {\r\n                    value = this.convertBooleanAttribute(entity[attrSysName]);\r\n                } else if (this.isDateAttributeType(attrType)) {\r\n                    value = this.convertDateAttribute(entity[attrSysName]);\r\n                } else if (this.isMoneyAttributeType(attrType)) {\r\n                    value = this.convertMoneyAttribute(entity[attrSysName]);\r\n                }\r\n                if (value && value.length > 0) {\r\n                    part = part.substr(1, part.length).replace(\"%1\", value);\r\n                    result += part;\r\n                }\r\n                ++j;\r\n            } else {\r\n                result += part;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public convertOneAssociationAttribute(entity: Map<string, any>,\r\n                                          associationEntity: IReferenceEntityMetadata): string {\r\n        return this.getEntityNameByAttribute(entity, associationEntity.selectorAttribute);\r\n    }\r\n\r\n    public convertOneAssociationAttributeForGrid(entity: Map<string, any>,\r\n                                                 associationAttribute: IReferenceAttributeMetadata): string {\r\n        return entity[associationAttribute.systemName + \"_\" + associationAttribute.association.selectorAttribute.systemName];\r\n    }\r\n\r\n    public convertOneAssociationAttributeToNumber(entity: Map<string, any>): number {\r\n        return entity != undefined\r\n            ? entity[\"id\"]\r\n            : undefined;\r\n    }\r\n\r\n    public convertManyAssociationAttributeToNumbers(entities: Array<Map<string, any>>): Array<number> {\r\n        var result: Array<any> = [];\r\n        if (entities && entities.length > 0) {\r\n            for (var i = 0; i < entities.length; ++i) {\r\n                var entity = entities[i];\r\n                result.push(this.convertOneAssociationAttributeToNumber(entity));\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public convertStringDefaultValue(value: string): string {\r\n        return value;\r\n    }\r\n\r\n    public convertBooleanDefaultValue(value: string): boolean {\r\n        return value && value == \"true\"\r\n            ? true\r\n            : false;\r\n    }\r\n\r\n    public convertDateDefaultValue(value: string): string {\r\n        return value;\r\n    }\r\n\r\n    public convertMoneyDefaultValue(value: string): string {\r\n        return value;\r\n    }\r\n\r\n    public convertOneAssociationDefaultValue(value: string): number {\r\n        return parseInt(value, 10);\r\n    }\r\n\r\n    public convertManyAssociationDefaultValue(value: string): Array<number> {\r\n        var result: Array<number> = [];\r\n        var ids = value.split(\",\");\r\n        for (var i = 0; i < ids.length; ++i) {\r\n            result.push(this.convertOneAssociationDefaultValue(ids[i]));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    public validStringAttribute(value: string): boolean {\r\n        return value && value.length > 0;\r\n    }\r\n\r\n    public validBooleanAttribute(value: boolean): boolean {\r\n        return value != undefined;\r\n    }\r\n\r\n    public validDateAttribute(value: string): boolean {\r\n        return value && value.length > 0;\r\n    }\r\n\r\n    public validMoneyAttribute(value: string): boolean {\r\n        return value && value.length > 0;\r\n    }\r\n\r\n    public validOneAssociationAttribute(value: number): boolean {\r\n        return value && value > 0;\r\n    }\r\n\r\n    public validManyAssociationAttribute(value: Array<number>): boolean {\r\n        return value && value.length > 0;\r\n    }\r\n\r\n    public validAttribute(attrType: string, value: any): boolean {\r\n        if (this.isTextAttributeType(attrType)) {\r\n            return this.validStringAttribute(value);\r\n        } else if (this.isBooleanAttributeType(attrType)) {\r\n            return this.validBooleanAttribute(value);\r\n        } else if (this.isDateAttributeType(attrType)) {\r\n            return this.validDateAttribute(value);\r\n        } else if (this.isMoneyAttributeType(attrType)) {\r\n            return this.validMoneyAttribute(value);\r\n        } else if (this.isOneAssociationAttributeType(attrType)) {\r\n            return this.validOneAssociationAttribute(value);\r\n        } else if (this.isManyAssociationAttributeType(attrType)) {\r\n            return this.validManyAssociationAttribute(value);\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public isTextAttributeType(attributeType: string): boolean {\r\n        return attributeType == 'TEXT';\r\n    }\r\n\r\n    public isNumberAttributeType(attributeType: string): boolean {\r\n        return attributeType == 'NUMBER';\r\n    }\r\n\r\n    public isBooleanAttributeType(attributeType: string): boolean {\r\n        return attributeType == 'BOOLEAN';\r\n    }\r\n\r\n    public isDateAttributeType(attributeType: string): boolean {\r\n        return attributeType == 'DATE';\r\n    }\r\n\r\n    public isMoneyAttributeType(attributeType: string): boolean {\r\n        return attributeType == 'MONEY';\r\n    }\r\n\r\n    public isGroupAttributeType(attributeType: string): boolean {\r\n        return attributeType == 'GROUP';\r\n    }\r\n\r\n    public isOneAssociationAttributeType(attributeType: string): boolean {\r\n        return attributeType == 'ONE_ASSOCIATION';\r\n    }\r\n\r\n    public isManyAssociationAttributeType(attributeType: string): boolean {\r\n        return attributeType == 'MANY_ASSOCIATION';\r\n    }\r\n\r\n    public isAndLogicalOperatorType(logicalOperatorType: string): boolean {\r\n        return logicalOperatorType == \"AND\";\r\n    }\r\n\r\n    public isOrLogicalOperatorType(logicalOperatorType: string): boolean {\r\n        return logicalOperatorType == \"OR\";\r\n    }\r\n\r\n    public getEntityNameByAttribute(entity: Map<string, any>, attribute: IReferenceAttributeMetadata): string {\r\n        if (!entity || !attribute) {\r\n            return \"\";\r\n        }\r\n        var attrType = attribute.type;\r\n        var attrSysName = attribute.systemName;\r\n        if (this.isTextAttributeType(attrType)) {\r\n            return this.convertStringAttribute(entity[attrSysName]);\r\n        } else if (this.isBooleanAttributeType(attrType)) {\r\n            return this.convertBooleanAttribute(entity[attrSysName]);\r\n        } else if (this.isDateAttributeType(attrType)) {\r\n            return this.convertDateAttribute(entity[attrSysName]);\r\n        } else if (this.isMoneyAttributeType(attrType)) {\r\n            return this.convertMoneyAttribute(entity[attrSysName]);\r\n        } else if (this.isGroupAttributeType(attrType)) {\r\n            return this.convertGroupAttribute(entity, attribute.groupTemplate, attribute.childAttributes);\r\n        }\r\n    }\r\n\r\n    public fixInputReferenceEntityAttributes(referenceEntity: Map<string, any>,\r\n                                             referenceMetadata: IReferenceEntityMetadata): void {\r\n        for (var i = 0; i < referenceMetadata.defaultAttributes.length; ++i) {\r\n            var attr = referenceMetadata.defaultAttributes[i];\r\n            var attrType = attr.type;\r\n            var attrSysName = attr.systemName;\r\n            if (this.isTextAttributeType(attrType)) {\r\n                referenceEntity[attrSysName] = this.convertStringAttribute(\r\n                    referenceEntity[attrSysName]);\r\n            } else if (this.isDateAttributeType(attrType)) {\r\n                referenceEntity[attrSysName] = this.convertDateAttribute(\r\n                    referenceEntity[attrSysName]);\r\n            } else if (this.isMoneyAttributeType(attrType)) {\r\n                referenceEntity[attrSysName] = this.convertMoneyAttribute(\r\n                    referenceEntity[attrSysName]);\r\n            } else if (this.isOneAssociationAttributeType(attrType)) {\r\n                referenceEntity[attrSysName] = this.convertOneAssociationAttributeToNumber(\r\n                    referenceEntity[attrSysName]);\r\n            } else if (this.isManyAssociationAttributeType(attrType)) {\r\n                referenceEntity[attrSysName] = this.convertManyAssociationAttributeToNumbers(\r\n                    referenceEntity[attrSysName]);\r\n            }\r\n        }\r\n    }\r\n\r\n    public getStringInBrowserFormat(str: string): string {\r\n        let result: string = \"\";\r\n        angular.forEach(str, ch => {\r\n            switch (ch) {\r\n                case \"=\": result = result.concat(\"%3D\"); break;\r\n                default: result = result.concat(ch);\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n}\r\n","export interface IReferenceEntitiesParams {\r\n    referenceFilter?: string;\r\n    referenceSorting?: string;\r\n    referenceSearchString?: string;\r\n    referenceSplitParam?: boolean;\r\n}\r\n\r\nexport class ReferenceEntitiesParams implements IReferenceEntitiesParams {\r\n    public referenceFilter: string;\r\n    public referenceSorting: string;\r\n    public referenceSearchString: string;\r\n    public referenceSplitParam: boolean;\r\n\r\n    constructor(referenceFilter: string,\r\n                referenceSorting: string,\r\n                referenceSearchString: string,\r\n                referenceSplitParam: boolean) {\r\n        this.referenceFilter = referenceFilter;\r\n        this.referenceSorting = referenceSorting;\r\n        this.referenceSearchString = referenceSearchString;\r\n        this.referenceSplitParam = referenceSplitParam;\r\n    }\r\n}","import {ReferenceUtils} from \"./../ReferenceUtils\"\r\nimport {IReferenceEntityMetadata} from \"./../models/ReferenceMetadata\"\r\n\r\nexport class ReferenceIsRequiredValidator {\r\n\r\n    protected utils: ReferenceUtils;\r\n    protected entity: Map<string, any>;\r\n    protected metadata: IReferenceEntityMetadata;\r\n    protected validationErrorsMap: Map<string, string>;\r\n\r\n    constructor(utils: ReferenceUtils,\r\n                entity: Map<string, any>,\r\n                metadata: IReferenceEntityMetadata,\r\n                validationErrorsMap: Map<string, string>) {\r\n        this.utils = utils;\r\n        this.entity = entity;\r\n        this.metadata = metadata;\r\n        this.validationErrorsMap = validationErrorsMap;\r\n    }\r\n\r\n    public valid(): boolean {\r\n        if (!this.utils || !this.entity || !this.metadata || !this.validationErrorsMap) {\r\n            return false;\r\n        }\r\n        var result = true;\r\n        for (var i = 0; i < this.metadata.editableAttributes.length; ++i) {\r\n            var attr = this.metadata.editableAttributes[i];\r\n            var attrSysName = attr.systemName;\r\n            var attrIsRequired = attr.isRequired;\r\n            if (!attrIsRequired) {\r\n                continue;\r\n            }\r\n            if (!this.utils.validAttribute(attr.type, this.entity[attrSysName])) {\r\n                this.validationErrorsMap.set(attrSysName, this.buildErrorMessage(attr.title));\r\n                result = false;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildErrorMessage(title: string): string {\r\n        return \"Please specify a value for the field \\\"%1\\\"\".replace(\"%1\", title);\r\n    }\r\n}","import {ReferenceUtils} from \"./../ReferenceUtils\"\r\nimport {IReferenceEntityMetadata} from \"./../models/ReferenceMetadata\"\r\n\r\nexport class ReferenceMaxLengthValidator {\r\n\r\n    protected utils: ReferenceUtils;\r\n    protected entity: Map<string, any>;\r\n    protected metadata: IReferenceEntityMetadata;\r\n    protected validationErrorsMap: Map<string, string>;\r\n\r\n    constructor(utils: ReferenceUtils,\r\n                entity: Map<string, any>,\r\n                metadata: IReferenceEntityMetadata,\r\n                validationErrorsMap: Map<string, string>) {\r\n        this.utils = utils;\r\n        this.entity = entity;\r\n        this.metadata = metadata;\r\n        this.validationErrorsMap = validationErrorsMap;\r\n    }\r\n\r\n    public valid(): boolean {\r\n        if (!this.utils || !this.entity || !this.metadata || !this.validationErrorsMap) {\r\n            return false;\r\n        }\r\n        var result = true;\r\n        for (var i = 0; i < this.metadata.editableAttributes.length; ++i) {\r\n            var attr = this.metadata.editableAttributes[i];\r\n            var attrSysName = attr.systemName;\r\n            var attrMaxLength = attr.maxLength;\r\n            if (!this.utils.isTextAttributeType(attr.type) || !attrMaxLength || !this.entity[attrSysName]) {\r\n                continue;\r\n            }\r\n            if (this.entity[attrSysName].length > attrMaxLength) {\r\n                this.validationErrorsMap.set(attrSysName, this.buildErrorMessage(attr.title, attrMaxLength));\r\n                result = false;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private buildErrorMessage(title: string, maxLength: any): string {\r\n        return \"Field length \\\"%1\\\" cannot exceed %1 symbols\".replace(\"%1\", title).replace(\"%1\", maxLength);\r\n    }\r\n}","import {ReferenceUtils} from \"./../ReferenceUtils\"\r\nimport {IReferenceEntityMetadata, IReferenceRequiredAttributesGroupMetadata} from \"./../models/ReferenceMetadata\"\r\n\r\nexport class ReferenceRequiredAttributesGroupValidator {\r\n\r\n    protected utils: ReferenceUtils;\r\n    protected entity: Map<string, any>;\r\n    protected metadata: IReferenceEntityMetadata;\r\n    protected validationErrorsMap: Map<string, string>;\r\n\r\n    constructor(utils: ReferenceUtils,\r\n                entity: Map<string, any>,\r\n                metadata: IReferenceEntityMetadata,\r\n                validationErrorsMap: Map<string, string>) {\r\n        this.utils = utils;\r\n        this.entity = entity;\r\n        this.metadata = metadata;\r\n        this.validationErrorsMap = validationErrorsMap;\r\n    }\r\n\r\n    public valid(): boolean {\r\n        if (!this.utils || !this.entity || !this.metadata || !this.validationErrorsMap) {\r\n            return false;\r\n        }\r\n        if (!this.metadata.requiredAttributesGroup) {\r\n            return true;\r\n        }\r\n        return this.entityByRequiredAttributesGroupValid(this.entity, this.metadata.requiredAttributesGroup);\r\n    }\r\n\r\n    private entityByRequiredAttributesGroupValid(referenceEntity: Map<string, any>,\r\n                                                 requiredAttributesGroup: IReferenceRequiredAttributesGroupMetadata): boolean {\r\n        var logicalOperatorType = requiredAttributesGroup.logicalOperatorType;\r\n        var result = this.entityByRequiredAttributesValid(referenceEntity, requiredAttributesGroup);\r\n        for (var i = 0; i < requiredAttributesGroup.requiredAttributesGroups.length; ++i) {\r\n            var requiredAttrsGroup = requiredAttributesGroup.requiredAttributesGroups[i];\r\n            if (this.utils.isAndLogicalOperatorType(logicalOperatorType)) {\r\n                result = result && this.entityByRequiredAttributesGroupValid(referenceEntity, requiredAttrsGroup);\r\n            } else if (this.utils.isOrLogicalOperatorType(logicalOperatorType)) {\r\n                result = result || this.entityByRequiredAttributesGroupValid(referenceEntity, requiredAttrsGroup);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    private entityByRequiredAttributesValid(referenceEntity: Map<string, any>,\r\n                                            requiredAttributesGroup: IReferenceRequiredAttributesGroupMetadata): boolean {\r\n        var attributes = requiredAttributesGroup.attributes;\r\n        var logicalOperatorType = requiredAttributesGroup.logicalOperatorType;\r\n        if (!attributes || attributes.length == 0) {\r\n            return this.utils.isAndLogicalOperatorType(logicalOperatorType);\r\n        }\r\n        var firstAttr = attributes[0];\r\n        var result = this.utils.validAttribute(firstAttr.type, referenceEntity[firstAttr.systemName]);\r\n        for (var i = 1; i < attributes.length; ++i) {\r\n            var attr = attributes[i];\r\n            if (this.utils.isAndLogicalOperatorType(logicalOperatorType)) {\r\n                result = result && this.utils.validAttribute(attr.type, referenceEntity[attr.systemName]);\r\n            } else if (this.utils.isOrLogicalOperatorType(logicalOperatorType)) {\r\n                result = result || this.utils.validAttribute(attr.type, referenceEntity[attr.systemName]);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n}","export enum LogonProviderEnum {\r\n    LOCAL = 1,\r\n    AD_LOCAL = 2,\r\n    AD_SSO = 3,\r\n    PERSONIFY_SSO = 101,\r\n    PERSONIFY_USERPASSWORD = 102,\r\n    LOCAL_OR_PERSONIFY = 103\r\n}\r\n","import {SecuredObjectType} from \"./permissions/SecuredObjectType\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {Event} from \"./../authcore/Event\";\r\n\r\nexport class PermissionsRepository {\r\n    public static NAME = \"security.PermissionsRepository\";\r\n\r\n    private static CACHE_EXPIRATION_TIME = 1000 * 60 * 5;\r\n    private static CACHE_CLEAR_INTERVAL = 1000 * 5;\r\n\r\n    private timer: angular.IPromise<any>;\r\n\r\n    private permissionsCache: Map<string, any> = new Map<string, any>();\r\n    private expirationCache: Map<string, number> = new Map<string, number>();\r\n\r\n    public static $inject = [\r\n        \"$rootScope\",\r\n        \"$interval\",\r\n        \"$http\",\r\n        \"$q\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor($rootScope: angular.IRootScopeService,\r\n                private $interval: angular.IIntervalService,\r\n                private $http: angular.IHttpService,\r\n                private $q: angular.IQService,\r\n                private url: UrlService) {\r\n        $rootScope.$on(Event.LOGGED_ON, () => {\r\n            this.clearCache(true);\r\n        });\r\n        $rootScope.$on(Event.LOGGED_OFF, () => {\r\n            this.clearCache(true);\r\n        });\r\n        this.timer = this.$interval(() => {\r\n            this.clearCache(false)\r\n        }, PermissionsRepository.CACHE_CLEAR_INTERVAL, 0, false);\r\n        $rootScope.$on('$destroy', () => {\r\n            this.$interval.cancel(this.timer);\r\n        });\r\n    }\r\n\r\n    public getPermissionsForObject(objectType: SecuredObjectType, objectId: string): angular.IPromise<any> {\r\n        var key = objectType.key + '_' + objectId;\r\n        var value = this.permissionsCache.get(key);\r\n        if (value) {\r\n            var promise: ng.IDeferred<any> = this.$q.defer();\r\n            promise.resolve(value);\r\n\r\n            return promise.promise;\r\n        }\r\n\r\n        return this.$http.get(this.url.base(\"/api/permissions/:objectType/:id\")\r\n            .param(\":objectType\", objectType.name)\r\n            .param(\":id\", objectId)\r\n            .service())\r\n            .then(result => {\r\n                this.permissionsCache.set(key, result.data);\r\n                this.expirationCache.set(key, new Date().getTime());\r\n                return result.data;\r\n            });\r\n    }\r\n\r\n    private clearCache(force: boolean) {\r\n        if (force) {\r\n            this.permissionsCache.clear();\r\n            this.expirationCache.clear();\r\n        } else {\r\n            var expired = [];\r\n            var expiredFromTime = new Date().getTime() - PermissionsRepository.CACHE_EXPIRATION_TIME;\r\n            this.expirationCache.forEach((value, key, map) => {\r\n                if (value < expiredFromTime) {\r\n                    expired.push(key);\r\n                }\r\n            });\r\n            for (var i = 0; i < expired.length; i++) {\r\n                var key = expired[i];\r\n                this.permissionsCache.delete(key);\r\n                this.expirationCache.delete(key);\r\n            }\r\n        }\r\n    }\r\n}","import {PermissionsRepository} from \"./PermissionsRepository\";\r\nimport {ISystemPermissions} from \"./permissions/ISystemPermissions\";\r\nimport {ICoursePermissions} from \"./permissions/ICoursePermissions\";\r\nimport {IMaterialPermissions} from \"./permissions/IMaterialPermissions\";\r\nimport {IPlaylistPermissions} from \"./permissions/IPlaylistPermissions\";\r\nimport {IQuizPermissions} from \"./permissions/IQuizPermissions\";\r\nimport {INewsPermissions} from \"./permissions/INewsPermissions\";\r\nimport {SecuredObjectType} from \"./permissions/SecuredObjectType\";\r\nimport {IPermissionWithUsersAndGroups} from \"./permissions/IPermissionWithUsersAndGroups\";\r\nimport {AuthService} from \"./../auth/AuthService\";\r\nimport {UrlService, IUrlBuilder} from \"./../utils/UrlService\";\r\n\r\nexport class PermissionsService {\r\n    public static NAME = \"security.PermissionsService\";\r\n\r\n    public static $inject = [\r\n        AuthService.NAME,\r\n        PermissionsRepository.NAME,\r\n        \"$http\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private authApi: AuthService,\r\n                private permissionsRepository: PermissionsRepository,\r\n                private $http: angular.IHttpService,\r\n                private url: UrlService) {\r\n    }\r\n\r\n    public getSystemPermissions(): angular.IPromise<ISystemPermissions> {\r\n        return this.authApi.getCurrentUser()\r\n            .then(user => user.permissions);\r\n    }\r\n\r\n    public getSecuredObjectPermissions(objectType: SecuredObjectType, entityId: string): angular.IPromise<any> {\r\n        return this.permissionsRepository.getPermissionsForObject(objectType, entityId);\r\n    }\r\n\r\n    public getMaterialPermissions(materialId: string): angular.IPromise<IMaterialPermissions> {\r\n        return this.permissionsRepository.getPermissionsForObject(SecuredObjectType.MATERIAL, materialId);\r\n    }\r\n\r\n    public getPlaylistPermissions(playlistId: string): angular.IPromise<IPlaylistPermissions> {\r\n        return this.permissionsRepository.getPermissionsForObject(SecuredObjectType.PLAYLIST, playlistId);\r\n    }\r\n\r\n    public getCoursePermissions(courseId: string): angular.IPromise<ICoursePermissions> {\r\n        return this.permissionsRepository.getPermissionsForObject(SecuredObjectType.COURSE, courseId);\r\n    }\r\n\r\n    public getQuizPermissions(quizId: string): angular.IPromise<IQuizPermissions> {\r\n        return this.permissionsRepository.getPermissionsForObject(SecuredObjectType.QUIZ, quizId);\r\n    }\r\n\r\n    public getNewsPermissions(newsId: string): angular.IPromise<INewsPermissions> {\r\n        return this.permissionsRepository.getPermissionsForObject(SecuredObjectType.NEWS, newsId);\r\n    }\r\n\r\n    public getAllObjectPermissionsWithUsersAndGroups(securedObjectType: SecuredObjectType, objectId?: string): angular.IPromise<Array<IPermissionWithUsersAndGroups>> {\r\n        let url: string = \"/api/permissions/usersAndGroups/:objectType\";\r\n        if (objectId != null) {\r\n            url += \"?id=:id\";\r\n        }\r\n        let urlBuilder: IUrlBuilder = this.url.base(url)\r\n            .param(\":objectType\", securedObjectType.name);\r\n        if (objectId != null) {\r\n            urlBuilder.param(\":id\", objectId);\r\n        }\r\n        return this.$http.get(urlBuilder.service())\r\n            .then(result => {\r\n                return result.data;\r\n            });\r\n    }\r\n}","import {PermissionsRepository} from \"./PermissionsRepository\";\r\nimport {PermissionsService} from \"./PermissionsService\";\r\nimport {SecurityService} from \"./SecurityService\";\r\n\r\nimport {UrlsModule} from \"./../urls/UrlsModule\";\r\nimport {AuthModule} from \"./../auth/AuthModule\";\r\nimport {AuthCoreModule} from \"./../authcore/AuthCoreModule\";\r\n\r\nexport var SecurityModule: angular.IModule = angular\r\n    .module(\"security\", [\r\n        UrlsModule.name,\r\n        AuthModule.name,\r\n        AuthCoreModule.name\r\n    ])\r\n    .service(PermissionsRepository.NAME, PermissionsRepository)\r\n    .service(PermissionsService.NAME, PermissionsService)\r\n    .service(SecurityService.NAME, SecurityService);","import {PermissionsService} from \"./PermissionsService\";\r\nimport {ISystemPermissions} from \"./permissions/ISystemPermissions\";\r\nimport {IMaterialPermissions} from \"./permissions/IMaterialPermissions\";\r\nimport {IPlaylistPermissions} from \"./permissions/IPlaylistPermissions\";\r\nimport {ICoursePermissions} from \"./permissions/ICoursePermissions\";\r\nimport {IQuizPermissions} from \"./permissions/IQuizPermissions\";\r\nimport {INewsPermissions} from \"./permissions/INewsPermissions\";\r\n\r\nimport {AuthManager} from \"./../authcore/AuthManager\";\r\nimport {AuthRedirect} from \"./../authcore/AuthRedirect\";\r\nimport {RedirectReason} from \"./../authcore/RedirectReason\";\r\nimport {AuthRouter} from \"./../urls/AuthRouter\";\r\n\r\nexport class SecurityService {\r\n    public static NAME = \"security.SecurityService\";\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        AuthManager.NAME,\r\n        AuthRedirect.NAME,\r\n        PermissionsService.NAME,\r\n        AuthRouter.NAME\r\n    ];\r\n\r\n    constructor(private $location: ng.ILocationService,\r\n                private authManager: AuthManager,\r\n                private authRedirect: AuthRedirect,\r\n                private permissionsApi: PermissionsService,\r\n                private authRouter: AuthRouter) {\r\n    }\r\n\r\n    public demandAuthentication(): SecurityService {\r\n        if (!this.authManager.hasToken()) {\r\n            this.authRedirect.redirectToLogOn(RedirectReason.ACCESS_DENIED);\r\n        } else if (!this.authManager.isAuthenticated()) {\r\n            this.authRedirect.redirectToLogOn(RedirectReason.TOKEN_EXPIRED);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public isAuthenticated(): boolean {\r\n        if (!this.authManager.hasToken()) {\r\n            return false;\r\n        } else if (!this.authManager.isAuthenticated()) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public demandNotAuthenticated(): SecurityService { // Guest user is considered not authenticated on the client side;\r\n        if (this.authManager.isAuthenticated()) {\r\n            this.authRedirect.forwardToAccessDenied();\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public demandSystemPermissions(func: (systemPermissions: ISystemPermissions) => boolean): SecurityService {\r\n        return this.demandSystemPermissionsIf(true, func);\r\n    }\r\n\r\n    public demandSystemPermissionsIf(condition: boolean, func: (systemPermissions: ISystemPermissions) => boolean): SecurityService {\r\n        if (condition) {\r\n            this.permissionsApi.getSystemPermissions().then(systemPermissions => {\r\n                if (!func(systemPermissions)) {\r\n                    this.forwardToAccessDeniedOrRedirectLogOn();\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public demandMaterialPermissions(materialId: string, func: (materialPermissions: IMaterialPermissions) => boolean): SecurityService {\r\n        return this.demandMaterialPermissionsIf(true, materialId, func);\r\n    }\r\n\r\n    public demandMaterialPermissionsIf(condition: boolean, materialId: string,\r\n                                       func: (materialPermissions: IMaterialPermissions) => boolean): SecurityService {\r\n        if (condition) {\r\n            this.permissionsApi.getMaterialPermissions(materialId).then(materialPermissions => {\r\n                if (!func(materialPermissions)) {\r\n                    this.forwardToAccessDeniedOrRedirectLogOn();\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public demandPlaylistPermissions(playlistId: string, func: (playlistPermissions: IPlaylistPermissions) => boolean): SecurityService {\r\n        return this.demandPlaylistPermissionsIf(true, playlistId, func);\r\n    }\r\n\r\n    public demandPlaylistPermissionsIf(condition: boolean, playlistId: string,\r\n                                       func: (playlistPermissions: IPlaylistPermissions) => boolean): SecurityService {\r\n        if (condition) {\r\n            this.permissionsApi.getPlaylistPermissions(playlistId).then(playlistPermissions => {\r\n                if (!func(playlistPermissions)) {\r\n                    this.forwardToAccessDeniedOrRedirectLogOn();\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public demandCoursePermissions(courseId: string, func: (coursePermissions: ICoursePermissions) => boolean): SecurityService {\r\n        return this.demandCoursePermissionsIf(true, courseId, func);\r\n    }\r\n\r\n    public demandCoursePermissionsIf(condition: boolean, courseId: string,\r\n                                     func: (coursePermissions: ICoursePermissions) => boolean): SecurityService {\r\n        if (condition) {\r\n            this.permissionsApi.getCoursePermissions(courseId).then(coursePermissions => {\r\n                if (!func(coursePermissions)) {\r\n                    this.forwardToAccessDeniedOrRedirectLogOn();\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public demandQuizPermissions(quizId: string, func: (quizPermissions: IQuizPermissions) => boolean): SecurityService {\r\n        return this.demandQuizPermissionsIf(true, quizId, func);\r\n    }\r\n\r\n    public demandQuizPermissionsIf(condition: boolean, quizId: string,\r\n                                   func: (quizPermissions: IQuizPermissions) => boolean): SecurityService {\r\n        if (condition) {\r\n            this.permissionsApi.getQuizPermissions(quizId).then(quizPermissions => {\r\n                if (!func(quizPermissions)) {\r\n                    this.forwardToAccessDeniedOrRedirectLogOn();\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public demandNewsPermissions(newsId: string, func: (newsPermissions: INewsPermissions) => boolean): SecurityService {\r\n        return this.demandMaterialPermissionsIf(true, newsId, func);\r\n    }\r\n\r\n    public demandNewsPermissionsIf(condition: boolean, newsId: string,\r\n                                   func: (newsPermissions: INewsPermissions) => boolean): SecurityService {\r\n        if (condition) {\r\n            this.permissionsApi.getNewsPermissions(newsId).then(newsPermissions => {\r\n                if (!func(newsPermissions)) {\r\n                    this.forwardToAccessDeniedOrRedirectLogOn();\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private forwardToAccessDeniedOrRedirectLogOn(): void {\r\n        if (this.authManager.isAuthenticated()) {\r\n            this.authRedirect.forwardToAccessDenied();\r\n        } else if (!this.authManager.hasToken()) {\r\n            this.authManager.eraseToken();\r\n            this.authRedirect.redirectToLogOn(RedirectReason.ACCESS_DENIED);\r\n        } else {\r\n            this.authManager.logOff();\r\n            this.authManager.eraseToken();\r\n            this.authRedirect.redirectToLogOn(RedirectReason.TOKEN_EXPIRED);\r\n        }\r\n    }\r\n}","export interface IPermission {\r\n    id?: number;\r\n    version?: number;\r\n    type?: string;\r\n    name?: string;\r\n}\r\n\r\nexport class AllUsersPermissions {\r\n    public static VIEW_MATERIAL: number = 201;\r\n    public static DOWNLOAD_MATERIAL: number = 204;\r\n    public static VIEW_COURSE: number = 210;\r\n    public static VIEW_QUIZ: number = 221;\r\n    public static VIEW_PLAYLIST: number = 230;\r\n\r\n    public static PERMISSIONS_IDS: Array<number> = [\r\n        AllUsersPermissions.VIEW_MATERIAL,\r\n        AllUsersPermissions.DOWNLOAD_MATERIAL,\r\n        AllUsersPermissions.VIEW_COURSE,\r\n        AllUsersPermissions.VIEW_QUIZ,\r\n        AllUsersPermissions.VIEW_PLAYLIST];\r\n}","export class SecuredObjectType {\r\n    public key: number;\r\n    public name: string;\r\n\r\n    public static MATERIAL = new SecuredObjectType(1, 'material');\r\n    public static COURSE = new SecuredObjectType(2, 'course');\r\n    public static QUIZ = new SecuredObjectType(3, 'quiz');\r\n    public static PLAYLIST = new SecuredObjectType(4, 'playlist');\r\n    public static NEWS = new SecuredObjectType(5, 'news');\r\n\r\n    constructor(key: number, name: string) {\r\n        this.key = key;\r\n        this.name = name;\r\n    }\r\n}","import {SettingsService} from \"./SettingsService\";\r\nimport {ISystemCommonSettings} from \"./models/ISystemCommonSettings\";\r\nimport {ISystemLocale} from \"./models/ISystemLocale\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {SystemSettingsRouter} from \"./../urls/SystemSettingsRouter\";\r\n\r\nexport class CommonSettingsController {\r\n    public static NAME = \"settings.CommonSettingsController\";\r\n\r\n    public settings: ISystemCommonSettings = {};\r\n    public systemPermissions: ISystemPermissions;\r\n    public availableLocales: Array<ISystemLocale>;\r\n\r\n    public static $inject = [\r\n        UrlService.NAME,\r\n        \"$http\",\r\n        SettingsService.NAME,\r\n        PermissionsService.NAME,\r\n        SystemSettingsRouter.NAME\r\n    ];\r\n\r\n    constructor(private url: UrlService,\r\n                private $http: angular.IHttpService,\r\n                private settingsApi: SettingsService,\r\n                permissionsApi: PermissionsService,\r\n                public systemSettingsRouter: SystemSettingsRouter) {\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.ADMINISTRATION_COMMON_SETTINGS_MENU_KEY);\r\n        PageHeader.set().header(\"General system settings\").update();\r\n        permissionsApi.getSystemPermissions().then(s => {\r\n            this.systemPermissions = s;\r\n        });\r\n\r\n        this.loadSettings();\r\n        this.loadAvailableLocales();\r\n    }\r\n\r\n    public loadSettings(): void {\r\n        this.settingsApi.getSystemCommonSettings().then(p => {\r\n            angular.copy(p, this.settings);\r\n        });\r\n    }\r\n\r\n    public saveSettings() {\r\n        this.settingsApi.update(this.settings).then(\r\n                r => {\r\n                notifier.success(\"Settings have been saved\");\r\n                angular.copy(r, this.settings);\r\n            }).catch(r => {\r\n                notifier.error(r.data.message);\r\n            }\r\n        );\r\n    }\r\n\r\n    private loadAvailableLocales() {\r\n        this.settingsApi.getAvailableLocales().then(locales => {\r\n            this.availableLocales = locales;\r\n        });\r\n    }\r\n}","import {SettingsService} from \"./SettingsService\";\r\nimport {CommonSettingsController} from \"./CommonSettingsController\";\r\nimport {StoragePlacesRegistryController} from \"./StoragePlacesRegistryController\";\r\nimport {StoragePlaceEditController} from \"./StoragePlaceEditController\";\r\n\r\nimport {SecurityModule} from \"./../security/SecurityModule\";\r\nimport {UrlsModule} from \"./../urls/UrlsModule\";\r\n\r\nexport var SettingsModule: angular.IModule = angular\r\n        .module(\"settings\", [\r\n            SecurityModule.name,\r\n            UrlsModule.name\r\n        ])\r\n        .service(SettingsService.NAME, SettingsService)\r\n        .controller(CommonSettingsController.NAME, CommonSettingsController)\r\n        .controller(StoragePlacesRegistryController.NAME, StoragePlacesRegistryController)\r\n        .controller(StoragePlaceEditController.NAME, StoragePlaceEditController)\r\n    ;","import {ISystemCommonSettings} from \"./models/ISystemCommonSettings\";\r\nimport {ISystemLocale} from \"./models/ISystemLocale\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {IStoragePlace} from \"./models/IStoragePlace\";\r\nimport IQService = angular.IQService;\r\nimport ITimeoutService = angular.ITimeoutService;\r\n\r\nexport class SettingsService {\r\n    public static NAME = \"settings.SettingsService\";\r\n\r\n    private static RESET_CURRENT_DATE_TIMEOUT_MS = 5 * 60 * 1000;\r\n\r\n    private currentDate: number;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$q\",\r\n        \"$timeout\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private $q: IQService,\r\n                private $timeout: ITimeoutService,\r\n                private url: UrlService) {\r\n    }\r\n\r\n    public getSystemCommonSettings(): angular.IPromise<ISystemCommonSettings> {\r\n        return this.$http.get(\r\n            this.url.service(\"/api/settings/common\"))\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getAvailableLocales(): angular.IPromise<Array<ISystemLocale>> {\r\n        return this.$http.get(\r\n            this.url.service(\"/api/settings/common/locales\"))\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public update(settings: ISystemCommonSettings): angular.IPromise<ISystemCommonSettings> {\r\n        return this.$http.put(this.url.service(\"/api/settings/common\"), settings)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getStoragePlaces(): angular.IPromise<Array<IStoragePlace>> {\r\n        return this.$http.get(this.url.service(\"/api/settings/storagePlaces\"))\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getStoragePlace(id: number): angular.IPromise<IStoragePlace> {\r\n        return this.$http.get(this.url.base(\"/api/settings/storagePlaces/:id\").param(\":id\", id).service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public createStoragePlace(storagePlace: IStoragePlace): angular.IPromise<IStoragePlace> {\r\n        return this.$http.post(this.url.service(\"/api/settings/storagePlaces\"), storagePlace)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public updateStoragePlace(storagePlace: IStoragePlace): angular.IPromise<IStoragePlace> {\r\n        return this.$http.put(this.url.service(\"/api/settings/storagePlaces\"), storagePlace)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public setStoragePlaceActive(id: number, isActive: boolean): angular.IPromise<IStoragePlace> {\r\n        return this.$http.put(this.url.base(\"/api/settings/storagePlaces/:id/setActive/:isActive\")\r\n            .param(\":id\", id)\r\n            .param(\":isActive\", isActive).service(), undefined)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getCurrentDate(): angular.IPromise<number> {\r\n        if (!this.currentDate) {\r\n            return this.$http.get(this.url.service(\"/api/settings/common/currentDate\"))\r\n                .then(result => {\r\n                    this.currentDate = <number> result.data;\r\n                    this.$timeout(\r\n                        () => {\r\n                            this.currentDate = null\r\n                        }, SettingsService.RESET_CURRENT_DATE_TIMEOUT_MS\r\n                    );\r\n                    return result.data\r\n                });\r\n        } else {\r\n            return this.$q.when(this.currentDate);\r\n        }\r\n    }\r\n}\r\n","import {IStoragePlace} from \"./models/IStoragePlace\";\r\nimport {StorageTypeEnum} from \"./models/StorageTypeEnum\";\r\nimport {SettingsService} from \"./SettingsService\";\r\nimport {SystemSettingsRouter} from \"./../urls/SystemSettingsRouter\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {notifier} from \"./../INotifier\";\r\n\r\nexport class StoragePlaceEditController {\r\n    public static NAME = \"settings.StoragePlaceEditController\";\r\n\r\n    private storagePlaceId: number;\r\n\r\n    public storagePlace: IStoragePlace = {\r\n        id: null,\r\n        version: null,\r\n        name: \"\",\r\n        externalUrl: null,\r\n        connectionString: null,\r\n        login: null,\r\n        password: null,\r\n        type: null,\r\n        capacity: null,\r\n        usedSpace: null,\r\n        secured: true,\r\n        active: true\r\n    };\r\n    public confirmPassword: string;\r\n    public error: string;\r\n    public disableSaveButton: boolean = false;\r\n    public availableStorageTypes: string[] = [];\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$routeParams\",\r\n        \"$location\",\r\n        SettingsService.NAME,\r\n        SystemSettingsRouter.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private $routeParams: angular.route.IRouteParamsService,\r\n                private $location: angular.ILocationService,\r\n                private settingsApi: SettingsService,\r\n                public systemSettingsRouter: SystemSettingsRouter) {\r\n\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.ADMINISTRATION_STORAGE_PLACES_MENU_KEY);\r\n        this.storagePlaceId = this.$routeParams[\"storagePlaceId\"];\r\n        if (this.storagePlaceId) {\r\n            this.load();\r\n        } else {\r\n            PageHeader.set().header(\"New storage\").update();\r\n        }\r\n        for (let s in StorageTypeEnum) {\r\n            if (isNaN(s)) {\r\n                this.availableStorageTypes.push(s);\r\n            }\r\n        }\r\n    }\r\n\r\n    private load() {\r\n        this.settingsApi.getStoragePlace(this.storagePlaceId).then(result => {\r\n            PageHeader.set().header(result.name).update();\r\n            this.storagePlace = result;\r\n            this.confirmPassword = result.password;\r\n        });\r\n    }\r\n\r\n    public save() {\r\n        this.disableSaveButton = true;\r\n\r\n        var promise = (this.storagePlaceId)\r\n            ? this.settingsApi.updateStoragePlace(this.storagePlace)\r\n            : this.settingsApi.createStoragePlace(this.storagePlace);\r\n        promise.then(result => {\r\n            this.disableSaveButton = false;\r\n            notifier.success(\r\n                \"Storage ‘\" +\r\n                result.name +\r\n                \"’ has been saved\"\r\n            );\r\n            if (!this.storagePlaceId) {\r\n                this.$location.url(this.systemSettingsRouter.storagePlaceEditUrl(result.id));\r\n            } else {\r\n                this.load();\r\n            }\r\n        });\r\n    }\r\n\r\n    public deactivate() {\r\n        this.settingsApi.setStoragePlaceActive(this.storagePlace.id, false)\r\n            .then(storagePlace => {\r\n                this.$location.url(this.systemSettingsRouter.storagePlacesIndexUrl());\r\n                notifier.success(\r\n                    \"Storage ‘\" +\r\n                    storagePlace.name +\r\n                    \"’ has been deactivated\");\r\n            })\r\n    }\r\n}\r\n","import {IStoragePlace} from \"./models/IStoragePlace\";\r\nimport {SettingsService} from \"./SettingsService\";\r\nimport {SystemSettingsRouter} from \"./../urls/SystemSettingsRouter\";\r\nimport {IGridModel, GridModel} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {notifier} from \"./../INotifier\";\r\n\r\nexport class StoragePlacesRegistryController {\r\n    public static NAME = \"settings.StoragePlacesRegistryController\";\r\n\r\n    private systemPermissions: ISystemPermissions;\r\n\r\n    public storagePlacesGridModel: IGridModel<IStoragePlace>;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        SettingsService.NAME,\r\n        PermissionsService.NAME,\r\n        SystemSettingsRouter.NAME,\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private settingsApi: SettingsService,\r\n                private permissionsApi: PermissionsService,\r\n                public systemSettingsRouter: SystemSettingsRouter,\r\n                private url: UrlService) {\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.ADMINISTRATION_STORAGE_PLACES_MENU_KEY);\r\n        PageHeader.set().header(\"Storages\").update();\r\n\r\n        permissionsApi.getSystemPermissions().then(systemPermissions => {\r\n            PageHeader.set().preserveHeader()\r\n                .addActionLinkIf(systemPermissions.editStoragePlaces,\r\n                '+&nbsp;New',\r\n                this.systemSettingsRouter.storagePlaceCreateUrl())\r\n                .update();\r\n            this.systemPermissions = systemPermissions;\r\n        });\r\n\r\n        this.storagePlacesGridModel = new GridModel(HttpGridHelper.createLoader<IStoragePlace>($http,\r\n            this.url.service(\"/api/settings/storagePlaces\")\r\n        ));\r\n    }\r\n\r\n    public getIsActiveGridStyle(isActive: boolean): any {\r\n        return isActive\r\n            ? {}\r\n            : {\"color\": \"#999999\"};\r\n    }\r\n\r\n    public convertIsActive(isActive: boolean): string {\r\n        return isActive != undefined\r\n            ? isActive ? 'Yes' : 'No'\r\n            : undefined;\r\n    }\r\n\r\n    public activate(index: number, storagePlaceId: number) {\r\n        var promise = this.settingsApi.setStoragePlaceActive(storagePlaceId, true);\r\n        promise.then(storagePlace => {\r\n            this.storagePlacesGridModel.entries[index] = storagePlace;\r\n            notifier.success(\r\n                \"Storage ‘\" +\r\n                storagePlace.name +\r\n                \"’ has been activated\");\r\n        });\r\n    }\r\n}\r\n","export enum StorageTypeEnum {\r\n    LOCAL,\r\n    SMB,\r\n    AZURE\r\n}\r\n","import {SocialService} from \"./SocialService\";\r\n\r\nexport var SocialModule: angular.IModule = angular\r\n    .module(\"social\", [\r\n    ])\r\n    .service(SocialService.NAME, SocialService);","import {UrlService} from \"./../utils/UrlService\";\r\nimport {IRatingInfo} from \"./models/IRatingInfo\";\r\nimport {IComment} from \"./models/IComment\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\n\r\nexport class SocialService {\r\n    public static NAME = \"social.SocialService\";\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private url: UrlService) {\r\n    }\r\n\r\n    public changeObjectRating(objectId: number, objectType: ReferencedObjectType, isLike: boolean): angular.IPromise<IRatingInfo> {\r\n        return this.$http.post(this.url.base(\"/api/social/rating?objectId=:objectId&objectType=:objectType&isLike=:isLike\")\r\n            .param(\":objectId\", objectId)\r\n            .param(\":objectType\", ReferencedObjectType[objectType])\r\n            .param(\":isLike\", isLike)\r\n            .service(), null)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public addComment(objectId: number, objectType: ReferencedObjectType, comment: IComment) {\r\n        return this.$http.post(this.url.base(\"/api/social/comments?objectId=:objectId&objectType=:objectType\")\r\n            .param(\":objectId\", objectId)\r\n            .param(\":objectType\", ReferencedObjectType[objectType])\r\n            .service(), comment)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getCommentsCount(objectId: number, objectType: ReferencedObjectType): angular.IPromise<number> {\r\n        return this.$http.get(this.url.base(\"/api/social/comments/count?objectId=:objectId&objectType=:objectType\")\r\n            .param(\":objectId\", objectId)\r\n            .param(\":objectType\", ReferencedObjectType[objectType])\r\n            .service())\r\n            .then(result => result.data);\r\n    }\r\n}\r\n","import {ActionType} from \"./models/ActionType\";\r\n\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\n\r\nexport class ActionLogService {\r\n    public static NAME = \"statistics.ActionLogService\";\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        \"$q\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $http: ng.IHttpService,\r\n                private $q: angular.IQService,\r\n                private url: UrlService) {\r\n    }\r\n\r\n    public create(objectId: number, objectType: ReferencedObjectType, actionType: ActionType): ng.IPromise<any> {\r\n        var promise: angular.IDeferred<any> = this.$q.defer();\r\n        promise.resolve(null);\r\n\r\n        return promise.promise;\r\n        //return this.$http.post(this.url.service(\"/api/actionLogs\"), {\r\n        //    objectId: objectId,\r\n        //    objectType: objectType,\r\n        //    actionType: actionType\r\n        //}).then(result => result.data);\r\n        //return\r\n    }\r\n}","export class BaseReportController {\r\n\r\n    constructor() {\r\n        $(document).ready(() => {\r\n            $['jsDate'].regional['ru'] = {\r\n                monthNames: ['Январь','Февраль','Март','Апрель','Май','Июнь','Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],\r\n                monthNamesShort: ['Янв','Фев','Мар','Апр','Май','Июн','Июл','Авг','Сен','Окт','Ноя','Дек'],\r\n                dayNames: ['Воскресенье','Понедельник','Вторник','Среда','Четверг','Пятница','Суббота'],\r\n                dayNamesShort: ['Вс','Пн','Вт','Ср','Чт','Пт','Сб'],\r\n                formatString: '%d-%m-%Y %H:%M:%S'\r\n            };\r\n            document.documentElement.setAttribute('lang', 'en');\r\n        });\r\n    }\r\n}","import {BaseReportController} from \"./BaseReportController\";\r\nimport {MaterialReportTarget} from \"./models/MaterialReportTarget\";\r\nimport {StatisticReportResult} from \"./models/StatisticReportResult\";\r\nimport {ReportGroupType} from \"./models/ReportGroupType\";\r\nimport {StatisticReportsService} from \"./StatisticReportsService\";\r\nimport {IReportWriter, LineDiagramsReportWriter} from \"./utils/ReportWriters\";\r\nimport {getLineDiagramsReportOptions} from \"./utils/ReportOptions\";\r\nimport {IReportTargetNamesMaker, OwnerNamesMaker, MaterialTypeNamesMaker, SubjectNamesMaker} from \"./utils/ReportTargetNamesMaker\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {ISubject} from \"./../ISubject\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\nimport {Moment} from \"./../utils/Moment\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\n\r\nexport class MaterialDownloadReportController extends BaseReportController {\r\n    public static NAME = \"statistics.MaterialDownloadReportController\";\r\n\r\n    private report: StatisticReportResult<any, Array<any>, number>;\r\n    private lineDiagramsReportWriter: IReportWriter = new LineDiagramsReportWriter();\r\n    private reportTargetNamesMaker: IReportTargetNamesMaker;\r\n    private reportTarget: MaterialReportTarget;\r\n    private groupType: ReportGroupType;\r\n\r\n    public systemPermissions: ISystemPermissions;\r\n    public owners: Array<ISelectable> = [];\r\n    public ownerIds: Array<number> = [];\r\n    public materialTypeIds: Array<number> = [];\r\n    public subjectIds: Array<number> = [];\r\n    public dateFromText: string;\r\n    public dateToText: string;\r\n\r\n    public lineDiagramsReportData: Array<any> = null;\r\n    public lineDiagramsReportOptions: any = getLineDiagramsReportOptions(\"The report on download of materials\");\r\n\r\n    public static $inject = [\r\n        StatisticReportsService.NAME,\r\n        UserService.NAME,\r\n        PermissionsService.NAME,\r\n        SecurityService.NAME\r\n    ];\r\n\r\n    constructor(private statisticReportsService: StatisticReportsService,\r\n                private userService: UserService,\r\n                private permissionsApi: PermissionsService,\r\n                private securityService: SecurityService) {\r\n        super();\r\n        this.securityService.demandAuthentication();\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.ANALYTICS_MATERIAL_DOWNLOAD_REPORT_MENU_KEY);\r\n        PageHeader.set().header(\"The report on download of materials\").update();\r\n\r\n        this.permissionsApi.getSystemPermissions().then(systemPermissions => {\r\n            this.systemPermissions = systemPermissions;\r\n            if (this.systemPermissions.viewAnalytics) {\r\n                this.userService.getUsersWithoutExcludedUsersForSelector().then(result =>{\r\n                    this.owners = angular.copy(result);\r\n                });\r\n                this.reportTarget = MaterialReportTarget.OWNERS;\r\n                this.reportTargetNamesMaker = new OwnerNamesMaker();\r\n            } else {\r\n                this.reportTarget = MaterialReportTarget.MATERIAL_TYPES;\r\n                this.reportTargetNamesMaker = new MaterialTypeNamesMaker();\r\n            }\r\n            this.viewReportGroupByDays();\r\n        });\r\n    }\r\n\r\n    public viewReportGroupByDays(): void {\r\n        this.viewReportGroupBy(ReportGroupType.DAYS);\r\n    }\r\n\r\n    public viewReportGroupByWeeks(): void {\r\n        this.viewReportGroupBy(ReportGroupType.WEEKS);\r\n    }\r\n\r\n    public viewReportGroupByMonths(): void {\r\n        this.viewReportGroupBy(ReportGroupType.MONTHS);\r\n    }\r\n\r\n    public viewReportGroupByYears(): void {\r\n        this.viewReportGroupBy(ReportGroupType.YEARS);\r\n    }\r\n\r\n    public viewReportGroupBy(groupType: ReportGroupType): void {\r\n        this.groupType = groupType;\r\n        this.lineDiagramsReportData = null;\r\n        this.statisticReportsService.viewMaterialDownloadReport(this.reportTarget, this.groupType, this.ownerIds, this.materialTypeIds,\r\n                this.subjectIds, Moment.textToJavaDate(this.dateFromText), Moment.textToJavaDate(this.dateToText)).then(result => {\r\n            this.report = result;\r\n            this.lineDiagramsReportOptions.series = this.reportTargetNamesMaker.make(this.report, (name: string) => {\r\n                return {label: name}\r\n            });\r\n            this.lineDiagramsReportData = this.lineDiagramsReportWriter.reporting(this.report, (value: Array<any>) => {\r\n                return [moment(value[0]).format(\"YYYY-MM-DD\"), value[1]];\r\n            });\r\n        });\r\n    }\r\n\r\n    public isCurrentOwnersReportTarget(): boolean {\r\n        return this.reportTarget == MaterialReportTarget.OWNERS;\r\n    }\r\n\r\n    public isCurrentMaterialTypesReportTarget(): boolean {\r\n        return this.reportTarget == MaterialReportTarget.MATERIAL_TYPES;\r\n    }\r\n\r\n    public isCurrentSubjectsReportTarget(): boolean {\r\n        return this.reportTarget == MaterialReportTarget.SUBJECTS;\r\n    }\r\n\r\n    public setCurrentOwnersReportTarget(): void {\r\n        this.setCurrentReportTarget(MaterialReportTarget.OWNERS, new OwnerNamesMaker());\r\n    }\r\n\r\n    public setCurrentMaterialTypesReportTarget(): void {\r\n        this.setCurrentReportTarget(MaterialReportTarget.MATERIAL_TYPES, new MaterialTypeNamesMaker());\r\n    }\r\n\r\n    public setCurrentSubjectsReportTarget(): void {\r\n        this.setCurrentReportTarget(MaterialReportTarget.SUBJECTS, new SubjectNamesMaker());\r\n    }\r\n\r\n    private setCurrentReportTarget(reportTarget: MaterialReportTarget, reportTargetNamesMaker: IReportTargetNamesMaker): void {\r\n        this.ownerIds = [];\r\n        this.materialTypeIds = [];\r\n        this.subjectIds = [];\r\n        this.reportTarget = reportTarget;\r\n        this.reportTargetNamesMaker = reportTargetNamesMaker;\r\n    }\r\n}","import {BaseReportController} from \"./BaseReportController\";\r\nimport {MaterialReportTarget} from \"./models/MaterialReportTarget\";\r\nimport {StatisticReportResult} from \"./models/StatisticReportResult\";\r\nimport {ReportGroupType} from \"./models/ReportGroupType\";\r\nimport {StatisticReportsService} from \"./StatisticReportsService\";\r\nimport {IReportWriter, LineDiagramsReportWriter} from \"./utils/ReportWriters\";\r\nimport {getLineDiagramsReportOptions} from \"./utils/ReportOptions\";\r\nimport {IReportTargetNamesMaker, OwnerNamesMaker, MaterialTypeNamesMaker, SubjectNamesMaker} from \"./utils/ReportTargetNamesMaker\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {ISubject} from \"./../ISubject\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\nimport {Moment} from \"./../utils/Moment\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\n\r\nexport class MaterialUploadReportController extends BaseReportController {\r\n    public static NAME = \"statistics.MaterialUploadReportController\";\r\n\r\n    private report: StatisticReportResult<any, Array<any>, number>;\r\n    private lineDiagramsReportWriter: IReportWriter = new LineDiagramsReportWriter();\r\n    private reportTargetNamesMaker: IReportTargetNamesMaker;\r\n    private reportTarget: MaterialReportTarget;\r\n    private groupType: ReportGroupType;\r\n\r\n    public systemPermissions: ISystemPermissions;\r\n    public owners: Array<ISelectable> = [];\r\n    public ownerIds: Array<number> = [];\r\n    public materialTypeIds: Array<number> = [];\r\n    public subjectIds: Array<number> = [];\r\n    public dateFromText: string;\r\n    public dateToText: string;\r\n\r\n    public lineDiagramsReportData: Array<any> = null;\r\n    public lineDiagramsReportOptions: any = getLineDiagramsReportOptions(\"The report on upload of materials\");\r\n\r\n    public static $inject = [\r\n        StatisticReportsService.NAME,\r\n        UserService.NAME,\r\n        PermissionsService.NAME,\r\n        SecurityService.NAME\r\n    ];\r\n\r\n    constructor(private statisticReportsService: StatisticReportsService,\r\n                private userService: UserService,\r\n                private permissionsApi: PermissionsService,\r\n                private securityService: SecurityService) {\r\n        super();\r\n        this.securityService.demandAuthentication();\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.ANALYTICS_MATERIAL_UPLOAD_REPORT_MENU_KEY);\r\n        PageHeader.set().header(\"The report on upload of materials\").update();\r\n\r\n        this.permissionsApi.getSystemPermissions().then(systemPermissions => {\r\n            this.systemPermissions = systemPermissions;\r\n            if (this.systemPermissions.viewAnalytics) {\r\n                this.userService.getUsersWithoutExcludedUsersForSelector().then(result =>{\r\n                    this.owners = angular.copy(result);\r\n                });\r\n                this.reportTarget = MaterialReportTarget.OWNERS;\r\n                this.reportTargetNamesMaker = new OwnerNamesMaker();\r\n            } else {\r\n                this.reportTarget = MaterialReportTarget.MATERIAL_TYPES;\r\n                this.reportTargetNamesMaker = new MaterialTypeNamesMaker();\r\n            }\r\n            this.viewReportGroupByDays();\r\n        });\r\n    }\r\n\r\n    public viewReportGroupByDays(): void {\r\n        this.viewReportGroupBy(ReportGroupType.DAYS);\r\n    }\r\n\r\n    public viewReportGroupByWeeks(): void {\r\n        this.viewReportGroupBy(ReportGroupType.WEEKS);\r\n    }\r\n\r\n    public viewReportGroupByMonths(): void {\r\n        this.viewReportGroupBy(ReportGroupType.MONTHS);\r\n    }\r\n\r\n    public viewReportGroupByYears(): void {\r\n        this.viewReportGroupBy(ReportGroupType.YEARS);\r\n    }\r\n\r\n    public viewReportGroupBy(groupType: ReportGroupType): void {\r\n        this.groupType = groupType;\r\n        this.lineDiagramsReportData = null;\r\n        this.statisticReportsService.viewMaterialUploadReport(this.reportTarget, this.groupType, this.ownerIds, this.materialTypeIds,\r\n                this.subjectIds, Moment.textToJavaDate(this.dateFromText), Moment.textToJavaDate(this.dateToText)).then(result => {\r\n            this.report = result;\r\n            this.lineDiagramsReportOptions.series = this.reportTargetNamesMaker.make(this.report, (name: string) => {\r\n                return {label: name}\r\n            });\r\n            this.lineDiagramsReportData = this.lineDiagramsReportWriter.reporting(this.report, (value: Array<any>) => {\r\n                return [moment(value[0]).format(\"YYYY-MM-DD\"), value[1]];\r\n            });\r\n        });\r\n    }\r\n\r\n    public isCurrentOwnersReportTarget(): boolean {\r\n        return this.reportTarget == MaterialReportTarget.OWNERS;\r\n    }\r\n\r\n    public isCurrentMaterialTypesReportTarget(): boolean {\r\n        return this.reportTarget == MaterialReportTarget.MATERIAL_TYPES;\r\n    }\r\n\r\n    public isCurrentSubjectsReportTarget(): boolean {\r\n        return this.reportTarget == MaterialReportTarget.SUBJECTS;\r\n    }\r\n\r\n    public setCurrentOwnersReportTarget(): void {\r\n        this.setCurrentReportTarget(MaterialReportTarget.OWNERS, new OwnerNamesMaker());\r\n    }\r\n\r\n    public setCurrentMaterialTypesReportTarget(): void {\r\n        this.setCurrentReportTarget(MaterialReportTarget.MATERIAL_TYPES, new MaterialTypeNamesMaker());\r\n    }\r\n\r\n    public setCurrentSubjectsReportTarget(): void {\r\n        this.setCurrentReportTarget(MaterialReportTarget.SUBJECTS, new SubjectNamesMaker());\r\n    }\r\n\r\n    private setCurrentReportTarget(reportTarget: MaterialReportTarget, reportTargetNamesMaker: IReportTargetNamesMaker): void {\r\n        this.ownerIds = [];\r\n        this.materialTypeIds = [];\r\n        this.subjectIds = [];\r\n        this.reportTarget = reportTarget;\r\n        this.reportTargetNamesMaker = reportTargetNamesMaker;\r\n    }\r\n}","import {BaseReportController} from \"./BaseReportController\";\r\nimport {MaterialReportTarget} from \"./models/MaterialReportTarget\";\r\nimport {StatisticReportResult} from \"./models/StatisticReportResult\";\r\nimport {ReportGroupType} from \"./models/ReportGroupType\";\r\nimport {StatisticReportsService} from \"./StatisticReportsService\";\r\nimport {IReportWriter, LineDiagramsReportWriter} from \"./utils/ReportWriters\";\r\nimport {getLineDiagramsReportOptions} from \"./utils/ReportOptions\";\r\nimport {IReportTargetNamesMaker, OwnerNamesMaker, MaterialTypeNamesMaker, SubjectNamesMaker} from \"./utils/ReportTargetNamesMaker\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {ISubject} from \"./../ISubject\";\r\nimport {UserService} from \"./../users/UserService\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\nimport {Moment} from \"./../utils/Moment\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\n\r\nexport class MaterialViewReportController extends BaseReportController {\r\n    public static NAME = \"statistics.MaterialViewReportController\";\r\n\r\n    private report: StatisticReportResult<any, Array<any>, number>;\r\n    private lineDiagramsReportWriter: IReportWriter = new LineDiagramsReportWriter();\r\n    private reportTargetNamesMaker: IReportTargetNamesMaker;\r\n    private reportTarget: MaterialReportTarget;\r\n    private groupType: ReportGroupType;\r\n\r\n    public systemPermissions: ISystemPermissions;\r\n    public owners: Array<ISelectable> = [];\r\n    public ownerIds: Array<number> = [];\r\n    public materialTypeIds: Array<number> = [];\r\n    public subjectIds: Array<number> = [];\r\n    public dateFromText: string;\r\n    public dateToText: string;\r\n\r\n    public lineDiagramsReportData: Array<any> = null;\r\n    public lineDiagramsReportOptions: any = getLineDiagramsReportOptions(\"The report on view of materials\");\r\n\r\n    public static $inject = [\r\n        StatisticReportsService.NAME,\r\n        UserService.NAME,\r\n        PermissionsService.NAME,\r\n        SecurityService.NAME\r\n    ];\r\n\r\n    constructor(private statisticReportsService: StatisticReportsService,\r\n                private userService: UserService,\r\n                private permissionsApi: PermissionsService,\r\n                private securityService: SecurityService) {\r\n        super();\r\n        this.securityService.demandAuthentication();\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.ANALYTICS_MATERIAL_VIEW_REPORT_MENU_KEY);\r\n        PageHeader.set().header(\"The report on view of materials\").update();\r\n\r\n        this.permissionsApi.getSystemPermissions().then(systemPermissions => {\r\n            this.systemPermissions = systemPermissions;\r\n            if (this.systemPermissions.viewAnalytics) {\r\n                this.userService.getUsersWithoutExcludedUsersForSelector().then(result =>{\r\n                    this.owners = angular.copy(result);\r\n                });\r\n                this.reportTarget = MaterialReportTarget.OWNERS;\r\n                this.reportTargetNamesMaker = new OwnerNamesMaker();\r\n            } else {\r\n                this.reportTarget = MaterialReportTarget.MATERIAL_TYPES;\r\n                this.reportTargetNamesMaker = new MaterialTypeNamesMaker();\r\n            }\r\n            this.viewReportGroupByDays();\r\n        });\r\n    }\r\n\r\n    public viewReportGroupByDays(): void {\r\n        this.viewReportGroupBy(ReportGroupType.DAYS);\r\n    }\r\n\r\n    public viewReportGroupByWeeks(): void {\r\n        this.viewReportGroupBy(ReportGroupType.WEEKS);\r\n    }\r\n\r\n    public viewReportGroupByMonths(): void {\r\n        this.viewReportGroupBy(ReportGroupType.MONTHS);\r\n    }\r\n\r\n    public viewReportGroupByYears(): void {\r\n        this.viewReportGroupBy(ReportGroupType.YEARS);\r\n    }\r\n\r\n    private viewReportGroupBy(groupType: ReportGroupType): void {\r\n        this.groupType = groupType;\r\n        this.lineDiagramsReportData = null;\r\n        this.statisticReportsService.viewMaterialViewReport(this.reportTarget, this.groupType, this.ownerIds, this.materialTypeIds,\r\n                this.subjectIds, Moment.textToJavaDate(this.dateFromText), Moment.textToJavaDate(this.dateToText)).then(result => {\r\n            this.report = result;\r\n            this.lineDiagramsReportOptions.series = this.reportTargetNamesMaker.make(this.report, (name: string) => {\r\n                return {label: name}\r\n            });\r\n            this.lineDiagramsReportData = this.lineDiagramsReportWriter.reporting(this.report, (value: Array<any>) => {\r\n                return [moment(value[0]).format(\"YYYY-MM-DD\"), value[1]];\r\n            });\r\n        });\r\n    }\r\n\r\n    public isCurrentOwnersReportTarget(): boolean {\r\n        return this.reportTarget == MaterialReportTarget.OWNERS;\r\n    }\r\n\r\n    public isCurrentMaterialTypesReportTarget(): boolean {\r\n        return this.reportTarget == MaterialReportTarget.MATERIAL_TYPES;\r\n    }\r\n\r\n    public isCurrentSubjectsReportTarget(): boolean {\r\n        return this.reportTarget == MaterialReportTarget.SUBJECTS;\r\n    }\r\n\r\n    public setCurrentOwnersReportTarget(): void {\r\n        this.setCurrentReportTarget(MaterialReportTarget.OWNERS, new OwnerNamesMaker());\r\n    }\r\n\r\n    public setCurrentMaterialTypesReportTarget(): void {\r\n        this.setCurrentReportTarget(MaterialReportTarget.MATERIAL_TYPES, new MaterialTypeNamesMaker());\r\n    }\r\n\r\n    public setCurrentSubjectsReportTarget(): void {\r\n        this.setCurrentReportTarget(MaterialReportTarget.SUBJECTS, new SubjectNamesMaker());\r\n    }\r\n\r\n    private setCurrentReportTarget(reportTarget: MaterialReportTarget, reportTargetNamesMaker: IReportTargetNamesMaker): void {\r\n        this.ownerIds = [];\r\n        this.materialTypeIds = [];\r\n        this.subjectIds = [];\r\n        this.reportTarget = reportTarget;\r\n        this.reportTargetNamesMaker = reportTargetNamesMaker;\r\n    }\r\n}","import {MaterialReportTarget} from \"./models/MaterialReportTarget\";\r\nimport {StatisticReportResult} from \"./models/StatisticReportResult\";\r\nimport {ReportGroupType} from \"./models/ReportGroupType\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {StringBuilder} from \"./../utils/StringBuilder\"\r\nimport {ISubject} from \"./../ISubject\";\r\nimport {IPair} from \"./../IPair\";\r\n\r\nexport class StatisticReportsService {\r\n    public static NAME = \"statistics.StatisticReportsService\";\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $http: ng.IHttpService,\r\n                private url: UrlService) {\r\n    }\r\n\r\n    public viewMaterialViewReport(reportTarget: MaterialReportTarget, groupType: ReportGroupType, ownerIds: Array<number>,\r\n                                  materialTypeIds: Array<number>, subjectIds: Array<number>, dateFrom: number,\r\n                                  dateTo: number): ng.IPromise<StatisticReportResult<any, Array<any>, number>> {\r\n        return this.$http.post(this.url.base(\"/api/statistics/reports/materials/views/by/:reportTarget/groupBy/:groupType\")\r\n            .param(\":reportTarget\", MaterialReportTarget[reportTarget])\r\n            .param(\":groupType\", ReportGroupType[groupType])\r\n            .service(), {\r\n                ownerIds: ownerIds,\r\n                materialTypeIds: materialTypeIds,\r\n                subjectIds: subjectIds,\r\n                dateFrom: dateFrom,\r\n                dateTo: dateTo})\r\n            .then(result => this.fillMissingDate(result.data, dateFrom, dateTo, groupType));\r\n    }\r\n\r\n    public viewMaterialDownloadReport(reportTarget: MaterialReportTarget, groupType: ReportGroupType, ownerIds: Array<number>,\r\n                                      materialTypeIds: Array<number>, subjectIds: Array<number>, dateFrom: number,\r\n                                      dateTo: number): ng.IPromise<StatisticReportResult<any, Array<any>, number>> {\r\n        return this.$http.post(this.url.base(\"/api/statistics/reports/materials/downloads/by/:reportTarget/groupBy/:groupType\")\r\n            .param(\":reportTarget\", MaterialReportTarget[reportTarget])\r\n            .param(\":groupType\", ReportGroupType[groupType])\r\n            .service(), {\r\n                ownerIds: ownerIds,\r\n                materialTypeIds: materialTypeIds,\r\n                subjectIds: subjectIds,\r\n                dateFrom: dateFrom,\r\n                dateTo: dateTo})\r\n            .then(result => this.fillMissingDate(result.data, dateFrom, dateTo, groupType));\r\n    }\r\n\r\n    public viewMaterialUploadReport(reportTarget: MaterialReportTarget, groupType: ReportGroupType, ownerIds: Array<number>,\r\n                                    materialTypeIds: Array<number>, subjectIds: Array<number>, dateFrom: number,\r\n                                    dateTo: number): ng.IPromise<StatisticReportResult<any, Array<any>, number>> {\r\n        return this.$http.post(this.url.base(\"/api/statistics/reports/materials/uploads/by/:reportTarget/groupBy/:groupType\")\r\n            .param(\":reportTarget\", MaterialReportTarget[reportTarget])\r\n            .param(\":groupType\", ReportGroupType[groupType])\r\n            .service(), {\r\n                ownerIds: ownerIds,\r\n                materialTypeIds: materialTypeIds,\r\n                subjectIds: subjectIds,\r\n                dateFrom: dateFrom,\r\n                dateTo: dateTo})\r\n            .then(result => this.fillMissingDate(result.data, dateFrom, dateTo, groupType));\r\n    }\r\n\r\n    private fillMissingDate(report: StatisticReportResult<any, Array<any>, number>, dateFrom: number, dateTo: number,\r\n                            groupType: ReportGroupType): StatisticReportResult<any, Array<any>, number> {\r\n        dateFrom = dateFrom != null ? dateFrom : report.groupedValues[0];\r\n        dateTo = dateTo != null ? dateTo : report.groupedValues[report.groupedValues.length - 1];\r\n\r\n        report.data.forEach((d: IPair<any, Array<any>>) => {\r\n            let valueMap: Map<number, number> = new Map<number, number>();\r\n            d.value.forEach((v: Array<any>) => {\r\n                valueMap.set(v[0], v[1]);\r\n            });\r\n            let newValues: Array<any> = [];\r\n            let from = moment(dateFrom);\r\n            let to = moment(dateTo).add(1, this.getUnitOfTime(groupType));\r\n            while (from.isBefore(to)) {\r\n                let unixTime = from.valueOf();\r\n                newValues.push([unixTime, valueMap.has(unixTime) ? valueMap.get(unixTime) : 0]);\r\n                from = from.add(1, this.getUnitOfTime(groupType));\r\n            }\r\n            d.value = newValues;\r\n        });\r\n\r\n        return report;\r\n    }\r\n\r\n    private getUnitOfTime(groupType: ReportGroupType): string {\r\n        switch (groupType) {\r\n            case ReportGroupType.DAYS: return 'd';\r\n            case ReportGroupType.WEEKS: return 'w';\r\n            case ReportGroupType.MONTHS: return 'M';\r\n            case ReportGroupType.YEARS: return 'y';\r\n        }\r\n    }\r\n}","import {StatisticReportsService} from \"./StatisticReportsService\";\r\nimport {ActionLogService} from \"./ActionLogService\";\r\nimport {MaterialViewReportController} from \"./MaterialViewReportController\";\r\nimport {MaterialDownloadReportController} from \"./MaterialDownloadReportController\";\r\nimport {MaterialUploadReportController} from \"./MaterialUploadReportController\";\r\n\r\nimport {CommonModule} from \"./../common/CommonModule\";\r\nimport {SecurityModule} from \"./../security/SecurityModule\";\r\nimport {UrlsModule} from \"./../urls/UrlsModule\";\r\n\r\nexport var StatisticsModule: angular.IModule = angular\r\n    .module(\"statistics\", [\r\n        CommonModule.name,\r\n        SecurityModule.name,\r\n        UrlsModule.name\r\n    ])\r\n    .service(StatisticReportsService.NAME, StatisticReportsService)\r\n    .service(ActionLogService.NAME, ActionLogService)\r\n    .controller(MaterialViewReportController.NAME, MaterialViewReportController)\r\n    .controller(MaterialDownloadReportController.NAME, MaterialDownloadReportController)\r\n    .controller(MaterialUploadReportController.NAME, MaterialUploadReportController);","export enum ActionType {\r\n\r\n    // Material Actions\r\n    MATERIAL_VIEW,\r\n    MATERIAL_CREATION,\r\n    MATERIAL_DOWNLOAD,\r\n    MATERIAL_PURCHASE,\r\n\r\n    // Playlist Actions\r\n    PLAYLIST_VIEW,\r\n\r\n    // Course Actions\r\n    COURSE_COMPLETION,\r\n\r\n    // Other Actions\r\n    LOGIN\r\n}","export enum MaterialReportTarget {\r\n    OWNERS,\r\n    MATERIAL_TYPES,\r\n    SUBJECTS\r\n}","export enum ReportGroupType {\r\n    DAYS,\r\n    WEEKS,\r\n    MONTHS,\r\n    YEARS\r\n}","export function getLineDiagramsReportOptions(reportName: string): any {\r\n    return {\r\n        title: reportName,\r\n        legend: {\r\n            show: true\r\n        },\r\n        highlighter: {\r\n            show: true\r\n        },\r\n        axes: {\r\n            xaxis: {\r\n                renderer: $['jqplot']['DateAxisRenderer'],\r\n                tickOptions: {\r\n                    formatString: '%b %d, %Y'\r\n                }\r\n            },\r\n            yaxis:{\r\n                tickOptions: {\r\n                    formatString: '%.0f'\r\n                }\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\n//export function getHistogramsReportOptions(reportName: string): any {\r\n//    return {\r\n//        title: reportName,\r\n//        legend: {\r\n//            show: true\r\n//        },\r\n//        seriesDefaults: {\r\n//            renderer: $['jqplot']['BarRenderer'],\r\n//            pointLabels: {show: true}\r\n//        },\r\n//        axes: {\r\n//            xaxis: {\r\n//                renderer: $['jqplot']['CategoryAxisRenderer']\r\n//            }\r\n//        }\r\n//    };\r\n//}","import {StatisticReportResult} from \"./../models/StatisticReportResult\";\r\nimport {IUser} from \"./../../users/models/IUser\";\r\nimport {IMaterialType} from \"./../../materials/models/MaterialType\";\r\nimport {ISubject} from \"./../../ISubject\";\r\nimport {IPair} from \"./../../IPair\";\r\n\r\nexport interface IReportTargetNamesMaker {\r\n    make(report: StatisticReportResult<any, Array<any>, any>, func: (name: string) => any): Array<any>;\r\n}\r\n\r\nexport class OwnerNamesMaker implements IReportTargetNamesMaker {\r\n\r\n    public make(report: StatisticReportResult<any, Array<any>, any>, func: (name: string) => any): Array<any> {\r\n        let result: Array<any> = [];\r\n        report.data.forEach((d: IPair<IUser, Array<any>>) => {\r\n            result.push(func(d.key.fullName));\r\n        });\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class MaterialTypeNamesMaker implements IReportTargetNamesMaker {\r\n\r\n    public make(report: StatisticReportResult<any, Array<any>, any>, func: (name: string) => any): Array<any> {\r\n        let result: Array<any> = [];\r\n        report.data.forEach((d: IPair<IMaterialType, Array<any>>) => {\r\n            result.push(func(d.key.name));\r\n        });\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class SubjectNamesMaker implements IReportTargetNamesMaker {\r\n\r\n    public make(report: StatisticReportResult<any, Array<any>, any>, func: (name: string) => any): Array<any> {\r\n        let result: Array<any> = [];\r\n        report.data.forEach((d: IPair<ISubject, Array<any>>) => {\r\n            result.push(func(d.key.name));\r\n        });\r\n        return result;\r\n    }\r\n}","import {StatisticReportResult} from \"./../models/StatisticReportResult\";\r\nimport {IPair} from \"./../../IPair\";\r\n\r\nexport interface IReportWriter {\r\n    reporting(report: StatisticReportResult<any, Array<any>, any>, func: (value: Array<any>) => any): Array<any>;\r\n}\r\n\r\nexport class LineDiagramsReportWriter implements IReportWriter {\r\n\r\n    public reporting(report: StatisticReportResult<any, Array<any>, number>, func: (value: Array<any>) => any): Array<any> {\r\n        let result: Array<Array<any>> = [];\r\n        report.data.forEach((d: IPair<any, Array<any>>) => {\r\n            let newValue: Array<any> = [];\r\n            d.value.forEach((v: Array<any>) => {\r\n                newValue.push(func(v));\r\n            });\r\n            result.push(newValue);\r\n        });\r\n        return result;\r\n    }\r\n}\r\n\r\n//export class HistogramsReportWriter implements IReportWriter {\r\n//\r\n//    public reporting(report: StatisticReportResult<any, Array<any>, any>): Array<any> {\r\n//        let result: Array<Array<any>> = Array.apply(null, Array(report.data.length)).map(() => {\r\n//            return Array.apply(null, Array(report.groupedValues.length)).map(() => 0)\r\n//        });\r\n//        let groupedValuesMap: Map<string, number> = new Map<string, number>();\r\n//        report.groupedValues.forEach((date: string, index: number) => {\r\n//            groupedValuesMap.set(date, index);\r\n//        });\r\n//        report.data.forEach((d: IPair<any, Array<any>>, index: number) => {\r\n//            d.value.forEach(v => {\r\n//                if (groupedValuesMap.has(v[0])) {\r\n//                    result[index][groupedValuesMap.get(v[0])] = v[1];\r\n//                }\r\n//            });\r\n//        });\r\n//        return result;\r\n//    }\r\n//}","import {UploadsService} from \"./UploadsService\";\r\n\r\nexport var StorageModule: angular.IModule = angular\r\n    .module(\"storage\", [])\r\n    .service(UploadsService.NAME, UploadsService);\r\n","import {notifier} from \"./../INotifier\";\r\nimport {StringBuilder} from \"./../utils/StringBuilder\";\r\n\r\nexport interface CurrentlyUploadableFile extends File {\r\n    uploaded?: number;\r\n    guid?: number;\r\n    key?: string;\r\n}\r\n\r\nexport class UploadsService {\r\n    public static NAME = \"storage.UploadsService\";\r\n\r\n    public static MATERIAL_KEY = \"material\";\r\n    public static COURSE_KEY = \"course\";\r\n    public static PREVIEW_UPLOAD_URL_KEY = \"previewUploadUrl\";\r\n    public static PREVIEW_UPLOAD_METHOD_KEY = \"previewUploadMethod\";\r\n    public static FILE_UPLOAD_URL_KEY = \"fileUploadUrl\";\r\n    public static FILE_UPLOAD_METHOD_KEY = \"fileUploadMethod\";\r\n\r\n    private static UPLOAD_PARALLEL_FILES = 3;\r\n\r\n    private queue: Array<File> = [];\r\n    private currentlyUploadableFiles: Array<File> = Array.apply(null, Array(UploadsService.UPLOAD_PARALLEL_FILES)).map(() => {return null});\r\n    private currentlyUploadableFilesMap: any = {};\r\n\r\n    constructor() {\r\n        FileAPI.cors = true;\r\n    }\r\n\r\n    public getCurrentlyUploadableFiles(): Array<CurrentlyUploadableFile> {\r\n        let result: Array<CurrentlyUploadableFile> = [];\r\n        this.currentlyUploadableFiles.forEach((file: CurrentlyUploadableFile) => {\r\n            if (file != null) {\r\n                result.push(file);\r\n            }\r\n        });\r\n        this.queue.forEach((file: CurrentlyUploadableFile) => {\r\n            result.push(file);\r\n        });\r\n        return result;\r\n    }\r\n\r\n    public cancel(file: CurrentlyUploadableFile): void {\r\n        let xhr: XmlHttpRequest = this.currentlyUploadableFilesMap[file.name + file.guid].xhr;\r\n        xhr.abort();\r\n    }\r\n\r\n    public cancelByKey(key: string): void {\r\n        let fileKey: string;\r\n        this.currentlyUploadableFiles.forEach((file: CurrentlyUploadableFile) => {\r\n            if (file != null) {\r\n                fileKey = this.currentlyUploadableFilesMap[file.name + file.guid].key;\r\n                if (fileKey == key) {\r\n                    this.cancel(file);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    public upload(file: File, fileKey: string, url: string, method: string, successFunc: (file: File) => void, abortFunc: (file: File) => void,\r\n                  errorFunc: (file: File) => void): void {\r\n        FileAPI.filterFiles([file], () => {\r\n            return true;\r\n        }, (files: Array<File>) => {\r\n            if (files.length) {\r\n                files.forEach((file: CurrentlyUploadableFile) => {\r\n                    file.guid = moment().valueOf();\r\n                    this.queue.push(file);\r\n                    this.currentlyUploadableFilesMap[file.name + file.guid] = {\r\n                        index: null,\r\n                        url: url,\r\n                        method: method,\r\n                        successFunc: successFunc,\r\n                        abortFunc: abortFunc,\r\n                        errorFunc: errorFunc,\r\n                        xhr: null,\r\n                        key: fileKey\r\n                    };\r\n                });\r\n                this.uploadParallelFiles();\r\n            }\r\n        });\r\n    }\r\n\r\n    private uploadParallelFiles(): void {\r\n        this.currentlyUploadableFiles.forEach((f: CurrentlyUploadableFile, index: number) => {\r\n            if (this.queue.length > 0 && f == null) {\r\n                let file: CurrentlyUploadableFile = this.queue.shift();\r\n                this.currentlyUploadableFiles[index] = file;\r\n                this.currentlyUploadableFilesMap[file.name + file.guid].index = index;\r\n                this.uploadOneFile(file);\r\n            }\r\n        });\r\n    }\r\n\r\n    private uploadOneFile(file: CurrentlyUploadableFile): void {\r\n        let cuf: any = this.currentlyUploadableFilesMap[file.name + file.guid];\r\n        let xhr: XmlHttpRequest = FileAPI.upload({\r\n            url: cuf.url,\r\n            method: cuf.method,\r\n            data: {\r\n                guid: file.guid\r\n            },\r\n            files: {\r\n                file: file\r\n            },\r\n            chunkSize: 100 * FileAPI.KB,\r\n            chunkUploadRetry: 3,\r\n            fileprogress: this.fileProgressFunc,\r\n            filecomplete: this.fileCompleteFunc\r\n        });\r\n        cuf.xhr = xhr;\r\n    }\r\n\r\n    private fileProgressFunc: (evt: any, file: CurrentlyUploadableFile, xhr: XmlHttpRequest, options: any) => void\r\n            = (evt: any, file: CurrentlyUploadableFile, xhr: XmlHttpRequest, options: any) => {\r\n        file.uploaded = evt.loaded;\r\n        file.guid = options.data.guid;\r\n        let cup: any = this.currentlyUploadableFilesMap[file.name + file.guid];\r\n        if (cup) {\r\n            let index: number = cup.index;\r\n            this.currentlyUploadableFiles[index] = file;\r\n        }\r\n    };\r\n\r\n    private fileCompleteFunc: (err: any, xhr: XmlHttpRequest, file: CurrentlyUploadableFile, options: any) => void\r\n            = (err: any, xhr: XmlHttpRequest, file: CurrentlyUploadableFile, options: any) => {\r\n        file.guid = options.data.guid;\r\n        if (err == \"abort\") {\r\n            this.currentlyUploadableFilesMap[file.name + file.guid].abortFunc(file);\r\n        } else if (err === false) {\r\n            this.currentlyUploadableFilesMap[file.name + file.guid].successFunc(file);\r\n        } else {\r\n            this.currentlyUploadableFilesMap[file.name + file.guid].errorFunc(file);\r\n        }\r\n        let index: number = this.currentlyUploadableFilesMap[file.name + file.guid].index;\r\n        this.currentlyUploadableFiles[index] = null;\r\n        this.currentlyUploadableFilesMap[file.name + file.guid] = null;\r\n        this.uploadParallelFiles();\r\n    };\r\n}","import {ITreeElementInfo} from \"./models/TreeElementInfo\";\r\nimport {TreeElementState} from \"./models/TreeElementState\";\r\n\r\nexport class TreeElementsInfoFiller {\r\n\r\n    public static MAX_VISIBLE_LEVEL: number = 2;\r\n    public static FIRST_LEVEL: number = 1;\r\n\r\n    public static fillHierarchyInfo(gridTreeElements: Array<ITreeElementInfo<any>>) {\r\n        TreeElementsInfoFiller.fillHierarchyInfoWithMaxLevel(gridTreeElements, TreeElementsInfoFiller.MAX_VISIBLE_LEVEL);\r\n    }\r\n\r\n    public static fillHierarchyInfoWithMaxLevel(gridTreeElements: Array<ITreeElementInfo<any>>, maxVisibleLevel: number) {\r\n\r\n        for (var i = 0; i < gridTreeElements.length; i++) {\r\n            var element: ITreeElementInfo<any> = gridTreeElements[i];\r\n            this.initHierarchyElement(element, maxVisibleLevel);\r\n        }\r\n\r\n        var childrenOnLevels: Map<number, Array<ITreeElementInfo<any>>> = new Map<number, Array<ITreeElementInfo<any>>>();\r\n        var lastElementsOnLevels: Map<number, ITreeElementInfo<any>> = new Map<number, ITreeElementInfo<any>>();\r\n        var previousLevel: number = -1;\r\n        for (var i = 0; i < gridTreeElements.length; i++) {\r\n            var element: ITreeElementInfo<any> = gridTreeElements[i];\r\n            var currentLevel: number = element.level;\r\n            if (currentLevel > this.FIRST_LEVEL) { // this element is a child for previous level\r\n                childrenOnLevels.get(currentLevel - 1).push(element);\r\n            }\r\n            childrenOnLevels.set(currentLevel, element.children);\r\n            lastElementsOnLevels.set(currentLevel, element);\r\n\r\n            if (currentLevel < previousLevel) { //go back to root element\r\n                for (var lvl = previousLevel; lvl > currentLevel; lvl--) {\r\n                    lastElementsOnLevels.get(lvl).isLastChild = true;\r\n                }\r\n            }\r\n            previousLevel = currentLevel;\r\n        }\r\n        if (previousLevel >= this.FIRST_LEVEL) {\r\n            for (var lvl = previousLevel; lvl >= this.FIRST_LEVEL; lvl--) {\r\n                lastElementsOnLevels.get(lvl).isLastChild = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    private static initHierarchyElement(element: ITreeElementInfo<any>, maxVisibleLevel: number) {\r\n        if (!element) return;\r\n        if (element.level == undefined) {\r\n            element.level = 0;\r\n        }\r\n        element.children = [];\r\n        element.isLastChild = false;\r\n        element.state = element.level < maxVisibleLevel ? TreeElementState[TreeElementState.EXPANDED] : TreeElementState[TreeElementState.COLLAPSED];\r\n        element.visible = element.level <= maxVisibleLevel;\r\n\r\n        element.show = () => {\r\n            element.visible = true;\r\n        };\r\n        element.hide = () => {\r\n            if (!element.visible) return;\r\n            element.visible = false;\r\n            angular.forEach(element.children, child => child.hide());\r\n        };\r\n        element.expand = () => {\r\n            element.state = TreeElementState[TreeElementState.EXPANDED];\r\n            angular.forEach(element.children, child => child.show());\r\n        };\r\n        element.expandAll = () => {\r\n            element.state = TreeElementState[TreeElementState.EXPANDED];\r\n            angular.forEach(element.children, child => child.expand());\r\n            angular.forEach(element.children, child => child.show());\r\n        };\r\n        element.collapse = () => {\r\n            angular.forEach(element.children, child => child.collapse());\r\n            angular.forEach(element.children, child => child.hide());\r\n            element.state = TreeElementState[TreeElementState.COLLAPSED];\r\n        };\r\n    }\r\n}","export enum TreeElementState {\r\n    COLLAPSED,\r\n    EXPANDED\r\n}","import {StringBuilder} from \"../utils/StringBuilder\";\r\nimport {LocationUtils} from \"../utils/LocationUtils\";\r\nimport {BaseRouter} from \"./BaseRouter\";\r\n\r\nexport class AuthRouter extends BaseRouter {\r\n    public static NAME = \"urls.AuthRouter\";\r\n\r\n    public static ACCESS_DENIED_PARAM_NAME = \"accessDenied\";\r\n    public static TOKEN_EXPIRED_PARAM_NAME = \"tokenExpired\";\r\n    public static LOGON_REQUIRED_PARAM_NAME = \"logonRequired\";\r\n    public static LOGON_PARAM_NAME = \"logonName\";\r\n    public static PASSWORD_TOKEN_PARAM_NAME = \"token\";\r\n    public static PASSWORD_CODE_PARAM_NAME = \"code\";\r\n    public static RENEWAL_TYPE_PARAM_NAME = \"renewalType\";\r\n\r\n    public static logonRoute = \"/auth/logon\";\r\n    public static logoutRoute = \"/auth/logout\";\r\n    public static accessDeniedRoute = \"/auth/accessDenied\";\r\n    public static restorePasswordRoute = \"/auth/restore/password\";\r\n    public static checkValidCodeRoute = \"/auth/check/code\";\r\n    public static createNewPasswordRoute = `/auth/create/new/password/token/:${AuthRouter.PASSWORD_TOKEN_PARAM_NAME}`;\r\n    public static createNewPasswordByCodeRoute = `/auth/create/new/password/code/:${AuthRouter.PASSWORD_CODE_PARAM_NAME}`;\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor($location: ng.ILocationService) {\r\n        super($location);\r\n    }\r\n\r\n    public logonUrl(): string {\r\n        return this.url(AuthRouter.logonRoute);\r\n    }\r\n\r\n    public logoutUrl(): string {\r\n        return this.url(AuthRouter.logoutRoute);\r\n    }\r\n\r\n    public accessDeniedUrl(): string {\r\n        return this.url(AuthRouter.accessDeniedRoute);\r\n    }\r\n\r\n    public restorePassword(): string {\r\n        return this.url(AuthRouter.restorePasswordRoute);\r\n    }\r\n\r\n    public checkValidCode(): string {\r\n        return this.url(AuthRouter.checkValidCodeRoute);\r\n    }\r\n\r\n    public createNewPassword(token: string): string {\r\n        return this.url(StringBuilder.interpolate(AuthRouter.createNewPasswordRoute)\r\n            .with(':' + AuthRouter.PASSWORD_TOKEN_PARAM_NAME, token)\r\n            .build());\r\n    }\r\n\r\n    public createNewPasswordByCode(code: string): string {\r\n        return this.url(StringBuilder.interpolate(AuthRouter.createNewPasswordByCodeRoute)\r\n            .with(':' + AuthRouter.PASSWORD_CODE_PARAM_NAME, code)\r\n            .build());\r\n    }\r\n}\r\n","import {LocationUtils} from \"./../utils/LocationUtils\";\r\n\r\nexport class BaseRouter {\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor(private $location: ng.ILocationService) {\r\n    }\r\n\r\n    protected url(baseUrl: string): string {\r\n        return LocationUtils.preserveFullScreenUrl(baseUrl, this.$location);\r\n    }\r\n}","import {BaseRouter} from \"./BaseRouter\";\r\n\r\nexport class BroadcastsRouter extends BaseRouter {\r\n    public static NAME = \"urls.BroadcastsRouter\";\r\n    public static studentRoute = \"/broadcasts/student\";\r\n    public static teacherRoute = \"/broadcasts/teacher\";\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor($location: ng.ILocationService) {\r\n        super($location);\r\n    }\r\n\r\n    public studentUrl(): string {\r\n        return this.url(BroadcastsRouter.studentRoute);\r\n    }\r\n\r\n    public teacherUrl(): string {\r\n        return this.url(BroadcastsRouter.teacherRoute);\r\n    }\r\n}\r\n","import {BaseRouter} from \"./BaseRouter\";\r\n\r\nexport class CommonRouter extends BaseRouter {\r\n    public static NAME = \"urls.CommonRouter\";\r\n\r\n    public static notFoundRoute = \"/notFound\";\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor($location: ng.ILocationService) {\r\n        super($location);\r\n    }\r\n\r\n    public notFoundUrl(): string {\r\n        return this.url(CommonRouter.notFoundRoute);\r\n    }\r\n}\r\n","import {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\nimport {MaterialsRouter} from \"./../urls/MaterialsRouter\";\r\nimport {CoursesRouter} from \"./../urls/CoursesRouter\";\r\nimport {CommonRouter} from \"./../urls/CommonRouter\";\r\nimport {BaseRouter} from \"./../urls/BaseRouter\";\r\n\r\nexport class ContentRouter extends BaseRouter {\r\n    public static NAME = \"urls.ContentRouter\";\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        MaterialsRouter.NAME,\r\n        CoursesRouter.NAME,\r\n        CommonRouter.NAME\r\n    ];\r\n\r\n    constructor($location: ng.ILocationService,\r\n                public materialsRouter: MaterialsRouter,\r\n                public courseRouter: CoursesRouter,\r\n                public commonRouter: CommonRouter) {\r\n        super($location);\r\n    }\r\n\r\n    public detailsUrl(objectId: number, objectType: any) {\r\n        let myObjectType: ReferencedObjectType =\r\n            (typeof objectType === 'string') ? ReferencedObjectType[objectType] :\r\n                (typeof objectType === 'number') ? objectType : undefined;\r\n        switch (myObjectType) {\r\n            case ReferencedObjectType.MATERIAL:\r\n                return this.materialsRouter.watchUrl(objectId);\r\n            case ReferencedObjectType.COURSE:\r\n                return this.courseRouter.detailsUrl(objectId);\r\n            case ReferencedObjectType.PLAYLIST:\r\n                return this.materialsRouter.playlistDetailsUrl(objectId);\r\n            default:\r\n                return this.commonRouter.notFoundUrl();\r\n        }\r\n    }\r\n}","import {StringBuilder} from \"./../utils/StringBuilder\";\r\nimport {BaseRouter} from \"./BaseRouter\";\r\n\r\nexport class CoursesRouter extends BaseRouter {\r\n    public static NAME = \"urls.CoursesRouter\";\r\n    public static COURSE_ID_PARAM = \"courseId\";\r\n    public static COURSE_QUIZ_ID_PARAM = \"quizId\";\r\n\r\n    public static indexRoute = \"/courses\";\r\n    public static detailsRoute = `/courses/:${CoursesRouter.COURSE_ID_PARAM}`;\r\n    public static quizDetailsRoute = `/courses/quizzes/:${CoursesRouter.COURSE_QUIZ_ID_PARAM}`;\r\n    public static updateRoute = `/courses/update/:${CoursesRouter.COURSE_ID_PARAM}`;\r\n    public static createRoute = \"/courses/create\";\r\n    public static progressRoute = `/courses/:${CoursesRouter.COURSE_ID_PARAM}` + \"/progress\";\r\n    public static infoRoute = `/courses/:${CoursesRouter.COURSE_ID_PARAM}` + \"/info\";\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor($location: ng.ILocationService) {\r\n        super($location);\r\n    }\r\n\r\n    public indexUrl(): string {\r\n        return this.url(CoursesRouter.indexRoute);\r\n    }\r\n\r\n    public createUrl(): string {\r\n        return this.url(CoursesRouter.createRoute);\r\n    }\r\n\r\n    public detailsUrl(courseId: number): string {\r\n        return this.url(StringBuilder\r\n            .interpolate(CoursesRouter.detailsRoute)\r\n            .with(':' + CoursesRouter.COURSE_ID_PARAM, courseId.toString())\r\n            .build());\r\n    }\r\n\r\n    public quizDetailsUrl(quizId: number): string {\r\n        return this.url(StringBuilder\r\n            .interpolate(CoursesRouter.quizDetailsRoute)\r\n            .with(':' + CoursesRouter.COURSE_QUIZ_ID_PARAM, quizId.toString())\r\n            .build());\r\n    }\r\n\r\n    public updateUrl(courseId: number): string {\r\n        return this.url(StringBuilder.interpolate(CoursesRouter.updateRoute)\r\n            .with(':' + CoursesRouter.COURSE_ID_PARAM, courseId.toString())\r\n            .build());\r\n    }\r\n\r\n    public progressUrl(courseId: number): string {\r\n        return this.url(StringBuilder\r\n            .interpolate(CoursesRouter.progressRoute)\r\n            .with(':' + CoursesRouter.COURSE_ID_PARAM, courseId.toString())\r\n            .build());\r\n    }\r\n\r\n    public infoUrl(courseId: number): string {\r\n        return this.url(StringBuilder\r\n            .interpolate(CoursesRouter.infoRoute)\r\n            .with(':' + CoursesRouter.COURSE_ID_PARAM, courseId.toString())\r\n            .build());\r\n    }\r\n}","import {StringBuilder} from \"./../utils/StringBuilder\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\nimport {ObjectTypeUtils} from \"./../utils/ObjectTypeUtils\";\r\nimport {BaseRouter} from \"./BaseRouter\";\r\n\r\nexport class FinancesRouter extends BaseRouter {\r\n    public static NAME = \"urls.FinancesRouter\";\r\n\r\n    public static OBJECT_ID_PARAM = \"objectId\";\r\n    public static OBJECT_TYPE_PARAM = \"objectType\";\r\n\r\n    public static balanceRoute = \"/finances/balance\";\r\n    public static purchaseHistoryRoute = \"/finances/purchaseHistory\";\r\n    public static accountManagementRoute = \"/finances/accountManagement\";\r\n    public static purchaseRoute = `/purchase/:${FinancesRouter.OBJECT_TYPE_PARAM}/:${FinancesRouter.OBJECT_ID_PARAM}`;\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor($location: ng.ILocationService) {\r\n        super($location);\r\n    }\r\n\r\n    public balanceUrl(): string {\r\n        return this.url(FinancesRouter.balanceRoute);\r\n    }\r\n\r\n    public purchaseHistoryUrl(): string {\r\n        return this.url(FinancesRouter.purchaseHistoryRoute);\r\n    }\r\n\r\n    public accountManagementUrl(): string {\r\n        return this.url(FinancesRouter.accountManagementRoute);\r\n    }\r\n\r\n    public purchaseUrl(objectId: number, objectType: ReferencedObjectType): string {\r\n        return this.url(StringBuilder.interpolate(FinancesRouter.purchaseRoute)\r\n            .with(':' + FinancesRouter.OBJECT_ID_PARAM, objectId)\r\n            .with(':' + FinancesRouter.OBJECT_TYPE_PARAM, ObjectTypeUtils.getReferencedObjectTypeAsString(objectType).toLowerCase())\r\n            .build());\r\n    }\r\n}","import {BaseRouter} from \"./BaseRouter\";\r\n\r\nexport class InfoRouter extends BaseRouter {\r\n    public static NAME = \"urls.InfoRouter\";\r\n    public static aboutProjectRoute = \"/info/about/project\";\r\n    public static aboutCompanyRoute = \"/info/about/company\";\r\n    public static faqRoute = \"/info/faq\";\r\n    public static contactsRoute = \"/info/contacts\";\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor($location: ng.ILocationService) {\r\n        super($location);\r\n    }\r\n\r\n    public aboutProjectUrl(): string {\r\n        return this.url(InfoRouter.aboutProjectRoute);\r\n    }\r\n\r\n    public aboutCompanyUrl(): string {\r\n        return this.url(InfoRouter.aboutCompanyRoute);\r\n    }\r\n\r\n    public faqUrl(): string {\r\n        return this.url(InfoRouter.faqRoute);\r\n    }\r\n\r\n    public contactsUrl(): string {\r\n        return this.url(InfoRouter.contactsRoute);\r\n    }\r\n}","import {BaseRouter} from \"./BaseRouter\";\r\n\r\nexport class LogsRouter extends BaseRouter {\r\n    public static NAME = \"urls.LogsRouter\";\r\n\r\n    public static securityLogsRoute = \"/logs/security\";\r\n    public static systemLogsRoute = \"/logs/system\";\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor($location: ng.ILocationService) {\r\n        super($location);\r\n    }\r\n\r\n    public systemLogsUrl(): string {\r\n        return this.url(LogsRouter.systemLogsRoute);\r\n    }\r\n\r\n    public securityLogsUrl(): string {\r\n        return this.url(LogsRouter.securityLogsRoute);\r\n    }\r\n}","import {LocationUtils} from \"./../utils/LocationUtils\";\r\nimport {BaseRouter} from \"./BaseRouter\";\r\n\r\nexport class MainRouter extends BaseRouter {\r\n    public static NAME = \"urls.MainRouter\";\r\n    public static mainRoute = \"/\";\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor($location: ng.ILocationService) {\r\n        super($location);\r\n    }\r\n\r\n    public mainUrl(): string {\r\n        return this.url(MainRouter.mainRoute);\r\n    }\r\n}","import {StringBuilder} from \"./../utils/StringBuilder\";\r\nimport {BaseRouter} from \"./BaseRouter\";\r\n\r\nexport class MaterialsRouter extends BaseRouter {\r\n    public static NAME = \"urls.MaterialsRouter\";\r\n    public static MATERIAL_ID_PARAM = \"materialId\";\r\n    public static PLAYLIST_ID_PARAM = \"playlistId\";\r\n\r\n    public static searchRoute = \"/materials/search\";\r\n    public static materialRoute = `/materials/:${MaterialsRouter.MATERIAL_ID_PARAM}`;\r\n    public static myDownloadsRoute = \"/materials/my/downloads\";\r\n    public static createRoute = \"/materials/create\";\r\n    public static playlistsRoute = \"/materials/playlists\";\r\n    public static playlistCreateRoute = `/materials/playlists/create`;\r\n    public static playlistDetailsRoute = `/materials/playlists/:${MaterialsRouter.PLAYLIST_ID_PARAM}`;\r\n    public static playlistEditRoute = `/materials/playlists/:${MaterialsRouter.PLAYLIST_ID_PARAM}/edit`;\r\n    public static updateRoute = `/materials/update/:${MaterialsRouter.MATERIAL_ID_PARAM}`;\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor($location: ng.ILocationService) {\r\n        super($location);\r\n    }\r\n\r\n    public searchUrl(): string {\r\n        return this.url(MaterialsRouter.searchRoute);\r\n    }\r\n\r\n    public watchUrl(fileId: number): string {\r\n        return this.url(StringBuilder.interpolate(MaterialsRouter.materialRoute)\r\n            .with(':' + MaterialsRouter.MATERIAL_ID_PARAM, fileId.toString())\r\n            .build());\r\n    }\r\n\r\n    public myDownloadsUrl(): string {\r\n        return this.url(MaterialsRouter.myDownloadsRoute);\r\n    }\r\n\r\n    public createUrl(): string {\r\n        return this.url(MaterialsRouter.createRoute);\r\n    }\r\n\r\n    public playlistsUrl(): string {\r\n        return this.url(MaterialsRouter.playlistsRoute);\r\n    }\r\n\r\n    public playlistDetailsUrl(playlistId: number): string {\r\n        return this.url(StringBuilder.interpolate(MaterialsRouter.playlistDetailsRoute)\r\n            .with(':' + MaterialsRouter.PLAYLIST_ID_PARAM, playlistId.toString())\r\n            .build());\r\n    }\r\n\r\n    public playlistEditUrl(playlistId: number): string {\r\n        return this.url(StringBuilder.interpolate(MaterialsRouter.playlistEditRoute)\r\n            .with(':' + MaterialsRouter.PLAYLIST_ID_PARAM, playlistId.toString())\r\n            .build());\r\n    }\r\n\r\n    public playlistCreateUrl(): string {\r\n        return this.url(MaterialsRouter.playlistCreateRoute);\r\n    }\r\n\r\n    public updateUrl(materialId: number): string {\r\n        return this.url(StringBuilder.interpolate(MaterialsRouter.updateRoute)\r\n            .with(':' + MaterialsRouter.MATERIAL_ID_PARAM, materialId.toString())\r\n            .build());\r\n    }\r\n}","import {StringBuilder} from \"./../utils/StringBuilder\";\r\nimport {BaseRouter} from \"./BaseRouter\";\r\n\r\nexport class NewsRouter extends BaseRouter {\r\n    public static NAME = \"urls.NewsRouter\";\r\n    public static ONE_NEWS_ID_PARAM = \"newsId\";\r\n    public static NEWS_TYPE_PARAM = \"newsType\";\r\n\r\n    public static newsSearchRoute = `/news/search/:${NewsRouter.NEWS_TYPE_PARAM}`;\r\n    public static oneNewsCreateRoute = `/news/create`;\r\n    public static oneNewsRoute = `/news/:${NewsRouter.ONE_NEWS_ID_PARAM}`;\r\n    public static oneNewsEditRoute = `/news/:${NewsRouter.ONE_NEWS_ID_PARAM}/edit`;\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor($location: ng.ILocationService) {\r\n        super($location);\r\n    }\r\n\r\n    public newsSearchUrl(newsType: string): string {\r\n        return this.url(StringBuilder.interpolate(NewsRouter.newsSearchRoute)\r\n            .with(':' + NewsRouter.NEWS_TYPE_PARAM, newsType.toLowerCase())\r\n            .build());\r\n    }\r\n\r\n    public oneNewsUrl(newsId: number): string {\r\n        return this.url(StringBuilder.interpolate(NewsRouter.oneNewsRoute)\r\n            .with(':' + NewsRouter.ONE_NEWS_ID_PARAM, newsId)\r\n            .build());\r\n    }\r\n\r\n    public oneNewsEditUrl(newsId: number): string {\r\n        return this.url(StringBuilder.interpolate(NewsRouter.oneNewsEditRoute)\r\n            .with(':' + NewsRouter.ONE_NEWS_ID_PARAM, newsId)\r\n            .build());\r\n    }\r\n\r\n    public oneNewsCreateUrl(): string {\r\n        return this.url(NewsRouter.oneNewsCreateRoute);\r\n    }\r\n}\r\n","import {BaseRouter} from \"./BaseRouter\";\r\n\r\nexport class PersonalRouter extends BaseRouter {\r\n    public static NAME = \"urls.PersonalRouter\";\r\n    public static profileRoute = \"/personal/profile\";\r\n    public static favoritesRoute = \"/personal/favorites\";\r\n    public static uploadsRoute = \"/personal/uploads\";\r\n    public static coursesRoute = \"/personal/courses\";\r\n    public static quizzesRoute = \"/personal/quizzes\";\r\n    public static playlistsRoute = \"/personal/playlists\";\r\n    public static subscriptionsRoute = \"/personal/subscriptions\";\r\n    public static newCommentsRoute = \"/personal/comments/news\";\r\n    public static supportRoute = \"/personal/support\";\r\n    public static couponsRoute = \"/personal/coupons\";\r\n    public static purchasesHistoryRoute = \"/personal/purchases/history\";\r\n    public static balanceRoute = \"/personal/balance\";\r\n    public static settingsRoute = \"/personal/settings\";\r\n    public static settingsAopaRoute = \"/personal/settings/password\";\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor($location: ng.ILocationService) {\r\n        super($location);\r\n    }\r\n\r\n    public profileUrl(): string {\r\n        return this.url(PersonalRouter.profileRoute);\r\n    }\r\n\r\n    public favoritesUrl(): string {\r\n        return this.url(PersonalRouter.favoritesRoute);\r\n    }\r\n\r\n    public uploadsUrl(): string {\r\n        return this.url(PersonalRouter.uploadsRoute);\r\n    }\r\n\r\n    public coursesUrl(): string {\r\n        return this.url(PersonalRouter.coursesRoute);\r\n    }\r\n\r\n    public quizzesUrl(): string {\r\n        return this.url(PersonalRouter.quizzesRoute);\r\n    }\r\n\r\n    public playlistsUrl(): string {\r\n        return this.url(PersonalRouter.playlistsRoute);\r\n    }\r\n\r\n    public subscriptionsUrl(): string {\r\n        return this.url(PersonalRouter.subscriptionsRoute);\r\n    }\r\n\r\n    public newCommentsUrl(): string {\r\n        return this.url(PersonalRouter.newCommentsRoute);\r\n    }\r\n\r\n    public supportUrl(): string {\r\n        return this.url(PersonalRouter.supportRoute);\r\n    }\r\n\r\n    public couponsUrl(): string {\r\n        return this.url(PersonalRouter.couponsRoute);\r\n    }\r\n\r\n    public purchasesHistoryUrl(): string {\r\n        return this.url(PersonalRouter.purchasesHistoryRoute);\r\n    }\r\n\r\n    public balanceUrl(): string {\r\n        return this.url(PersonalRouter.balanceRoute);\r\n    }\r\n\r\n    public settingsUrl(): string {\r\n        return this.url(PersonalRouter.settingsRoute);\r\n    }\r\n    public settingsAopaUrl(): string {\r\n        return this.url(PersonalRouter.settingsAopaRoute);\r\n    }\r\n}\r\n","import {StringBuilder} from \"./../utils/StringBuilder\";\r\nimport {BaseRouter} from \"./BaseRouter\";\r\n\r\nexport class QuizzesRouter extends BaseRouter {\r\n    public static NAME = \"urls.QuizzesRouter\";\r\n    public static QUIZ_ID_PARAM = \"quizId\";\r\n\r\n    public static indexRoute = \"/quizzes\";\r\n    public static detailsRoute = `/quizzes/:${QuizzesRouter.QUIZ_ID_PARAM}`;\r\n    public static passingRoute = `/quizzes/passing/:${QuizzesRouter.QUIZ_ID_PARAM}`;\r\n    public static updateRoute = `/quizzes/update/:${QuizzesRouter.QUIZ_ID_PARAM}`;\r\n    public static createRoute = \"/quizzes/create\";\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor($location: ng.ILocationService) {\r\n        super($location);\r\n    }\r\n\r\n    public indexUrl(): string {\r\n        return this.url(QuizzesRouter.indexRoute);\r\n    }\r\n\r\n    public createUrl(): string {\r\n        return this.url(QuizzesRouter.createRoute);\r\n    }\r\n\r\n    public detailsUrl(quizId: number): string {\r\n        return this.url(StringBuilder\r\n            .interpolate(QuizzesRouter.detailsRoute)\r\n            .with(':' + QuizzesRouter.QUIZ_ID_PARAM, quizId.toString())\r\n            .build());\r\n    }\r\n\r\n    public updateUrl(quizId: number): string {\r\n        return this.url(StringBuilder.interpolate(QuizzesRouter.updateRoute)\r\n            .with(':' + QuizzesRouter.QUIZ_ID_PARAM, quizId.toString())\r\n            .build());\r\n    }\r\n\r\n    public passingUrl(quizId: number): string {\r\n        return this.url(StringBuilder\r\n            .interpolate(QuizzesRouter.passingRoute)\r\n            .with(':' + QuizzesRouter.QUIZ_ID_PARAM, quizId.toString())\r\n            .build());\r\n    }\r\n}","import {StringBuilder} from \"./../utils/StringBuilder\";\r\nimport {BaseRouter} from \"./BaseRouter\";\r\n\r\nexport class ReferenceRouter extends BaseRouter {\r\n    public static NAME = \"urls.ReferenceRouter\";\r\n    public static REFERENCE_DEFAULT_VALUES_PARAM = \"defaultValues\";\r\n    public static REFERENCE_FILTER_PARAM = \"filter\";\r\n    public static REFERENCE_ASSOCIATION_FILTERS_PARAM = \"associationFilters\";\r\n    public static REFERENCE_NAME_PARAM = \"name\";\r\n    public static REFERENCE_ID_PARAM = \"id\";\r\n    public static indexRoute = `/reference/:${ReferenceRouter.REFERENCE_NAME_PARAM}`;\r\n    public static editRoute = `/reference/:${ReferenceRouter.REFERENCE_NAME_PARAM}/:${ReferenceRouter.REFERENCE_ID_PARAM}`;\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor($location: ng.ILocationService) {\r\n        super($location);\r\n    }\r\n\r\n    public indexUrl(referenceName: string): string {\r\n        return this.url(StringBuilder.interpolate(ReferenceRouter.indexRoute)\r\n            .with(\":\" + ReferenceRouter.REFERENCE_NAME_PARAM, referenceName)\r\n            .build());\r\n    }\r\n\r\n    public editUrl(referenceName: string, id?: any): string {\r\n        return this.url(StringBuilder.interpolate(ReferenceRouter.editRoute)\r\n            .with(\":\" + ReferenceRouter.REFERENCE_NAME_PARAM, referenceName)\r\n            .with(\":\" + ReferenceRouter.REFERENCE_ID_PARAM, id == null ? \"new\" : id)\r\n            .build());\r\n    }\r\n}","import {BaseRouter} from \"./BaseRouter\";\r\n\r\nexport class StatisticsRouter extends BaseRouter {\r\n    public static NAME = \"urls.StatisticsRouter\";\r\n    public static materialViewReportRoute = \"/statistics/analytics/material/view/report\";\r\n    public static materialDownloadReportRoute = \"/statistics/analytics/material/download/report\";\r\n    public static materialUploadReportRoute = \"/statistics/analytics/material/upload/report\";\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor($location: ng.ILocationService) {\r\n        super($location);\r\n    }\r\n\r\n    public materialViewReportUrl(): string {\r\n        return this.url(StatisticsRouter.materialViewReportRoute);\r\n    }\r\n\r\n    public materialDownloadReportUrl(): string {\r\n        return this.url(StatisticsRouter.materialDownloadReportRoute);\r\n    }\r\n\r\n    public materialUploadReportUrl(): string {\r\n        return this.url(StatisticsRouter.materialUploadReportRoute);\r\n    }\r\n}\r\n","import {StringBuilder} from \"./../utils/StringBuilder\";\r\nimport {BaseRouter} from \"./BaseRouter\";\r\n\r\nexport class SystemSettingsRouter extends BaseRouter {\r\n    public static NAME = \"urls.SystemSettingsRouter\";\r\n    public static commonSettingsRoute = \"/settings/common\";\r\n\r\n    public static STORAGE_PLACE_ID_PARAM = \"storagePlaceId\";\r\n\r\n    public static storagePlacesIndexRoute = \"/settings/storagePlaces\";\r\n    public static storagePlaceCreateRoute = \"/settings/storagePlaces/create\";\r\n    public static storagePlaceEditRoute = `/settings/storagePlaces/:${SystemSettingsRouter.STORAGE_PLACE_ID_PARAM}/edit`;\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor($location: ng.ILocationService) {\r\n        super($location);\r\n    }\r\n\r\n    public commonSettingsUrl(): string {\r\n        return this.url(SystemSettingsRouter.commonSettingsRoute);\r\n    }\r\n\r\n    public storagePlacesIndexUrl(): string {\r\n        return this.url(SystemSettingsRouter.storagePlacesIndexRoute);\r\n    }\r\n\r\n    public storagePlaceCreateUrl(): string {\r\n        return this.url(SystemSettingsRouter.storagePlaceCreateRoute);\r\n    }\r\n\r\n    public storagePlaceEditUrl(storagePlaceId: number): string {\r\n        let result: string = StringBuilder\r\n            .interpolate(SystemSettingsRouter.storagePlaceEditRoute)\r\n            .with(\":\" + SystemSettingsRouter.STORAGE_PLACE_ID_PARAM, storagePlaceId)\r\n            .build();\r\n        return this.url(result);\r\n    }\r\n}","import {UrlService} from \"./../utils/UrlService\";\r\n\r\nexport class UrlServiceProvider implements angular.IServiceProvider {\r\n    public static NAME = \"urls.UrlServiceProvider\";\r\n\r\n    private serviceRoot = \"/\";\r\n    private buildVersion = \"/\";\r\n    private currentLocale = \"en_US\";\r\n\r\n    public setServiceRoot(serviceRoot: string): UrlServiceProvider {\r\n        this.serviceRoot = serviceRoot;\r\n        return this;\r\n    }\r\n\r\n    public setBuildVersion(buildVersion: string): UrlServiceProvider {\r\n        this.buildVersion = buildVersion;\r\n        return this;\r\n    }\r\n\r\n    public $get(): UrlService {\r\n        return new UrlService(this.serviceRoot, this.buildVersion, this.currentLocale);\r\n    }\r\n}","import {MainRouter} from \"./MainRouter\";\r\nimport {NewsRouter} from \"./NewsRouter\";\r\nimport {InfoRouter} from \"./InfoRouter\";\r\nimport {AuthRouter} from \"./AuthRouter\";\r\nimport {ReferenceRouter} from \"./ReferenceRouter\";\r\nimport {SystemSettingsRouter} from \"./SystemSettingsRouter\";\r\nimport {UsersRouter} from \"./UsersRouter\";\r\nimport {CoursesRouter} from \"./CoursesRouter\";\r\nimport {BroadcastsRouter} from \"./BroadcastsRouter\";\r\nimport {StatisticsRouter} from \"./StatisticsRouter\";\r\nimport {MaterialsRouter} from \"./MaterialsRouter\";\r\nimport {FinancesRouter} from \"./FinancesRouter\";\r\nimport {PersonalRouter} from \"./PersonalRouter\";\r\nimport {CommonRouter} from \"./CommonRouter\";\r\nimport {ContentRouter} from \"./ContentRouter\";\r\nimport {QuizzesRouter} from \"./QuizzesRouter\";\r\nimport {LogsRouter} from \"./LogsRouter\";\r\nimport {UrlServiceProvider} from \"./UrlServiceProvider\";\r\n\r\nimport {UrlService} from \"./../utils/UrlService\";\r\n\r\nexport var UrlsModule: angular.IModule = angular\r\n    .module(\"urls\", [])\r\n    .service(MainRouter.NAME, MainRouter)\r\n    .service(NewsRouter.NAME, NewsRouter)\r\n    .service(InfoRouter.NAME, InfoRouter)\r\n    .service(AuthRouter.NAME, AuthRouter)\r\n    .service(ReferenceRouter.NAME, ReferenceRouter)\r\n    .service(SystemSettingsRouter.NAME, SystemSettingsRouter)\r\n    .service(UsersRouter.NAME, UsersRouter)\r\n    .service(CoursesRouter.NAME, CoursesRouter)\r\n    .service(BroadcastsRouter.NAME, BroadcastsRouter)\r\n    .service(StatisticsRouter.NAME, StatisticsRouter)\r\n    .service(MaterialsRouter.NAME, MaterialsRouter)\r\n    .service(FinancesRouter.NAME, FinancesRouter)\r\n    .service(PersonalRouter.NAME, PersonalRouter)\r\n    .service(CommonRouter.NAME, CommonRouter)\r\n    .service(ContentRouter.NAME, ContentRouter)\r\n    .service(QuizzesRouter.NAME, QuizzesRouter)\r\n    .service(LogsRouter.NAME, LogsRouter)\r\n    .provider(UrlService.NAME, UrlServiceProvider);","import {StringBuilder} from \"./../utils/StringBuilder\";\r\nimport {LocationUtils} from \"./../utils/LocationUtils\";\r\nimport {BaseRouter} from \"./BaseRouter\";\r\n\r\nexport class UsersRouter extends BaseRouter {\r\n    public static NAME = \"urls.UsersRouter\";\r\n    public static GROUP_ID_PARAM = \"groupId\";\r\n\r\n    public static indexRoute = \"/users/\";\r\n    public static addRoute = \"/users/create\";\r\n    public static signupRoute = \"/users/signup\";\r\n    public static editRoute = \"/users/:userId/edit\";\r\n    public static currentProfileRoute = \"/users/:userProfileId/profile\";\r\n\r\n    public static groupIndexRoute = \"/users/groups\";\r\n    public static groupAddRoute = \"/users/groups/create\";\r\n    public static groupEditRoute = \"/users/groups/:groupId\";\r\n\r\n    public static $inject = [\r\n        \"$location\"\r\n    ];\r\n\r\n    constructor($location: ng.ILocationService) {\r\n        super($location);\r\n    }\r\n\r\n    public indexUrl(): string {\r\n        return this.url(UsersRouter.indexRoute);\r\n    }\r\n\r\n    public addUrl(): string {\r\n        return this.url(UsersRouter.addRoute);\r\n    }\r\n\r\n    public signupUrl(): string {\r\n        return this.url(UsersRouter.signupRoute);\r\n    }\r\n\r\n    public editUrl(userId: number): string {\r\n        return this.url(\r\n            !userId\r\n                ? undefined\r\n                : UsersRouter.editRoute.replace(\":userId\", userId.toString())\r\n            );\r\n    }\r\n\r\n    public currentProfileUrl(profileId: string): string {\r\n        return this.url(\r\n            !profileId\r\n                ? undefined\r\n                : UsersRouter.currentProfileRoute.replace(\":userProfileId\", profileId)\r\n            );\r\n    }\r\n\r\n    public groupsIndexUrl(): string {\r\n        return this.url(UsersRouter.groupIndexRoute);\r\n    }\r\n\r\n    public groupsAddUrl(): string {\r\n        return this.url(UsersRouter.groupAddRoute);\r\n    }\r\n\r\n    public groupEditUrl(groupId: number): string {\r\n        return this.url(\r\n                StringBuilder.interpolate(UsersRouter.groupEditRoute)\r\n                    .with(':' + UsersRouter.GROUP_ID_PARAM, groupId.toString())\r\n                    .build()\r\n            );\r\n    }\r\n\r\n    private fullScreenUrl(baseUrl: string): string {\r\n        return this.url(baseUrl);\r\n    }\r\n}\r\n","import {UserService} from \"./UserService\";\r\nimport {IUser, PredefinedUsersEnum} from \"./models/IUser\";\r\nimport {IUserLogon} from \"./models/IUserLogon\";\r\nimport {UsersRouter} from \"./../urls/UsersRouter\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {ISystemLocale} from \"./../settings/models/ISystemLocale\";\r\nimport {SettingsService} from \"./../settings/SettingsService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {notifier} from \"./../INotifier\";\r\n\r\nexport class CurrentUserProfileController {\r\n    public static NAME = \"users.CurrentUserProfileController\";\r\n\r\n    public confirmPassword: string;\r\n\r\n    public user: IUser;\r\n    public userLogon: IUserLogon;\r\n    public groups: Array<ISelectable>;\r\n    public availableLocales: Array<ISystemLocale>;\r\n\r\n    public error: string;\r\n    public disableSaveButton: boolean = false;\r\n    public isEverythingDisabled: boolean;\r\n\r\n    public static $inject = [\r\n        \"$timeout\",\r\n        \"$log\",\r\n        \"$http\",\r\n        \"$q\",\r\n        \"$routeParams\",\r\n        \"$location\",\r\n        UserService.NAME,\r\n        SettingsService.NAME,\r\n        UsersRouter.NAME,\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $timeout: angular.ITimeoutService,\r\n                private $log: angular.ILogService,\r\n                private $http: angular.IHttpService,\r\n                private $q: angular.IQService,\r\n                private $routeParams: angular.route.IRouteParamsService,\r\n                private $location: angular.ILocationService,\r\n                private usersApi: UserService,\r\n                private settingsApi: SettingsService,\r\n                public userRouter: UsersRouter,\r\n                private url: UrlService) {\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.USER_PROFILE_MENU_KEY);\r\n        this.user = {\r\n            fullName: \"\",\r\n            locale: null\r\n        };\r\n        this.userLogon = {\r\n            name: \"\",\r\n            password: \"\"\r\n        };\r\n        this.loadUser();\r\n        this.loadUserLogon();\r\n        this.loadAvailableLocales();\r\n    }\r\n\r\n    private loadUser() {\r\n        this.usersApi.getCurrentUserProfile().then(u => {\r\n            PageHeader.set().header(u.fullName).update();\r\n            angular.copy(u, this.user);\r\n            this.isEverythingDisabled = (this.user.id == PredefinedUsersEnum.GUEST);\r\n        });\r\n    }\r\n\r\n    private loadUserLogon() {\r\n        this.usersApi.getCurrentUserLocalLogon().then(logon => {\r\n            if (logon) {\r\n                angular.copy(logon, this.userLogon);\r\n            }\r\n        })\r\n    }\r\n\r\n    private loadAvailableLocales() {\r\n        this.settingsApi.getAvailableLocales().then(locales => {\r\n            for (var i = 0; i < locales.length; i++) {\r\n                var localeInfo = locales[i];\r\n                if (localeInfo.defaultLocale) {\r\n                    this.user.locale = localeInfo.locale;\r\n                }\r\n            }\r\n            this.availableLocales = locales;\r\n        });\r\n    }\r\n\r\n    public save() {\r\n        this.disableSaveButton = true;\r\n        this.confirmPassword = null;\r\n\r\n        var promise = this.usersApi.updateCurrentUserProfile(this.user, this.userLogon.password);\r\n        promise.then(u => {\r\n            this.disableSaveButton = false;\r\n            notifier.success(\"User '\" + this.user.fullName + \"' has been saved\");\r\n            this.loadUser();\r\n        }).catch(response => {\r\n            this.disableSaveButton = false;\r\n            if (response.data.error == \"error.try.update.another.user\") {\r\n                notifier.error(\"You can change only your own profile settings\");\r\n            }\r\n        });\r\n    }\r\n\r\n    public cancel() {\r\n        this.loadUser();\r\n        this.loadUserLogon();\r\n    }\r\n}\r\n","import {UrlService} from \"./../utils/UrlService\";\r\nimport {UserService} from \"./UserService\";\r\nimport {UsersRouter} from \"./../urls/UsersRouter\";\r\n\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\n\r\nimport {IGroup, GroupEnum} from \"./models/IGroup\";\r\n\r\nexport class GroupEditController {\r\n    public static NAME = \"users.GroupEditController\";\r\n\r\n    private systemPermissions: ISystemPermissions;\r\n    private groupId: number;\r\n    public group: IGroup = {\r\n        name: \"\",\r\n        isActive: true,\r\n        parentId: null,\r\n        permissionsIds: []\r\n    };\r\n    public groupsEntities: Array<IGroup>;\r\n\r\n    public disableSaveButton: boolean = false;\r\n\r\n    public static $inject = [\r\n        \"$routeParams\",\r\n        \"$location\",\r\n        UserService.NAME,\r\n        PermissionsService.NAME,\r\n        UsersRouter.NAME\r\n    ];\r\n\r\n    constructor(private $routeParams: angular.route.IRouteParamsService,\r\n                private $location: angular.ILocationService,\r\n                private usersService: UserService,\r\n                private permissionsService: PermissionsService,\r\n                public usersRouter: UsersRouter) {\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.ADMINISTRATION_GROUPS_MENU_KEY);\r\n\r\n        this.groupId = this.$routeParams[UsersRouter.GROUP_ID_PARAM];\r\n\r\n        permissionsService.getSystemPermissions().then(p => {\r\n            this.systemPermissions = p;\r\n        });\r\n\r\n        if (this.groupId) {\r\n            this.loadGroup();\r\n        } else {\r\n            PageHeader.set().header(\"New user group\").update();\r\n        }\r\n        this.getActiveGroupsEntities();\r\n    }\r\n\r\n    private loadGroup() {\r\n        this.usersService.getGroup(this.groupId).then(g => {\r\n            angular.copy(g, this.group);\r\n            PageHeader.set().header(this.group.name).update();\r\n        });\r\n    }\r\n\r\n    private getActiveGroupsEntities(): void {\r\n        var promise = this.groupId\r\n            ? this.usersService.getActiveGroupsNoChildren(this.groupId)\r\n            : this.usersService.getActiveGroups();\r\n        promise.then(result => {\r\n                this.groupsEntities = result;\r\n            });\r\n    }\r\n\r\n    public save() {\r\n        this.disableSaveButton = true;\r\n        var promise = this.groupId\r\n            ? this.usersService.updateGroup(this.group)\r\n            : this.usersService.createGroup(this.group);\r\n        promise.then(g => {\r\n            this.disableSaveButton = false;\r\n            notifier.success(\"Group '\" + this.group.name + \"' has been saved\");\r\n            if (this.groupId == null) {\r\n                this.systemPermissions.editGroup\r\n                    ? this.$location.path(this.usersRouter.groupEditUrl(g.id))\r\n                    : this.$location.path(this.usersRouter.groupsIndexUrl());\r\n            } else {\r\n                this.loadGroup();\r\n            }\r\n        }).catch(response => {\r\n            this.disableSaveButton = false;\r\n        });\r\n    }\r\n\r\n    public deactivate() {\r\n        var promise = this.usersService.setActiveGroupWithChildren(false, this.group.id);\r\n        promise.then(u => {\r\n            this.$location.url(this.usersRouter.groupsIndexUrl());\r\n        })\r\n    }\r\n}","import {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\n\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {UserService} from \"./UserService\";\r\nimport {UsersRouter} from \"./../urls/UsersRouter\";\r\n\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {IGridModel, GridModel, IGridLoadingListener} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {ITreeElementInfo} from \"./../tree/models/TreeElementInfo\";\r\nimport {TreeElementsInfoFiller} from \"./../tree/TreeElementsInfoFiller\";\r\n\r\nimport {IGroupInHierarchy} from \"./models/IGroupInHierarchy\";\r\n\r\ninterface IGroupInHierarchyExtended extends ITreeElementInfo<IGroupInHierarchyExtended>, IGroupInHierarchy {\r\n}\r\n\r\nexport class GroupsController implements IGridLoadingListener {\r\n    public static NAME = \"users.GroupsController\";\r\n\r\n    public groupsGridModel: IGridModel<IGroupInHierarchyExtended>;\r\n    public systemPermissions: ISystemPermissions;\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        UrlService.NAME,\r\n        UserService.NAME,\r\n        PermissionsService.NAME,\r\n        UsersRouter.NAME\r\n    ];\r\n\r\n    constructor($http: angular.IHttpService,\r\n                private url: UrlService,\r\n                private usersService: UserService,\r\n                private permissionsService: PermissionsService,\r\n                public usersRouter: UsersRouter) {\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.ADMINISTRATION_GROUPS_MENU_KEY);\r\n        PageHeader.set().header(\"User Groups\").update();\r\n\r\n        permissionsService.getSystemPermissions().then(p => {\r\n            PageHeader.set().preserveHeader()\r\n                .addActionLinkIf(p.createGroup, '+&nbsp;New',\r\n                this.usersRouter.groupsAddUrl()).update();\r\n            this.systemPermissions = p;\r\n        });\r\n\r\n        this.groupsGridModel = new GridModel(HttpGridHelper.createLoader<IGroupInHierarchyExtended>($http,\r\n            this.url.service(\"/api/users/groups/all\")));\r\n        this.groupsGridModel.addLoadingListener(this);\r\n    }\r\n\r\n    public getGroupEditUrl(id: number): string {\r\n        return this.usersRouter.groupEditUrl(id);\r\n    }\r\n\r\n    public activateGroup(id: number): void {\r\n        this.usersService.setActiveGroupWithChildren(true, id)\r\n            .then(result => {\r\n                this.groupsGridModel.loadCurrentPage();\r\n            });\r\n    }\r\n\r\n    public getIsActiveGridStyle(isActive: boolean): any {\r\n        return isActive\r\n            ? {}\r\n            : {\"color\": \"#999999\"};\r\n    }\r\n\r\n    public convertIsActive(isActive: boolean): string {\r\n        return isActive != undefined\r\n            ? isActive ? 'Yes' : 'No'\r\n            : undefined;\r\n    }\r\n\r\n    public startLoading() {\r\n        //do nothing\r\n    }\r\n\r\n    public endLoading() {\r\n        TreeElementsInfoFiller.fillHierarchyInfoWithMaxLevel(this.groupsGridModel.entries, Number.MAX_VALUE);\r\n    }\r\n}","import {IGroup, GroupEnum} from \"./models/IGroup\";\r\nimport {IUser, PredefinedUsersEnum} from \"./models/IUser\";\r\nimport {UserService} from \"./UserService\";\r\nimport {UsersRouter} from \"./../urls/UsersRouter\";\r\nimport {ISystemLocale} from \"./../settings/models/ISystemLocale\";\r\nimport {SettingsService} from \"./../settings/SettingsService\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {AuthService} from \"./../auth/AuthService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {IUserLogon} from \"./models/IUserLogon\";\r\nimport {ILogonProvider} from \"./../auth/ILogonProvider\";\r\nimport {AuthRouter} from \"../urls/AuthRouter\";\r\n\r\ninterface IGroupExtended extends IGroup {\r\n    shown?: boolean;\r\n    canBeRemoved?: boolean;\r\n    toggle?: () => void;\r\n    select?: () => void;\r\n    unselect?: () => void;\r\n}\r\n\r\ninterface IUserExtended extends IUser {\r\n    userLogons?: Array<IUserLogon>;\r\n}\r\n\r\nexport class UserEditController {\r\n    public static NAME = \"users.UserEditController\";\r\n\r\n    private userId: number;\r\n    public confirmPassword: string;\r\n\r\n    public user: IUserExtended = {\r\n        fullName: \"\",\r\n        isActive: true,\r\n        newGroups: [],\r\n        locale: null,\r\n        userLogons: []\r\n    };\r\n    public activeGroup: boolean = false;\r\n    public groups: Array<IGroupExtended>;\r\n    public availableLocales: Array<ISystemLocale>;\r\n    private logonProviders: Array<ILogonProvider> = [];\r\n    public logonProvidersForAdd: Array<ILogonProvider> = [];\r\n\r\n    public resetPasswordLink: string;\r\n\r\n    public error: string;\r\n\r\n    public disableSaveButton: boolean = false;\r\n    public isDeactivationAllowed: boolean;\r\n    public isEverythingDisabled: boolean;\r\n\r\n    private systemPermissions: ISystemPermissions;\r\n\r\n    public static $inject = [\r\n        \"$timeout\",\r\n        \"$log\",\r\n        \"$http\",\r\n        \"$q\",\r\n        \"$routeParams\",\r\n        \"$location\",\r\n        UserService.NAME,\r\n        SettingsService.NAME,\r\n        PermissionsService.NAME,\r\n        UsersRouter.NAME,\r\n        UrlService.NAME,\r\n        AuthService.NAME\r\n    ];\r\n\r\n    constructor(private $timeout: angular.ITimeoutService,\r\n                private $log: angular.ILogService,\r\n                private $http: angular.IHttpService,\r\n                private $q: angular.IQService,\r\n                private $routeParams: angular.route.IRouteParamsService,\r\n                private $location: angular.ILocationService,\r\n                private usersApi: UserService,\r\n                private settingsApi: SettingsService,\r\n                private permissionsApi: PermissionsService,\r\n                public usersRouter: UsersRouter,\r\n                private url: UrlService,\r\n                private authApi: AuthService) {\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.ADMINISTRATION_USERS_MENU_KEY);\r\n\r\n        this.userId = this.$routeParams[\"userId\"];\r\n\r\n        permissionsApi.getSystemPermissions().then(p => {\r\n            PageHeader.set().preserveHeader()\r\n                .addActionLinkIf(p.createUser, '+&nbsp;New', this.usersRouter.addUrl()).update();\r\n            this.systemPermissions = p;\r\n        });\r\n\r\n        this.loadGroups();\r\n        this.loadLogonProviders();\r\n        this.loadAvailableLocales();\r\n\r\n        if (this.userId) {\r\n            this.loadUser();\r\n        } else {\r\n            PageHeader.set().header(\"New User\").update();\r\n        }\r\n    }\r\n\r\n    private loadUser() {\r\n        this.isDeactivationAllowed = !(this.userId in PredefinedUsersEnum);\r\n        this.isEverythingDisabled = (this.userId == PredefinedUsersEnum.GUEST);\r\n        this.usersApi.get(this.userId).then(u => {\r\n            u.firstName = u.fullName.split(\"\\u00A0\")[0];\r\n            u.lastName = u.fullName.split(\"\\u00A0\").length > 1 ? u.fullName.split(\"\\u00A0\")[1] : \"\";\r\n            PageHeader.set().header(u.fullName).update();\r\n            angular.copy(u, this.user);\r\n            this.user.newGroups = [];\r\n            this.user.userLogons = [];\r\n            this.loadUserGroups();\r\n            this.loadUserLogons();\r\n        });\r\n    }\r\n\r\n    private loadGroups() {\r\n        this.usersApi.getGroups().then(groups => {\r\n            this.groups = angular.copy(groups);\r\n            this.loadUserGroups();\r\n        });\r\n    }\r\n\r\n    private loadLogonProviders() {\r\n        this.authApi.getProviders()\r\n            .then(result => {\r\n                this.logonProviders = result;\r\n                this.recalculateAvailableLogonProviders()\r\n            });\r\n    }\r\n\r\n    private loadUserGroups() {\r\n        if (this.groups) {\r\n            this.groups.forEach((group: IGroupExtended) => {\r\n                group.selected = false;\r\n                group.canBeRemoved = !(this.user.id == PredefinedUsersEnum.ADMIN && group.id == GroupEnum.SYS_ADMINS) || !this.user.id;\r\n                if (this.user.groupsList) {\r\n                    this.user.groupsList.forEach(userGroup => {\r\n                        if (group.id == userGroup.id) {\r\n                            group.selected = true;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private loadUserLogons() {\r\n        this.usersApi.getUserLogons(this.user.id).then(result => {\r\n            this.user.userLogons.splice(0, this.user.userLogons.length);\r\n            result.forEach(r => this.user.userLogons.push(r));\r\n            this.recalculateAvailableLogonProviders();\r\n        });\r\n    }\r\n\r\n    private loadAvailableLocales() {\r\n        this.settingsApi.getAvailableLocales().then(locales => {\r\n            if (!this.userId) {\r\n                for (var i = 0; i < locales.length; i++) {\r\n                    var localeInfo = locales[i];\r\n                    if (localeInfo.defaultLocale) {\r\n                        this.user.locale = localeInfo.locale;\r\n                    }\r\n                }\r\n            }\r\n            this.availableLocales = locales;\r\n        });\r\n    }\r\n\r\n    public save() {\r\n        this.disableSaveButton = true;\r\n        this.confirmPassword = null;\r\n\r\n        if (this.user.groupsList) {\r\n            this.user.groupsList.forEach(group => {\r\n                this.user.newGroups.push(group.id)\r\n            });\r\n        }\r\n        this.user.fullName = this.user.firstName + \"\\u00A0\" + this.user.lastName;\r\n\r\n        var promise = this.userId\r\n            ? this.usersApi.update(this.user)\r\n            : this.usersApi.create(this.user);\r\n        promise.then(u => {\r\n            this.disableSaveButton = false;\r\n            notifier.success(\"User '\" + this.user.fullName + \"' has been saved\");\r\n            if (this.userId == null) {\r\n                this.systemPermissions.editUser\r\n                    ? this.$location.path(this.usersRouter.editUrl(u.id))\r\n                    : this.$location.path(this.usersRouter.indexUrl());\r\n            } else {\r\n                this.loadUser();\r\n            }\r\n        }).catch(response => {\r\n            this.disableSaveButton = false;\r\n            if (response.status == 409 && response.data.error) {\r\n                switch (response.data.error) {\r\n                    case \"error.user.duplicate.name\":\r\n                        this.error = \"Full name \" + this.user.fullName + \" already exists\";\r\n                        break;\r\n                    case \"error.user.duplicate.email\":\r\n                        this.error = \"Email \" + this.user.email + \" already exists\";\r\n                        break;\r\n                    case \"error.duplicate.logon.provider\":\r\n                        this.error = \"Only one logon for each type is allowed\";\r\n                        break;\r\n                    default:\r\n                        if (response.data.error.indexOf(\"error.duplicate.login.for.provider.\") == 0) {\r\n                            var providerKey = response.data.error.substring(\"error.duplicate.login.for.provider.\".length);\r\n                            var logonFound = null;\r\n                            for (var j = 0; j < this.user.userLogons.length; j++) {\r\n                                if (this.user.userLogons[j].providerKey == providerKey) {\r\n                                    logonFound = this.user.userLogons[j].name;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (logonFound) {\r\n                                this.error = \"Username \" + logonFound + \" already exists\";\r\n                            } else {\r\n                                this.error = \"Query has failed: please contact your system administrator or help desk\";\r\n                            }\r\n                        } else {\r\n                            this.error = \"Query has failed: please contact your system administrator or help desk\";\r\n                        }\r\n                }\r\n            }\r\n            notifier.error(this.error);\r\n        });\r\n    }\r\n\r\n    public deactivate() {\r\n        var promise = this.usersApi.setActive(this.user.id, false);\r\n        promise.then(u => {\r\n            this.$location.url(this.usersRouter.indexUrl());\r\n        })\r\n    }\r\n\r\n    public requestPasswordRestore() {\r\n        this.usersApi.requestPasswordRestoreForUser(this.user.id)\r\n            .then(link => {\r\n                this.resetPasswordLink = link;\r\n                $(\"#resetPasswordLinkDialog\").modal({\r\n                    backdrop: 'static',\r\n                    keyboard: false,\r\n                    show: true\r\n                });\r\n            })\r\n            .catch(response => {\r\n                if (response.data.error === \"error.password.restore.impossible\") {\r\n                    notifier.error(\"Password restore link can't be created. User do not have active Local logon.\");\r\n                } else {\r\n                    notifier.error(\"Query has failed: please contact your system administrator or help desk\");\r\n                }\r\n            });\r\n    }\r\n\r\n    public showGroups() {\r\n        this.activeGroup = true;\r\n    }\r\n\r\n    public closeGroups() {\r\n        this.activeGroup = false;\r\n    }\r\n\r\n    public selectGroup(index: number) {\r\n        var group: IGroupExtended = this.groups[index];\r\n        group.selected = true;\r\n    }\r\n\r\n    public unselectGroup(index: number) {\r\n        var group: IGroupExtended = this.groups[index];\r\n        group.selected = false;\r\n    }\r\n\r\n    public clearSelection() {\r\n        this.loadUserGroups();\r\n    }\r\n\r\n    public addGroups() {\r\n        this.user.groupsList = [];\r\n        this.groups.forEach(g => {\r\n            if (g.selected) {\r\n                this.user.groupsList.push(g);\r\n            }\r\n        });\r\n        this.closeGroups();\r\n    }\r\n\r\n    public deleteGroup(groupId: number) {\r\n        this.groups.forEach((group: IGroupExtended) => {\r\n            if (group.id == groupId) {\r\n                group.selected = false;\r\n            }\r\n        });\r\n        this.user.groupsList = [];\r\n        this.groups.forEach(r => {\r\n            if (r.selected) {\r\n                this.user.groupsList.push(r);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private recalculateAvailableLogonProviders() {\r\n        this.logonProvidersForAdd.splice(0, this.logonProvidersForAdd.length);\r\n        this.logonProviders.forEach(p => {\r\n            var found = false;\r\n            for (var j = 0; j < this.user.userLogons.length; j++) {\r\n                if (this.user.userLogons[j].providerKey == p.key) {\r\n                    found = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!found) {\r\n                this.logonProvidersForAdd.push(p);\r\n            }\r\n        });\r\n    }\r\n\r\n    public getLogonProviderName(providerKey: string) {\r\n        for (var i = 0; i < this.logonProviders.length; i++) {\r\n            if (providerKey == this.logonProviders[i].key) {\r\n                return this.logonProviders[i].name;\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public addUserLogon(providerKey: string) {\r\n        var userLogon: IUserLogon = {\r\n            id: null,\r\n            userId: this.user.id,\r\n            providerKey: providerKey,\r\n            name: null,\r\n            password: null,\r\n            isActive: true\r\n        };\r\n        this.user.userLogons.push(userLogon);\r\n        this.recalculateAvailableLogonProviders();\r\n    }\r\n\r\n    public removeUserLogon(providerKey: string) {\r\n        var logonIndex = -1;\r\n        for (var i = 0; i < this.user.userLogons.length; i++) {\r\n            if (this.user.userLogons[i].providerKey == providerKey) {\r\n                logonIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        if (logonIndex != -1) {\r\n            this.user.userLogons.splice(logonIndex, 1);\r\n            this.recalculateAvailableLogonProviders();\r\n        }\r\n    }\r\n}\r\n","import {IUser} from \"./models/IUser\";\r\nimport {IUserLogon} from \"./models/IUserLogon\";\r\nimport {IGroup} from \"./models/IGroup\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {ISelectable} from \"./../ISelectable\";\r\nimport {IUserWithProgress} from \"./models/IUserWithProgress\";\r\n\r\nexport class UserService {\r\n    public static NAME = \"users.UserService\";\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private url: UrlService) {\r\n    }\r\n\r\n    public get(id: number): angular.IPromise<IUser> {\r\n        return this.$http.get(this.url.base(\"/api/users/:id\").param(\":id\", id).service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public create(user: IUser): angular.IPromise<IUser> {\r\n        return this.$http.post(this.url.service(\"/api/users\"), user)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public selfSignup(user: IUser): angular.IPromise<IUser> {\r\n        return this.$http.post(this.url.service(\"/api/users/selfSignup\"), user)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public update(user: IUser): angular.IPromise<IUser> {\r\n        return this.$http.put(this.url.service(\"/api/users\"), user)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public setActive(id: number, isActive: boolean): angular.IPromise<IUserWithProgress> {\r\n        return this.$http.put(this.url.base(\"/api/users/:id/setActive/:isActive\")\r\n            .param(\":id\", id)\r\n            .param(\":isActive\", isActive).service(), undefined)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public requestPasswordRestoreForUser(userId: number): ng.IPromise<string> {\r\n        return this.$http.post(this.url.service(`/api/users/${userId}/localLogon/restorePassword`),{})\r\n            .then(result => (<any> result.data).link);\r\n    }\r\n\r\n    public getGroups(): angular.IPromise<Array<IGroup>> {\r\n        return this.$http.get(this.url.service(\"/api/users/groups\"))\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getUserLogons(userId: number): ng.IPromise<Array<IUserLogon>> {\r\n        return this.$http.get(\r\n            this.url.base(\"/api/users/:userId/logons\").param(\":userId\", userId).service()\r\n        )\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getCurrentUserProfile(): angular.IPromise<IUser> {\r\n        return this.$http.get(this.url.service(\"/api/users/currentProfile\"))\r\n            .then(result => result.data);\r\n    }\r\n    public getCurrentUserLocalLogon(): ng.IPromise<IUserLogon> {\r\n        return this.$http.get(this.url.service(\"/api/users/current/localLogon\"))\r\n                        .then(result => result.data);\r\n    }\r\n\r\n    public updateCurrentUserProfile(user: IUser, password: string): ng.IPromise<IUser> {\r\n        var userUpdateInput: any = angular.copy(user);\r\n        userUpdateInput.password = password;\r\n        return this.$http.put(this.url.service(\"/api/users/currentProfile\"),userUpdateInput)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getUsersWithoutExcludedUsersForSelector(excludedUserIds?: Array<number>): angular.IPromise<Array<ISelectable>> {\r\n        let params = {\r\n            excludedUserIds: excludedUserIds\r\n        };\r\n        return this.$http.get(this.url.service(\"/api/userSelector/users\"), {params: params})\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getGroupsWithoutExcludedGroupsForSelector(excludedGroupIds?: Array<number>): angular.IPromise<Array<ISelectable>> {\r\n        let params = {\r\n            excludedGroupIds: excludedGroupIds\r\n        };\r\n        return this.$http.get(this.url.service(\"/api/userSelector/groups\"), {params: params})\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public setActiveGroupWithChildren(isActive: boolean, parentId: number): ng.IPromise<any> {\r\n        return this.$http.put(this.url.base(\"/api/users/groups/setActive/:isActive/with/children/:parentId\")\r\n            .param(\":isActive\", isActive)\r\n            .param(\":parentId\", parentId).service(), undefined)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getGroup(groupId: number): angular.IPromise<IGroup> {\r\n        return this.$http.get(this.url.base(\"/api/users/groups/:groupId\").param(\":groupId\", groupId).service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public createGroup(group: IGroup): angular.IPromise<IGroup> {\r\n        return this.$http.post(this.url.service(\"/api/users/groups\"), group)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public updateGroup(group: IGroup): angular.IPromise<IGroup> {\r\n        return this.$http.put(this.url.service(\"/api/users/groups\"), group)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getActiveGroupsNoChildren(parentId: number): ng.IPromise<Array<IGroup>> {\r\n        return this.$http.get(this.url.base(\"/api/users/groups/active/no/children/:parentId\")\r\n            .param(\":parentId\", parentId).service())\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public getActiveGroups(): ng.IPromise<Array<IGroup>> {\r\n        return this.$http.get(this.url.service(\"/api/users/groups/active\"))\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public changeUserNotificationFrequency(frequencyId: number) {\r\n        return this.$http.post(this.url.service(\"/api/users/notifications/frequency\"), frequencyId ? JSON.stringify(frequencyId) : null)\r\n            .then(result => result.data);\r\n    }\r\n\r\n    public downloadCertificate(parameters: any) {\r\n        let reportType = 'COURSE_CERTIFICATE';\r\n        return this.$http.post(\r\n            this.url.base(\"/api/reports/downloadToken/:reportType\")\r\n                .param(\":reportType\", reportType)\r\n                .service(), {\r\n                parameters: JSON.stringify(parameters)\r\n            }\r\n        ).then((result: any) =>  this.url.base(\"/api/reports/download/:token\").param(\":token\", result.data.token).service());\r\n    }\r\n}\r\n","import {GroupEnum} from \"./models/IGroup\";\r\nimport {IUser, PredefinedUsersEnum} from \"./models/IUser\";\r\nimport {UserService} from \"./UserService\";\r\nimport {ISystemLocale} from \"./../settings/models/ISystemLocale\";\r\nimport {SettingsService} from \"./../settings/SettingsService\";\r\nimport {AuthService} from \"./../auth/AuthService\";\r\nimport {AuthRouter} from \"./../urls/AuthRouter\";\r\nimport {AuthRedirect} from \"./../authcore/AuthRedirect\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {SearchControlHelper} from \"./../utils/SearchControlHelper\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {IUserLogon} from \"./models/IUserLogon\";\r\nimport {ILogonProvider} from \"./../auth/ILogonProvider\";\r\nimport {MainRouter} from \"./../urls/MainRouter\";\r\nimport {SecurityService} from \"./../security/SecurityService\";\r\nimport {LogonProviderEnum} from \"./../security/LogonProviderEnum\";\r\nimport {StorageWrapper, Storages} from \"./../infrastructure/Storage\";\r\nimport {UrlService} from \"../utils/UrlService\";\r\n\r\ninterface IUserExtended extends IUser {\r\n    userLogons?: Array<IUserLogon>;\r\n}\r\n\r\nexport class UserSignupController {\r\n    public static NAME = \"users.UserSignupController\";\r\n    private LAST_USED_PROVIDER_STORAGE_KEY = \"vhs.application.logon.last.used.provider\";\r\n    private PROVIDER_STORAGE_KEY_LOCAL = \"LOCAL\";\r\n    private EN_US_LOCALE = \"en_US\";\r\n\r\n    public userLogon: IUserLogon = {\r\n        name: \"\",\r\n        password: \"\",\r\n        providerKey: LogonProviderEnum[LogonProviderEnum.LOCAL],\r\n        isActive: true\r\n    };\r\n    public user: IUserExtended = {\r\n        fullName: \"\",\r\n        isActive: true,\r\n        newGroups: [GroupEnum.REGISTERED_USERS],\r\n        locale: null,\r\n        userLogons: [this.userLogon]\r\n    };\r\n    public confirmEmail: string;\r\n    public confirmPassword: string;\r\n    public disableSaveButton: boolean = false;\r\n    public error: string;\r\n\r\n    public static $inject = [\r\n        \"$location\",\r\n        \"$window\",\r\n        UserService.NAME,\r\n        SettingsService.NAME,\r\n        AuthService.NAME,\r\n        AuthRouter.NAME,\r\n        AuthRedirect.NAME,\r\n        MainRouter.NAME,\r\n        SecurityService.NAME,\r\n        Storages.LOCAL_NAME,\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $location: angular.ILocationService,\r\n                private $window: angular.IWindowService,\r\n                private userApi: UserService,\r\n                private settingsApi: SettingsService,\r\n                private authApi: AuthService,\r\n                private authRouter: AuthRouter,\r\n                private authRedirect: AuthRedirect,\r\n                private mainRouter: MainRouter,\r\n                private securityService: SecurityService,\r\n                private localStorage: StorageWrapper,\r\n                private url: UrlService) {\r\n        if (securityService.isAuthenticated()) {\r\n            this.$location.url(this.mainRouter.mainUrl());\r\n        }\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.MAIN_MENU_KEY);\r\n        PageHeader.set().header(\"Self sign-up\").update();\r\n\r\n        $(\"#confirmMailField\").bind('paste', () => false);\r\n    }\r\n\r\n    public save() {\r\n        this.disableSaveButton = true;\r\n        this.confirmEmail = null;\r\n        this.confirmPassword = null;\r\n        this.userLogon.name = this.user.email;\r\n        this.user.fullName = this.user.firstName + \"\\u00A0\" + this.user.lastName;\r\n\r\n        let promise = this.userApi.selfSignup(this.user);\r\n        promise.then(() => {\r\n            this.disableSaveButton = false;\r\n            notifier.success(\"User '\" + this.user.fullName + \"' has been saved\");\r\n            //this.authRedirect.clearRedirection();  //AOPA: go to course after signup\r\n            this.logOn();\r\n        }).catch(response => {\r\n            this.disableSaveButton = false;\r\n            if (response.status == 409 && response.data.error) {\r\n                switch (response.data.error) {\r\n                    case \"error.user.duplicate.name\":\r\n                        this.error = \"Full name \" + this.user.fullName + \" already exists\";\r\n                        break;\r\n                    case \"error.user.duplicate.email\":\r\n                        this.error = \"Email \" + this.user.email + \" already exists\";\r\n                        break;\r\n                    case \"error.duplicate.logon.provider\":\r\n                        this.error = \"Only one logon for each type is allowed\";\r\n                        break;\r\n                    default:\r\n                        if (response.data.error.indexOf(\"error.duplicate.login.for.provider.\") === 0) {\r\n                            var providerKey = response.data.error.substring(\"error.duplicate.login.for.provider.\".length);\r\n                            var logonFound = null;\r\n                            for (var j = 0; j < this.user.userLogons.length; j++) {\r\n                                if (this.user.userLogons[j].providerKey == providerKey) {\r\n                                    logonFound = this.user.userLogons[j].name;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (logonFound) {\r\n                                this.error = \"Username \" + logonFound + \" already exists\";\r\n                            } else {\r\n                                this.error = \"Query has failed: please contact your system administrator or help desk\";\r\n                            }\r\n                        } else {\r\n                            this.error = \"Query has failed: please contact your system administrator or help desk\";\r\n                        }\r\n                }\r\n            }\r\n            notifier.error(this.error);\r\n        });\r\n    }\r\n\r\n    public logOn(): void {\r\n        this.localStorage.put(this.LAST_USED_PROVIDER_STORAGE_KEY, this.PROVIDER_STORAGE_KEY_LOCAL);\r\n        this.authApi.logOn(this.PROVIDER_STORAGE_KEY_LOCAL + \":\" + this.userLogon.name, this.userLogon.password).then(user => {\r\n            this.authRedirect.returnAfterLogOn(false /*native*/);\r\n        });\r\n    }\r\n\r\n    public doCancel(): void {\r\n        if (this.$window.history.length > 1) {\r\n            this.$window.history.back();\r\n        } else {\r\n            this.$location.url(this.mainRouter.mainUrl());\r\n        }\r\n    }\r\n}\r\n","import {UserService} from \"./UserService\";\r\nimport {UsersRouter} from \"./../urls/UsersRouter\";\r\nimport {IGridModel, GridModel} from \"./../IGridModel\";\r\nimport {HttpGridHelper} from \"./../IHttpGridService\";\r\nimport {PermissionsService} from \"./../security/PermissionsService\";\r\nimport {ISystemPermissions} from \"./../security/permissions/ISystemPermissions\";\r\nimport {UrlService} from \"./../utils/UrlService\";\r\nimport {MenuHelper} from \"./../utils/MenuHelper\";\r\nimport {PageHeader} from \"./../utils/PageHeaderHelper\";\r\nimport {notifier} from \"./../INotifier\";\r\nimport {IUserWithProgress} from \"./models/IUserWithProgress\";\r\n\r\nexport class UsersListController {\r\n    public static NAME = \"users.UsersListController\";\r\n\r\n    private systemPermissions: ISystemPermissions;\r\n\r\n    public usersGridModel: IGridModel<IUserWithProgress>;\r\n\r\n    public static $inject = [\r\n        \"$timeout\",\r\n        \"$window\",\r\n        \"$log\",\r\n        \"$http\",\r\n        UserService.NAME,\r\n        PermissionsService.NAME,\r\n        UsersRouter.NAME,\r\n        UrlService.NAME\r\n    ];\r\n\r\n    constructor(private $timeout: angular.ITimeoutService,\r\n                private $window: angular.IWindowService,\r\n                private $log: angular.ILogService,\r\n                $http: angular.IHttpService,\r\n                private usersApi: UserService,\r\n                private permissionsApi: PermissionsService,\r\n                public usersRouter: UsersRouter,\r\n                private url: UrlService) {\r\n        MenuHelper.setCurrentMenuItem(MenuHelper.ADMINISTRATION_USERS_MENU_KEY);\r\n        PageHeader.set().header(\"Users\").update();\r\n\r\n        permissionsApi.getSystemPermissions().then(p => {\r\n            PageHeader.set().preserveHeader()\r\n                .addActionLinkIf(p.createUser, '+&nbsp;New', this.usersRouter.addUrl()).update();\r\n            this.systemPermissions = p;\r\n        });\r\n\r\n        this.usersGridModel = new GridModel(HttpGridHelper.createLoader<IUserWithProgress>($http, this.url.service(\"/api/users\")))\r\n    }\r\n\r\n    public getIsActiveGridStyle(isActive: boolean): any {\r\n        return isActive\r\n            ? {}\r\n            : {\"color\": \"#999999\"};\r\n    }\r\n\r\n    public convertIsActive(isActive: boolean): string {\r\n        return isActive != undefined\r\n            ? isActive ? 'Yes' : 'No'\r\n            : undefined;\r\n    }\r\n\r\n    public activate(index: number, id: number) {\r\n        let promise = this.usersApi.setActive(id, true);\r\n        promise.then(u => {\r\n            notifier.success(\"User '\" + u.fullName + \"' has been activated\");\r\n            this.usersGridModel.entries[index] = u;\r\n        });\r\n    }\r\n\r\n    public downloadUserCertificate(user: IUserWithProgress): void {\r\n        let parameters: any = {\r\n            courseId: user.courseId,\r\n            userId: user.id,\r\n            progressId: user.courseProgressId,\r\n            certificateId: null,\r\n            format: 'pdf'\r\n        };\r\n        this.usersApi.downloadCertificate(parameters).then(result => {\r\n            this.$window.open(result);\r\n        });\r\n    }\r\n}\r\n","import {UserService} from \"./UserService\";\r\nimport {CurrentUserProfileController} from \"./CurrentUserProfileController\";\r\nimport {UserEditController} from \"./UserEditController\";\r\nimport {UserSignupController} from \"./UserSignupController\";\r\nimport {UsersListController} from \"./UsersController\";\r\nimport {GroupsController} from \"./GroupsController\";\r\nimport {GroupEditController} from \"./GroupEditController\";\r\n\r\nimport {SettingsModule} from \"./../settings/SettingsModule\";\r\nimport {SecurityModule} from \"./../security/SecurityModule\";\r\nimport {UrlsModule} from \"./../urls/UrlsModule\";\r\n\r\nexport var UsersModule: angular.IModule = angular\r\n    .module(\"users\", [\r\n        SettingsModule.name,\r\n        SecurityModule.name,\r\n        UrlsModule.name\r\n    ])\r\n    .service(UserService.NAME, UserService)\r\n    .controller(CurrentUserProfileController.NAME, CurrentUserProfileController)\r\n    .controller(UserSignupController.NAME, UserSignupController)\r\n    .controller(UserEditController.NAME, UserEditController)\r\n    .controller(UsersListController.NAME, UsersListController)\r\n    .controller(GroupsController.NAME, GroupsController)\r\n    .controller(GroupEditController.NAME, GroupEditController);","export interface IGroup {\r\n    id?: number;\r\n    parentId?: number;\r\n    name?: string;\r\n    predefined?: boolean;\r\n    available?: boolean;\r\n    selected?: boolean;\r\n}\r\n\r\nexport enum GroupEnum {\r\n    EVERYONE = 1,\r\n    SYS_ADMINS = 2,\r\n    MODERATORS = 3,\r\n    REGISTERED_USERS = 4\r\n}\r\n","import {IGroup} from \"./IGroup\";\r\n\r\nexport interface IUser {\r\n    id?: number;\r\n    version?: number;\r\n    fullName?: string;\r\n    email?: string;\r\n    notificationFrequencyId?: number;\r\n    locale?: string;\r\n    isActive?: boolean;\r\n    groupsList?: Array<IGroup>;\r\n    newGroups?: Array<number>;\r\n\r\n    firstName?: string;\r\n    lastName?: string;\r\n}\r\n\r\nexport enum PredefinedUsersEnum {\r\n    ADMIN = 1,\r\n    GUEST = 2\r\n}\r\n","import {MaterialType, MaterialTypeEnum} from \"./../materials/models/MaterialType\"\r\n\r\nexport class ContentUtils {\r\n\r\n    static MAP_FILE_EXTENSIONS_TO_MATERIAL_TYPES = {\r\n\r\n        'mp3': MaterialTypeEnum.AUDIO,\r\n\r\n        'mp4': MaterialTypeEnum.VIDEO,\r\n\r\n        'jpg': MaterialTypeEnum.PHOTO,\r\n        'png': MaterialTypeEnum.PHOTO,\r\n\r\n        'txt': MaterialTypeEnum.DOCUMENTS,\r\n        'doc': MaterialTypeEnum.DOCUMENTS,\r\n        'docx': MaterialTypeEnum.DOCUMENTS,\r\n        'ppt': MaterialTypeEnum.DOCUMENTS,\r\n        'pptx': MaterialTypeEnum.DOCUMENTS,\r\n        'pdf': MaterialTypeEnum.DOCUMENTS,\r\n        'xls': MaterialTypeEnum.DOCUMENTS,\r\n        'xlsx': MaterialTypeEnum.DOCUMENTS\r\n    };\r\n\r\n    public static getFileExt(fileName: string): string {\r\n        return fileName.substr((~-fileName.lastIndexOf(\".\") >>> 0) + 2);\r\n    }\r\n\r\n    public static checkFileExt(materialTypeId: number, fileExt: string): boolean {\r\n        return (ContentUtils.MAP_FILE_EXTENSIONS_TO_MATERIAL_TYPES[fileExt] === materialTypeId);\r\n    }\r\n\r\n    public static findMaterialTypeByFileExtension(fileExt: string): number {\r\n        return ContentUtils.MAP_FILE_EXTENSIONS_TO_MATERIAL_TYPES[fileExt];\r\n    }\r\n}","export class DomUtils {\r\n\r\n    public static findParentWithClass(sourceElement: angular.IAugmentedJQuery, targetClass: string) {\r\n        var parent: angular.IAugmentedJQuery = <angular.IAugmentedJQuery> sourceElement.parent();\r\n        while(parent) {\r\n            if (parent.hasClass(targetClass)) {\r\n                return <angular.IAugmentedJQuery> $(parent[0]);\r\n            }\r\n            parent = <angular.IAugmentedJQuery> parent.parent();\r\n        }\r\n        return null;\r\n    }\r\n    public static findParentWithAttr(sourceElement: angular.IAugmentedJQuery, attrName: string) {\r\n        var parent: angular.IAugmentedJQuery = <angular.IAugmentedJQuery> sourceElement.parent();\r\n        while(parent && parent.length > 0) {\r\n            if (parent.length > 0 && parent.attr(attrName) != undefined) {\r\n                return <angular.IAugmentedJQuery> $(parent[0]);\r\n            }\r\n            parent = <angular.IAugmentedJQuery> parent.parent();\r\n        }\r\n        return null;\r\n    }\r\n\r\n}\r\n","export class LocationUtils {\r\n    public static FULL_SCREEN_LOCATION_PARAM = \"fullScreen\";\r\n\r\n    public static isFullScreen(location: ng.ILocationService): boolean {\r\n        return LocationUtils.isFullScreenBySearch(location.search());\r\n    }\r\n    public static isFullScreenBySearch(search: any): boolean {\r\n        if (search[LocationUtils.FULL_SCREEN_LOCATION_PARAM] != undefined) {\r\n            let fullScreenParam = search[LocationUtils.FULL_SCREEN_LOCATION_PARAM];\r\n            return fullScreenParam !== \"false\";\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public static preserveFullScreenUrl(baseUrl: string, location: ng.ILocationService): string {\r\n        if (!baseUrl) {\r\n            return baseUrl;\r\n        }\r\n        if (!LocationUtils.isFullScreen(location)) {\r\n            return baseUrl + \"?\" + LocationUtils.FULL_SCREEN_LOCATION_PARAM + \"=false\";\r\n        }\r\n        return baseUrl;\r\n    }\r\n}","export interface IMenuUpdateListener {\r\n    onMenuItemUpdate(newMenuItemKey: string, oldMenuItemKey: string);\r\n}\r\n\r\nexport class MenuHelper {\r\n    public static ADMINISTRATION_MENU_KEY = 'administration';\r\n    public static ADMINISTRATION_USERS_MENU_KEY = 'administration_users';\r\n    public static ADMINISTRATION_GROUPS_MENU_KEY = 'administration_groups';\r\n    public static ADMINISTRATION_COMMON_SETTINGS_MENU_KEY = 'administration_commonSettings';\r\n    public static ADMINISTRATION_STORAGE_PLACES_MENU_KEY = 'administration_storagePlaces';\r\n    public static ADMINISTRATION_SUBJECTS_MENU_KEY = 'administration_subjects';\r\n    public static ADMINISTRATION_LANGUAGES_MENU_KEY = 'administration_languages';\r\n    public static ADMINISTRATION_COURSE_TYPES_MENU_KEY = 'administration_courseTypes';\r\n    public static ADMINISTRATION_SOURCES_MENU_KEY = 'administration_sources';\r\n    public static ADMINISTRATION_SOURCE_TYPES_MENU_KEY = 'administration_sourceTypes';\r\n    public static ADMINISTRATION_COMPLEXITY_LEVELS_MENU_KEY = 'administration_complexityLevels';\r\n    public static ADMINISTRATION_SYSTEM_LOGS_KEY = 'administration__systemLogs';\r\n    public static ADMINISTRATION_SECURITY_LOGS_KEY = 'administration_securityLogs';\r\n    public static USER_PROFILE_MENU_KEY = 'user_profile';\r\n\r\n    public static SEARCH_MENU_KEY = 'search';\r\n    public static MAIN_MENU_KEY = 'mainpage';\r\n    public static PROFILE_MENU_KEY = 'profile';\r\n    public static EDUCATION_MENU_KEY = 'education';\r\n    public static EDUCATION_STUDENT_BROADCASTS_MENU_KEY = \"student_broadcasts\";\r\n    public static EDUCATION_TEACHER_BROADCASTS_MENU_KEY = \"teacher_broadcasts\";\r\n    public static EDUCATION_COURSES_MENU_KEY = \"courses\";\r\n    public static EDUCATION_PLAYLISTS_MENU_KEY = \"playlists\";\r\n    public static EDUCATION_QUIZZES_MENU_KEY = \"quizzes\";\r\n    public static FAVORITES_MENU_KEY = 'favorites';\r\n    public static OPERATIONS_MENU_KEY = 'operations';\r\n    public static OPERATIONS_UPLOADS_MENU_KEY = 'operations_uploads';\r\n    public static ANALYTICS_MENU_KEY = 'analytics';\r\n    public static ANALYTICS_MATERIAL_VIEW_REPORT_MENU_KEY = 'analytics_material_view_report';\r\n    public static ANALYTICS_MATERIAL_DOWNLOAD_REPORT_MENU_KEY = 'analytics_material_download_report';\r\n    public static ANALYTICS_MATERIAL_UPLOAD_REPORT_MENU_KEY = 'analytics_material_upload_report';\r\n    public static OPERATIONS_ACCOUNT_MANAGEMENT_MENU_KEY = 'operations_accountManagement';\r\n    public static NEWS_MENU_KEY = 'news';\r\n    public static ALL_NEWS_MENU_KEY = 'all_news';\r\n    public static STUDENTS_OFFERS_MENU_KEY = 'students_offers';\r\n    public static INFO_MENU_KEY = 'info';\r\n    public static ABOUT_PROJECT_MENU_KEY = 'about_project';\r\n    public static ABOUT_COMPANY_MENU_KEY = 'about_company';\r\n    public static FAQ_MENU_KEY = 'faq';\r\n    public static CONTACTS_MENU_KEY = 'contacts';\r\n\r\n    public static PERSONAL_ACCOUNT_MENU_KEY = \"personal_account\";\r\n    public static PERSONAL_ACCOUNT_UPLOADS_MENU_KEY = \"personal_account_uploads\";\r\n    public static PERSONAL_ACCOUNT_COURSES_MENU_KEY = \"personal_account_courses\";\r\n    public static PERSONAL_ACCOUNT_QUIZZES_MENU_KEY = \"personal_account_quizzes\";\r\n    public static PERSONAL_ACCOUNT_PLAYLISTS_MENU_KEY = \"personal_account_playlists\";\r\n    public static PERSONAL_ACCOUNT_SUBSCRIPTIONS_MENU_KEY = \"personal_account_subscriptions\";\r\n    public static PERSONAL_ACCOUNT_NEW_COMMENTS_MENU_KEY = \"personal_account_new_comments\";\r\n    public static PERSONAL_ACCOUNT_SUPPORT_MENU_KEY = \"personal_account_support\";\r\n    public static PERSONAL_ACCOUNT_COUPONS_MENU_KEY = \"personal_account_coupons\";\r\n    public static PERSONAL_ACCOUNT_PURCHASES_HISTORY_MENU_KEY = \"personal_account_purchasesHistory\";\r\n    public static PERSONAL_ACCOUNT_BALANCE_MENU_KEY = \"personal_account_balance\";\r\n    public static PERSONAL_ACCOUNT_SETTINGS_MENU_KEY = \"personal_account_settings\";\r\n\r\n    private static currentMenuItemKey: string = \"\";\r\n    private static updateMenuListeners: Array<IMenuUpdateListener> = [];\r\n\r\n    public static setCurrentMenuItem(menuItemKey: string) {\r\n        var oldMenuItemKey = this.currentMenuItemKey;\r\n        this.currentMenuItemKey = menuItemKey;\r\n        for (var i = 0; i < this.updateMenuListeners.length; i++) {\r\n            this.updateMenuListeners[i].onMenuItemUpdate(this.currentMenuItemKey, oldMenuItemKey);\r\n        }\r\n    }\r\n\r\n    public static addMenuUpdateListener(listener: IMenuUpdateListener) {\r\n        if (this.updateMenuListeners.indexOf(listener) == -1) {\r\n            this.updateMenuListeners.push(listener);\r\n        }\r\n    }\r\n\r\n    public static removeMenuUpdateListener(listener: IMenuUpdateListener) {\r\n        var index = this.updateMenuListeners.indexOf(listener);\r\n        if (index > -1) {\r\n            this.updateMenuListeners.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    public static getCurrentMenuItemKey(): string {\r\n        return this.currentMenuItemKey;\r\n    }\r\n}","export class Moment {\r\n    public static DEFAULT_FORMAT: string = \"M/D/YYYY\";\r\n\r\n    public static parse(text: string): moment.Moment {\r\n        return moment(text, Moment.DEFAULT_FORMAT);\r\n    }\r\n\r\n    public static textToJavaDate(text: string, format?: string): number {\r\n        if (text == null || text == \"\") {\r\n            return null;\r\n        }\r\n        format = format || Moment.DEFAULT_FORMAT;\r\n        return moment(text, format).unix() * 1000;\r\n    }\r\n\r\n    public static isValidDate(date: number): string {\r\n        if (date == null) {\r\n            return null;\r\n        }\r\n        return moment(date).format(Moment.DEFAULT_FORMAT);\r\n    }\r\n}","export class ObjectFieldResolver {\r\n    public static findForPath(target: any, path: string): any {\r\n        var obj = target;\r\n        var paths: Array<string> = path.split(\".\");\r\n        for (var i = 0; i < paths.length; i++) {\r\n            var path: string = paths[i];\r\n            obj = obj[path];\r\n        }\r\n        return obj;\r\n    }\r\n}","import {MaterialType} from \"./../materials/models/MaterialType\";\r\nimport {MaterialTypeKeyEnum} from \"./../materials/models/MaterialType\";\r\nimport {ReferencedObjectType} from \"./../ReferencedObjectType\";\r\n\r\nexport class ObjectTypeUtils {\r\n    public static getMaterialTypeTitle(typeId: number): string {\r\n        switch (typeId) {\r\n            case MaterialType.AUDIO: return 'Audio';\r\n            case MaterialType.VIDEO: return 'Video';\r\n            case MaterialType.LINK: return 'Link';\r\n            case MaterialType.PHOTO: return 'Image';\r\n            case MaterialType.DOCUMENTS: return 'Other documents';\r\n        }\r\n    }\r\n\r\n    public static getMaterialGlyphiconClass(typeId: number): string {\r\n        switch (typeId) {\r\n            case MaterialType.AUDIO: return \"glyphicon glyphicon-headphones\";\r\n            case MaterialType.VIDEO: return \"glyphicon glyphicon-play\";\r\n            case MaterialType.LINK: return \"glyphicon glyphicon-link\";\r\n            case MaterialType.PHOTO: return \"glyphicon glyphicon-picture\";\r\n            case MaterialType.DOCUMENTS: return \"glyphicon glyphicon-file\";\r\n        }\r\n    }\r\n\r\n    public static getMaterialGlyphiconClassFromKey(typeKey: string): string {\r\n        switch (typeKey) {\r\n            case MaterialTypeKeyEnum[MaterialTypeKeyEnum.AUDIO]: return \"glyphicon glyphicon-headphones\";\r\n            case MaterialTypeKeyEnum[MaterialTypeKeyEnum.VIDEO]: return \"glyphicon glyphicon-play\";\r\n            case MaterialTypeKeyEnum[MaterialTypeKeyEnum.LINK]: return \"glyphicon glyphicon-link\";\r\n            case MaterialTypeKeyEnum[MaterialTypeKeyEnum.PHOTO]: return \"glyphicon glyphicon-picture\";\r\n            case MaterialTypeKeyEnum[MaterialTypeKeyEnum.DOCUMENTS]: return \"glyphicon glyphicon-file\";\r\n        }\r\n    }\r\n\r\n    public static getNewsGlyphiconClass(): string {\r\n        return \"glyphicon glyphicon-info-sign\";\r\n    }\r\n\r\n    public static getReferenceObjectTypeTitle(objectType: string): string {\r\n        switch (objectType) {\r\n            case ReferencedObjectType[ReferencedObjectType.MATERIAL]: return 'Material';\r\n            case ReferencedObjectType[ReferencedObjectType.COURSE]: return 'Course';\r\n            case ReferencedObjectType[ReferencedObjectType.PLAYLIST]: return 'Playlist';\r\n            case ReferencedObjectType[ReferencedObjectType.NEWS]: return 'News';\r\n        }\r\n    }\r\n\r\n    public static getReferenceObjectTypeFromString(objectType: string): ReferencedObjectType {\r\n        switch (objectType) {\r\n            case ReferencedObjectType[ReferencedObjectType.MATERIAL]: return ReferencedObjectType.MATERIAL;\r\n            case ReferencedObjectType[ReferencedObjectType.COURSE]: return ReferencedObjectType.COURSE;\r\n            case ReferencedObjectType[ReferencedObjectType.PLAYLIST]: return ReferencedObjectType.PLAYLIST;\r\n            case ReferencedObjectType[ReferencedObjectType.NEWS]: return ReferencedObjectType.NEWS;\r\n        }\r\n    }\r\n\r\n    public static getContentTypeTitle(contentTypeKey: string): string {\r\n        switch (contentTypeKey) {\r\n            case MaterialTypeKeyEnum[MaterialTypeKeyEnum.AUDIO]: return 'Audio';\r\n            case MaterialTypeKeyEnum[MaterialTypeKeyEnum.VIDEO]: return 'Video';\r\n            case MaterialTypeKeyEnum[MaterialTypeKeyEnum.LINK]: return 'Link';\r\n            case MaterialTypeKeyEnum[MaterialTypeKeyEnum.PHOTO]: return 'Image';\r\n            case MaterialTypeKeyEnum[MaterialTypeKeyEnum.DOCUMENTS]: return 'Other documents';\r\n            case ReferencedObjectType[ReferencedObjectType.PLAYLIST]: return 'Playlist';\r\n            case ReferencedObjectType[ReferencedObjectType.COURSE]: return 'Course';\r\n        }\r\n    }\r\n\r\n    public static isMaterialObject(objectType: string): boolean {\r\n        return objectType == ReferencedObjectType[ReferencedObjectType.MATERIAL];\r\n    }\r\n\r\n    public static isPlaylistObject(objectType: string): boolean {\r\n        return objectType == ReferencedObjectType[ReferencedObjectType.PLAYLIST];\r\n    }\r\n\r\n    public static isCourseObject(objectType: string): boolean {\r\n        return objectType == ReferencedObjectType[ReferencedObjectType.COURSE];\r\n    }\r\n\r\n    public static isNewObject(objectType: string): boolean {\r\n        return objectType == ReferencedObjectType[ReferencedObjectType.NEWS];\r\n    }\r\n\r\n    public static getReferencedObjectTypeAsString(value: any): string {\r\n        if (value in ReferencedObjectType) {\r\n            return (typeof value === 'string') ? value :\r\n                (typeof value === 'number') ? ReferencedObjectType[value] : undefined;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    public static getReferencedObjectTypeAsNumber(value: any): ReferencedObjectType {\r\n        if (value in ReferencedObjectType) {\r\n            return (typeof value === 'number') ? value :\r\n                (typeof value === 'string') ? ReferencedObjectType[value] : undefined;\r\n        } else {\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    public static isYoutubeUrl(url: string) {\r\n        return url && (\r\n                url.indexOf(\"https://www.youtube.com\") == 0 ||\r\n                url.indexOf(\"http://www.youtube.com\") == 0 ||\r\n                url.indexOf(\"https://youtu.be\") == 0 ||\r\n                url.indexOf(\"http://youtu.be\") == 0\r\n        );\r\n    }\r\n}","export class PageHeader {\r\n    private static STATUS_TEMPLATE = '%s <span class=\"%s-status-color-%s\">%s&nbsp;</span><span class=\"%s-status-%s\"></span>';\r\n    private static STATUS_WITH_TOOLTIP_TEMPLATE = '%s <span class=\"%s-status-color-%s\">%s&nbsp;</span><span class=\"%s-status-%s\" data-toggle=\"tooltip\" tooltip data-placement=\"top\" title=\"%s\"></span>';\r\n    private static LINK_TEMPLATE = '<a role=\"button\" href=\"#%s\">%s</a>';\r\n\r\n    public pageName: string;\r\n    public statusPanel: string;\r\n    public actions: Array<string> = [];\r\n    public preserveStatusPanel: boolean = false;\r\n    public preserveActionsPanel: boolean = false;\r\n    public preservePageName: boolean = false;\r\n\r\n    public static set(): PageHeader {\r\n        return new PageHeader();\r\n    }\r\n\r\n    public header(pageName: string): PageHeader {\r\n        this.pageName = pageName;\r\n        this.preservePageName = false;\r\n        return this;\r\n    }\r\n\r\n    public preserveHeader(): PageHeader {\r\n        this.preservePageName = true;\r\n        return this;\r\n    }\r\n\r\n    public addActionLink(name: string, link: string): PageHeader {\r\n        var a = PageHeader.format(PageHeader.LINK_TEMPLATE, [link, name]);\r\n        this.actions.push(a);\r\n        this.preserveActionsPanel = false;\r\n        return this;\r\n    }\r\n\r\n    public addActionLinkIf(condition: boolean, name: string, link: string): PageHeader {\r\n        if (condition) {\r\n            return this.addActionLink(name, link);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public preserveLinks(): PageHeader {\r\n        this.preserveActionsPanel = true;\r\n        return this;\r\n    }\r\n\r\n    public update(): void {\r\n        PageHeaderHelper.updateHeader(this);\r\n    }\r\n\r\n    private static format(str: string, args: Array<any>): string {\r\n        var newStr = str;\r\n        var i = 0;\r\n        while (/%s/.test(newStr)) {\r\n            newStr = newStr.replace(\"%s\", args[i++]);\r\n        }\r\n        return newStr;\r\n    }\r\n}\r\n\r\nexport interface IPageHeaderUpdateListener {\r\n    onHeaderUpdate(pageHeader: PageHeader);\r\n}\r\n\r\nexport class PageHeaderHelper {\r\n\r\n    private static pageHeaderListeners: Array<IPageHeaderUpdateListener> = [];\r\n\r\n    public static updateHeader(headerInfo: PageHeader) {\r\n        for (var i = 0; i < this.pageHeaderListeners.length; i++) {\r\n            this.pageHeaderListeners[i].onHeaderUpdate(headerInfo);\r\n        }\r\n    }\r\n\r\n    public static addPageHeaderUpdateListener(listener: IPageHeaderUpdateListener) {\r\n        if (this.pageHeaderListeners.indexOf(listener) == -1) {\r\n            this.pageHeaderListeners.push(listener);\r\n        }\r\n    }\r\n\r\n    public static removePageHeaderUpdateListener(listener: IPageHeaderUpdateListener) {\r\n        var index = this.pageHeaderListeners.indexOf(listener);\r\n        if (index > -1) {\r\n            this.pageHeaderListeners.splice(index, 1);\r\n        }\r\n    }\r\n}","export class RandomUtils {\r\n\r\n    public static generateRandomId(prefix: string) {\r\n        return \"\" + (prefix ? prefix : '') + String.fromCharCode(65 + Math.floor(Math.random() * 26)) + Date.now();\r\n    }\r\n\r\n}","export class StringBuilder {\r\n    private base: string;\r\n\r\n    public static interpolate(base: string): StringBuilder {\r\n        return new StringBuilder(base);\r\n    }\r\n\r\n    constructor(base: string) {\r\n        this.base = base;\r\n    }\r\n\r\n    public with(param: string, value: any): StringBuilder {\r\n        this.base = this.base.replace(param, value);\r\n        return this;\r\n    }\r\n\r\n    public add(...strings: string[]): StringBuilder {\r\n        strings.forEach(str => this.base = this.base.concat(str));\r\n        return this;\r\n    }\r\n\r\n    public addIf(condition: boolean, ...strings: string[]): StringBuilder {\r\n        if (condition) {\r\n            strings.forEach(str => this.base = this.base.concat(str));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    public build(): string {\r\n        return this.base;\r\n    }\r\n}","export class TimeoutUtils {\r\n    private semaphores: any = {};\r\n\r\n    private checkNew(uid: any, handler: Function) {\r\n        var semaphore = this.getByUid(uid);\r\n        if (undefined == semaphore) {\r\n            this.setByUid(uid,\r\n                {\r\n                    handler: handler,\r\n                    hash: null,\r\n                    active: false\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    private getByUid(uid: any) {\r\n        return this.semaphores[uid];\r\n    }\r\n\r\n    private setByUid(uid, semaphore) {\r\n        this.semaphores[uid] = semaphore;\r\n    }\r\n\r\n    public processWithDelay(uid: any, handler: Function, delay: number) {\r\n        this.checkNew(uid, handler);\r\n        var hash = new Date().getTime();\r\n        this.setByUid(uid,\r\n            {\r\n                handler: handler,\r\n                hash: hash,\r\n                active: true\r\n            }\r\n        );\r\n        this.executeWithTimeout(handler, delay, uid, hash);\r\n    }\r\n\r\n    private executeWithTimeout(handler: Function, timeout: number, uid: any, hash: any) {\r\n        var $self = this;\r\n        var timer = setTimeout(function () {\r\n            if ($self.getByUid(uid).hash === hash) {\r\n                handler();\r\n            }\r\n        }, timeout);\r\n    }\r\n}","import {UrlService} from \"./../utils/UrlService\"\r\nimport {UploadsService} from \"./../storage/UploadsService\";\r\nimport {StringBuilder} from \"./../utils/StringBuilder\";\r\nimport {notifier} from \"./../INotifier\";\r\n\r\nexport class UploadUtils {\r\n    public static NAME = \"utils.UploadUtils\";\r\n\r\n    public static MATERIAL_PREVIEW_KEY = \"material_preview_\";\r\n    public static MATERIAL_FILE_KEY = \"material_file_\";\r\n    public static COURSE_PREVIEW_KEY = \"course_preview_\";\r\n    public static BUNDLE_KEY = \"bundle_\";\r\n    public static FILE_KEY = \"_file_\";\r\n\r\n    public static $inject = [\r\n        \"$http\",\r\n        UrlService.NAME,\r\n        UploadsService.NAME\r\n    ];\r\n\r\n    constructor(private $http: angular.IHttpService,\r\n                private url: UrlService,\r\n                private uploadsService: UploadsService) {\r\n    }\r\n\r\n    public uploadMaterialByChunks(file: File, fileId: number, materialId: number, url: string, method: string) {\r\n        let successFunc: (file: File) => void = (file: File) => {\r\n            let successUrl: string = this.url.base(\"/api/materials/upload/completed?fileId=:fileId&materialId=:materialId\")\r\n                .param(\":fileId\", fileId)\r\n                .param(\":materialId\", materialId)\r\n                .service();\r\n            this.$http.post(successUrl, null).then(() => {\r\n                notifier.success(StringBuilder.interpolate(\"The file (:fileName) has been successfully uploaded\")\r\n                    .with(\":fileName\", file.name)\r\n                    .build());\r\n            });\r\n        };\r\n        let abortFunc: (file: File) => void = (file: File) => {\r\n            let abortUrl: string = this.url.base(\"/api/materials/upload/not/completed?fileId=:fileId&materialId=:materialId\")\r\n                .param(\":fileId\", fileId)\r\n                .param(\":materialId\", materialId)\r\n                .service();\r\n            this.$http.post(abortUrl, null).then(() => {\r\n                notifier.error(StringBuilder.interpolate(\"Uploading of the file (:fileName) has been canceled\")\r\n                    .with(\":fileName\", file.name)\r\n                    .build());\r\n            });\r\n        };\r\n        let errorFunc: (file: File) => void = (file: File) => {\r\n            let errorUrl: string = this.url.base(\"/api/materials/upload/not/completed?fileId=:fileId&materialId=:materialId\")\r\n                .param(\":fileId\", fileId)\r\n                .param(\":materialId\", materialId)\r\n                .service();\r\n            this.$http.post(errorUrl, null).then(() => {\r\n                notifier.error(StringBuilder.interpolate(\"Uploading of the file (:fileName) has failed\")\r\n                    .with(\":fileName\", file.name)\r\n                    .build());\r\n            });\r\n        };\r\n        this.uploadsService.upload(file, UploadUtils.MATERIAL_PREVIEW_KEY + materialId, url, method, successFunc, abortFunc, errorFunc);\r\n    }\r\n\r\n    public uploadCourseByChunks(file: File, fileId: number, courseId: number, url: string, method: string) {\r\n        let successFunc: (file: File) => void = (file: File) => {\r\n            let successUrl: string = this.url.base(\"/api/courses/upload/completed?fileId=:fileId&courseId=:courseId\")\r\n                .param(\":fileId\", fileId)\r\n                .param(\":courseId\", courseId)\r\n                .service();\r\n            this.$http.post(successUrl, null).then(() => {\r\n                notifier.success(StringBuilder.interpolate(\"The file (:fileName) has been successfully uploaded\")\r\n                    .with(\":fileName\", file.name)\r\n                    .build());\r\n            });\r\n        };\r\n        let abortFunc: (file: File) => void = (file: File) => {\r\n            let abortUrl: string = this.url.base(\"/api/courses/upload/not/completed?fileId=:fileId&courseId=:courseId\")\r\n                .param(\":fileId\", fileId)\r\n                .param(\":courseId\", courseId)\r\n                .service();\r\n            this.$http.post(abortUrl, null).then(() => {\r\n                notifier.error(StringBuilder.interpolate(\"Uploading of the file (:fileName) has been canceled\")\r\n                    .with(\":fileName\", file.name)\r\n                    .build());\r\n            });\r\n        };\r\n        let errorFunc: (file: File) => void = (file: File) => {\r\n            let errorUrl: string = this.url.base(\"/api/courses/upload/not/completed?fileId=:fileId&courseId=:courseId\")\r\n                .param(\":fileId\", fileId)\r\n                .param(\":courseId\", courseId)\r\n                .service();\r\n            this.$http.post(errorUrl, null).then(() => {\r\n                notifier.error(StringBuilder.interpolate(\"Uploading of the file (:fileName) has failed\")\r\n                    .with(\":fileName\", file.name)\r\n                    .build());\r\n            });\r\n        };\r\n        this.uploadsService.upload(file, UploadUtils.COURSE_PREVIEW_KEY + courseId, url, method, successFunc, abortFunc, errorFunc);\r\n    }\r\n\r\n    public uploadBundleByChunks(file: File, fileId: number, bundleId: number, url: string, method: string) {\r\n        let successFunc: (file: File) => void = (file: File) => {\r\n            let successUrl: string = this.url.base(\"/api/bundles/upload/completed?fileId=:fileId&bundleId=:bundleId\")\r\n                .param(\":fileId\", fileId)\r\n                .param(\":bundleId\", bundleId)\r\n                .service();\r\n            this.$http.post(successUrl, null).then(() => {\r\n                notifier.success(StringBuilder.interpolate(\"The file (:fileName) has been successfully uploaded\")\r\n                    .with(\":fileName\", file.name)\r\n                    .build());\r\n            });\r\n        };\r\n        let abortFunc: (file: File) => void = (file: File) => {\r\n            let abortUrl: string = this.url.base(\"/api/bundles/upload/not/completed?fileId=:fileId&bundleId=:bundleId\")\r\n                .param(\":fileId\", fileId)\r\n                .param(\":bundleId\", bundleId)\r\n                .service();\r\n            this.$http.post(abortUrl, null).then(() => {\r\n                notifier.error(StringBuilder.interpolate(\"Uploading of the file (:fileName) has been canceled\")\r\n                    .with(\":fileName\", file.name)\r\n                    .build());\r\n            });\r\n        };\r\n        let errorFunc: (file: File) => void = (file: File) => {\r\n            let errorUrl: string = this.url.base(\"/api/bundles/upload/not/completed?fileId=:fileId&bundleId=:bundleId\")\r\n                .param(\":fileId\", fileId)\r\n                .param(\":bundleId\", bundleId)\r\n                .service();\r\n            this.$http.post(errorUrl, null).then(() => {\r\n                notifier.error(StringBuilder.interpolate(\"Uploading of the file (:fileName) has failed\")\r\n                    .with(\":fileName\", file.name)\r\n                    .build());\r\n            });\r\n        };\r\n        this.uploadsService.upload(file, UploadUtils.BUNDLE_KEY + bundleId + UploadUtils.FILE_KEY + fileId, url, method, successFunc, abortFunc, errorFunc);\r\n    }\r\n\r\n    public cancelMaterialPreviews(materialId: number): void {\r\n        this.uploadsService.cancelByKey(UploadUtils.MATERIAL_PREVIEW_KEY + materialId);\r\n    }\r\n\r\n    public cancelMaterialFiles(materialId: number): void {\r\n        this.uploadsService.cancelByKey(UploadUtils.MATERIAL_FILE_KEY + materialId);\r\n    }\r\n\r\n    public cancelCoursePreviews(courseId: number): void {\r\n        this.uploadsService.cancelByKey(UploadUtils.COURSE_PREVIEW_KEY + courseId);\r\n    }\r\n}","export interface IUrlBuilder {\r\n    param(param: string, replacement: any): IUrlBuilder;\r\n    cacheable(): IUrlBuilder;\r\n    template(): string;\r\n    service(): string;\r\n}\r\n\r\nexport class UrlService {\r\n    public static NAME = \"urls.UrlService\";\r\n\r\n    private serviceRoot = \"/\";\r\n    private appVersion = \"/\";\r\n    private defaultLocale = \"ru_RU\";\r\n    private id = new Date();\r\n\r\n    public constructor(serviceRoot: string, appVersion: string, defaultLocale: string) {\r\n        this.serviceRoot = serviceRoot[serviceRoot.length - 1] != \"/\"\r\n            ? serviceRoot + \"/\"\r\n            : serviceRoot;\r\n        this.appVersion = appVersion;\r\n        this.defaultLocale = defaultLocale;\r\n    }\r\n\r\n    public service(baseUrl: string): string {\r\n        return serviceUrl(baseUrl, this.serviceRoot, false /* cache */);\r\n    }\r\n\r\n    public template(baseUrl: string): string {\r\n        return templateUrl(baseUrl, this.appVersion, this.defaultLocale);\r\n    }\r\n\r\n    public base(baseUrl: string): IUrlBuilder {\r\n        return new UrlBuilder(baseUrl, this.serviceRoot, this.appVersion, this.defaultLocale);\r\n    }\r\n\r\n    public staticResourceUrl(baseUrl: string): string {\r\n        return staticResourceUrl(baseUrl, this.appVersion);\r\n    }\r\n}\r\n\r\nclass UrlBuilder implements IUrlBuilder {\r\n    private base: string;\r\n    private serviceRoot: string;\r\n    private appVersion: string;\r\n    private cache: boolean = false;\r\n    private defaultLocale: string;\r\n\r\n    public constructor(base: string, serviceRoot: string, appVersion: string, defaultLocale: string) {\r\n        this.base = base;\r\n        this.appVersion = appVersion;\r\n        this.serviceRoot = serviceRoot;\r\n        this.defaultLocale = defaultLocale;\r\n    }\r\n\r\n    public param(param: string, replacement: any): IUrlBuilder {\r\n        this.base = this.base.replace(param, replacement);\r\n        return this;\r\n    }\r\n\r\n    public cacheable(): IUrlBuilder {\r\n        this.cache = true;\r\n        return this;\r\n    }\r\n\r\n    public template(): string {\r\n        return templateUrl(this.base, this.appVersion, this.defaultLocale);\r\n    }\r\n\r\n    public service(): string {\r\n        return serviceUrl(this.base, this.serviceRoot, this.cache);\r\n    }\r\n}\r\n\r\nexport var VIEWS_URL_PREFIX = \"views/\";\r\n\r\nfunction appendQueryParam(url: string, param: string, value: string) {\r\n    return url.indexOf(\"?\") != -1\r\n        ? url + \"&\" + param + \"=\" + value\r\n        : url + \"?\" + param + \"=\" + value;\r\n}\r\n\r\nfunction templateUrl(base: string, version: string, defaultLocale: string) {\r\n    var path = base.replace(\".html\", \"-\" + defaultLocale + \".html\");\r\n    return VIEWS_URL_PREFIX + appendQueryParam(path, \"v\", version);\r\n}\r\n\r\nfunction staticResourceUrl(base: string, version: string) {\r\n    var path = base;\r\n    return appendQueryParam(path, \"v\", version);\r\n}\r\n\r\nfunction serviceUrl(base: string, serviceRoot: string, cache: boolean) {\r\n    if (!cache) {\r\n        base = appendQueryParam(base, \"no-cache\", new Date().getTime().toString());\r\n    }\r\n    return serviceRoot + (base[0] === \"/\" ? base.substring(1) : base);\r\n}","import {UploadUtils} from \"./UploadUtils\";\r\n\r\nexport var UtilsModule: angular.IModule = angular\r\n    .module(\"utils\", [])\r\n    .service(UploadUtils.NAME, UploadUtils);"],"sourceRoot":"/source/"}